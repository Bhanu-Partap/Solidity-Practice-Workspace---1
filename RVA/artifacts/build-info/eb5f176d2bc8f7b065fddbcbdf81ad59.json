{
	"id": "eb5f176d2bc8f7b065fddbcbdf81ad59",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"RVA/UpgradableToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\";\n\ncontract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {\n    address public icoContract;\n    uint256 private _totalSupply;\n    using AddressUpgradeable for address;\n\n    mapping(address => bool) public blacklisted;\n    mapping(address => uint256) public lockedUntil;\n    mapping(address => uint256) public lockedAmount;\n\n    event ICOContractSet(address indexed icoContract);\n    event LockupSet(address indexed account, uint256 lockedUntilTimestamp, uint256 lockedAmount);\n    event Blacklisted(address indexed account, bool isBlacklisted);\n    event EmergencyTokenRecovered(address indexed token, uint256 amount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers(); // Disables constructors for upgradeable contracts.\n    }\n\n    function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {\n        __ERC20_init(name, symbol);\n        __Ownable_init(msg.sender);\n        __Pausable_init();\n        __UUPSUpgradeable_init();\n\n        _totalSupply = totalSupply_;\n        _mint(msg.sender, _totalSupply); // Mint initial supply to the deployer\n    }\n\n    modifier onlyICOContract() {\n        require(msg.sender == icoContract, \"Not authorized\");\n        _;\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function setLockup(address account, uint256 timestamp, uint256 amount) external whenNotPaused onlyICOContract  {\n    require(account != address(0), \"Null Address\");\n    require(amount != 0, \"Amount must be greater than zero\");\n\n\n    // Update the locked amount if necessary\n    if (lockedUntil[account] != timestamp || lockedAmount[account] != amount) {\n        lockedUntil[account] = timestamp;\n        lockedAmount[account] = amount;  // Storing the amount to lock\n        emit LockupSet(account, timestamp, amount);\n    }\n}\n\n    function setBlacklist(address account, bool status) external onlyOwner {\n        require(account !=address(0),\"Null Address\");\n        blacklisted[account] = status;\n        emit Blacklisted(account, status);\n    }\n\n    // function isBlacklisted(address account) public view returns (bool) {\n    //     return blacklisted[account];\n    // }\n\n    function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(amount !=0,\"Amount shouldn't be zero\");\n        require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transfer(recipient, amount);\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(amount !=0,\"Amount shouldn't be zero\");\n        require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    function setICOContract(address _icoContract) external whenNotPaused onlyOwner  {\n        require(_icoContract != address(0), \"Null Address\");\n        require(_icoContract.isContract(), \"Address is not a contract\");\n        icoContract = _icoContract;\n        emit ICOContractSet(_icoContract);\n    }\n\n    function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {\n        require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\");\n        uint256 recipientLength = recipients.length;\n        for (uint256 i = 0; i < recipientLength; i++) {\n            unchecked{\n                if (blacklisted[recipients[i]]) {\n                    revert(\"BatchTransfer failed: Recipient is blacklisted\");\n                }\n            _transfer(msg.sender, recipients[i], amounts[i]);\n            }\n        }\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override whenNotPaused onlyOwner {}\n}\n\n\n    // RichmindVirtualAsset Token\n    // RVA\n    // 1500000000e18"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 757,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220117acb775ef9d5570c7aef19503cc2733a2d283deb159f344780b46cd4fee26564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220117acb775ef9d5570c7aef19503cc2733a2d283deb159f344780b46cd4fee26564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH27 0xCB775EF9D5570C7AEF19503CC2733A2D283DEB159F344780B46CD4 INVALID 0xE2 PUSH6 0x64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220117acb775ef9d5570c7aef19503cc2733a2d283deb159f344780b46cd4fee26564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT PUSH27 0xCB775EF9D5570C7AEF19503CC2733A2D283DEB159F344780B46CD4 INVALID 0xE2 PUSH6 0x64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220117acb775ef9d5570c7aef19503cc2733a2d283deb159f344780b46cd4fee26564736f6c634300081a0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206015802079e0c60c69a753f5b1501e953803944d8b093a50e6244e742e99760064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206015802079e0c60c69a753f5b1501e953803944d8b093a50e6244e742e99760064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x15 DUP1 KECCAK256 PUSH26 0xE0C60C69A753F5B1501E953803944D8B093A50E6244E742E9976 STOP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;496:5741:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206015802079e0c60c69a753f5b1501e953803944d8b093a50e6244e742e99760064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x15 DUP1 KECCAK256 PUSH26 0xE0C60C69A753F5B1501E953803944D8B093A50E6244E742E9976 STOP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "496:5741:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206015802079e0c60c69a753f5b1501e953803944d8b093a50e6244e742e99760064736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000ea913b549b9aee6f2b2eddfc0721d820e8da6336bc773a78ba643b3083228664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000ea913b549b9aee6f2b2eddfc0721d820e8da6336bc773a78ba643b3083228664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xEA SWAP2 EXTCODESIZE SLOAD SWAP12 SWAP11 0xEE PUSH16 0x2B2EDDFC0721D820E8DA6336BC773A78 0xBA PUSH5 0x3B30832286 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5799:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000ea913b549b9aee6f2b2eddfc0721d820e8da6336bc773a78ba643b3083228664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xEA SWAP2 EXTCODESIZE SLOAD SWAP12 SWAP11 0xEE PUSH16 0x2B2EDDFC0721D820E8DA6336BC773A78 0xBA PUSH5 0x3B30832286 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000ea913b549b9aee6f2b2eddfc0721d820e8da6336bc773a78ba643b3083228664736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207f24a2d9d64be2436433cbce0ae15485d95954a8bc59d3a0738667681461fc9064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f24a2d9d64be2436433cbce0ae15485d95954a8bc59d3a0738667681461fc9064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x24A2D9D64BE2436433CBCE0AE15485D95954A8BC59D3A0738667681461FC9064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "411:484:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f24a2d9d64be2436433cbce0ae15485d95954a8bc59d3a0738667681461fc9064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x24A2D9D64BE2436433CBCE0AE15485D95954A8BC59D3A0738667681461FC9064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "411:484:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f24a2d9d64be2436433cbce0ae15485d95954a8bc59d3a0738667681461fc9064736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122042851c92114da71f299d79fe664afa2e562fd3083c15ae52111e85361434430d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122042851c92114da71f299d79fe664afa2e562fd3083c15ae52111e85361434430d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP DUP6 SHR SWAP3 GT 0x4D 0xA7 0x1F 0x29 SWAP14 PUSH26 0xFE664AFA2E562FD3083C15AE52111E85361434430D64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1407:2774:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122042851c92114da71f299d79fe664afa2e562fd3083c15ae52111e85361434430d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP DUP6 SHR SWAP3 GT 0x4D 0xA7 0x1F 0x29 SWAP14 PUSH26 0xFE664AFA2E562FD3083C15AE52111E85361434430D64736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1407:2774:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042851c92114da71f299d79fe664afa2e562fd3083c15ae52111e85361434430d64736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"RVA/UpgradableToken.sol": {
				"ERC20Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isBlacklisted",
									"type": "bool"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyTokenRecovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "icoContract",
									"type": "address"
								}
							],
							"name": "ICOContractSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedUntilTimestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedAmount",
									"type": "uint256"
								}
							],
							"name": "LockupSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "icoContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedUntil",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_icoContract",
									"type": "address"
								}
							],
							"name": "setICOContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setLockup",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RVA/UpgradableToken.sol\":445:4816  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"RVA/UpgradableToken.sol\":1162:1267  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"RVA/UpgradableToken.sol\":1186:1208  _disableInitializers() */\n  tag_4\n    /* \"RVA/UpgradableToken.sol\":1186:1206  _disableInitializers */\n  tag_5\n    /* \"RVA/UpgradableToken.sol\":1186:1208  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"RVA/UpgradableToken.sol\":445:4816  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"RVA/UpgradableToken.sol\":445:4816  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"RVA/UpgradableToken.sol\":445:4816  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdbac26e9\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdbac26e9\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf326f0d7\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xad3cb1cc\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb119490e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc66e4095\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x95d89b41\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9bc289f1\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa153e708\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x88d695b2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x313ce567\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x52d1902d\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e0d2a00\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_38\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"RVA/UpgradableToken.sol\":2425:2639  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4041  $._totalSupply */\n      sload(0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":1610:1635   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1598:1600   */\n      0x20\n        /* \"#utility.yul\":1583:1601   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n      tag_38\n        /* \"#utility.yul\":1464:1641   */\n      jump\n        /* \"RVA/UpgradableToken.sol\":3291:3825  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_41\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"RVA/UpgradableToken.sol\":3831:4131  function setICOContract(address _icoContract) external whenNotPaused onlyOwner  {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_48\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3827:3829  18 */\n      0x12\n        /* \"#utility.yul\":2358:2394   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2346:2348   */\n      0x20\n        /* \"#utility.yul\":2331:2349   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n      tag_38\n        /* \"#utility.yul\":2216:2400   */\n      jump\n        /* \"RVA/UpgradableToken.sol\":1822:1887  function unpause() external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_48\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_10:\n      tag_48\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_53\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      jump(tag_41)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_53\n      tag_91\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4178  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      swap1\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_48\n      tag_96\n      jump\t// in\n        /* \"RVA/UpgradableToken.sol\":1755:1816  function pause() external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_48\n      tag_99\n      jump\t// in\n        /* \"RVA/UpgradableToken.sol\":4137:4710  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_48\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_106:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5276:5308   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5258:5309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5246:5248   */\n      0x20\n        /* \"#utility.yul\":5231:5249   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      tag_38\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_36\n      tag_112\n      jump\t// in\n        /* \"RVA/UpgradableToken.sol\":707:753  mapping(address => uint256) public lockedUntil */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_53\n      tag_116\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_116:\n      mstore(0x20, 0x35)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"RVA/UpgradableToken.sol\":759:806  mapping(address => uint256) public lockedAmount */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_53\n      tag_121\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_121:\n      mstore(0x20, 0x36)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"RVA/UpgradableToken.sol\":2771:3285  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_41\n      tag_126\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_36\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"RVA/UpgradableToken.sol\":1273:1636  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_48\n      tag_135\n      calldatasize\n      0x04\n      tag_136\n      jump\t// in\n    tag_135:\n      tag_137\n      jump\t// in\n        /* \"RVA/UpgradableToken.sol\":549:575  address public icoContract */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      sload(0x32)\n      tag_106\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"RVA/UpgradableToken.sol\":658:701  mapping(address => bool) public blacklisted */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_41\n      tag_144\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_144:\n      mstore(0x20, 0x34)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_53\n      tag_149\n      calldatasize\n      0x04\n      tag_150\n      jump\t// in\n    tag_149:\n      tag_151\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_48\n      tag_155\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n        /* \"RVA/UpgradableToken.sol\":1893:2419  function setLockup(address account, uint256 timestamp, uint256 amount) external whenNotPaused onlyICOContract  {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_48\n      tag_159\n      calldatasize\n      0x04\n      tag_160\n      jump\t// in\n    tag_159:\n      tag_161\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2853  $._name */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2839:2853  return $._name */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2761:2774  string memory */\n      0x60\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2839:2853  return $._name */\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_166\n      jump\t// in\n    tag_167:\n      dup1\n      iszero\n      tag_168\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_169\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_168)\n    tag_169:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_170:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_170\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5283:5287  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5353:5360  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5362:5367  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5345  _approve */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5385:5389  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5378:5389  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_171:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":2425:2639  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":2514:2534  account !=address(0) */\n      dup3\n      and\n        /* \"RVA/UpgradableToken.sol\":2506:2550  require(account !=address(0),\"Null Address\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":2560:2580  blacklisted[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":2560:2571  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2560:2580  blacklisted[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"RVA/UpgradableToken.sol\":2560:2589  blacklisted[account] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"RVA/UpgradableToken.sol\":2604:2632  Blacklisted(account, status) */\n      swap2\n      mload\n        /* \"#utility.yul\":1060:1101   */\n      swap2\n      dup3\n      mstore\n        /* \"RVA/UpgradableToken.sol\":2604:2632  Blacklisted(account, status) */\n      0xcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8\n      swap2\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"RVA/UpgradableToken.sol\":2604:2632  Blacklisted(account, status) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":2425:2639  function setBlacklist(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":3291:3825  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_61:\n        /* \"RVA/UpgradableToken.sol\":3403:3407  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":3428:3447  blacklisted[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":3428:3439  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":3428:3447  blacklisted[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":3427:3447  !blacklisted[sender] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3419:3490  require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_192\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":3509:3531  blacklisted[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":3509:3520  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":3509:3531  blacklisted[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":3508:3531  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3500:3577  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_195\n      jump\t// in\n    tag_193:\n        /* \"RVA/UpgradableToken.sol\":3595:3601  amount */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":3604:3605  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3595:3605  amount !=0 */\n      sub\n        /* \"RVA/UpgradableToken.sol\":3587:3633  require(amount !=0,\"Amount shouldn't be zero\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8638:8640   */\n      0x20\n        /* \"RVA/UpgradableToken.sol\":3587:3633  require(amount !=0,\"Amount shouldn't be zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8620:8641   */\n      mstore\n        /* \"#utility.yul\":8677:8679   */\n      0x18\n        /* \"#utility.yul\":8657:8675   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8650:8680   */\n      mstore\n      shl(0x40, 0x416d6f756e742073686f756c646e2774206265207a65726f)\n        /* \"#utility.yul\":8696:8714   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8689:8743   */\n      mstore\n        /* \"#utility.yul\":8760:8778   */\n      0x64\n      add\n        /* \"RVA/UpgradableToken.sol\":3587:3633  require(amount !=0,\"Amount shouldn't be zero\") */\n      tag_181\n        /* \"#utility.yul\":8436:8784   */\n      jump\n        /* \"RVA/UpgradableToken.sol\":3587:3633  require(amount !=0,\"Amount shouldn't be zero\") */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":3670:3689  lockedUntil[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":3670:3681  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3670:3689  lockedUntil[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3651:3666  block.timestamp */\n      timestamp\n        /* \"RVA/UpgradableToken.sol\":3651:3689  block.timestamp >= lockedUntil[sender] */\n      lt\n      iszero\n      dup1\n        /* \"RVA/UpgradableToken.sol\":3651:3717  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n      tag_199\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":3693:3712  lockedUntil[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":3693:3704  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3693:3712  lockedUntil[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3693:3717  lockedUntil[sender] == 0 */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3651:3717  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n    tag_199:\n        /* \"RVA/UpgradableToken.sol\":3643:3756  require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_202\n      jump\t// in\n    tag_200:\n        /* \"RVA/UpgradableToken.sol\":3773:3818  super.transferFrom(sender, recipient, amount) */\n      tag_203\n        /* \"RVA/UpgradableToken.sol\":3792:3798  sender */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3800:3809  recipient */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3811:3817  amount */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3773:3791  super.transferFrom */\n      tag_204\n        /* \"RVA/UpgradableToken.sol\":3773:3818  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_203:\n        /* \"RVA/UpgradableToken.sol\":3766:3818  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1532:1533  _ */\n    tag_189:\n        /* \"RVA/UpgradableToken.sol\":3291:3825  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":3831:4131  function setICOContract(address _icoContract) external whenNotPaused onlyOwner  {... */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":3929:3955  _icoContract != address(0) */\n      dup2\n      and\n        /* \"RVA/UpgradableToken.sol\":3921:3972  require(_icoContract != address(0), \"Null Address\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":3990:4013  _icoContract.isContract */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"RVA/UpgradableToken.sol\":3982:4045  require(_icoContract.isContract(), \"Address is not a contract\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9394:9396   */\n      0x20\n        /* \"RVA/UpgradableToken.sol\":3982:4045  require(_icoContract.isContract(), \"Address is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9376:9397   */\n      mstore\n        /* \"#utility.yul\":9433:9435   */\n      0x19\n        /* \"#utility.yul\":9413:9431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9406:9436   */\n      mstore\n        /* \"#utility.yul\":9472:9499   */\n      0x41646472657373206973206e6f74206120636f6e747261637400000000000000\n        /* \"#utility.yul\":9452:9470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9445:9500   */\n      mstore\n        /* \"#utility.yul\":9517:9535   */\n      0x64\n      add\n        /* \"RVA/UpgradableToken.sol\":3982:4045  require(_icoContract.isContract(), \"Address is not a contract\") */\n      tag_181\n        /* \"#utility.yul\":9192:9541   */\n      jump\n        /* \"RVA/UpgradableToken.sol\":3982:4045  require(_icoContract.isContract(), \"Address is not a contract\") */\n    tag_214:\n        /* \"RVA/UpgradableToken.sol\":4055:4066  icoContract */\n      0x32\n        /* \"RVA/UpgradableToken.sol\":4055:4081  icoContract = _icoContract */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"RVA/UpgradableToken.sol\":4096:4124  ICOContractSet(_icoContract) */\n      mload(0x40)\n      0xe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":3831:4131  function setICOContract(address _icoContract) external whenNotPaused onlyOwner  {... */\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1822:1887  function unpause() external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"RVA/UpgradableToken.sol\":1870:1880  _unpause() */\n      tag_221\n        /* \"RVA/UpgradableToken.sol\":1870:1878  _unpause */\n      tag_222\n        /* \"RVA/UpgradableToken.sol\":1870:1880  _unpause() */\n      jump\t// in\n    tag_221:\n        /* \"RVA/UpgradableToken.sol\":1822:1887  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_232\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_232:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"RVA/UpgradableToken.sol\":1755:1816  function pause() external onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_244:\n        /* \"RVA/UpgradableToken.sol\":1801:1809  _pause() */\n      tag_221\n        /* \"RVA/UpgradableToken.sol\":1801:1807  _pause */\n      tag_247\n        /* \"RVA/UpgradableToken.sol\":1801:1809  _pause() */\n      jump\t// in\n        /* \"RVA/UpgradableToken.sol\":4137:4710  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_249\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_249:\n        /* \"RVA/UpgradableToken.sol\":4260:4295  recipients.length == amounts.length */\n      dup3\n      dup2\n      eq\n        /* \"RVA/UpgradableToken.sol\":4252:4339  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9748:9750   */\n      0x20\n        /* \"RVA/UpgradableToken.sol\":4252:4339  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9730:9751   */\n      mstore\n        /* \"#utility.yul\":9787:9789   */\n      0x27\n        /* \"#utility.yul\":9767:9785   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9760:9790   */\n      mstore\n        /* \"#utility.yul\":9826:9860   */\n      0x42617463685472616e73666572206661696c65643a204d69736d617463686564\n        /* \"#utility.yul\":9806:9824   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9799:9861   */\n      mstore\n      shl(0xc8, 0x20617272617973)\n        /* \"#utility.yul\":9877:9895   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9870:9907   */\n      mstore\n        /* \"#utility.yul\":9924:9943   */\n      0x84\n      add\n        /* \"RVA/UpgradableToken.sol\":4252:4339  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n      tag_181\n        /* \"#utility.yul\":9546:9949   */\n      jump\n        /* \"RVA/UpgradableToken.sol\":4252:4339  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n    tag_251:\n        /* \"RVA/UpgradableToken.sol\":4375:4385  recipients */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":4349:4372  uint256 recipientLength */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":4402:4704  for (uint256 i = 0; i < recipientLength; i++) {... */\n    tag_254:\n        /* \"RVA/UpgradableToken.sol\":4426:4441  recipientLength */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":4422:4423  i */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":4422:4441  i < recipientLength */\n      lt\n        /* \"RVA/UpgradableToken.sol\":4402:4704  for (uint256 i = 0; i < recipientLength; i++) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":4493:4504  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":4493:4519  blacklisted[recipients[i]] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":4505:4515  recipients */\n      dup8\n      dup8\n        /* \"RVA/UpgradableToken.sol\":4516:4517  i */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":4505:4518  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_258\n      jumpi\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_260\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":4493:4519  blacklisted[recipients[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":4489:4618  if (blacklisted[recipients[i]]) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":4543:4599  revert(\"BatchTransfer failed: Recipient is blacklisted\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10288:10290   */\n      0x20\n        /* \"RVA/UpgradableToken.sol\":4543:4599  revert(\"BatchTransfer failed: Recipient is blacklisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10270:10291   */\n      mstore\n        /* \"#utility.yul\":10327:10329   */\n      0x2e\n        /* \"#utility.yul\":10307:10325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10300:10330   */\n      mstore\n        /* \"#utility.yul\":10366:10400   */\n      0x42617463685472616e73666572206661696c65643a20526563697069656e7420\n        /* \"#utility.yul\":10346:10364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10339:10401   */\n      mstore\n      shl(0x92, 0x1a5cc8189b1858dadb1a5cdd1959)\n        /* \"#utility.yul\":10417:10435   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10410:10454   */\n      mstore\n        /* \"#utility.yul\":10471:10490   */\n      0x84\n      add\n        /* \"RVA/UpgradableToken.sol\":4543:4599  revert(\"BatchTransfer failed: Recipient is blacklisted\") */\n      tag_181\n        /* \"#utility.yul\":10086:10496   */\n      jump\n        /* \"RVA/UpgradableToken.sol\":4489:4618  if (blacklisted[recipients[i]]) {... */\n    tag_261:\n        /* \"RVA/UpgradableToken.sol\":4631:4679  _transfer(msg.sender, recipients[i], amounts[i]) */\n      tag_264\n        /* \"RVA/UpgradableToken.sol\":4641:4651  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":4653:4663  recipients */\n      dup8\n      dup8\n        /* \"RVA/UpgradableToken.sol\":4664:4665  i */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":4653:4666  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_266\n      jumpi\n      tag_266\n      tag_259\n      jump\t// in\n    tag_266:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_267\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_267:\n        /* \"RVA/UpgradableToken.sol\":4668:4675  amounts */\n      dup7\n      dup7\n        /* \"RVA/UpgradableToken.sol\":4676:4677  i */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":4668:4678  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_269\n      jumpi\n      tag_269\n      tag_259\n      jump\t// in\n    tag_269:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"RVA/UpgradableToken.sol\":4631:4640  _transfer */\n      tag_270\n        /* \"RVA/UpgradableToken.sol\":4631:4679  _transfer(msg.sender, recipients[i], amounts[i]) */\n      jump\t// in\n    tag_264:\n        /* \"RVA/UpgradableToken.sol\":4443:4446  i++ */\n      0x01\n      add\n        /* \"RVA/UpgradableToken.sol\":4402:4704  for (uint256 i = 0; i < recipientLength; i++) {... */\n      jump(tag_254)\n    tag_255:\n      pop\n        /* \"RVA/UpgradableToken.sol\":4242:4710  {... */\n      pop\n        /* \"RVA/UpgradableToken.sol\":4137:4710  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3114  $._symbol */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3098:3114  return $._symbol */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3020:3033  string memory */\n      0x60\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3098:3114  return $._symbol */\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n        /* \"RVA/UpgradableToken.sol\":2771:3285  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_127:\n        /* \"RVA/UpgradableToken.sol\":2863:2867  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_282:\n        /* \"RVA/UpgradableToken.sol\":2900:2910  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":2888:2911  blacklisted[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":2888:2899  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2888:2911  blacklisted[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2887:2911  !blacklisted[msg.sender] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2879:2954  require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_192\n      jump\t// in\n    tag_284:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":2973:2995  blacklisted[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":2973:2984  blacklisted */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2973:2995  blacklisted[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2972:2995  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2964:3041  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_195\n      jump\t// in\n    tag_286:\n        /* \"RVA/UpgradableToken.sol\":3059:3065  amount */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":3068:3069  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3059:3069  amount !=0 */\n      sub\n        /* \"RVA/UpgradableToken.sol\":3051:3097  require(amount !=0,\"Amount shouldn't be zero\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8638:8640   */\n      0x20\n        /* \"RVA/UpgradableToken.sol\":3051:3097  require(amount !=0,\"Amount shouldn't be zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8620:8641   */\n      mstore\n        /* \"#utility.yul\":8677:8679   */\n      0x18\n        /* \"#utility.yul\":8657:8675   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8650:8680   */\n      mstore\n      shl(0x40, 0x416d6f756e742073686f756c646e2774206265207a65726f)\n        /* \"#utility.yul\":8696:8714   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8689:8743   */\n      mstore\n        /* \"#utility.yul\":8760:8778   */\n      0x64\n      add\n        /* \"RVA/UpgradableToken.sol\":3051:3097  require(amount !=0,\"Amount shouldn't be zero\") */\n      tag_181\n        /* \"#utility.yul\":8436:8784   */\n      jump\n        /* \"RVA/UpgradableToken.sol\":3051:3097  require(amount !=0,\"Amount shouldn't be zero\") */\n    tag_288:\n        /* \"RVA/UpgradableToken.sol\":3146:3156  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":3134:3157  lockedUntil[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":3134:3145  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3134:3157  lockedUntil[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3115:3130  block.timestamp */\n      timestamp\n        /* \"RVA/UpgradableToken.sol\":3115:3157  block.timestamp >= lockedUntil[msg.sender] */\n      lt\n      iszero\n      dup1\n        /* \"RVA/UpgradableToken.sol\":3115:3189  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n      tag_290\n      jumpi\n      pop\n        /* \"RVA/UpgradableToken.sol\":3173:3183  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":3161:3184  lockedUntil[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":3161:3172  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3161:3184  lockedUntil[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3161:3189  lockedUntil[msg.sender] == 0 */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3115:3189  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n    tag_290:\n        /* \"RVA/UpgradableToken.sol\":3107:3228  require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_202\n      jump\t// in\n    tag_291:\n        /* \"RVA/UpgradableToken.sol\":3245:3278  super.transfer(recipient, amount) */\n      tag_189\n        /* \"RVA/UpgradableToken.sol\":3260:3269  recipient */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":3271:3277  amount */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":3245:3259  super.transfer */\n      tag_294\n        /* \"RVA/UpgradableToken.sol\":3245:3278  super.transfer(recipient, amount) */\n      jump\t// in\n        /* \"RVA/UpgradableToken.sol\":1273:1636  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_298\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_299\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_299:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_300\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_302:\n        /* \"RVA/UpgradableToken.sol\":1388:1414  __ERC20_init(name, symbol) */\n      tag_304\n        /* \"RVA/UpgradableToken.sol\":1401:1405  name */\n      dup9\n        /* \"RVA/UpgradableToken.sol\":1407:1413  symbol */\n      dup9\n        /* \"RVA/UpgradableToken.sol\":1388:1400  __ERC20_init */\n      tag_305\n        /* \"RVA/UpgradableToken.sol\":1388:1414  __ERC20_init(name, symbol) */\n      jump\t// in\n    tag_304:\n        /* \"RVA/UpgradableToken.sol\":1424:1450  __Ownable_init(msg.sender) */\n      tag_306\n        /* \"RVA/UpgradableToken.sol\":1439:1449  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1424:1438  __Ownable_init */\n      tag_307\n        /* \"RVA/UpgradableToken.sol\":1424:1450  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_306:\n        /* \"RVA/UpgradableToken.sol\":1460:1477  __Pausable_init() */\n      tag_308\n        /* \"RVA/UpgradableToken.sol\":1460:1475  __Pausable_init */\n      tag_309\n        /* \"RVA/UpgradableToken.sol\":1460:1477  __Pausable_init() */\n      jump\t// in\n    tag_308:\n        /* \"RVA/UpgradableToken.sol\":1487:1511  __UUPSUpgradeable_init() */\n      tag_310\n        /* \"RVA/UpgradableToken.sol\":1487:1509  __UUPSUpgradeable_init */\n      tag_311\n        /* \"RVA/UpgradableToken.sol\":1487:1511  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_310:\n        /* \"RVA/UpgradableToken.sol\":1522:1534  _totalSupply */\n      0x33\n        /* \"RVA/UpgradableToken.sol\":1522:1549  _totalSupply = totalSupply_ */\n      dup7\n      swap1\n      sstore\n        /* \"RVA/UpgradableToken.sol\":1559:1590  _mint(msg.sender, _totalSupply) */\n      tag_312\n        /* \"RVA/UpgradableToken.sol\":1565:1575  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1537:1549  totalSupply_ */\n      dup8\n        /* \"RVA/UpgradableToken.sol\":1559:1564  _mint */\n      tag_313\n        /* \"RVA/UpgradableToken.sol\":1559:1590  _mint(msg.sender, _totalSupply) */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":10654:10704   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":10642:10644   */\n      0x20\n        /* \"#utility.yul\":10627:10645   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"RVA/UpgradableToken.sol\":1273:1636  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4795  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4880  $._allowances */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5258:5309   */\n      mstore\n        /* \"#utility.yul\":5231:5249   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_181\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1893:2419  function setLockup(address account, uint256 timestamp, uint256 amount) external whenNotPaused onlyICOContract  {... */\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_326:\n        /* \"RVA/UpgradableToken.sol\":1701:1712  icoContract */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x32))\n        /* \"RVA/UpgradableToken.sol\":1687:1697  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1687:1712  msg.sender == icoContract */\n      eq\n        /* \"RVA/UpgradableToken.sol\":1679:1731  require(msg.sender == icoContract, \"Not authorized\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10917:10919   */\n      0x20\n        /* \"RVA/UpgradableToken.sol\":1679:1731  require(msg.sender == icoContract, \"Not authorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10899:10920   */\n      mstore\n        /* \"#utility.yul\":10956:10958   */\n      0x0e\n        /* \"#utility.yul\":10936:10954   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10929:10959   */\n      mstore\n      shl(0x92, 0x139bdd08185d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":10975:10993   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10968:11012   */\n      mstore\n        /* \"#utility.yul\":11029:11047   */\n      0x64\n      add\n        /* \"RVA/UpgradableToken.sol\":1679:1731  require(msg.sender == icoContract, \"Not authorized\") */\n      tag_181\n        /* \"#utility.yul\":10715:11053   */\n      jump\n        /* \"RVA/UpgradableToken.sol\":1679:1731  require(msg.sender == icoContract, \"Not authorized\") */\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":2018:2039  account != address(0) */\n      dup4\n      and\n        /* \"RVA/UpgradableToken.sol\":2010:2056  require(account != address(0), \"Null Address\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_332:\n        /* \"RVA/UpgradableToken.sol\":2070:2076  amount */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":2080:2081  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2070:2081  amount != 0 */\n      sub\n        /* \"RVA/UpgradableToken.sol\":2062:2118  require(amount != 0, \"Amount must be greater than zero\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11260:11262   */\n      0x20\n        /* \"RVA/UpgradableToken.sol\":2062:2118  require(amount != 0, \"Amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11242:11263   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11279:11297   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11272:11302   */\n      mstore\n        /* \"#utility.yul\":11338:11372   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":11318:11336   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11311:11373   */\n      mstore\n        /* \"#utility.yul\":11390:11408   */\n      0x64\n      add\n        /* \"RVA/UpgradableToken.sol\":2062:2118  require(amount != 0, \"Amount must be greater than zero\") */\n      tag_181\n        /* \"#utility.yul\":11058:11414   */\n      jump\n        /* \"RVA/UpgradableToken.sol\":2062:2118  require(amount != 0, \"Amount must be greater than zero\") */\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":2175:2195  lockedUntil[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":2175:2186  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2175:2195  lockedUntil[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":2175:2208  lockedUntil[account] != timestamp */\n      dup3\n      eq\n      iszero\n      dup1\n        /* \"RVA/UpgradableToken.sol\":2175:2243  lockedUntil[account] != timestamp || lockedAmount[account] != amount */\n      tag_337\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":2212:2233  lockedAmount[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":2212:2224  lockedAmount */\n      0x36\n        /* \"RVA/UpgradableToken.sol\":2212:2233  lockedAmount[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":2212:2243  lockedAmount[account] != amount */\n      dup2\n      eq\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2175:2243  lockedUntil[account] != timestamp || lockedAmount[account] != amount */\n    tag_337:\n        /* \"RVA/UpgradableToken.sol\":2171:2417  if (lockedUntil[account] != timestamp || lockedAmount[account] != amount) {... */\n      iszero\n      tag_338\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RVA/UpgradableToken.sol\":2255:2275  lockedUntil[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"RVA/UpgradableToken.sol\":2255:2266  lockedUntil */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2255:2275  lockedUntil[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RVA/UpgradableToken.sol\":2255:2287  lockedUntil[account] = timestamp */\n      dup7\n      swap1\n      sstore\n        /* \"RVA/UpgradableToken.sol\":2297:2309  lockedAmount */\n      0x36\n        /* \"RVA/UpgradableToken.sol\":2297:2318  lockedAmount[account] */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"RVA/UpgradableToken.sol\":2297:2327  lockedAmount[account] = amount */\n      dup5\n      swap1\n      sstore\n        /* \"RVA/UpgradableToken.sol\":2373:2410  LockupSet(account, timestamp, amount) */\n      dup2\n      mload\n        /* \"#utility.yul\":11593:11618   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":11634:11652   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":11627:11661   */\n      dup5\n      swap1\n      mstore\n        /* \"RVA/UpgradableToken.sol\":2373:2410  LockupSet(account, timestamp, amount) */\n      0x86f2e10d5622d896b3f56e66c1a60639ca21a4674480f054bec2cb9ba62f40cb\n      swap2\n        /* \"#utility.yul\":11566:11584   */\n      add\n        /* \"RVA/UpgradableToken.sol\":2373:2410  LockupSet(account, timestamp, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":2171:2417  if (lockedUntil[account] != timestamp || lockedAmount[account] != amount) {... */\n    tag_338:\n        /* \"RVA/UpgradableToken.sol\":1893:2419  function setLockup(address account, uint256 timestamp, uint256 amount) external whenNotPaused onlyICOContract  {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10094:10099  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10101:10108  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10110:10115  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10117:10121  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10093  _approve */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5258:5309   */\n      mstore\n        /* \"#utility.yul\":5231:5249   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_181\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11874:11876   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11856:11877   */\n      mstore\n        /* \"#utility.yul\":11913:11915   */\n      0x10\n        /* \"#utility.yul\":11893:11911   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11886:11916   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":11932:11950   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11925:11971   */\n      mstore\n        /* \"#utility.yul\":11988:12006   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_181\n        /* \"#utility.yul\":11672:12012   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6075:6079  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      tag_359\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6147:6151  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6162:6167  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6146  _spendAllowance */\n      tag_360\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      tag_361\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6188:6192  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6194:6196  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6198:6203  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6187  _transfer */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      jump\t// in\n    tag_361:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6221:6225  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      tag_364\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1764  _requirePaused */\n      tag_365\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2765:2770  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2770  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5276:5308   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5258:5309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5246:5248   */\n      0x20\n        /* \"#utility.yul\":5231:5249   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      tag_370\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_371\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n    tag_371:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_370:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"RVA/UpgradableToken.sol\":4716:4814  function _authorizeUpgrade(address newImplementation) internal override whenNotPaused onlyOwner {} */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_380\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_381\n      swap2\n      dup2\n      add\n      swap1\n      tag_382\n      jump\t// in\n    tag_381:\n      0x01\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_383\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5276:5308   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5258:5309   */\n      mstore\n        /* \"#utility.yul\":5231:5249   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_181\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_383:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1610:1635   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1583:1601   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      tag_181\n        /* \"#utility.yul\":1464:1641   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_392\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_398\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_398:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2516  _paused */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2519:2523  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      tag_367\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n      tag_403\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6729:6759  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6756:6757  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6729:6759  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5258:5309   */\n      mstore\n        /* \"#utility.yul\":5231:5249   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6729:6759  ERC20InvalidSender(address(0)) */\n      tag_181\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n    tag_403:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6822:6854  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6851:6852  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6822:6854  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5258:5309   */\n      mstore\n        /* \"#utility.yul\":5231:5249   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6822:6854  ERC20InvalidReceiver(address(0)) */\n      tag_181\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6886  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6888:6890  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6892:6897  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6881  _update */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4545  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4614  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4616:4621  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4604  _transfer */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_305:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_415\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2407:2412  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2414:2421  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2406  __ERC20_init_unchained */\n      tag_419\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_307:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_421\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_424\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_426\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_426:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_429\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n      tag_434\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8847:8879  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8876:8877  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8847:8879  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5258:5309   */\n      mstore\n        /* \"#utility.yul\":5231:5249   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8847:8879  ERC20InvalidReceiver(address(0)) */\n      tag_181\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n    tag_434:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8916  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8919:8926  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8928:8933  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8906  _update */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_345:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      dup6\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n      tag_439\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11183:11215  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11212:11213  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11183:11215  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5258:5309   */\n      mstore\n        /* \"#utility.yul\":5231:5249   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11183:11215  ERC20InvalidApprover(address(0)) */\n      tag_181\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n    tag_439:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11283:11314  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11311:11312  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11283:11314  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5258:5309   */\n      mstore\n        /* \"#utility.yul\":5231:5249   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11283:11314  ERC20InvalidSpender(address(0)) */\n      tag_181\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n    tag_441:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11347  $._allowances */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11371  $._allowances[owner][spender] = value */\n      dup4\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n      dup2\n      iszero\n      tag_443\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11438  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11424:11429  owner */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11440:11445  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_444\n      swap2\n        /* \"#utility.yul\":1610:1635   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1598:1600   */\n      0x20\n        /* \"#utility.yul\":1583:1601   */\n      add\n      swap1\n        /* \"#utility.yul\":1464:1641   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n    tag_444:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n    tag_443:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11074:11463  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11868  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      tag_446\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11881:11886  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11888:11895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11880  allowance */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      jump\t// in\n    tag_446:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11896  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11926  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11947  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n      tag_451\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11986:11991  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11983  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11991  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n      iszero\n      tag_448\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12018:12078  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12426:12458   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12018:12078  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12408:12459   */\n      mstore\n        /* \"#utility.yul\":12475:12493   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":12468:12502   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":12518:12536   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12511:12545   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":12381:12399   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12018:12078  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_181\n        /* \"#utility.yul\":12206:12551   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n    tag_448:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      tag_451\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12143:12148  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12150:12157  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12178:12183  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12175  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12183  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12185:12190  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12142  _approve */\n      tag_345\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_451:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11834:12222  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n    tag_365:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12758:12760   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12740:12761   */\n      mstore\n        /* \"#utility.yul\":12797:12799   */\n      0x14\n        /* \"#utility.yul\":12777:12795   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12770:12800   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":12816:12834   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12809:12859   */\n      mstore\n        /* \"#utility.yul\":12876:12894   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_181\n        /* \"#utility.yul\":12556:12900   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_461\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_462\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_461:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      tag_463\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_338\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_465\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_463:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_229\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_468\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_408:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      tag_471\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7516:7521  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7499  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7512  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7521  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_472\n      swap2\n      swap1\n      tag_473\n      jump\t// in\n    tag_472:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      tag_474\n      swap1\n      pop\n      jump\n    tag_471:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7571  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7628  fromBalance < value */\n      dup3\n      dup2\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n      iszero\n      tag_475\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7655:7705  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12426:12458   */\n      dup7\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7655:7705  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12408:12459   */\n      mstore\n        /* \"#utility.yul\":12475:12493   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":12468:12502   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":12518:12536   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12511:12545   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":12381:12399   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7655:7705  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_181\n        /* \"#utility.yul\":12206:12551   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n    tag_475:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      dup6\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7851  $._balances */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup4\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7879  fromBalance - value */\n      swap1\n      dup4\n      swap1\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7879  $._balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n    tag_474:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      tag_477\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8095  $._totalSupply */\n      0x02\n      dup2\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8104  $._totalSupply -= value */\n      dup1\n      sload\n      dup4\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      jump(tag_478)\n    tag_477:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8305  $._balances */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8318  $._balances[to] += value */\n      dup1\n      sload\n      dup4\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n    tag_478:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8373:8375  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8367:8371  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8377:8382  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      mload(0x40)\n      tag_479\n      swap2\n        /* \"#utility.yul\":1610:1635   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1598:1600   */\n      0x20\n        /* \"#utility.yul\":1583:1601   */\n      add\n      swap1\n        /* \"#utility.yul\":1464:1641   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n    tag_479:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7295:8390  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_416:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_419:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_485\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_485:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2607  $._name */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2615  $._name = name_ */\n      tag_488\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2610:2615  name_ */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2607  $._name */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2615  $._name = name_ */\n      tag_489\n      jump\t// in\n    tag_488:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2634  $._symbol */\n      0x04\n      dup2\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2644  $._symbol = symbol_ */\n      tag_451\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2637:2644  symbol_ */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2634  $._symbol */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2644  $._symbol = symbol_ */\n      tag_489\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_429:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_498\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_498:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_462:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_502\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5276:5308   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5258:5309   */\n      mstore\n        /* \"#utility.yul\":5231:5249   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      tag_181\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_502:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_465:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      mload(0x40)\n      tag_506\n      swap2\n      swap1\n      tag_507\n      jump\t// in\n    tag_506:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_510\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_509)\n    tag_510:\n      0x60\n      swap2\n      pop\n    tag_509:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_511\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4126:4133  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4135:4145  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n      tag_512\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_511:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_468:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_512:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_518\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_519\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_520\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_519:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_189)\n    tag_518:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_522\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_522:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_523\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5276:5308   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5258:5309   */\n      mstore\n        /* \"#utility.yul\":5231:5249   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      tag_181\n        /* \"#utility.yul\":5112:5315   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_523:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n      jump(tag_189)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\n    tag_520:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n      tag_526\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_526:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mload(0x40)\n      shl(0xe0, 0xd6bda275)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:432   */\n    tag_39:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_528:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      dup1\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_539:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_43:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      dup1\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      dup1\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_541:\n        /* \"#utility.yul\":783:812   */\n      tag_542\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_528\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1112:1459   */\n    tag_50:\n        /* \"#utility.yul\":1177:1183   */\n      0x00\n        /* \"#utility.yul\":1185:1191   */\n      dup1\n        /* \"#utility.yul\":1238:1240   */\n      0x40\n        /* \"#utility.yul\":1226:1235   */\n      dup4\n        /* \"#utility.yul\":1217:1224   */\n      dup6\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1241   */\n      slt\n        /* \"#utility.yul\":1206:1258   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":1254:1255   */\n      0x00\n        /* \"#utility.yul\":1251:1252   */\n      dup1\n        /* \"#utility.yul\":1244:1256   */\n      revert\n        /* \"#utility.yul\":1206:1258   */\n    tag_545:\n        /* \"#utility.yul\":1277:1306   */\n      tag_546\n        /* \"#utility.yul\":1296:1305   */\n      dup4\n        /* \"#utility.yul\":1277:1306   */\n      tag_528\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":1267:1306   */\n      swap2\n      pop\n        /* \"#utility.yul\":1356:1358   */\n      0x20\n        /* \"#utility.yul\":1345:1354   */\n      dup4\n        /* \"#utility.yul\":1341:1359   */\n      add\n        /* \"#utility.yul\":1328:1360   */\n      calldataload\n        /* \"#utility.yul\":1403:1408   */\n      dup1\n        /* \"#utility.yul\":1396:1409   */\n      iszero\n        /* \"#utility.yul\":1389:1410   */\n      iszero\n        /* \"#utility.yul\":1382:1387   */\n      dup2\n        /* \"#utility.yul\":1379:1411   */\n      eq\n        /* \"#utility.yul\":1369:1429   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":1425:1426   */\n      0x00\n        /* \"#utility.yul\":1422:1423   */\n      dup1\n        /* \"#utility.yul\":1415:1427   */\n      revert\n        /* \"#utility.yul\":1369:1429   */\n    tag_547:\n        /* \"#utility.yul\":1448:1453   */\n      dup1\n        /* \"#utility.yul\":1438:1453   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1112:1459   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1646:2020   */\n    tag_60:\n        /* \"#utility.yul\":1723:1729   */\n      0x00\n        /* \"#utility.yul\":1731:1737   */\n      dup1\n        /* \"#utility.yul\":1739:1745   */\n      0x00\n        /* \"#utility.yul\":1792:1794   */\n      0x60\n        /* \"#utility.yul\":1780:1789   */\n      dup5\n        /* \"#utility.yul\":1771:1778   */\n      dup7\n        /* \"#utility.yul\":1767:1790   */\n      sub\n        /* \"#utility.yul\":1763:1795   */\n      slt\n        /* \"#utility.yul\":1760:1812   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":1808:1809   */\n      0x00\n        /* \"#utility.yul\":1805:1806   */\n      dup1\n        /* \"#utility.yul\":1798:1810   */\n      revert\n        /* \"#utility.yul\":1760:1812   */\n    tag_550:\n        /* \"#utility.yul\":1831:1860   */\n      tag_551\n        /* \"#utility.yul\":1850:1859   */\n      dup5\n        /* \"#utility.yul\":1831:1860   */\n      tag_528\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":1821:1860   */\n      swap3\n      pop\n        /* \"#utility.yul\":1879:1917   */\n      tag_552\n        /* \"#utility.yul\":1913:1915   */\n      0x20\n        /* \"#utility.yul\":1902:1911   */\n      dup6\n        /* \"#utility.yul\":1898:1916   */\n      add\n        /* \"#utility.yul\":1879:1917   */\n      tag_528\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":1646:2020   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1869:1917   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1986:1988   */\n      0x40\n        /* \"#utility.yul\":1971:1989   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1958:1990   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1646:2020   */\n      jump\t// out\n        /* \"#utility.yul\":2025:2211   */\n    tag_66:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2157   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":2153:2154   */\n      0x00\n        /* \"#utility.yul\":2150:2151   */\n      dup1\n        /* \"#utility.yul\":2143:2155   */\n      revert\n        /* \"#utility.yul\":2105:2157   */\n    tag_554:\n        /* \"#utility.yul\":2176:2205   */\n      tag_189\n        /* \"#utility.yul\":2195:2204   */\n      dup3\n        /* \"#utility.yul\":2176:2205   */\n      tag_528\n      jump\t// in\n        /* \"#utility.yul\":2405:2532   */\n    tag_529:\n        /* \"#utility.yul\":2466:2476   */\n      0x4e487b71\n        /* \"#utility.yul\":2461:2464   */\n      0xe0\n        /* \"#utility.yul\":2457:2477   */\n      shl\n        /* \"#utility.yul\":2454:2455   */\n      0x00\n        /* \"#utility.yul\":2447:2478   */\n      mstore\n        /* \"#utility.yul\":2497:2501   */\n      0x41\n        /* \"#utility.yul\":2494:2495   */\n      0x04\n        /* \"#utility.yul\":2487:2502   */\n      mstore\n        /* \"#utility.yul\":2521:2525   */\n      0x24\n        /* \"#utility.yul\":2518:2519   */\n      0x00\n        /* \"#utility.yul\":2511:2526   */\n      revert\n        /* \"#utility.yul\":2537:3252   */\n    tag_530:\n        /* \"#utility.yul\":2601:2606   */\n      0x00\n        /* \"#utility.yul\":2633:2634   */\n      dup1\n        /* \"#utility.yul\":2657:2675   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2649:2655   */\n      dup5\n        /* \"#utility.yul\":2646:2676   */\n      gt\n        /* \"#utility.yul\":2643:2699   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":2679:2697   */\n      tag_560\n      tag_529\n      jump\t// in\n    tag_560:\n      pop\n        /* \"#utility.yul\":2834:2836   */\n      0x40\n        /* \"#utility.yul\":2828:2837   */\n      mload\n      not(0x1f)\n        /* \"#utility.yul\":2747:2749   */\n      0x1f\n        /* \"#utility.yul\":2726:2741   */\n      dup6\n      add\n        /* \"#utility.yul\":2722:2751   */\n      dup2\n      and\n        /* \"#utility.yul\":2892:2894   */\n      0x3f\n        /* \"#utility.yul\":2880:2895   */\n      add\n        /* \"#utility.yul\":2876:2905   */\n      and\n        /* \"#utility.yul\":2864:2906   */\n      dup2\n      add\n        /* \"#utility.yul\":2957:2979   */\n      dup2\n      dup2\n      lt\n        /* \"#utility.yul\":2936:2954   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2921:2955   */\n      dup3\n      gt\n        /* \"#utility.yul\":2918:2980   */\n      or\n        /* \"#utility.yul\":2915:3003   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":2983:3001   */\n      tag_562\n      tag_529\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":3019:3021   */\n      0x40\n        /* \"#utility.yul\":3012:3034   */\n      mstore\n        /* \"#utility.yul\":3067:3089   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3052:3058   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":3104:3120   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":3101:3126   */\n      dup6\n      lt\n        /* \"#utility.yul\":3098:3143   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":3139:3140   */\n      0x00\n        /* \"#utility.yul\":3136:3137   */\n      dup1\n        /* \"#utility.yul\":3129:3141   */\n      revert\n        /* \"#utility.yul\":3098:3143   */\n    tag_563:\n        /* \"#utility.yul\":3189:3195   */\n      dup4\n        /* \"#utility.yul\":3184:3187   */\n      dup4\n        /* \"#utility.yul\":3177:3181   */\n      0x20\n        /* \"#utility.yul\":3169:3175   */\n      dup4\n        /* \"#utility.yul\":3165:3182   */\n      add\n        /* \"#utility.yul\":3152:3196   */\n      calldatacopy\n        /* \"#utility.yul\":3244:3245   */\n      0x00\n        /* \"#utility.yul\":3237:3241   */\n      0x20\n        /* \"#utility.yul\":3228:3234   */\n      dup6\n        /* \"#utility.yul\":3220:3226   */\n      dup4\n        /* \"#utility.yul\":3216:3235   */\n      add\n        /* \"#utility.yul\":3212:3242   */\n      add\n        /* \"#utility.yul\":3205:3246   */\n      mstore\n      pop\n        /* \"#utility.yul\":2537:3252   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3257:3780   */\n    tag_78:\n        /* \"#utility.yul\":3334:3340   */\n      0x00\n        /* \"#utility.yul\":3342:3348   */\n      dup1\n        /* \"#utility.yul\":3395:3397   */\n      0x40\n        /* \"#utility.yul\":3383:3392   */\n      dup4\n        /* \"#utility.yul\":3374:3381   */\n      dup6\n        /* \"#utility.yul\":3370:3393   */\n      sub\n        /* \"#utility.yul\":3366:3398   */\n      slt\n        /* \"#utility.yul\":3363:3415   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":3411:3412   */\n      0x00\n        /* \"#utility.yul\":3408:3409   */\n      dup1\n        /* \"#utility.yul\":3401:3413   */\n      revert\n        /* \"#utility.yul\":3363:3415   */\n    tag_565:\n        /* \"#utility.yul\":3434:3463   */\n      tag_566\n        /* \"#utility.yul\":3453:3462   */\n      dup4\n        /* \"#utility.yul\":3434:3463   */\n      tag_528\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":3424:3463   */\n      swap2\n      pop\n        /* \"#utility.yul\":3514:3516   */\n      0x20\n        /* \"#utility.yul\":3503:3512   */\n      dup4\n        /* \"#utility.yul\":3499:3517   */\n      add\n        /* \"#utility.yul\":3486:3518   */\n      calldataload\n        /* \"#utility.yul\":3541:3559   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3533:3539   */\n      dup2\n        /* \"#utility.yul\":3530:3560   */\n      gt\n        /* \"#utility.yul\":3527:3577   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3570:3571   */\n      dup1\n        /* \"#utility.yul\":3563:3575   */\n      revert\n        /* \"#utility.yul\":3527:3577   */\n    tag_567:\n        /* \"#utility.yul\":3596:3618   */\n      dup4\n      add\n        /* \"#utility.yul\":3649:3653   */\n      0x1f\n        /* \"#utility.yul\":3641:3654   */\n      dup2\n      add\n        /* \"#utility.yul\":3637:3664   */\n      dup6\n      sgt\n        /* \"#utility.yul\":3627:3682   */\n      tag_568\n      jumpi\n        /* \"#utility.yul\":3678:3679   */\n      0x00\n        /* \"#utility.yul\":3675:3676   */\n      dup1\n        /* \"#utility.yul\":3668:3680   */\n      revert\n        /* \"#utility.yul\":3627:3682   */\n    tag_568:\n        /* \"#utility.yul\":3701:3774   */\n      tag_569\n        /* \"#utility.yul\":3766:3773   */\n      dup6\n        /* \"#utility.yul\":3761:3763   */\n      dup3\n        /* \"#utility.yul\":3748:3764   */\n      calldataload\n        /* \"#utility.yul\":3743:3745   */\n      0x20\n        /* \"#utility.yul\":3739:3741   */\n      dup5\n        /* \"#utility.yul\":3735:3746   */\n      add\n        /* \"#utility.yul\":3701:3774   */\n      tag_530\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":3691:3774   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3257:3780   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3967:4334   */\n    tag_531:\n        /* \"#utility.yul\":4030:4038   */\n      0x00\n        /* \"#utility.yul\":4040:4046   */\n      dup1\n        /* \"#utility.yul\":4094:4097   */\n      dup4\n        /* \"#utility.yul\":4087:4091   */\n      0x1f\n        /* \"#utility.yul\":4079:4085   */\n      dup5\n        /* \"#utility.yul\":4075:4092   */\n      add\n        /* \"#utility.yul\":4071:4098   */\n      slt\n        /* \"#utility.yul\":4061:4116   */\n      tag_572\n      jumpi\n        /* \"#utility.yul\":4112:4113   */\n      0x00\n        /* \"#utility.yul\":4109:4110   */\n      dup1\n        /* \"#utility.yul\":4102:4114   */\n      revert\n        /* \"#utility.yul\":4061:4116   */\n    tag_572:\n      pop\n        /* \"#utility.yul\":4135:4155   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":4178:4196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4167:4197   */\n      dup2\n      gt\n        /* \"#utility.yul\":4164:4214   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":4210:4211   */\n      0x00\n        /* \"#utility.yul\":4207:4208   */\n      dup1\n        /* \"#utility.yul\":4200:4212   */\n      revert\n        /* \"#utility.yul\":4164:4214   */\n    tag_573:\n        /* \"#utility.yul\":4247:4251   */\n      0x20\n        /* \"#utility.yul\":4239:4245   */\n      dup4\n        /* \"#utility.yul\":4235:4252   */\n      add\n        /* \"#utility.yul\":4223:4252   */\n      swap2\n      pop\n        /* \"#utility.yul\":4307:4310   */\n      dup4\n        /* \"#utility.yul\":4300:4304   */\n      0x20\n        /* \"#utility.yul\":4290:4296   */\n      dup3\n        /* \"#utility.yul\":4287:4288   */\n      0x05\n        /* \"#utility.yul\":4283:4297   */\n      shl\n        /* \"#utility.yul\":4275:4281   */\n      dup6\n        /* \"#utility.yul\":4271:4298   */\n      add\n        /* \"#utility.yul\":4267:4305   */\n      add\n        /* \"#utility.yul\":4264:4311   */\n      gt\n        /* \"#utility.yul\":4261:4328   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":4324:4325   */\n      0x00\n        /* \"#utility.yul\":4321:4322   */\n      dup1\n        /* \"#utility.yul\":4314:4326   */\n      revert\n        /* \"#utility.yul\":4261:4328   */\n    tag_574:\n        /* \"#utility.yul\":3967:4334   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4339:5107   */\n    tag_103:\n        /* \"#utility.yul\":4461:4467   */\n      0x00\n        /* \"#utility.yul\":4469:4475   */\n      dup1\n        /* \"#utility.yul\":4477:4483   */\n      0x00\n        /* \"#utility.yul\":4485:4491   */\n      dup1\n        /* \"#utility.yul\":4538:4540   */\n      0x40\n        /* \"#utility.yul\":4526:4535   */\n      dup6\n        /* \"#utility.yul\":4517:4524   */\n      dup8\n        /* \"#utility.yul\":4513:4536   */\n      sub\n        /* \"#utility.yul\":4509:4541   */\n      slt\n        /* \"#utility.yul\":4506:4558   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4551:4552   */\n      dup1\n        /* \"#utility.yul\":4544:4556   */\n      revert\n        /* \"#utility.yul\":4506:4558   */\n    tag_576:\n        /* \"#utility.yul\":4594:4603   */\n      dup5\n        /* \"#utility.yul\":4581:4604   */\n      calldataload\n        /* \"#utility.yul\":4627:4645   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4619:4625   */\n      dup2\n        /* \"#utility.yul\":4616:4646   */\n      gt\n        /* \"#utility.yul\":4613:4663   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":4659:4660   */\n      0x00\n        /* \"#utility.yul\":4656:4657   */\n      dup1\n        /* \"#utility.yul\":4649:4661   */\n      revert\n        /* \"#utility.yul\":4613:4663   */\n    tag_577:\n        /* \"#utility.yul\":4698:4768   */\n      tag_578\n        /* \"#utility.yul\":4760:4767   */\n      dup8\n        /* \"#utility.yul\":4751:4757   */\n      dup3\n        /* \"#utility.yul\":4740:4749   */\n      dup9\n        /* \"#utility.yul\":4736:4758   */\n      add\n        /* \"#utility.yul\":4698:4768   */\n      tag_531\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":4787:4795   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":4672:4768   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":4875:4877   */\n      0x20\n        /* \"#utility.yul\":4860:4878   */\n      dup6\n      add\n        /* \"#utility.yul\":4847:4879   */\n      calldataload\n        /* \"#utility.yul\":4904:4922   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4891:4923   */\n      dup2\n      gt\n        /* \"#utility.yul\":4888:4940   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":4936:4937   */\n      0x00\n        /* \"#utility.yul\":4933:4934   */\n      dup1\n        /* \"#utility.yul\":4926:4938   */\n      revert\n        /* \"#utility.yul\":4888:4940   */\n    tag_579:\n        /* \"#utility.yul\":4975:5047   */\n      tag_580\n        /* \"#utility.yul\":5039:5046   */\n      dup8\n        /* \"#utility.yul\":5028:5036   */\n      dup3\n        /* \"#utility.yul\":5017:5026   */\n      dup9\n        /* \"#utility.yul\":5013:5037   */\n      add\n        /* \"#utility.yul\":4975:5047   */\n      tag_531\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":4339:5107   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":5066:5074   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4339:5107   */\n      jump\t// out\n        /* \"#utility.yul\":5320:5541   */\n    tag_532:\n        /* \"#utility.yul\":5363:5368   */\n      0x00\n        /* \"#utility.yul\":5416:5419   */\n      dup3\n        /* \"#utility.yul\":5409:5413   */\n      0x1f\n        /* \"#utility.yul\":5401:5407   */\n      dup4\n        /* \"#utility.yul\":5397:5414   */\n      add\n        /* \"#utility.yul\":5393:5420   */\n      slt\n        /* \"#utility.yul\":5383:5438   */\n      tag_583\n      jumpi\n        /* \"#utility.yul\":5434:5435   */\n      0x00\n        /* \"#utility.yul\":5431:5432   */\n      dup1\n        /* \"#utility.yul\":5424:5436   */\n      revert\n        /* \"#utility.yul\":5383:5438   */\n    tag_583:\n        /* \"#utility.yul\":5456:5535   */\n      tag_189\n        /* \"#utility.yul\":5531:5534   */\n      dup4\n        /* \"#utility.yul\":5522:5528   */\n      dup4\n        /* \"#utility.yul\":5509:5529   */\n      calldataload\n        /* \"#utility.yul\":5502:5506   */\n      0x20\n        /* \"#utility.yul\":5494:5500   */\n      dup6\n        /* \"#utility.yul\":5490:5507   */\n      add\n        /* \"#utility.yul\":5456:5535   */\n      tag_530\n      jump\t// in\n        /* \"#utility.yul\":5546:6198   */\n    tag_136:\n        /* \"#utility.yul\":5643:5649   */\n      0x00\n        /* \"#utility.yul\":5651:5657   */\n      dup1\n        /* \"#utility.yul\":5659:5665   */\n      0x00\n        /* \"#utility.yul\":5712:5714   */\n      0x60\n        /* \"#utility.yul\":5700:5709   */\n      dup5\n        /* \"#utility.yul\":5691:5698   */\n      dup7\n        /* \"#utility.yul\":5687:5710   */\n      sub\n        /* \"#utility.yul\":5683:5715   */\n      slt\n        /* \"#utility.yul\":5680:5732   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":5728:5729   */\n      0x00\n        /* \"#utility.yul\":5725:5726   */\n      dup1\n        /* \"#utility.yul\":5718:5730   */\n      revert\n        /* \"#utility.yul\":5680:5732   */\n    tag_586:\n        /* \"#utility.yul\":5768:5777   */\n      dup4\n        /* \"#utility.yul\":5755:5778   */\n      calldataload\n        /* \"#utility.yul\":5801:5819   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5793:5799   */\n      dup2\n        /* \"#utility.yul\":5790:5820   */\n      gt\n        /* \"#utility.yul\":5787:5837   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":5833:5834   */\n      0x00\n        /* \"#utility.yul\":5830:5831   */\n      dup1\n        /* \"#utility.yul\":5823:5835   */\n      revert\n        /* \"#utility.yul\":5787:5837   */\n    tag_587:\n        /* \"#utility.yul\":5856:5906   */\n      tag_588\n        /* \"#utility.yul\":5898:5905   */\n      dup7\n        /* \"#utility.yul\":5889:5895   */\n      dup3\n        /* \"#utility.yul\":5878:5887   */\n      dup8\n        /* \"#utility.yul\":5874:5896   */\n      add\n        /* \"#utility.yul\":5856:5906   */\n      tag_532\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":5846:5906   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":5959:5961   */\n      0x20\n        /* \"#utility.yul\":5948:5957   */\n      dup5\n        /* \"#utility.yul\":5944:5962   */\n      add\n        /* \"#utility.yul\":5931:5963   */\n      calldataload\n        /* \"#utility.yul\":5988:6006   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5978:5986   */\n      dup2\n        /* \"#utility.yul\":5975:6007   */\n      gt\n        /* \"#utility.yul\":5972:6024   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":6020:6021   */\n      0x00\n        /* \"#utility.yul\":6017:6018   */\n      dup1\n        /* \"#utility.yul\":6010:6022   */\n      revert\n        /* \"#utility.yul\":5972:6024   */\n    tag_589:\n        /* \"#utility.yul\":6043:6095   */\n      tag_590\n        /* \"#utility.yul\":6087:6094   */\n      dup7\n        /* \"#utility.yul\":6076:6084   */\n      dup3\n        /* \"#utility.yul\":6065:6074   */\n      dup8\n        /* \"#utility.yul\":6061:6085   */\n      add\n        /* \"#utility.yul\":6043:6095   */\n      tag_532\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":5546:6198   */\n      swap4\n      swap7\n        /* \"#utility.yul\":6033:6095   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6164:6166   */\n      0x40\n        /* \"#utility.yul\":6149:6167   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6136:6168   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":5546:6198   */\n      jump\t// out\n        /* \"#utility.yul\":6203:6463   */\n    tag_150:\n        /* \"#utility.yul\":6271:6277   */\n      0x00\n        /* \"#utility.yul\":6279:6285   */\n      dup1\n        /* \"#utility.yul\":6332:6334   */\n      0x40\n        /* \"#utility.yul\":6320:6329   */\n      dup4\n        /* \"#utility.yul\":6311:6318   */\n      dup6\n        /* \"#utility.yul\":6307:6330   */\n      sub\n        /* \"#utility.yul\":6303:6335   */\n      slt\n        /* \"#utility.yul\":6300:6352   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":6348:6349   */\n      0x00\n        /* \"#utility.yul\":6345:6346   */\n      dup1\n        /* \"#utility.yul\":6338:6350   */\n      revert\n        /* \"#utility.yul\":6300:6352   */\n    tag_592:\n        /* \"#utility.yul\":6371:6400   */\n      tag_593\n        /* \"#utility.yul\":6390:6399   */\n      dup4\n        /* \"#utility.yul\":6371:6400   */\n      tag_528\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":6361:6400   */\n      swap2\n      pop\n        /* \"#utility.yul\":6419:6457   */\n      tag_594\n        /* \"#utility.yul\":6453:6455   */\n      0x20\n        /* \"#utility.yul\":6442:6451   */\n      dup5\n        /* \"#utility.yul\":6438:6456   */\n      add\n        /* \"#utility.yul\":6419:6457   */\n      tag_528\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":6409:6457   */\n      swap1\n      pop\n        /* \"#utility.yul\":6203:6463   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6468:6888   */\n    tag_160:\n        /* \"#utility.yul\":6545:6551   */\n      0x00\n        /* \"#utility.yul\":6553:6559   */\n      dup1\n        /* \"#utility.yul\":6561:6567   */\n      0x00\n        /* \"#utility.yul\":6614:6616   */\n      0x60\n        /* \"#utility.yul\":6602:6611   */\n      dup5\n        /* \"#utility.yul\":6593:6600   */\n      dup7\n        /* \"#utility.yul\":6589:6612   */\n      sub\n        /* \"#utility.yul\":6585:6617   */\n      slt\n        /* \"#utility.yul\":6582:6634   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":6630:6631   */\n      0x00\n        /* \"#utility.yul\":6627:6628   */\n      dup1\n        /* \"#utility.yul\":6620:6632   */\n      revert\n        /* \"#utility.yul\":6582:6634   */\n    tag_596:\n        /* \"#utility.yul\":6653:6682   */\n      tag_597\n        /* \"#utility.yul\":6672:6681   */\n      dup5\n        /* \"#utility.yul\":6653:6682   */\n      tag_528\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":6643:6682   */\n      swap6\n        /* \"#utility.yul\":6751:6753   */\n      0x20\n        /* \"#utility.yul\":6736:6754   */\n      dup6\n      add\n        /* \"#utility.yul\":6723:6755   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":6852:6854   */\n      0x40\n        /* \"#utility.yul\":6837:6855   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":6824:6856   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":6468:6888   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6893:7273   */\n    tag_166:\n        /* \"#utility.yul\":6972:6973   */\n      0x01\n        /* \"#utility.yul\":6968:6980   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7015:7027   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7036:7097   */\n      tag_599\n      jumpi\n        /* \"#utility.yul\":7090:7094   */\n      0x7f\n        /* \"#utility.yul\":7082:7088   */\n      dup3\n        /* \"#utility.yul\":7078:7095   */\n      and\n        /* \"#utility.yul\":7068:7095   */\n      swap2\n      pop\n        /* \"#utility.yul\":7036:7097   */\n    tag_599:\n        /* \"#utility.yul\":7143:7145   */\n      0x20\n        /* \"#utility.yul\":7135:7141   */\n      dup3\n        /* \"#utility.yul\":7132:7146   */\n      lt\n        /* \"#utility.yul\":7112:7130   */\n      dup2\n        /* \"#utility.yul\":7109:7147   */\n      sub\n        /* \"#utility.yul\":7106:7267   */\n      tag_600\n      jumpi\n        /* \"#utility.yul\":7189:7199   */\n      0x4e487b71\n        /* \"#utility.yul\":7184:7187   */\n      0xe0\n        /* \"#utility.yul\":7180:7200   */\n      shl\n        /* \"#utility.yul\":7177:7178   */\n      0x00\n        /* \"#utility.yul\":7170:7201   */\n      mstore\n        /* \"#utility.yul\":7224:7228   */\n      0x22\n        /* \"#utility.yul\":7221:7222   */\n      0x04\n        /* \"#utility.yul\":7214:7229   */\n      mstore\n        /* \"#utility.yul\":7252:7256   */\n      0x24\n        /* \"#utility.yul\":7249:7250   */\n      0x00\n        /* \"#utility.yul\":7242:7257   */\n      revert\n        /* \"#utility.yul\":7106:7267   */\n    tag_600:\n      pop\n        /* \"#utility.yul\":6893:7273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7278:7614   */\n    tag_182:\n        /* \"#utility.yul\":7480:7482   */\n      0x20\n        /* \"#utility.yul\":7462:7483   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7519:7521   */\n      0x0c\n        /* \"#utility.yul\":7499:7517   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7492:7522   */\n      mstore\n      shl(0xa0, 0x4e756c6c2041646472657373)\n        /* \"#utility.yul\":7553:7555   */\n      0x40\n        /* \"#utility.yul\":7538:7556   */\n      dup3\n      add\n        /* \"#utility.yul\":7531:7573   */\n      mstore\n        /* \"#utility.yul\":7605:7607   */\n      0x60\n        /* \"#utility.yul\":7590:7608   */\n      add\n      swap1\n        /* \"#utility.yul\":7278:7614   */\n      jump\t// out\n        /* \"#utility.yul\":7619:8021   */\n    tag_192:\n        /* \"#utility.yul\":7821:7823   */\n      0x20\n        /* \"#utility.yul\":7803:7824   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7860:7862   */\n      0x26\n        /* \"#utility.yul\":7840:7858   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7833:7863   */\n      mstore\n        /* \"#utility.yul\":7899:7933   */\n      0x5472616e73666572206661696c65643a2053656e64657220697320626c61636b\n        /* \"#utility.yul\":7894:7896   */\n      0x40\n        /* \"#utility.yul\":7879:7897   */\n      dup3\n      add\n        /* \"#utility.yul\":7872:7934   */\n      mstore\n      shl(0xd2, 0x1b1a5cdd1959)\n        /* \"#utility.yul\":7965:7967   */\n      0x60\n        /* \"#utility.yul\":7950:7968   */\n      dup3\n      add\n        /* \"#utility.yul\":7943:7979   */\n      mstore\n        /* \"#utility.yul\":8011:8014   */\n      0x80\n        /* \"#utility.yul\":7996:8015   */\n      add\n      swap1\n        /* \"#utility.yul\":7619:8021   */\n      jump\t// out\n        /* \"#utility.yul\":8026:8431   */\n    tag_195:\n        /* \"#utility.yul\":8228:8230   */\n      0x20\n        /* \"#utility.yul\":8210:8231   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8267:8269   */\n      0x29\n        /* \"#utility.yul\":8247:8265   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8240:8270   */\n      mstore\n        /* \"#utility.yul\":8306:8340   */\n      0x5472616e73666572206661696c65643a20526563697069656e7420697320626c\n        /* \"#utility.yul\":8301:8303   */\n      0x40\n        /* \"#utility.yul\":8286:8304   */\n      dup3\n      add\n        /* \"#utility.yul\":8279:8341   */\n      mstore\n      shl(0xba, 0x1858dadb1a5cdd1959)\n        /* \"#utility.yul\":8372:8374   */\n      0x60\n        /* \"#utility.yul\":8357:8375   */\n      dup3\n      add\n        /* \"#utility.yul\":8350:8389   */\n      mstore\n        /* \"#utility.yul\":8421:8424   */\n      0x80\n        /* \"#utility.yul\":8406:8425   */\n      add\n      swap1\n        /* \"#utility.yul\":8026:8431   */\n      jump\t// out\n        /* \"#utility.yul\":8789:9187   */\n    tag_202:\n        /* \"#utility.yul\":8991:8993   */\n      0x20\n        /* \"#utility.yul\":8973:8994   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9030:9032   */\n      0x22\n        /* \"#utility.yul\":9010:9028   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9003:9033   */\n      mstore\n        /* \"#utility.yul\":9069:9103   */\n      0x5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b\n        /* \"#utility.yul\":9064:9066   */\n      0x40\n        /* \"#utility.yul\":9049:9067   */\n      dup3\n      add\n        /* \"#utility.yul\":9042:9104   */\n      mstore\n      shl(0xf2, 0x1959)\n        /* \"#utility.yul\":9135:9137   */\n      0x60\n        /* \"#utility.yul\":9120:9138   */\n      dup3\n      add\n        /* \"#utility.yul\":9113:9145   */\n      mstore\n        /* \"#utility.yul\":9177:9180   */\n      0x80\n        /* \"#utility.yul\":9162:9181   */\n      add\n      swap1\n        /* \"#utility.yul\":8789:9187   */\n      jump\t// out\n        /* \"#utility.yul\":9954:10081   */\n    tag_259:\n        /* \"#utility.yul\":10015:10025   */\n      0x4e487b71\n        /* \"#utility.yul\":10010:10013   */\n      0xe0\n        /* \"#utility.yul\":10006:10026   */\n      shl\n        /* \"#utility.yul\":10003:10004   */\n      0x00\n        /* \"#utility.yul\":9996:10027   */\n      mstore\n        /* \"#utility.yul\":10046:10050   */\n      0x32\n        /* \"#utility.yul\":10043:10044   */\n      0x04\n        /* \"#utility.yul\":10036:10051   */\n      mstore\n        /* \"#utility.yul\":10070:10074   */\n      0x24\n        /* \"#utility.yul\":10067:10068   */\n      0x00\n        /* \"#utility.yul\":10060:10075   */\n      revert\n        /* \"#utility.yul\":12017:12201   */\n    tag_382:\n        /* \"#utility.yul\":12087:12093   */\n      0x00\n        /* \"#utility.yul\":12140:12142   */\n      0x20\n        /* \"#utility.yul\":12128:12137   */\n      dup3\n        /* \"#utility.yul\":12119:12126   */\n      dup5\n        /* \"#utility.yul\":12115:12138   */\n      sub\n        /* \"#utility.yul\":12111:12143   */\n      slt\n        /* \"#utility.yul\":12108:12160   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":12156:12157   */\n      0x00\n        /* \"#utility.yul\":12153:12154   */\n      dup1\n        /* \"#utility.yul\":12146:12158   */\n      revert\n        /* \"#utility.yul\":12108:12160   */\n    tag_616:\n      pop\n        /* \"#utility.yul\":12179:12195   */\n      mload\n      swap2\n        /* \"#utility.yul\":12017:12201   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12905:13127   */\n    tag_473:\n        /* \"#utility.yul\":12970:12979   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12991:13001   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12988:13121   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":13043:13053   */\n      0x4e487b71\n        /* \"#utility.yul\":13038:13041   */\n      0xe0\n        /* \"#utility.yul\":13034:13054   */\n      shl\n        /* \"#utility.yul\":13031:13032   */\n      0x00\n        /* \"#utility.yul\":13024:13055   */\n      mstore\n        /* \"#utility.yul\":13078:13082   */\n      0x11\n        /* \"#utility.yul\":13075:13076   */\n      0x04\n        /* \"#utility.yul\":13068:13083   */\n      mstore\n        /* \"#utility.yul\":13106:13110   */\n      0x24\n        /* \"#utility.yul\":13103:13104   */\n      0x00\n        /* \"#utility.yul\":13096:13111   */\n      revert\n        /* \"#utility.yul\":13258:13776   */\n    tag_534:\n        /* \"#utility.yul\":13360:13362   */\n      0x1f\n        /* \"#utility.yul\":13355:13358   */\n      dup3\n        /* \"#utility.yul\":13352:13363   */\n      gt\n        /* \"#utility.yul\":13349:13770   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":13396:13401   */\n      dup1\n        /* \"#utility.yul\":13393:13394   */\n      0x00\n        /* \"#utility.yul\":13386:13402   */\n      mstore\n        /* \"#utility.yul\":13440:13444   */\n      0x20\n        /* \"#utility.yul\":13437:13438   */\n      0x00\n        /* \"#utility.yul\":13427:13445   */\n      keccak256\n        /* \"#utility.yul\":13510:13512   */\n      0x1f\n        /* \"#utility.yul\":13498:13508   */\n      dup5\n        /* \"#utility.yul\":13494:13513   */\n      add\n        /* \"#utility.yul\":13491:13492   */\n      0x05\n        /* \"#utility.yul\":13487:13514   */\n      shr\n        /* \"#utility.yul\":13481:13485   */\n      dup2\n        /* \"#utility.yul\":13477:13515   */\n      add\n        /* \"#utility.yul\":13546:13550   */\n      0x20\n        /* \"#utility.yul\":13534:13544   */\n      dup6\n        /* \"#utility.yul\":13531:13551   */\n      lt\n        /* \"#utility.yul\":13528:13575   */\n      iszero\n      tag_624\n      jumpi\n      pop\n        /* \"#utility.yul\":13569:13573   */\n      dup1\n        /* \"#utility.yul\":13528:13575   */\n    tag_624:\n        /* \"#utility.yul\":13624:13626   */\n      0x1f\n        /* \"#utility.yul\":13619:13622   */\n      dup5\n        /* \"#utility.yul\":13615:13627   */\n      add\n        /* \"#utility.yul\":13612:13613   */\n      0x05\n        /* \"#utility.yul\":13608:13628   */\n      shr\n        /* \"#utility.yul\":13602:13606   */\n      dup3\n        /* \"#utility.yul\":13598:13629   */\n      add\n        /* \"#utility.yul\":13588:13629   */\n      swap2\n      pop\n        /* \"#utility.yul\":13679:13760   */\n    tag_625:\n        /* \"#utility.yul\":13697:13699   */\n      dup2\n        /* \"#utility.yul\":13690:13695   */\n      dup2\n        /* \"#utility.yul\":13687:13700   */\n      lt\n        /* \"#utility.yul\":13679:13760   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":13756:13757   */\n      0x00\n        /* \"#utility.yul\":13742:13758   */\n      dup2\n      sstore\n        /* \"#utility.yul\":13723:13724   */\n      0x01\n        /* \"#utility.yul\":13712:13725   */\n      add\n        /* \"#utility.yul\":13679:13760   */\n      jump(tag_625)\n        /* \"#utility.yul\":13952:15251   */\n    tag_489:\n        /* \"#utility.yul\":14078:14081   */\n      dup2\n        /* \"#utility.yul\":14072:14082   */\n      mload\n        /* \"#utility.yul\":14105:14123   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14097:14103   */\n      dup2\n        /* \"#utility.yul\":14094:14124   */\n      gt\n        /* \"#utility.yul\":14091:14147   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":14127:14145   */\n      tag_631\n      tag_529\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":14156:14253   */\n      tag_632\n        /* \"#utility.yul\":14246:14252   */\n      dup2\n        /* \"#utility.yul\":14206:14244   */\n      tag_633\n        /* \"#utility.yul\":14238:14242   */\n      dup5\n        /* \"#utility.yul\":14232:14243   */\n      sload\n        /* \"#utility.yul\":14206:14244   */\n      tag_166\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":14200:14204   */\n      dup5\n        /* \"#utility.yul\":14156:14253   */\n      tag_534\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":14302:14306   */\n      0x20\n        /* \"#utility.yul\":14333:14335   */\n      0x1f\n        /* \"#utility.yul\":14322:14336   */\n      dup3\n      gt\n        /* \"#utility.yul\":14350:14351   */\n      0x01\n        /* \"#utility.yul\":14345:14994   */\n      dup2\n      eq\n      tag_635\n      jumpi\n        /* \"#utility.yul\":15038:15039   */\n      0x00\n        /* \"#utility.yul\":15055:15061   */\n      dup4\n        /* \"#utility.yul\":15052:15141   */\n      iszero\n      tag_636\n      jumpi\n      pop\n        /* \"#utility.yul\":15107:15126   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":15101:15127   */\n      mload\n        /* \"#utility.yul\":15052:15141   */\n    tag_636:\n      not(0x00)\n        /* \"#utility.yul\":13909:13910   */\n      0x03\n        /* \"#utility.yul\":13905:13916   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":13901:13925   */\n      shr\n        /* \"#utility.yul\":13897:13926   */\n      not\n        /* \"#utility.yul\":13887:13927   */\n      and\n        /* \"#utility.yul\":13933:13934   */\n      0x01\n        /* \"#utility.yul\":13929:13940   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":13884:13941   */\n      or\n        /* \"#utility.yul\":15154:15235   */\n      dup5\n      sstore\n        /* \"#utility.yul\":14315:15245   */\n      jump(tag_443)\n        /* \"#utility.yul\":14345:14994   */\n    tag_635:\n        /* \"#utility.yul\":13205:13206   */\n      0x00\n        /* \"#utility.yul\":13198:13212   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":13242:13246   */\n      0x20\n        /* \"#utility.yul\":13229:13247   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":14381:14401   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":14499:14721   */\n    tag_639:\n        /* \"#utility.yul\":14513:14520   */\n      dup3\n        /* \"#utility.yul\":14510:14511   */\n      dup2\n        /* \"#utility.yul\":14507:14521   */\n      lt\n        /* \"#utility.yul\":14499:14721   */\n      iszero\n      tag_641\n      jumpi\n        /* \"#utility.yul\":14595:14614   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":14589:14615   */\n      mload\n        /* \"#utility.yul\":14574:14616   */\n      dup3\n      sstore\n        /* \"#utility.yul\":14702:14706   */\n      0x20\n        /* \"#utility.yul\":14687:14707   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":14655:14656   */\n      0x01\n        /* \"#utility.yul\":14643:14657   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":14529:14541   */\n      add\n        /* \"#utility.yul\":14499:14721   */\n      jump(tag_639)\n    tag_641:\n        /* \"#utility.yul\":14503:14506   */\n      pop\n        /* \"#utility.yul\":14749:14755   */\n      dup5\n        /* \"#utility.yul\":14740:14747   */\n      dup3\n        /* \"#utility.yul\":14737:14756   */\n      lt\n        /* \"#utility.yul\":14734:14935   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":14810:14829   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":14804:14830   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":14893:14894   */\n      0x03\n        /* \"#utility.yul\":14889:14903   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":14905:14908   */\n      0xf8\n        /* \"#utility.yul\":14885:14909   */\n      and\n        /* \"#utility.yul\":14881:14918   */\n      shr\n        /* \"#utility.yul\":14877:14919   */\n      not\n        /* \"#utility.yul\":14862:14920   */\n      and\n        /* \"#utility.yul\":14847:14921   */\n      dup2\n      sstore\n        /* \"#utility.yul\":14734:14935   */\n    tag_642:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14981:14982   */\n      0x01\n        /* \"#utility.yul\":14965:14979   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":14961:14983   */\n      add\n        /* \"#utility.yul\":14948:14984   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":13952:15251   */\n      jump\t// out\n        /* \"#utility.yul\":15256:15557   */\n    tag_507:\n        /* \"#utility.yul\":15385:15388   */\n      0x00\n        /* \"#utility.yul\":15423:15429   */\n      dup3\n        /* \"#utility.yul\":15417:15430   */\n      mload\n        /* \"#utility.yul\":15469:15475   */\n      dup1\n        /* \"#utility.yul\":15462:15466   */\n      0x20\n        /* \"#utility.yul\":15454:15460   */\n      dup6\n        /* \"#utility.yul\":15450:15467   */\n      add\n        /* \"#utility.yul\":15445:15448   */\n      dup5\n        /* \"#utility.yul\":15439:15476   */\n      mcopy\n        /* \"#utility.yul\":15531:15532   */\n      0x00\n        /* \"#utility.yul\":15495:15511   */\n      swap3\n      add\n        /* \"#utility.yul\":15520:15533   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":15495:15511   */\n      swap2\n        /* \"#utility.yul\":15256:15557   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_3874827173e8df9f34323b12b251d1d3c53926ce129e30a0d69f1d47c277041b 52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n\n    auxdata: 0xa264697066735822122057699568d062fe1eb966be089b3c32bdffa6b68aca2f039c63770a36c2fd60eb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2798": {
									"entryPoint": null,
									"id": 2798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 33,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:18",
										"nodeType": "YulBlock",
										"src": "0:216:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:18",
													"nodeType": "YulBlock",
													"src": "113:101:18",
													"statements": [
														{
															"nativeSrc": "123:26:18",
															"nodeType": "YulAssignment",
															"src": "123:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:18",
																		"nodeType": "YulLiteral",
																		"src": "146:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:18"
																},
																"nativeSrc": "131:18:18",
																"nodeType": "YulFunctionCall",
																"src": "131:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:18",
																								"nodeType": "YulLiteral",
																								"src": "196:2:18",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:18",
																								"nodeType": "YulLiteral",
																								"src": "200:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:18"
																						},
																						"nativeSrc": "192:10:18",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:18",
																						"nodeType": "YulLiteral",
																						"src": "204:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:18"
																				},
																				"nativeSrc": "188:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:18"
																		},
																		"nativeSrc": "176:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:18"
																},
																"nativeSrc": "158:50:18",
																"nodeType": "YulFunctionCall",
																"src": "158:50:18"
															},
															"nativeSrc": "158:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:18",
														"nodeType": "YulTypedName",
														"src": "82:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:18",
														"nodeType": "YulTypedName",
														"src": "93:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:18",
														"nodeType": "YulTypedName",
														"src": "104:4:18",
														"type": ""
													}
												],
												"src": "14:200:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611f576100f95f395f81816110480152818161107101526111b80152611f575ff3fe608060405260043610610195575f3560e01c80638456cb59116100e7578063ad3cb1cc11610087578063dbac26e911610062578063dbac26e9146104c8578063dd62ed3e146104f6578063f2fde38b14610515578063f326f0d714610534575f80fd5b8063ad3cb1cc1461045a578063b119490e1461048a578063c66e4095146104a9575f80fd5b806395d89b41116100c257806395d89b41146103d15780639bc289f1146103e5578063a153e70814610410578063a9059cbb1461043b575f80fd5b80638456cb591461034e57806388d695b2146103625780638da5cb5b14610381575f80fd5b8063313ce5671161015257806352d1902d1161012d57806352d1902d146102d05780635c975abb146102e457806370a08231146102fa578063715018a61461033a575f80fd5b8063313ce5671461028e5780633f4ba83a146102a95780634f1ef286146102bd575f80fd5b806306fdde0314610199578063095ea7b3146101c3578063153b0d1e146101f257806318160ddd1461021357806323b872dd146102505780632e0d2a001461026f575b5f80fd5b3480156101a4575f80fd5b506101ad610553565b6040516101ba91906118c5565b60405180910390f35b3480156101ce575f80fd5b506101e26101dd366004611915565b610613565b60405190151581526020016101ba565b3480156101fd575f80fd5b5061021161020c36600461193d565b61062c565b005b34801561021e575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016101ba565b34801561025b575f80fd5b506101e261026a366004611976565b6106c1565b34801561027a575f80fd5b506102116102893660046119b0565b6107f0565b348015610299575f80fd5b50604051601281526020016101ba565b3480156102b4575f80fd5b506102116108c6565b6102116102cb366004611a54565b6108d8565b3480156102db575f80fd5b506102426108f7565b3480156102ef575f80fd5b505f5460ff166101e2565b348015610305575f80fd5b506102426103143660046119b0565b6001600160a01b03165f9081525f80516020611ee2833981519152602052604090205490565b348015610345575f80fd5b50610211610912565b348015610359575f80fd5b50610211610923565b34801561036d575f80fd5b5061021161037c366004611afa565b610933565b34801561038c575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03165b6040516001600160a01b0390911681526020016101ba565b3480156103dc575f80fd5b506101ad610aa8565b3480156103f0575f80fd5b506102426103ff3660046119b0565b60356020525f908152604090205481565b34801561041b575f80fd5b5061024261042a3660046119b0565b60366020525f908152604090205481565b348015610446575f80fd5b506101e2610455366004611915565b610ae6565b348015610465575f80fd5b506101ad604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610495575f80fd5b506102116104a4366004611b84565b610bef565b3480156104b4575f80fd5b506032546103b9906001600160a01b031681565b3480156104d3575f80fd5b506101e26104e23660046119b0565b60346020525f908152604090205460ff1681565b348015610501575f80fd5b50610242610510366004611bf2565b610d28565b348015610520575f80fd5b5061021161052f3660046119b0565b610d71565b34801561053f575f80fd5b5061021161054e366004611c23565b610dae565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f80516020611ee28339815191529161059190611c53565b80601f01602080910402602001604051908101604052809291908181526020018280546105bd90611c53565b80156106085780601f106105df57610100808354040283529160200191610608565b820191905f5260205f20905b8154815290600101906020018083116105eb57829003601f168201915b505050505091505090565b5f33610620818585610f1c565b60019150505b92915050565b610634610f29565b6001600160a01b0382166106635760405162461bcd60e51b815260040161065a90611c8b565b60405180910390fd5b6001600160a01b0382165f81815260346020908152604091829020805460ff191685151590811790915591519182527fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8910160405180910390a25050565b5f6106ca610f84565b6001600160a01b0384165f9081526034602052604090205460ff16156107025760405162461bcd60e51b815260040161065a90611cb1565b6001600160a01b0383165f9081526034602052604090205460ff161561073a5760405162461bcd60e51b815260040161065a90611cf7565b815f036107845760405162461bcd60e51b8152602060048201526018602482015277416d6f756e742073686f756c646e2774206265207a65726f60401b604482015260640161065a565b6001600160a01b0384165f90815260356020526040902054421015806107bf57506001600160a01b0384165f90815260356020526040902054155b6107db5760405162461bcd60e51b815260040161065a90611d40565b6107e6848484610fc9565b90505b9392505050565b6107f8610f84565b610800610f29565b6001600160a01b0381166108265760405162461bcd60e51b815260040161065a90611c8b565b6001600160a01b0381163b61087d5760405162461bcd60e51b815260206004820152601960248201527f41646472657373206973206e6f74206120636f6e747261637400000000000000604482015260640161065a565b603280546001600160a01b0319166001600160a01b0383169081179091556040517fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8905f90a250565b6108ce610f29565b6108d6610fec565b565b6108e061103d565b6108e9826110e1565b6108f382826110f1565b5050565b5f6109006111ad565b505f80516020611f0283398151915290565b61091a610f29565b6108d65f6111f6565b61092b610f29565b6108d6611266565b61093b610f84565b82811461099a5760405162461bcd60e51b815260206004820152602760248201527f42617463685472616e73666572206661696c65643a204d69736d6174636865646044820152662061727261797360c81b606482015260840161065a565b825f5b81811015610aa05760345f8787848181106109ba576109ba611d82565b90506020020160208101906109cf91906119b0565b6001600160a01b0316815260208101919091526040015f205460ff1615610a4f5760405162461bcd60e51b815260206004820152602e60248201527f42617463685472616e73666572206661696c65643a20526563697069656e742060448201526d1a5cc8189b1858dadb1a5cdd195960921b606482015260840161065a565b610a9833878784818110610a6557610a65611d82565b9050602002016020810190610a7a91906119b0565b868685818110610a8c57610a8c611d82565b905060200201356112a2565b60010161099d565b505050505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020611ee28339815191529161059190611c53565b5f610aef610f84565b335f9081526034602052604090205460ff1615610b1e5760405162461bcd60e51b815260040161065a90611cb1565b6001600160a01b0383165f9081526034602052604090205460ff1615610b565760405162461bcd60e51b815260040161065a90611cf7565b815f03610ba05760405162461bcd60e51b8152602060048201526018602482015277416d6f756e742073686f756c646e2774206265207a65726f60401b604482015260640161065a565b335f9081526035602052604090205442101580610bc95750335f90815260356020526040902054155b610be55760405162461bcd60e51b815260040161065a90611d40565b6107e983836112ff565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610c345750825b90505f8267ffffffffffffffff166001148015610c505750303b155b905081158015610c5e575080155b15610c7c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610ca657845460ff60401b1916600160401b1785555b610cb0888861130c565b610cb93361131e565b610cc161132f565b610cc961133f565b6033869055610cd83387611347565b8315610d1e57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b610d79610f29565b6001600160a01b038116610da257604051631e4fbdf760e01b81525f600482015260240161065a565b610dab816111f6565b50565b610db6610f84565b6032546001600160a01b03163314610e015760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161065a565b6001600160a01b038316610e275760405162461bcd60e51b815260040161065a90611c8b565b805f03610e765760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161065a565b6001600160a01b0383165f9081526035602052604090205482141580610eb357506001600160a01b0383165f908152603660205260409020548114155b15610f17576001600160a01b0383165f818152603560209081526040808320869055603682529182902084905581518581529081018490527f86f2e10d5622d896b3f56e66c1a60639ca21a4674480f054bec2cb9ba62f40cb910160405180910390a25b505050565b610f17838383600161137b565b33610f5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108d65760405163118cdaa760e01b815233600482015260240161065a565b5f5460ff16156108d65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161065a565b5f33610fd685828561145f565b610fe18585856112a2565b506001949350505050565b610ff46114c2565b5f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806110c357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110b75f80516020611f02833981519152546001600160a01b031690565b6001600160a01b031614155b156108d65760405163703e46dd60e11b815260040160405180910390fd5b6110e9610f84565b610dab610f29565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561114b575060408051601f3d908101601f1916820190925261114891810190611d96565b60015b61117357604051634c9c8ce360e01b81526001600160a01b038316600482015260240161065a565b5f80516020611f0283398151915281146111a357604051632a87526960e21b81526004810182905260240161065a565b610f17838361150a565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d65760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b61126e610f84565b5f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110203390565b6001600160a01b0383166112cb57604051634b637e8f60e11b81525f600482015260240161065a565b6001600160a01b0382166112f45760405163ec442f0560e01b81525f600482015260240161065a565b610f1783838361155f565b5f336106208185856112a2565b611314611698565b6108f382826116e1565b611326611698565b610dab81611731565b611337611698565b6108d6611739565b6108d6611698565b6001600160a01b0382166113705760405163ec442f0560e01b81525f600482015260240161065a565b6108f35f838361155f565b5f80516020611ee28339815191526001600160a01b0385166113b25760405163e602df0560e01b81525f600482015260240161065a565b6001600160a01b0384166113db57604051634a1406b160e11b81525f600482015260240161065a565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561145857836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161144f91815260200190565b60405180910390a35b5050505050565b5f61146a8484610d28565b90505f1981146114bc57818110156114ae57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161065a565b6114bc84848484035f61137b565b50505050565b5f5460ff166108d65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161065a565b6115138261174c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561155757610f1782826117af565b6108f3611821565b5f80516020611ee28339815191526001600160a01b0384166115995781816002015f82825461158e9190611dad565b909155506116099050565b6001600160a01b0384165f90815260208290526040902054828110156115eb5760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161065a565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316611627576002810180548390039055611645565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161168a91815260200190565b60405180910390a350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166108d657604051631afcd79f60e31b815260040160405180910390fd5b6116e9611698565b5f80516020611ee28339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036117228482611e10565b50600481016114bc8382611e10565b610d79611698565b611741611698565b5f805460ff19169055565b806001600160a01b03163b5f0361178157604051634c9c8ce360e01b81526001600160a01b038216600482015260240161065a565b5f80516020611f0283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516117cb9190611ecb565b5f60405180830381855af49150503d805f8114611803576040519150601f19603f3d011682016040523d82523d5f602084013e611808565b606091505b5091509150611818858383611840565b95945050505050565b34156108d65760405163b398979f60e01b815260040160405180910390fd5b606082611855576118508261189c565b6107e9565b815115801561186c57506001600160a01b0384163b155b1561189557604051639996b31560e01b81526001600160a01b038516600482015260240161065a565b50806107e9565b8051156118ac5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611910575f80fd5b919050565b5f8060408385031215611926575f80fd5b61192f836118fa565b946020939093013593505050565b5f806040838503121561194e575f80fd5b611957836118fa565b91506020830135801515811461196b575f80fd5b809150509250929050565b5f805f60608486031215611988575f80fd5b611991846118fa565b925061199f602085016118fa565b929592945050506040919091013590565b5f602082840312156119c0575f80fd5b6107e9826118fa565b634e487b7160e01b5f52604160045260245ffd5b5f8067ffffffffffffffff8411156119f7576119f76119c9565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715611a2657611a266119c9565b604052838152905080828401851015611a3d575f80fd5b838360208301375f60208583010152509392505050565b5f8060408385031215611a65575f80fd5b611a6e836118fa565b9150602083013567ffffffffffffffff811115611a89575f80fd5b8301601f81018513611a99575f80fd5b611aa8858235602084016119dd565b9150509250929050565b5f8083601f840112611ac2575f80fd5b50813567ffffffffffffffff811115611ad9575f80fd5b6020830191508360208260051b8501011115611af3575f80fd5b9250929050565b5f805f8060408587031215611b0d575f80fd5b843567ffffffffffffffff811115611b23575f80fd5b611b2f87828801611ab2565b909550935050602085013567ffffffffffffffff811115611b4e575f80fd5b611b5a87828801611ab2565b95989497509550505050565b5f82601f830112611b75575f80fd5b6107e9838335602085016119dd565b5f805f60608486031215611b96575f80fd5b833567ffffffffffffffff811115611bac575f80fd5b611bb886828701611b66565b935050602084013567ffffffffffffffff811115611bd4575f80fd5b611be086828701611b66565b93969395505050506040919091013590565b5f8060408385031215611c03575f80fd5b611c0c836118fa565b9150611c1a602084016118fa565b90509250929050565b5f805f60608486031215611c35575f80fd5b611c3e846118fa565b95602085013595506040909401359392505050565b600181811c90821680611c6757607f821691505b602082108103611c8557634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252600c908201526b4e756c6c204164647265737360a01b604082015260600190565b60208082526026908201527f5472616e73666572206661696c65643a2053656e64657220697320626c61636b6040820152651b1a5cdd195960d21b606082015260800190565b60208082526029908201527f5472616e73666572206661696c65643a20526563697069656e7420697320626c6040820152681858dadb1a5cdd195960ba1b606082015260800190565b60208082526022908201527f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b604082015261195960f21b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215611da6575f80fd5b5051919050565b8082018082111561062657634e487b7160e01b5f52601160045260245ffd5b601f821115610f1757805f5260205f20601f840160051c81016020851015611df15750805b601f840160051c820191505b81811015611458575f8155600101611dfd565b815167ffffffffffffffff811115611e2a57611e2a6119c9565b611e3e81611e388454611c53565b84611dcc565b6020601f821160018114611e70575f8315611e595750848201515b5f19600385901b1c1916600184901b178455611458565b5f84815260208120601f198516915b82811015611e9f5787850151825560209485019460019092019101611e7f565b5084821015611ebc57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122057699568d062fe1eb966be089b3c32bdffa6b68aca2f039c63770a36c2fd60eb64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1F57 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1048 ADD MSTORE DUP2 DUP2 PUSH2 0x1071 ADD MSTORE PUSH2 0x11B8 ADD MSTORE PUSH2 0x1F57 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x195 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDBAC26E9 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xF326F0D7 EQ PUSH2 0x534 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xB119490E EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x4A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xA153E708 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x43B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x381 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x152 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x12D JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x26F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x193D JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x8F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x1E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x912 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x923 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFA JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH2 0xAA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x3FF CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0xAE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x32 SLOAD PUSH2 0x3B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0xD71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x591 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x1C53 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x608 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x608 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x620 DUP2 DUP6 DUP6 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x634 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6CA PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x416D6F756E742073686F756C646E2774206265207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x7BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1D40 JUMP JUMPDEST PUSH2 0x7E6 DUP5 DUP5 DUP5 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x800 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206973206E6F74206120636F6E747261637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x8CE PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0xFEC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8E0 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x8E9 DUP3 PUSH2 0x10E1 JUMP JUMPDEST PUSH2 0x8F3 DUP3 DUP3 PUSH2 0x10F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x900 PUSH2 0x11AD JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x91A PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x8D6 PUSH0 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x92B PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x93B PUSH2 0xF84 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20617272617973 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65A JUMP JUMPDEST DUP3 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x34 PUSH0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x9BA JUMPI PUSH2 0x9BA PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1A5CC8189B1858DADB1A5CDD1959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0xA98 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xA65 JUMPI PUSH2 0xA65 PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x19B0 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xA8C JUMPI PUSH2 0xA8C PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x99D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x591 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST PUSH0 PUSH2 0xAEF PUSH2 0xF84 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x416D6F756E742073686F756C646E2774206265207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0xBC9 JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1D40 JUMP JUMPDEST PUSH2 0x7E9 DUP4 DUP4 PUSH2 0x12FF JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xC34 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xC50 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xC5E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xC7C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xCA6 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xCB0 DUP9 DUP9 PUSH2 0x130C JUMP JUMPDEST PUSH2 0xCB9 CALLER PUSH2 0x131E JUMP JUMPDEST PUSH2 0xCC1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0xCC9 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x33 DUP7 SWAP1 SSTORE PUSH2 0xCD8 CALLER DUP8 PUSH2 0x1347 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xD1E JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD79 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDA2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0xDAB DUP2 PUSH2 0x11F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDB6 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1C8B JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0xE76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 EQ ISZERO DUP1 PUSH2 0xEB3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xF17 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x36 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x86F2E10D5622D896B3F56E66C1A60639CA21A4674480F054BEC2CB9BA62F40CB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF17 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x137B JUMP JUMPDEST CALLER PUSH2 0xF5B PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH0 CALLER PUSH2 0xFD6 DUP6 DUP3 DUP6 PUSH2 0x145F JUMP JUMPDEST PUSH2 0xFE1 DUP6 DUP6 DUP6 PUSH2 0x12A2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xFF4 PUSH2 0x14C2 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x10C3 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10B7 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E9 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0xDAB PUSH2 0xF29 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x114B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1148 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0xF17 DUP4 DUP4 PUSH2 0x150A JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x126E PUSH2 0xF84 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1020 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0xF17 DUP4 DUP4 DUP4 PUSH2 0x155F JUMP JUMPDEST PUSH0 CALLER PUSH2 0x620 DUP2 DUP6 DUP6 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x1314 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x8F3 DUP3 DUP3 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x1326 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0xDAB DUP2 PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x1337 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1370 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x8F3 PUSH0 DUP4 DUP4 PUSH2 0x155F JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x1458 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x144F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x146A DUP5 DUP5 PUSH2 0xD28 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x14BC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x14AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x14BC DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x137B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x1513 DUP3 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1557 JUMPI PUSH2 0xF17 DUP3 DUP3 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x8F3 PUSH2 0x1821 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1599 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x158E SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1609 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x15EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1627 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x168A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E9 PUSH2 0x1698 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x1722 DUP5 DUP3 PUSH2 0x1E10 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x14BC DUP4 DUP3 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0xD79 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1741 PUSH2 0x1698 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1781 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x17CB SWAP2 SWAP1 PUSH2 0x1ECB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1803 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1818 DUP6 DUP4 DUP4 PUSH2 0x1840 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1855 JUMPI PUSH2 0x1850 DUP3 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x186C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1895 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST POP DUP1 PUSH2 0x7E9 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x18AC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1910 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1926 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x192F DUP4 PUSH2 0x18FA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x194E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1957 DUP4 PUSH2 0x18FA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x196B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1988 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1991 DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP3 POP PUSH2 0x199F PUSH1 0x20 DUP6 ADD PUSH2 0x18FA JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E9 DUP3 PUSH2 0x18FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x19F7 JUMPI PUSH2 0x19F7 PUSH2 0x19C9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A26 JUMPI PUSH2 0x1A26 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x1A3D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A65 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A6E DUP4 PUSH2 0x18FA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A89 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1A99 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AA8 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x19DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1AC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1AF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B0D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B23 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B2F DUP8 DUP3 DUP9 ADD PUSH2 0x1AB2 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B4E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B5A DUP8 DUP3 DUP9 ADD PUSH2 0x1AB2 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B75 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E9 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x19DD JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B96 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BB8 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BE0 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C03 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C0C DUP4 PUSH2 0x18FA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1A PUSH1 0x20 DUP5 ADD PUSH2 0x18FA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C35 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C3E DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C67 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C85 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x4E756C6C2041646472657373 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1B1A5CDD1959 PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x1858DADB1A5CDD1959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x626 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xF17 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1DF1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1458 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DFD JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E2A JUMPI PUSH2 0x1E2A PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x1E3E DUP2 PUSH2 0x1E38 DUP5 SLOAD PUSH2 0x1C53 JUMP JUMPDEST DUP5 PUSH2 0x1DCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E70 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x1E59 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1458 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E9F JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1E7F JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1EBC JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00360894A13B LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122057 PUSH10 0x9568D062FE1EB966BE08 SWAP12 EXTCODECOPY ORIGIN 0xBD SELFDESTRUCT 0xA6 0xB6 DUP11 0xCA 0x2F SUB SWAP13 PUSH4 0x770A36C2 REVERT PUSH1 0xEB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "445:4371:17:-:0;;;1171:4:2;1128:48;;1162:105:17;;;;;;;;;-1:-1:-1;1186:22:17;:20;:22::i;:::-;445:4371;;7711:422:1;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:1;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:1;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:1;-1:-1:-1;;;;;8035:33:1;;;;;8087:29;;158:50:18;;;8087:29:1;;146:2:18;131:18;8087:29:1;;;;;;;7981:146;7760:373;7711:422::o;14:200:18:-;445:4371:17;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_826": {
									"entryPoint": 4876,
									"id": 826,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_854": {
									"entryPoint": 5857,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 4894,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 5937,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_662": {
									"entryPoint": 4911,
									"id": 662,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_672": {
									"entryPoint": 5945,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_502": {
									"entryPoint": 4927,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1258": {
									"entryPoint": 3868,
									"id": 1258,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1326": {
									"entryPoint": 4987,
									"id": 1326,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3188": {
									"entryPoint": 4321,
									"id": 3188,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 5784,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_2212": {
									"entryPoint": 6177,
									"id": 2212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 4525,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 3881,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 4157,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_810": {
									"entryPoint": null,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1207": {
									"entryPoint": 4935,
									"id": 1207,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1733": {
									"entryPoint": null,
									"id": 1733,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_736": {
									"entryPoint": 4710,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_709": {
									"entryPoint": 3972,
									"id": 709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_720": {
									"entryPoint": 5314,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2585": {
									"entryPoint": 6300,
									"id": 2585,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1992": {
									"entryPoint": 5964,
									"id": 1992,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1374": {
									"entryPoint": 5215,
									"id": 1374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 4598,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1082": {
									"entryPoint": 4770,
									"id": 1082,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_752": {
									"entryPoint": 4076,
									"id": 752,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1174": {
									"entryPoint": 5471,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 4337,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_979": {
									"entryPoint": 3368,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1003": {
									"entryPoint": 1555,
									"id": 1003,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_931": {
									"entryPoint": null,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchTransfer_3177": {
									"entryPoint": 2355,
									"id": 3177,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@blacklisted_2758": {
									"entryPoint": null,
									"id": 2758,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_895": {
									"entryPoint": null,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_2503": {
									"entryPoint": 6063,
									"id": 2503,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2643": {
									"entryPoint": null,
									"id": 2643,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1965": {
									"entryPoint": null,
									"id": 1965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@icoContract_2749": {
									"entryPoint": null,
									"id": 2749,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_2836": {
									"entryPoint": 3055,
									"id": 2836,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isContract_1393": {
									"entryPoint": null,
									"id": 1393,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockedAmount_2766": {
									"entryPoint": null,
									"id": 2766,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockedUntil_2762": {
									"entryPoint": null,
									"id": 2762,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_870": {
									"entryPoint": 1363,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2857": {
									"entryPoint": 2339,
									"id": 2857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_697": {
									"entryPoint": null,
									"id": 697,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_520": {
									"entryPoint": 2295,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 2322,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlacklist_2959": {
									"entryPoint": 1580,
									"id": 2959,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setICOContract_3116": {
									"entryPoint": 2032,
									"id": 3116,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockup_2928": {
									"entryPoint": 3502,
									"id": 2928,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@symbol_886": {
									"entryPoint": 2728,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_911": {
									"entryPoint": null,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1035": {
									"entryPoint": 4041,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_3081": {
									"entryPoint": 1729,
									"id": 3081,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 3441,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_3020": {
									"entryPoint": 2790,
									"id": 3020,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_955": {
									"entryPoint": 4863,
									"id": 955,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_2866": {
									"entryPoint": 2246,
									"id": 2866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_2028": {
									"entryPoint": 5386,
									"id": 2028,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 2264,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2543": {
									"entryPoint": 6208,
									"id": 2543,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 6834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 6621,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 7014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 7203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 6906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 7574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 7044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 7628,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 7554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15559:18",
										"nodeType": "YulBlock",
										"src": "0:15559:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:18",
													"nodeType": "YulBlock",
													"src": "135:297:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:18",
																		"nodeType": "YulLiteral",
																		"src": "163:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:18"
																},
																"nativeSrc": "145:21:18",
																"nodeType": "YulFunctionCall",
																"src": "145:21:18"
															},
															"nativeSrc": "145:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:18"
														},
														{
															"nativeSrc": "175:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:18"
																},
																"nativeSrc": "189:13:18",
																"nodeType": "YulFunctionCall",
																"src": "189:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:18",
																	"nodeType": "YulTypedName",
																	"src": "179:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:18",
																				"nodeType": "YulLiteral",
																				"src": "233:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:18"
																		},
																		"nativeSrc": "218:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:18"
																},
																"nativeSrc": "211:34:18",
																"nodeType": "YulFunctionCall",
																"src": "211:34:18"
															},
															"nativeSrc": "211:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:18",
																				"nodeType": "YulLiteral",
																				"src": "275:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:18"
																		},
																		"nativeSrc": "260:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:18",
																				"nodeType": "YulLiteral",
																				"src": "292:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:18"
																		},
																		"nativeSrc": "280:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:18"
																},
																"nativeSrc": "254:50:18",
																"nodeType": "YulFunctionCall",
																"src": "254:50:18"
															},
															"nativeSrc": "254:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:18"
																				},
																				"nativeSrc": "324:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:18",
																				"nodeType": "YulLiteral",
																				"src": "348:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:18"
																		},
																		"nativeSrc": "320:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:18",
																		"nodeType": "YulLiteral",
																		"src": "353:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:18"
																},
																"nativeSrc": "313:42:18",
																"nodeType": "YulFunctionCall",
																"src": "313:42:18"
															},
															"nativeSrc": "313:42:18",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:18"
														},
														{
															"nativeSrc": "364:62:18",
															"nodeType": "YulAssignment",
															"src": "364:62:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:18",
																								"nodeType": "YulLiteral",
																								"src": "407:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:18"
																						},
																						"nativeSrc": "395:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:18",
																								"nodeType": "YulLiteral",
																								"src": "416:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:18"
																						},
																						"nativeSrc": "412:7:18",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:18"
																				},
																				"nativeSrc": "391:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:18"
																		},
																		"nativeSrc": "376:45:18",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:18",
																		"nodeType": "YulLiteral",
																		"src": "423:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:18"
																},
																"nativeSrc": "372:54:18",
																"nodeType": "YulFunctionCall",
																"src": "372:54:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:18",
														"nodeType": "YulTypedName",
														"src": "104:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:18",
														"nodeType": "YulTypedName",
														"src": "115:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:18",
														"nodeType": "YulTypedName",
														"src": "126:4:18",
														"type": ""
													}
												],
												"src": "14:418:18"
											},
											{
												"body": {
													"nativeSrc": "486:124:18",
													"nodeType": "YulBlock",
													"src": "486:124:18",
													"statements": [
														{
															"nativeSrc": "496:29:18",
															"nodeType": "YulAssignment",
															"src": "496:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:18"
																},
																"nativeSrc": "505:20:18",
																"nodeType": "YulFunctionCall",
																"src": "505:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:18",
																"nodeType": "YulBlock",
																"src": "588:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:18",
																					"nodeType": "YulLiteral",
																					"src": "597:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:18",
																					"nodeType": "YulLiteral",
																					"src": "600:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:18"
																			},
																			"nativeSrc": "590:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:18"
																		},
																		"nativeSrc": "590:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:18",
																										"nodeType": "YulLiteral",
																										"src": "573:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:18",
																										"nodeType": "YulLiteral",
																										"src": "578:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:18"
																								},
																								"nativeSrc": "569:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:18",
																								"nodeType": "YulLiteral",
																								"src": "582:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:18"
																						},
																						"nativeSrc": "565:19:18",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:18"
																				},
																				"nativeSrc": "554:31:18",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:18"
																		},
																		"nativeSrc": "544:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:18"
																},
																"nativeSrc": "537:50:18",
																"nodeType": "YulFunctionCall",
																"src": "537:50:18"
															},
															"nativeSrc": "534:70:18",
															"nodeType": "YulIf",
															"src": "534:70:18"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:18",
														"nodeType": "YulTypedName",
														"src": "465:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:18",
														"nodeType": "YulTypedName",
														"src": "476:5:18",
														"type": ""
													}
												],
												"src": "437:173:18"
											},
											{
												"body": {
													"nativeSrc": "702:213:18",
													"nodeType": "YulBlock",
													"src": "702:213:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:18",
																"nodeType": "YulBlock",
																"src": "748:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:18",
																					"nodeType": "YulLiteral",
																					"src": "757:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:18",
																					"nodeType": "YulLiteral",
																					"src": "760:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:18"
																			},
																			"nativeSrc": "750:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:18"
																		},
																		"nativeSrc": "750:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:18"
																		},
																		"nativeSrc": "719:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:18",
																		"nodeType": "YulLiteral",
																		"src": "744:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:18"
																},
																"nativeSrc": "715:32:18",
																"nodeType": "YulFunctionCall",
																"src": "715:32:18"
															},
															"nativeSrc": "712:52:18",
															"nodeType": "YulIf",
															"src": "712:52:18"
														},
														{
															"nativeSrc": "773:39:18",
															"nodeType": "YulAssignment",
															"src": "773:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:18"
																},
																"nativeSrc": "783:29:18",
																"nodeType": "YulFunctionCall",
																"src": "783:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:18"
																}
															]
														},
														{
															"nativeSrc": "821:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:18",
																"nodeType": "YulLiteral",
																"src": "834:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:18",
																	"nodeType": "YulTypedName",
																	"src": "825:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:18",
															"nodeType": "YulAssignment",
															"src": "844:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:18",
																				"nodeType": "YulLiteral",
																				"src": "881:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:18"
																		},
																		"nativeSrc": "866:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:18"
																},
																"nativeSrc": "853:32:18",
																"nodeType": "YulFunctionCall",
																"src": "853:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:18"
																}
															]
														},
														{
															"nativeSrc": "894:15:18",
															"nodeType": "YulAssignment",
															"src": "894:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:18",
																"nodeType": "YulIdentifier",
																"src": "904:5:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:18",
														"nodeType": "YulTypedName",
														"src": "660:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:18",
														"nodeType": "YulTypedName",
														"src": "671:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:18",
														"nodeType": "YulTypedName",
														"src": "683:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:18",
														"nodeType": "YulTypedName",
														"src": "691:6:18",
														"type": ""
													}
												],
												"src": "615:300:18"
											},
											{
												"body": {
													"nativeSrc": "1015:92:18",
													"nodeType": "YulBlock",
													"src": "1015:92:18",
													"statements": [
														{
															"nativeSrc": "1025:26:18",
															"nodeType": "YulAssignment",
															"src": "1025:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:18"
																},
																"nativeSrc": "1033:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:18"
																				},
																				"nativeSrc": "1085:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:18"
																		},
																		"nativeSrc": "1078:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:18"
																},
																"nativeSrc": "1060:41:18",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:18"
															},
															"nativeSrc": "1060:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:18",
														"nodeType": "YulTypedName",
														"src": "984:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:18",
														"nodeType": "YulTypedName",
														"src": "995:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:18",
														"nodeType": "YulTypedName",
														"src": "1006:4:18",
														"type": ""
													}
												],
												"src": "920:187:18"
											},
											{
												"body": {
													"nativeSrc": "1196:263:18",
													"nodeType": "YulBlock",
													"src": "1196:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1242:16:18",
																"nodeType": "YulBlock",
																"src": "1242:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1251:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1251:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1254:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1254:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1244:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1244:6:18"
																			},
																			"nativeSrc": "1244:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1244:12:18"
																		},
																		"nativeSrc": "1244:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1244:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1217:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1226:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1226:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1213:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:18"
																		},
																		"nativeSrc": "1213:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1213:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1238:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1238:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1209:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1209:3:18"
																},
																"nativeSrc": "1209:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1209:32:18"
															},
															"nativeSrc": "1206:52:18",
															"nodeType": "YulIf",
															"src": "1206:52:18"
														},
														{
															"nativeSrc": "1267:39:18",
															"nodeType": "YulAssignment",
															"src": "1267:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1296:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1296:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1277:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1277:18:18"
																},
																"nativeSrc": "1277:29:18",
																"nodeType": "YulFunctionCall",
																"src": "1277:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1267:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1267:6:18"
																}
															]
														},
														{
															"nativeSrc": "1315:45:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1315:45:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1345:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1345:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1356:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1341:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1341:3:18"
																		},
																		"nativeSrc": "1341:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1341:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1328:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1328:12:18"
																},
																"nativeSrc": "1328:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1328:32:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1319:5:18",
																	"nodeType": "YulTypedName",
																	"src": "1319:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1413:16:18",
																"nodeType": "YulBlock",
																"src": "1413:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1422:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1422:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1425:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1425:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1415:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1415:6:18"
																			},
																			"nativeSrc": "1415:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1415:12:18"
																		},
																		"nativeSrc": "1415:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1415:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1382:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1382:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "1403:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "1403:5:18"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "1396:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "1396:6:18"
																						},
																						"nativeSrc": "1396:13:18",
																						"nodeType": "YulFunctionCall",
																						"src": "1396:13:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1389:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "1389:6:18"
																				},
																				"nativeSrc": "1389:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1389:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1379:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1379:2:18"
																		},
																		"nativeSrc": "1379:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1379:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1372:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1372:6:18"
																},
																"nativeSrc": "1372:40:18",
																"nodeType": "YulFunctionCall",
																"src": "1372:40:18"
															},
															"nativeSrc": "1369:60:18",
															"nodeType": "YulIf",
															"src": "1369:60:18"
														},
														{
															"nativeSrc": "1438:15:18",
															"nodeType": "YulAssignment",
															"src": "1438:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "1448:5:18",
																"nodeType": "YulIdentifier",
																"src": "1448:5:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1438:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1438:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "1112:347:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1154:9:18",
														"nodeType": "YulTypedName",
														"src": "1154:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1165:7:18",
														"nodeType": "YulTypedName",
														"src": "1165:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1177:6:18",
														"nodeType": "YulTypedName",
														"src": "1177:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1185:6:18",
														"nodeType": "YulTypedName",
														"src": "1185:6:18",
														"type": ""
													}
												],
												"src": "1112:347:18"
											},
											{
												"body": {
													"nativeSrc": "1565:76:18",
													"nodeType": "YulBlock",
													"src": "1565:76:18",
													"statements": [
														{
															"nativeSrc": "1575:26:18",
															"nodeType": "YulAssignment",
															"src": "1575:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1587:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1587:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1598:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1598:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1583:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1583:3:18"
																},
																"nativeSrc": "1583:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1583:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1575:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1575:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1617:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1617:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1628:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1628:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1610:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1610:6:18"
																},
																"nativeSrc": "1610:25:18",
																"nodeType": "YulFunctionCall",
																"src": "1610:25:18"
															},
															"nativeSrc": "1610:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "1610:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1464:177:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1534:9:18",
														"nodeType": "YulTypedName",
														"src": "1534:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1545:6:18",
														"nodeType": "YulTypedName",
														"src": "1545:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1556:4:18",
														"nodeType": "YulTypedName",
														"src": "1556:4:18",
														"type": ""
													}
												],
												"src": "1464:177:18"
											},
											{
												"body": {
													"nativeSrc": "1750:270:18",
													"nodeType": "YulBlock",
													"src": "1750:270:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1796:16:18",
																"nodeType": "YulBlock",
																"src": "1796:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1805:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1805:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1808:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1808:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1798:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1798:6:18"
																			},
																			"nativeSrc": "1798:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1798:12:18"
																		},
																		"nativeSrc": "1798:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1798:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1771:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1771:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1780:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1780:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1767:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:18"
																		},
																		"nativeSrc": "1767:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1767:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1792:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1792:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1763:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:18"
																},
																"nativeSrc": "1763:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1763:32:18"
															},
															"nativeSrc": "1760:52:18",
															"nodeType": "YulIf",
															"src": "1760:52:18"
														},
														{
															"nativeSrc": "1821:39:18",
															"nodeType": "YulAssignment",
															"src": "1821:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1850:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1850:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1831:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1831:18:18"
																},
																"nativeSrc": "1831:29:18",
																"nodeType": "YulFunctionCall",
																"src": "1831:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1821:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:18"
																}
															]
														},
														{
															"nativeSrc": "1869:48:18",
															"nodeType": "YulAssignment",
															"src": "1869:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1902:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1902:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1913:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1913:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1898:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1898:3:18"
																		},
																		"nativeSrc": "1898:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1898:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1879:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1879:18:18"
																},
																"nativeSrc": "1879:38:18",
																"nodeType": "YulFunctionCall",
																"src": "1879:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1869:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:18"
																}
															]
														},
														{
															"nativeSrc": "1926:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1926:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1939:1:18",
																"nodeType": "YulLiteral",
																"src": "1939:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1930:5:18",
																	"nodeType": "YulTypedName",
																	"src": "1930:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1949:41:18",
															"nodeType": "YulAssignment",
															"src": "1949:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1975:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1975:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1986:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1986:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1971:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:18"
																		},
																		"nativeSrc": "1971:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1971:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1958:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1958:12:18"
																},
																"nativeSrc": "1958:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1958:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1949:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1949:5:18"
																}
															]
														},
														{
															"nativeSrc": "1999:15:18",
															"nodeType": "YulAssignment",
															"src": "1999:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "2009:5:18",
																"nodeType": "YulIdentifier",
																"src": "2009:5:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1999:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1999:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1646:374:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1700:9:18",
														"nodeType": "YulTypedName",
														"src": "1700:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1711:7:18",
														"nodeType": "YulTypedName",
														"src": "1711:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1723:6:18",
														"nodeType": "YulTypedName",
														"src": "1723:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1731:6:18",
														"nodeType": "YulTypedName",
														"src": "1731:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1739:6:18",
														"nodeType": "YulTypedName",
														"src": "1739:6:18",
														"type": ""
													}
												],
												"src": "1646:374:18"
											},
											{
												"body": {
													"nativeSrc": "2095:116:18",
													"nodeType": "YulBlock",
													"src": "2095:116:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:16:18",
																"nodeType": "YulBlock",
																"src": "2141:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2150:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2150:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2153:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2153:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2143:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2143:6:18"
																			},
																			"nativeSrc": "2143:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:12:18"
																		},
																		"nativeSrc": "2143:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:18"
																		},
																		"nativeSrc": "2112:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:18"
																},
																"nativeSrc": "2108:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:18"
															},
															"nativeSrc": "2105:52:18",
															"nodeType": "YulIf",
															"src": "2105:52:18"
														},
														{
															"nativeSrc": "2166:39:18",
															"nodeType": "YulAssignment",
															"src": "2166:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2195:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2195:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2176:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "2176:18:18"
																},
																"nativeSrc": "2176:29:18",
																"nodeType": "YulFunctionCall",
																"src": "2176:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2166:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2166:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:18",
														"nodeType": "YulTypedName",
														"src": "2061:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:18",
														"nodeType": "YulTypedName",
														"src": "2072:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:18",
														"nodeType": "YulTypedName",
														"src": "2084:6:18",
														"type": ""
													}
												],
												"src": "2025:186:18"
											},
											{
												"body": {
													"nativeSrc": "2313:87:18",
													"nodeType": "YulBlock",
													"src": "2313:87:18",
													"statements": [
														{
															"nativeSrc": "2323:26:18",
															"nodeType": "YulAssignment",
															"src": "2323:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2335:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2335:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2346:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2346:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2331:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2331:3:18"
																},
																"nativeSrc": "2331:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2331:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2323:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2323:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2365:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2365:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2380:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2380:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2388:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2388:4:18",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2376:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:18"
																		},
																		"nativeSrc": "2376:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:17:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2358:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:18"
																},
																"nativeSrc": "2358:36:18",
																"nodeType": "YulFunctionCall",
																"src": "2358:36:18"
															},
															"nativeSrc": "2358:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "2358:36:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2216:184:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2282:9:18",
														"nodeType": "YulTypedName",
														"src": "2282:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2293:6:18",
														"nodeType": "YulTypedName",
														"src": "2293:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2304:4:18",
														"nodeType": "YulTypedName",
														"src": "2304:4:18",
														"type": ""
													}
												],
												"src": "2216:184:18"
											},
											{
												"body": {
													"nativeSrc": "2437:95:18",
													"nodeType": "YulBlock",
													"src": "2437:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2454:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2454:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2461:3:18",
																				"nodeType": "YulLiteral",
																				"src": "2461:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2466:10:18",
																				"nodeType": "YulLiteral",
																				"src": "2466:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2457:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:18"
																		},
																		"nativeSrc": "2457:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2457:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2447:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2447:6:18"
																},
																"nativeSrc": "2447:31:18",
																"nodeType": "YulFunctionCall",
																"src": "2447:31:18"
															},
															"nativeSrc": "2447:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "2447:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2494:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2494:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2497:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2497:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2487:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2487:6:18"
																},
																"nativeSrc": "2487:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2487:15:18"
															},
															"nativeSrc": "2487:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "2487:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2518:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2518:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2521:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2521:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2511:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:18"
																},
																"nativeSrc": "2511:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2511:15:18"
															},
															"nativeSrc": "2511:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "2511:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2405:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "2405:127:18"
											},
											{
												"body": {
													"nativeSrc": "2611:641:18",
													"nodeType": "YulBlock",
													"src": "2611:641:18",
													"statements": [
														{
															"nativeSrc": "2621:13:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2621:13:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2633:1:18",
																"nodeType": "YulLiteral",
																"src": "2633:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "2625:4:18",
																	"nodeType": "YulTypedName",
																	"src": "2625:4:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2677:22:18",
																"nodeType": "YulBlock",
																"src": "2677:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2679:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "2679:16:18"
																			},
																			"nativeSrc": "2679:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2679:18:18"
																		},
																		"nativeSrc": "2679:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2649:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2649:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2657:18:18",
																		"nodeType": "YulLiteral",
																		"src": "2657:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2646:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2646:2:18"
																},
																"nativeSrc": "2646:30:18",
																"nodeType": "YulFunctionCall",
																"src": "2646:30:18"
															},
															"nativeSrc": "2643:56:18",
															"nodeType": "YulIf",
															"src": "2643:56:18"
														},
														{
															"nativeSrc": "2708:43:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2708:43:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2730:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2730:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2738:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2738:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2726:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2726:3:18"
																		},
																		"nativeSrc": "2726:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2726:15:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2747:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2743:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2743:3:18"
																		},
																		"nativeSrc": "2743:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2743:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2722:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2722:3:18"
																},
																"nativeSrc": "2722:29:18",
																"nodeType": "YulFunctionCall",
																"src": "2722:29:18"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "2712:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2712:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2760:25:18",
															"nodeType": "YulAssignment",
															"src": "2760:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "2772:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2772:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2780:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2780:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2768:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:18"
																},
																"nativeSrc": "2768:17:18",
																"nodeType": "YulFunctionCall",
																"src": "2768:17:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2760:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2760:4:18"
																}
															]
														},
														{
															"nativeSrc": "2794:15:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2794:15:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2808:1:18",
																"nodeType": "YulLiteral",
																"src": "2808:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2798:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2798:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2818:19:18",
															"nodeType": "YulAssignment",
															"src": "2818:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2834:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2834:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2828:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:18"
																},
																"nativeSrc": "2828:9:18",
																"nodeType": "YulFunctionCall",
																"src": "2828:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2818:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2818:6:18"
																}
															]
														},
														{
															"nativeSrc": "2846:60:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2846:60:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2868:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2868:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "result",
																						"nativeSrc": "2884:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2884:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2892:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2892:2:18",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2880:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2880:3:18"
																				},
																				"nativeSrc": "2880:15:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2880:15:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2901:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2901:2:18",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2897:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2897:3:18"
																				},
																				"nativeSrc": "2897:7:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2897:7:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2876:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:18"
																		},
																		"nativeSrc": "2876:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2876:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2864:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2864:3:18"
																},
																"nativeSrc": "2864:42:18",
																"nodeType": "YulFunctionCall",
																"src": "2864:42:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2850:10:18",
																	"nodeType": "YulTypedName",
																	"src": "2850:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2981:22:18",
																"nodeType": "YulBlock",
																"src": "2981:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2983:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "2983:16:18"
																			},
																			"nativeSrc": "2983:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2983:18:18"
																		},
																		"nativeSrc": "2983:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2983:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2924:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "2924:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2936:18:18",
																				"nodeType": "YulLiteral",
																				"src": "2936:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2921:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2921:2:18"
																		},
																		"nativeSrc": "2921:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2921:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2960:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "2960:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2972:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2972:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2957:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2957:2:18"
																		},
																		"nativeSrc": "2957:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2957:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2918:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2918:2:18"
																},
																"nativeSrc": "2918:62:18",
																"nodeType": "YulFunctionCall",
																"src": "2918:62:18"
															},
															"nativeSrc": "2915:88:18",
															"nodeType": "YulIf",
															"src": "2915:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3019:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3019:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3023:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "3023:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3012:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3012:6:18"
																},
																"nativeSrc": "3012:22:18",
																"nodeType": "YulFunctionCall",
																"src": "3012:22:18"
															},
															"nativeSrc": "3012:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "3012:22:18"
														},
														{
															"nativeSrc": "3043:15:18",
															"nodeType": "YulAssignment",
															"src": "3043:15:18",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3052:6:18",
																"nodeType": "YulIdentifier",
																"src": "3052:6:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3043:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3043:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3074:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3074:6:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3082:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3082:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3067:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3067:6:18"
																},
																"nativeSrc": "3067:22:18",
																"nodeType": "YulFunctionCall",
																"src": "3067:22:18"
															},
															"nativeSrc": "3067:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "3067:22:18"
														},
														{
															"body": {
																"nativeSrc": "3127:16:18",
																"nodeType": "YulBlock",
																"src": "3127:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3136:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3136:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3139:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3139:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3129:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3129:6:18"
																			},
																			"nativeSrc": "3129:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3129:12:18"
																		},
																		"nativeSrc": "3129:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3129:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3108:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "3108:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3113:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3113:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3104:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3104:3:18"
																		},
																		"nativeSrc": "3104:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3104:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3122:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3122:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3101:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3101:2:18"
																},
																"nativeSrc": "3101:25:18",
																"nodeType": "YulFunctionCall",
																"src": "3101:25:18"
															},
															"nativeSrc": "3098:45:18",
															"nodeType": "YulIf",
															"src": "3098:45:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3169:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3169:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3177:4:18",
																				"nodeType": "YulLiteral",
																				"src": "3177:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3165:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:18"
																		},
																		"nativeSrc": "3165:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3165:17:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "3184:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3184:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3189:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3189:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3152:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3152:12:18"
																},
																"nativeSrc": "3152:44:18",
																"nodeType": "YulFunctionCall",
																"src": "3152:44:18"
															},
															"nativeSrc": "3152:44:18",
															"nodeType": "YulExpressionStatement",
															"src": "3152:44:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3220:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3220:6:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3228:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3228:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3216:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3216:3:18"
																				},
																				"nativeSrc": "3216:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3216:19:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3237:4:18",
																				"nodeType": "YulLiteral",
																				"src": "3237:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3212:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:18"
																		},
																		"nativeSrc": "3212:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3212:30:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3244:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3244:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3205:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:18"
																},
																"nativeSrc": "3205:41:18",
																"nodeType": "YulFunctionCall",
																"src": "3205:41:18"
															},
															"nativeSrc": "3205:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "3205:41:18"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nativeSrc": "2537:715:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2580:3:18",
														"nodeType": "YulTypedName",
														"src": "2580:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2585:6:18",
														"nodeType": "YulTypedName",
														"src": "2585:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2593:3:18",
														"nodeType": "YulTypedName",
														"src": "2593:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2601:5:18",
														"nodeType": "YulTypedName",
														"src": "2601:5:18",
														"type": ""
													}
												],
												"src": "2537:715:18"
											},
											{
												"body": {
													"nativeSrc": "3353:427:18",
													"nodeType": "YulBlock",
													"src": "3353:427:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3399:16:18",
																"nodeType": "YulBlock",
																"src": "3399:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3408:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3408:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3411:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3411:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3401:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3401:6:18"
																			},
																			"nativeSrc": "3401:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3401:12:18"
																		},
																		"nativeSrc": "3401:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3401:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3374:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3374:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3383:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3383:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3370:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3370:3:18"
																		},
																		"nativeSrc": "3370:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3370:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3395:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3395:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3366:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3366:3:18"
																},
																"nativeSrc": "3366:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3366:32:18"
															},
															"nativeSrc": "3363:52:18",
															"nodeType": "YulIf",
															"src": "3363:52:18"
														},
														{
															"nativeSrc": "3424:39:18",
															"nodeType": "YulAssignment",
															"src": "3424:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3453:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3453:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3434:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3434:18:18"
																},
																"nativeSrc": "3434:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3434:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3424:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:18"
																}
															]
														},
														{
															"nativeSrc": "3472:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3472:46:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3503:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3503:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3514:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3514:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3499:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:18"
																		},
																		"nativeSrc": "3499:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3486:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3486:12:18"
																},
																"nativeSrc": "3486:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3486:32:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3476:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3476:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3561:16:18",
																"nodeType": "YulBlock",
																"src": "3561:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3570:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3570:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3573:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3573:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3563:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3563:6:18"
																			},
																			"nativeSrc": "3563:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3563:12:18"
																		},
																		"nativeSrc": "3563:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3563:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3533:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3533:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3541:18:18",
																		"nodeType": "YulLiteral",
																		"src": "3541:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3530:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3530:2:18"
																},
																"nativeSrc": "3530:30:18",
																"nodeType": "YulFunctionCall",
																"src": "3530:30:18"
															},
															"nativeSrc": "3527:50:18",
															"nodeType": "YulIf",
															"src": "3527:50:18"
														},
														{
															"nativeSrc": "3586:32:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3586:32:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3600:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3600:9:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3611:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3611:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3596:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:18"
																},
																"nativeSrc": "3596:22:18",
																"nodeType": "YulFunctionCall",
																"src": "3596:22:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3590:2:18",
																	"nodeType": "YulTypedName",
																	"src": "3590:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3666:16:18",
																"nodeType": "YulBlock",
																"src": "3666:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3675:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3675:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3678:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3678:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3668:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:18"
																			},
																			"nativeSrc": "3668:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3668:12:18"
																		},
																		"nativeSrc": "3668:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3668:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3645:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "3645:2:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3649:4:18",
																						"nodeType": "YulLiteral",
																						"src": "3649:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3641:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3641:3:18"
																				},
																				"nativeSrc": "3641:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3641:13:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3656:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3656:7:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3637:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3637:3:18"
																		},
																		"nativeSrc": "3637:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3637:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3630:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3630:6:18"
																},
																"nativeSrc": "3630:35:18",
																"nodeType": "YulFunctionCall",
																"src": "3630:35:18"
															},
															"nativeSrc": "3627:55:18",
															"nodeType": "YulIf",
															"src": "3627:55:18"
														},
														{
															"nativeSrc": "3691:83:18",
															"nodeType": "YulAssignment",
															"src": "3691:83:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3739:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "3739:2:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3743:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3743:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3735:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3735:3:18"
																		},
																		"nativeSrc": "3735:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3735:11:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3761:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "3761:2:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3748:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "3748:12:18"
																		},
																		"nativeSrc": "3748:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3748:16:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3766:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "3766:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nativeSrc": "3701:33:18",
																	"nodeType": "YulIdentifier",
																	"src": "3701:33:18"
																},
																"nativeSrc": "3701:73:18",
																"nodeType": "YulFunctionCall",
																"src": "3701:73:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3691:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3691:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "3257:523:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3311:9:18",
														"nodeType": "YulTypedName",
														"src": "3311:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3322:7:18",
														"nodeType": "YulTypedName",
														"src": "3322:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3334:6:18",
														"nodeType": "YulTypedName",
														"src": "3334:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3342:6:18",
														"nodeType": "YulTypedName",
														"src": "3342:6:18",
														"type": ""
													}
												],
												"src": "3257:523:18"
											},
											{
												"body": {
													"nativeSrc": "3886:76:18",
													"nodeType": "YulBlock",
													"src": "3886:76:18",
													"statements": [
														{
															"nativeSrc": "3896:26:18",
															"nodeType": "YulAssignment",
															"src": "3896:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3908:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3908:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3919:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3919:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3904:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3904:3:18"
																},
																"nativeSrc": "3904:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3904:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3896:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3896:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3938:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3938:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3949:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3949:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3931:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3931:6:18"
																},
																"nativeSrc": "3931:25:18",
																"nodeType": "YulFunctionCall",
																"src": "3931:25:18"
															},
															"nativeSrc": "3931:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "3931:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3785:177:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3855:9:18",
														"nodeType": "YulTypedName",
														"src": "3855:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3866:6:18",
														"nodeType": "YulTypedName",
														"src": "3866:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3877:4:18",
														"nodeType": "YulTypedName",
														"src": "3877:4:18",
														"type": ""
													}
												],
												"src": "3785:177:18"
											},
											{
												"body": {
													"nativeSrc": "4051:283:18",
													"nodeType": "YulBlock",
													"src": "4051:283:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4100:16:18",
																"nodeType": "YulBlock",
																"src": "4100:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4109:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4109:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4112:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4112:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4102:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4102:6:18"
																			},
																			"nativeSrc": "4102:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4102:12:18"
																		},
																		"nativeSrc": "4102:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4102:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4079:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4079:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4087:4:18",
																						"nodeType": "YulLiteral",
																						"src": "4087:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4075:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4075:3:18"
																				},
																				"nativeSrc": "4075:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4075:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4094:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4094:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4071:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4071:3:18"
																		},
																		"nativeSrc": "4071:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4071:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4064:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4064:6:18"
																},
																"nativeSrc": "4064:35:18",
																"nodeType": "YulFunctionCall",
																"src": "4064:35:18"
															},
															"nativeSrc": "4061:55:18",
															"nodeType": "YulIf",
															"src": "4061:55:18"
														},
														{
															"nativeSrc": "4125:30:18",
															"nodeType": "YulAssignment",
															"src": "4125:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4148:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4148:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4135:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4135:12:18"
																},
																"nativeSrc": "4135:20:18",
																"nodeType": "YulFunctionCall",
																"src": "4135:20:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4125:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4125:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4198:16:18",
																"nodeType": "YulBlock",
																"src": "4198:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4207:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4207:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4210:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4210:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4200:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4200:6:18"
																			},
																			"nativeSrc": "4200:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4200:12:18"
																		},
																		"nativeSrc": "4200:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4200:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4170:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4170:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4178:18:18",
																		"nodeType": "YulLiteral",
																		"src": "4178:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4167:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4167:2:18"
																},
																"nativeSrc": "4167:30:18",
																"nodeType": "YulFunctionCall",
																"src": "4167:30:18"
															},
															"nativeSrc": "4164:50:18",
															"nodeType": "YulIf",
															"src": "4164:50:18"
														},
														{
															"nativeSrc": "4223:29:18",
															"nodeType": "YulAssignment",
															"src": "4223:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4239:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4239:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4247:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4247:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4235:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4235:3:18"
																},
																"nativeSrc": "4235:17:18",
																"nodeType": "YulFunctionCall",
																"src": "4235:17:18"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "4223:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "4223:8:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4312:16:18",
																"nodeType": "YulBlock",
																"src": "4312:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4321:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4321:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4324:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4324:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4314:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:18"
																			},
																			"nativeSrc": "4314:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4314:12:18"
																		},
																		"nativeSrc": "4314:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4314:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4275:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4275:6:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4287:1:18",
																								"nodeType": "YulLiteral",
																								"src": "4287:1:18",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "4290:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "4290:6:18"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4283:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4283:3:18"
																						},
																						"nativeSrc": "4283:14:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4283:14:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4271:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4271:3:18"
																				},
																				"nativeSrc": "4271:27:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4271:27:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4300:4:18",
																				"nodeType": "YulLiteral",
																				"src": "4300:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4267:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4267:3:18"
																		},
																		"nativeSrc": "4267:38:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4267:38:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4307:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4307:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4264:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4264:2:18"
																},
																"nativeSrc": "4264:47:18",
																"nodeType": "YulFunctionCall",
																"src": "4264:47:18"
															},
															"nativeSrc": "4261:67:18",
															"nodeType": "YulIf",
															"src": "4261:67:18"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nativeSrc": "3967:367:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4014:6:18",
														"nodeType": "YulTypedName",
														"src": "4014:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4022:3:18",
														"nodeType": "YulTypedName",
														"src": "4022:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "4030:8:18",
														"nodeType": "YulTypedName",
														"src": "4030:8:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4040:6:18",
														"nodeType": "YulTypedName",
														"src": "4040:6:18",
														"type": ""
													}
												],
												"src": "3967:367:18"
											},
											{
												"body": {
													"nativeSrc": "4496:611:18",
													"nodeType": "YulBlock",
													"src": "4496:611:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4542:16:18",
																"nodeType": "YulBlock",
																"src": "4542:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4551:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4551:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4554:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4554:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4544:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4544:6:18"
																			},
																			"nativeSrc": "4544:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4544:12:18"
																		},
																		"nativeSrc": "4544:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4544:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4517:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4517:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4526:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4526:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4513:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4513:3:18"
																		},
																		"nativeSrc": "4513:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4513:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4538:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4538:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4509:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4509:3:18"
																},
																"nativeSrc": "4509:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4509:32:18"
															},
															"nativeSrc": "4506:52:18",
															"nodeType": "YulIf",
															"src": "4506:52:18"
														},
														{
															"nativeSrc": "4567:37:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4567:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4594:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4594:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4581:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4581:12:18"
																},
																"nativeSrc": "4581:23:18",
																"nodeType": "YulFunctionCall",
																"src": "4581:23:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4571:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4571:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4647:16:18",
																"nodeType": "YulBlock",
																"src": "4647:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4656:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4659:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4659:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4649:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4649:6:18"
																			},
																			"nativeSrc": "4649:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4649:12:18"
																		},
																		"nativeSrc": "4649:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4649:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4619:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4619:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4627:18:18",
																		"nodeType": "YulLiteral",
																		"src": "4627:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4616:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4616:2:18"
																},
																"nativeSrc": "4616:30:18",
																"nodeType": "YulFunctionCall",
																"src": "4616:30:18"
															},
															"nativeSrc": "4613:50:18",
															"nodeType": "YulIf",
															"src": "4613:50:18"
														},
														{
															"nativeSrc": "4672:96:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4672:96:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4740:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4740:9:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4751:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4751:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4736:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4736:3:18"
																		},
																		"nativeSrc": "4736:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4736:22:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4760:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "4760:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "4698:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "4698:37:18"
																},
																"nativeSrc": "4698:70:18",
																"nodeType": "YulFunctionCall",
																"src": "4698:70:18"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "4676:8:18",
																	"nodeType": "YulTypedName",
																	"src": "4676:8:18",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "4686:8:18",
																	"nodeType": "YulTypedName",
																	"src": "4686:8:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4777:18:18",
															"nodeType": "YulAssignment",
															"src": "4777:18:18",
															"value": {
																"name": "value0_1",
																"nativeSrc": "4787:8:18",
																"nodeType": "YulIdentifier",
																"src": "4787:8:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4777:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4777:6:18"
																}
															]
														},
														{
															"nativeSrc": "4804:18:18",
															"nodeType": "YulAssignment",
															"src": "4804:18:18",
															"value": {
																"name": "value1_1",
																"nativeSrc": "4814:8:18",
																"nodeType": "YulIdentifier",
																"src": "4814:8:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4804:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4804:6:18"
																}
															]
														},
														{
															"nativeSrc": "4831:48:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4831:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4864:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4864:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4875:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4875:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4860:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4860:3:18"
																		},
																		"nativeSrc": "4860:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4860:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4847:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4847:12:18"
																},
																"nativeSrc": "4847:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4847:32:18"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "4835:8:18",
																	"nodeType": "YulTypedName",
																	"src": "4835:8:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4924:16:18",
																"nodeType": "YulBlock",
																"src": "4924:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4933:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4933:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4936:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4936:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4926:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4926:6:18"
																			},
																			"nativeSrc": "4926:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4926:12:18"
																		},
																		"nativeSrc": "4926:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4926:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "4894:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "4894:8:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4904:18:18",
																		"nodeType": "YulLiteral",
																		"src": "4904:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4891:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4891:2:18"
																},
																"nativeSrc": "4891:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4891:32:18"
															},
															"nativeSrc": "4888:52:18",
															"nodeType": "YulIf",
															"src": "4888:52:18"
														},
														{
															"nativeSrc": "4949:98:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4949:98:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5017:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5017:9:18"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "5028:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "5028:8:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5013:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5013:3:18"
																		},
																		"nativeSrc": "5013:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5013:24:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5039:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "5039:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "4975:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "4975:37:18"
																},
																"nativeSrc": "4975:72:18",
																"nodeType": "YulFunctionCall",
																"src": "4975:72:18"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "4953:8:18",
																	"nodeType": "YulTypedName",
																	"src": "4953:8:18",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "4963:8:18",
																	"nodeType": "YulTypedName",
																	"src": "4963:8:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5056:18:18",
															"nodeType": "YulAssignment",
															"src": "5056:18:18",
															"value": {
																"name": "value2_1",
																"nativeSrc": "5066:8:18",
																"nodeType": "YulIdentifier",
																"src": "5066:8:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5056:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5056:6:18"
																}
															]
														},
														{
															"nativeSrc": "5083:18:18",
															"nodeType": "YulAssignment",
															"src": "5083:18:18",
															"value": {
																"name": "value3_1",
																"nativeSrc": "5093:8:18",
																"nodeType": "YulIdentifier",
																"src": "5093:8:18"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5083:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5083:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "4339:768:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4438:9:18",
														"nodeType": "YulTypedName",
														"src": "4438:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4449:7:18",
														"nodeType": "YulTypedName",
														"src": "4449:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4461:6:18",
														"nodeType": "YulTypedName",
														"src": "4461:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4469:6:18",
														"nodeType": "YulTypedName",
														"src": "4469:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4477:6:18",
														"nodeType": "YulTypedName",
														"src": "4477:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4485:6:18",
														"nodeType": "YulTypedName",
														"src": "4485:6:18",
														"type": ""
													}
												],
												"src": "4339:768:18"
											},
											{
												"body": {
													"nativeSrc": "5213:102:18",
													"nodeType": "YulBlock",
													"src": "5213:102:18",
													"statements": [
														{
															"nativeSrc": "5223:26:18",
															"nodeType": "YulAssignment",
															"src": "5223:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5235:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5235:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5246:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5246:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5231:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5231:3:18"
																},
																"nativeSrc": "5231:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5231:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5223:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5223:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5265:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5265:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5280:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5280:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5296:3:18",
																								"nodeType": "YulLiteral",
																								"src": "5296:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5301:1:18",
																								"nodeType": "YulLiteral",
																								"src": "5301:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5292:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "5292:3:18"
																						},
																						"nativeSrc": "5292:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "5292:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5305:1:18",
																						"nodeType": "YulLiteral",
																						"src": "5305:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5288:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5288:3:18"
																				},
																				"nativeSrc": "5288:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5288:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5276:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5276:3:18"
																		},
																		"nativeSrc": "5276:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5276:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5258:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5258:6:18"
																},
																"nativeSrc": "5258:51:18",
																"nodeType": "YulFunctionCall",
																"src": "5258:51:18"
															},
															"nativeSrc": "5258:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "5258:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5112:203:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5182:9:18",
														"nodeType": "YulTypedName",
														"src": "5182:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5193:6:18",
														"nodeType": "YulTypedName",
														"src": "5193:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5204:4:18",
														"nodeType": "YulTypedName",
														"src": "5204:4:18",
														"type": ""
													}
												],
												"src": "5112:203:18"
											},
											{
												"body": {
													"nativeSrc": "5373:168:18",
													"nodeType": "YulBlock",
													"src": "5373:168:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5422:16:18",
																"nodeType": "YulBlock",
																"src": "5422:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5431:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5431:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5434:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5434:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5424:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5424:6:18"
																			},
																			"nativeSrc": "5424:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5424:12:18"
																		},
																		"nativeSrc": "5424:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5424:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5401:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5401:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5409:4:18",
																						"nodeType": "YulLiteral",
																						"src": "5409:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5397:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5397:3:18"
																				},
																				"nativeSrc": "5397:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5397:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5416:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5416:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5393:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5393:3:18"
																		},
																		"nativeSrc": "5393:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5393:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5386:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5386:6:18"
																},
																"nativeSrc": "5386:35:18",
																"nodeType": "YulFunctionCall",
																"src": "5386:35:18"
															},
															"nativeSrc": "5383:55:18",
															"nodeType": "YulIf",
															"src": "5383:55:18"
														},
														{
															"nativeSrc": "5447:88:18",
															"nodeType": "YulAssignment",
															"src": "5447:88:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5494:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5494:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5502:4:18",
																				"nodeType": "YulLiteral",
																				"src": "5502:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5490:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5490:3:18"
																		},
																		"nativeSrc": "5490:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5490:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5522:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5522:6:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5509:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "5509:12:18"
																		},
																		"nativeSrc": "5509:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:20:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5531:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5531:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nativeSrc": "5456:33:18",
																	"nodeType": "YulIdentifier",
																	"src": "5456:33:18"
																},
																"nativeSrc": "5456:79:18",
																"nodeType": "YulFunctionCall",
																"src": "5456:79:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5447:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "5447:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "5320:221:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5347:6:18",
														"nodeType": "YulTypedName",
														"src": "5347:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5355:3:18",
														"nodeType": "YulTypedName",
														"src": "5355:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5363:5:18",
														"nodeType": "YulTypedName",
														"src": "5363:5:18",
														"type": ""
													}
												],
												"src": "5320:221:18"
											},
											{
												"body": {
													"nativeSrc": "5670:528:18",
													"nodeType": "YulBlock",
													"src": "5670:528:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5716:16:18",
																"nodeType": "YulBlock",
																"src": "5716:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5725:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5725:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5728:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5728:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5718:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5718:6:18"
																			},
																			"nativeSrc": "5718:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5718:12:18"
																		},
																		"nativeSrc": "5718:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5718:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5691:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5691:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5700:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5700:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5687:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5687:3:18"
																		},
																		"nativeSrc": "5687:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5687:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5712:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5712:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5683:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5683:3:18"
																},
																"nativeSrc": "5683:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5683:32:18"
															},
															"nativeSrc": "5680:52:18",
															"nodeType": "YulIf",
															"src": "5680:52:18"
														},
														{
															"nativeSrc": "5741:37:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5741:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5768:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5768:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5755:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5755:12:18"
																},
																"nativeSrc": "5755:23:18",
																"nodeType": "YulFunctionCall",
																"src": "5755:23:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5745:6:18",
																	"nodeType": "YulTypedName",
																	"src": "5745:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5821:16:18",
																"nodeType": "YulBlock",
																"src": "5821:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5830:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5830:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5833:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5823:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5823:6:18"
																			},
																			"nativeSrc": "5823:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5823:12:18"
																		},
																		"nativeSrc": "5823:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5823:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5793:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5793:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5801:18:18",
																		"nodeType": "YulLiteral",
																		"src": "5801:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5790:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5790:2:18"
																},
																"nativeSrc": "5790:30:18",
																"nodeType": "YulFunctionCall",
																"src": "5790:30:18"
															},
															"nativeSrc": "5787:50:18",
															"nodeType": "YulIf",
															"src": "5787:50:18"
														},
														{
															"nativeSrc": "5846:60:18",
															"nodeType": "YulAssignment",
															"src": "5846:60:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5878:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5878:9:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5889:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5889:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5874:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5874:3:18"
																		},
																		"nativeSrc": "5874:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5874:22:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5898:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "5898:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "5856:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "5856:17:18"
																},
																"nativeSrc": "5856:50:18",
																"nodeType": "YulFunctionCall",
																"src": "5856:50:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5846:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5846:6:18"
																}
															]
														},
														{
															"nativeSrc": "5915:48:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5915:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5948:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5948:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5959:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5959:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5944:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5944:3:18"
																		},
																		"nativeSrc": "5944:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5931:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5931:12:18"
																},
																"nativeSrc": "5931:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5931:32:18"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "5919:8:18",
																	"nodeType": "YulTypedName",
																	"src": "5919:8:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6008:16:18",
																"nodeType": "YulBlock",
																"src": "6008:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6017:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6017:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6020:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6020:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6010:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6010:6:18"
																			},
																			"nativeSrc": "6010:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6010:12:18"
																		},
																		"nativeSrc": "6010:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6010:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "5978:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "5978:8:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5988:18:18",
																		"nodeType": "YulLiteral",
																		"src": "5988:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5975:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5975:2:18"
																},
																"nativeSrc": "5975:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5975:32:18"
															},
															"nativeSrc": "5972:52:18",
															"nodeType": "YulIf",
															"src": "5972:52:18"
														},
														{
															"nativeSrc": "6033:62:18",
															"nodeType": "YulAssignment",
															"src": "6033:62:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6065:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6065:9:18"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "6076:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "6076:8:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6061:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6061:3:18"
																		},
																		"nativeSrc": "6061:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6061:24:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6087:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "6087:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "6043:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "6043:17:18"
																},
																"nativeSrc": "6043:52:18",
																"nodeType": "YulFunctionCall",
																"src": "6043:52:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6033:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6033:6:18"
																}
															]
														},
														{
															"nativeSrc": "6104:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6104:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "6117:1:18",
																"nodeType": "YulLiteral",
																"src": "6117:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6108:5:18",
																	"nodeType": "YulTypedName",
																	"src": "6108:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6127:41:18",
															"nodeType": "YulAssignment",
															"src": "6127:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6153:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6153:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6164:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6164:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6149:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6149:3:18"
																		},
																		"nativeSrc": "6149:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6149:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6136:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "6136:12:18"
																},
																"nativeSrc": "6136:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6136:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6127:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "6127:5:18"
																}
															]
														},
														{
															"nativeSrc": "6177:15:18",
															"nodeType": "YulAssignment",
															"src": "6177:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "6187:5:18",
																"nodeType": "YulIdentifier",
																"src": "6187:5:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6177:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nativeSrc": "5546:652:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5620:9:18",
														"nodeType": "YulTypedName",
														"src": "5620:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5631:7:18",
														"nodeType": "YulTypedName",
														"src": "5631:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5643:6:18",
														"nodeType": "YulTypedName",
														"src": "5643:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5651:6:18",
														"nodeType": "YulTypedName",
														"src": "5651:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5659:6:18",
														"nodeType": "YulTypedName",
														"src": "5659:6:18",
														"type": ""
													}
												],
												"src": "5546:652:18"
											},
											{
												"body": {
													"nativeSrc": "6290:173:18",
													"nodeType": "YulBlock",
													"src": "6290:173:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6336:16:18",
																"nodeType": "YulBlock",
																"src": "6336:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6345:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6345:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6348:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6348:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6338:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6338:6:18"
																			},
																			"nativeSrc": "6338:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6338:12:18"
																		},
																		"nativeSrc": "6338:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6338:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6311:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6311:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6320:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6320:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6307:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:18"
																		},
																		"nativeSrc": "6307:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6307:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6332:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6332:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6303:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6303:3:18"
																},
																"nativeSrc": "6303:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6303:32:18"
															},
															"nativeSrc": "6300:52:18",
															"nodeType": "YulIf",
															"src": "6300:52:18"
														},
														{
															"nativeSrc": "6361:39:18",
															"nodeType": "YulAssignment",
															"src": "6361:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6390:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6390:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6371:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "6371:18:18"
																},
																"nativeSrc": "6371:29:18",
																"nodeType": "YulFunctionCall",
																"src": "6371:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6361:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:18"
																}
															]
														},
														{
															"nativeSrc": "6409:48:18",
															"nodeType": "YulAssignment",
															"src": "6409:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6442:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6442:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6453:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6453:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6438:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6438:3:18"
																		},
																		"nativeSrc": "6438:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6438:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6419:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "6419:18:18"
																},
																"nativeSrc": "6419:38:18",
																"nodeType": "YulFunctionCall",
																"src": "6419:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6409:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6409:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6203:260:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6248:9:18",
														"nodeType": "YulTypedName",
														"src": "6248:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6259:7:18",
														"nodeType": "YulTypedName",
														"src": "6259:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6271:6:18",
														"nodeType": "YulTypedName",
														"src": "6271:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6279:6:18",
														"nodeType": "YulTypedName",
														"src": "6279:6:18",
														"type": ""
													}
												],
												"src": "6203:260:18"
											},
											{
												"body": {
													"nativeSrc": "6572:316:18",
													"nodeType": "YulBlock",
													"src": "6572:316:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6618:16:18",
																"nodeType": "YulBlock",
																"src": "6618:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6627:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6627:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6630:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6630:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6620:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6620:6:18"
																			},
																			"nativeSrc": "6620:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6620:12:18"
																		},
																		"nativeSrc": "6620:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6620:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6593:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6593:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6602:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6602:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6589:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6589:3:18"
																		},
																		"nativeSrc": "6589:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6589:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6614:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6614:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6585:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:18"
																},
																"nativeSrc": "6585:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6585:32:18"
															},
															"nativeSrc": "6582:52:18",
															"nodeType": "YulIf",
															"src": "6582:52:18"
														},
														{
															"nativeSrc": "6643:39:18",
															"nodeType": "YulAssignment",
															"src": "6643:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6672:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6672:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6653:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "6653:18:18"
																},
																"nativeSrc": "6653:29:18",
																"nodeType": "YulFunctionCall",
																"src": "6653:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6643:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:18"
																}
															]
														},
														{
															"nativeSrc": "6691:14:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6691:14:18",
															"value": {
																"kind": "number",
																"nativeSrc": "6704:1:18",
																"nodeType": "YulLiteral",
																"src": "6704:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6695:5:18",
																	"nodeType": "YulTypedName",
																	"src": "6695:5:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6714:41:18",
															"nodeType": "YulAssignment",
															"src": "6714:41:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6740:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6740:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6751:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6751:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6736:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6736:3:18"
																		},
																		"nativeSrc": "6736:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6723:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "6723:12:18"
																},
																"nativeSrc": "6723:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6723:32:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6714:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "6714:5:18"
																}
															]
														},
														{
															"nativeSrc": "6764:15:18",
															"nodeType": "YulAssignment",
															"src": "6764:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "6774:5:18",
																"nodeType": "YulIdentifier",
																"src": "6774:5:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6764:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6764:6:18"
																}
															]
														},
														{
															"nativeSrc": "6788:16:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6788:16:18",
															"value": {
																"kind": "number",
																"nativeSrc": "6803:1:18",
																"nodeType": "YulLiteral",
																"src": "6803:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6792:7:18",
																	"nodeType": "YulTypedName",
																	"src": "6792:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6813:43:18",
															"nodeType": "YulAssignment",
															"src": "6813:43:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6841:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6841:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6852:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6852:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6837:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6837:3:18"
																		},
																		"nativeSrc": "6837:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6837:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6824:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "6824:12:18"
																},
																"nativeSrc": "6824:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6824:32:18"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "6813:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "6813:7:18"
																}
															]
														},
														{
															"nativeSrc": "6865:17:18",
															"nodeType": "YulAssignment",
															"src": "6865:17:18",
															"value": {
																"name": "value_1",
																"nativeSrc": "6875:7:18",
																"nodeType": "YulIdentifier",
																"src": "6875:7:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6865:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6865:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "6468:420:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6522:9:18",
														"nodeType": "YulTypedName",
														"src": "6522:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6533:7:18",
														"nodeType": "YulTypedName",
														"src": "6533:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6545:6:18",
														"nodeType": "YulTypedName",
														"src": "6545:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6553:6:18",
														"nodeType": "YulTypedName",
														"src": "6553:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6561:6:18",
														"nodeType": "YulTypedName",
														"src": "6561:6:18",
														"type": ""
													}
												],
												"src": "6468:420:18"
											},
											{
												"body": {
													"nativeSrc": "6948:325:18",
													"nodeType": "YulBlock",
													"src": "6948:325:18",
													"statements": [
														{
															"nativeSrc": "6958:22:18",
															"nodeType": "YulAssignment",
															"src": "6958:22:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6972:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6972:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6975:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6975:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6968:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6968:3:18"
																},
																"nativeSrc": "6968:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6968:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6958:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6958:6:18"
																}
															]
														},
														{
															"nativeSrc": "6989:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6989:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7019:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7019:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7025:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7025:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7015:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7015:3:18"
																},
																"nativeSrc": "7015:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7015:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6993:18:18",
																	"nodeType": "YulTypedName",
																	"src": "6993:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7066:31:18",
																"nodeType": "YulBlock",
																"src": "7066:31:18",
																"statements": [
																	{
																		"nativeSrc": "7068:27:18",
																		"nodeType": "YulAssignment",
																		"src": "7068:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7082:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7082:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7090:4:18",
																					"nodeType": "YulLiteral",
																					"src": "7090:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7078:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7078:3:18"
																			},
																			"nativeSrc": "7078:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7078:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7068:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7068:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7046:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "7046:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7039:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7039:6:18"
																},
																"nativeSrc": "7039:26:18",
																"nodeType": "YulFunctionCall",
																"src": "7039:26:18"
															},
															"nativeSrc": "7036:61:18",
															"nodeType": "YulIf",
															"src": "7036:61:18"
														},
														{
															"body": {
																"nativeSrc": "7156:111:18",
																"nodeType": "YulBlock",
																"src": "7156:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7177:1:18",
																					"nodeType": "YulLiteral",
																					"src": "7177:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7184:3:18",
																							"nodeType": "YulLiteral",
																							"src": "7184:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7189:10:18",
																							"nodeType": "YulLiteral",
																							"src": "7189:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7180:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "7180:3:18"
																					},
																					"nativeSrc": "7180:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "7180:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7170:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7170:6:18"
																			},
																			"nativeSrc": "7170:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7170:31:18"
																		},
																		"nativeSrc": "7170:31:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7170:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7221:1:18",
																					"nodeType": "YulLiteral",
																					"src": "7221:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7224:4:18",
																					"nodeType": "YulLiteral",
																					"src": "7224:4:18",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7214:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7214:6:18"
																			},
																			"nativeSrc": "7214:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7214:15:18"
																		},
																		"nativeSrc": "7214:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7214:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7249:1:18",
																					"nodeType": "YulLiteral",
																					"src": "7249:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7252:4:18",
																					"nodeType": "YulLiteral",
																					"src": "7252:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7242:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7242:6:18"
																			},
																			"nativeSrc": "7242:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7242:15:18"
																		},
																		"nativeSrc": "7242:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7242:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7112:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "7112:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7135:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7135:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7143:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7143:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7132:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "7132:2:18"
																		},
																		"nativeSrc": "7132:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7132:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7109:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7109:2:18"
																},
																"nativeSrc": "7109:38:18",
																"nodeType": "YulFunctionCall",
																"src": "7109:38:18"
															},
															"nativeSrc": "7106:161:18",
															"nodeType": "YulIf",
															"src": "7106:161:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6893:380:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6928:4:18",
														"nodeType": "YulTypedName",
														"src": "6928:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6937:6:18",
														"nodeType": "YulTypedName",
														"src": "6937:6:18",
														"type": ""
													}
												],
												"src": "6893:380:18"
											},
											{
												"body": {
													"nativeSrc": "7452:162:18",
													"nodeType": "YulBlock",
													"src": "7452:162:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7469:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7469:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7480:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7480:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7462:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7462:6:18"
																},
																"nativeSrc": "7462:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7462:21:18"
															},
															"nativeSrc": "7462:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "7462:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7503:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7503:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7514:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7514:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7499:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7499:3:18"
																		},
																		"nativeSrc": "7499:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7499:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7519:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7519:2:18",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7492:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7492:6:18"
																},
																"nativeSrc": "7492:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7492:30:18"
															},
															"nativeSrc": "7492:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7492:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7542:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7542:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7553:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7553:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7538:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7538:3:18"
																		},
																		"nativeSrc": "7538:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7538:18:18"
																	},
																	{
																		"hexValue": "4e756c6c2041646472657373",
																		"kind": "string",
																		"nativeSrc": "7558:14:18",
																		"nodeType": "YulLiteral",
																		"src": "7558:14:18",
																		"type": "",
																		"value": "Null Address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7531:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7531:6:18"
																},
																"nativeSrc": "7531:42:18",
																"nodeType": "YulFunctionCall",
																"src": "7531:42:18"
															},
															"nativeSrc": "7531:42:18",
															"nodeType": "YulExpressionStatement",
															"src": "7531:42:18"
														},
														{
															"nativeSrc": "7582:26:18",
															"nodeType": "YulAssignment",
															"src": "7582:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7594:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7594:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7605:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7605:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7590:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7590:3:18"
																},
																"nativeSrc": "7590:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7590:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7582:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7582:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7278:336:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7429:9:18",
														"nodeType": "YulTypedName",
														"src": "7429:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7443:4:18",
														"nodeType": "YulTypedName",
														"src": "7443:4:18",
														"type": ""
													}
												],
												"src": "7278:336:18"
											},
											{
												"body": {
													"nativeSrc": "7793:228:18",
													"nodeType": "YulBlock",
													"src": "7793:228:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7810:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7810:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7821:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7821:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7803:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7803:6:18"
																},
																"nativeSrc": "7803:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7803:21:18"
															},
															"nativeSrc": "7803:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "7803:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7844:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7844:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7855:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7855:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7840:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7840:3:18"
																		},
																		"nativeSrc": "7840:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7840:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7860:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7860:2:18",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7833:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7833:6:18"
																},
																"nativeSrc": "7833:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7833:30:18"
															},
															"nativeSrc": "7833:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7833:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7883:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7883:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7894:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7894:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7879:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7879:3:18"
																		},
																		"nativeSrc": "7879:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7879:18:18"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b",
																		"kind": "string",
																		"nativeSrc": "7899:34:18",
																		"nodeType": "YulLiteral",
																		"src": "7899:34:18",
																		"type": "",
																		"value": "Transfer failed: Sender is black"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7872:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7872:6:18"
																},
																"nativeSrc": "7872:62:18",
																"nodeType": "YulFunctionCall",
																"src": "7872:62:18"
															},
															"nativeSrc": "7872:62:18",
															"nodeType": "YulExpressionStatement",
															"src": "7872:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7954:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7954:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7965:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7965:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7950:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7950:3:18"
																		},
																		"nativeSrc": "7950:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7950:18:18"
																	},
																	{
																		"hexValue": "6c6973746564",
																		"kind": "string",
																		"nativeSrc": "7970:8:18",
																		"nodeType": "YulLiteral",
																		"src": "7970:8:18",
																		"type": "",
																		"value": "listed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7943:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7943:6:18"
																},
																"nativeSrc": "7943:36:18",
																"nodeType": "YulFunctionCall",
																"src": "7943:36:18"
															},
															"nativeSrc": "7943:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "7943:36:18"
														},
														{
															"nativeSrc": "7988:27:18",
															"nodeType": "YulAssignment",
															"src": "7988:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8000:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8000:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8011:3:18",
																		"nodeType": "YulLiteral",
																		"src": "8011:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7996:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7996:3:18"
																},
																"nativeSrc": "7996:19:18",
																"nodeType": "YulFunctionCall",
																"src": "7996:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7988:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7988:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7619:402:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7770:9:18",
														"nodeType": "YulTypedName",
														"src": "7770:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7784:4:18",
														"nodeType": "YulTypedName",
														"src": "7784:4:18",
														"type": ""
													}
												],
												"src": "7619:402:18"
											},
											{
												"body": {
													"nativeSrc": "8200:231:18",
													"nodeType": "YulBlock",
													"src": "8200:231:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8217:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8217:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8228:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8228:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8210:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8210:6:18"
																},
																"nativeSrc": "8210:21:18",
																"nodeType": "YulFunctionCall",
																"src": "8210:21:18"
															},
															"nativeSrc": "8210:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "8210:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8251:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8251:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8262:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8262:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8247:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8247:3:18"
																		},
																		"nativeSrc": "8247:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8247:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8267:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8267:2:18",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8240:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:18"
																},
																"nativeSrc": "8240:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8240:30:18"
															},
															"nativeSrc": "8240:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "8240:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8290:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8290:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8301:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8301:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8286:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8286:3:18"
																		},
																		"nativeSrc": "8286:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8286:18:18"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c",
																		"kind": "string",
																		"nativeSrc": "8306:34:18",
																		"nodeType": "YulLiteral",
																		"src": "8306:34:18",
																		"type": "",
																		"value": "Transfer failed: Recipient is bl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8279:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8279:6:18"
																},
																"nativeSrc": "8279:62:18",
																"nodeType": "YulFunctionCall",
																"src": "8279:62:18"
															},
															"nativeSrc": "8279:62:18",
															"nodeType": "YulExpressionStatement",
															"src": "8279:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8361:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8361:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8372:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8372:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8357:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8357:3:18"
																		},
																		"nativeSrc": "8357:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8357:18:18"
																	},
																	{
																		"hexValue": "61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "8377:11:18",
																		"nodeType": "YulLiteral",
																		"src": "8377:11:18",
																		"type": "",
																		"value": "acklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8350:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8350:6:18"
																},
																"nativeSrc": "8350:39:18",
																"nodeType": "YulFunctionCall",
																"src": "8350:39:18"
															},
															"nativeSrc": "8350:39:18",
															"nodeType": "YulExpressionStatement",
															"src": "8350:39:18"
														},
														{
															"nativeSrc": "8398:27:18",
															"nodeType": "YulAssignment",
															"src": "8398:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8410:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8410:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8421:3:18",
																		"nodeType": "YulLiteral",
																		"src": "8421:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8406:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8406:3:18"
																},
																"nativeSrc": "8406:19:18",
																"nodeType": "YulFunctionCall",
																"src": "8406:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8398:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8398:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8026:405:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8177:9:18",
														"nodeType": "YulTypedName",
														"src": "8177:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8191:4:18",
														"nodeType": "YulTypedName",
														"src": "8191:4:18",
														"type": ""
													}
												],
												"src": "8026:405:18"
											},
											{
												"body": {
													"nativeSrc": "8610:174:18",
													"nodeType": "YulBlock",
													"src": "8610:174:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8627:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8627:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8638:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8638:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8620:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8620:6:18"
																},
																"nativeSrc": "8620:21:18",
																"nodeType": "YulFunctionCall",
																"src": "8620:21:18"
															},
															"nativeSrc": "8620:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "8620:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8661:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8661:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8672:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8672:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8657:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8657:3:18"
																		},
																		"nativeSrc": "8657:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8657:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8677:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8677:2:18",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8650:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8650:6:18"
																},
																"nativeSrc": "8650:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8650:30:18"
															},
															"nativeSrc": "8650:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "8650:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8700:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8700:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8711:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8711:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8696:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8696:3:18"
																		},
																		"nativeSrc": "8696:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8696:18:18"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c646e2774206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "8716:26:18",
																		"nodeType": "YulLiteral",
																		"src": "8716:26:18",
																		"type": "",
																		"value": "Amount shouldn't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8689:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8689:6:18"
																},
																"nativeSrc": "8689:54:18",
																"nodeType": "YulFunctionCall",
																"src": "8689:54:18"
															},
															"nativeSrc": "8689:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "8689:54:18"
														},
														{
															"nativeSrc": "8752:26:18",
															"nodeType": "YulAssignment",
															"src": "8752:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8764:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8764:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8775:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8775:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8760:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8760:3:18"
																},
																"nativeSrc": "8760:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8760:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8752:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8752:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8436:348:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8587:9:18",
														"nodeType": "YulTypedName",
														"src": "8587:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8601:4:18",
														"nodeType": "YulTypedName",
														"src": "8601:4:18",
														"type": ""
													}
												],
												"src": "8436:348:18"
											},
											{
												"body": {
													"nativeSrc": "8963:224:18",
													"nodeType": "YulBlock",
													"src": "8963:224:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8980:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8980:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8991:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8991:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8973:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8973:6:18"
																},
																"nativeSrc": "8973:21:18",
																"nodeType": "YulFunctionCall",
																"src": "8973:21:18"
															},
															"nativeSrc": "8973:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "8973:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9014:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9014:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9025:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9025:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9010:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9010:3:18"
																		},
																		"nativeSrc": "9010:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9010:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9030:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9030:2:18",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9003:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9003:6:18"
																},
																"nativeSrc": "9003:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9003:30:18"
															},
															"nativeSrc": "9003:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "9003:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9053:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9064:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9064:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9049:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:18"
																		},
																		"nativeSrc": "9049:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9049:18:18"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b",
																		"kind": "string",
																		"nativeSrc": "9069:34:18",
																		"nodeType": "YulLiteral",
																		"src": "9069:34:18",
																		"type": "",
																		"value": "Transfer failed: Tokens are lock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9042:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9042:6:18"
																},
																"nativeSrc": "9042:62:18",
																"nodeType": "YulFunctionCall",
																"src": "9042:62:18"
															},
															"nativeSrc": "9042:62:18",
															"nodeType": "YulExpressionStatement",
															"src": "9042:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9124:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9124:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9135:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9135:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9120:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9120:3:18"
																		},
																		"nativeSrc": "9120:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9120:18:18"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "9140:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9140:4:18",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9113:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9113:6:18"
																},
																"nativeSrc": "9113:32:18",
																"nodeType": "YulFunctionCall",
																"src": "9113:32:18"
															},
															"nativeSrc": "9113:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "9113:32:18"
														},
														{
															"nativeSrc": "9154:27:18",
															"nodeType": "YulAssignment",
															"src": "9154:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9166:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9166:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9177:3:18",
																		"nodeType": "YulLiteral",
																		"src": "9177:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9162:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9162:3:18"
																},
																"nativeSrc": "9162:19:18",
																"nodeType": "YulFunctionCall",
																"src": "9162:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9154:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9154:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8789:398:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8940:9:18",
														"nodeType": "YulTypedName",
														"src": "8940:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8954:4:18",
														"nodeType": "YulTypedName",
														"src": "8954:4:18",
														"type": ""
													}
												],
												"src": "8789:398:18"
											},
											{
												"body": {
													"nativeSrc": "9366:175:18",
													"nodeType": "YulBlock",
													"src": "9366:175:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9383:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9383:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9394:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9394:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9376:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9376:6:18"
																},
																"nativeSrc": "9376:21:18",
																"nodeType": "YulFunctionCall",
																"src": "9376:21:18"
															},
															"nativeSrc": "9376:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "9376:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9417:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9417:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9428:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9428:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9413:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9413:3:18"
																		},
																		"nativeSrc": "9413:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9413:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9433:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9433:2:18",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9406:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9406:6:18"
																},
																"nativeSrc": "9406:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9406:30:18"
															},
															"nativeSrc": "9406:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "9406:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9456:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9456:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9467:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9467:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9452:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9452:3:18"
																		},
																		"nativeSrc": "9452:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9452:18:18"
																	},
																	{
																		"hexValue": "41646472657373206973206e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "9472:27:18",
																		"nodeType": "YulLiteral",
																		"src": "9472:27:18",
																		"type": "",
																		"value": "Address is not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9445:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9445:6:18"
																},
																"nativeSrc": "9445:55:18",
																"nodeType": "YulFunctionCall",
																"src": "9445:55:18"
															},
															"nativeSrc": "9445:55:18",
															"nodeType": "YulExpressionStatement",
															"src": "9445:55:18"
														},
														{
															"nativeSrc": "9509:26:18",
															"nodeType": "YulAssignment",
															"src": "9509:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9521:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9521:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9532:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9532:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9517:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9517:3:18"
																},
																"nativeSrc": "9517:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9517:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9509:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9509:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9192:349:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9343:9:18",
														"nodeType": "YulTypedName",
														"src": "9343:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9357:4:18",
														"nodeType": "YulTypedName",
														"src": "9357:4:18",
														"type": ""
													}
												],
												"src": "9192:349:18"
											},
											{
												"body": {
													"nativeSrc": "9720:229:18",
													"nodeType": "YulBlock",
													"src": "9720:229:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9737:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9737:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9748:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9748:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9730:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9730:6:18"
																},
																"nativeSrc": "9730:21:18",
																"nodeType": "YulFunctionCall",
																"src": "9730:21:18"
															},
															"nativeSrc": "9730:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "9730:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9771:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9771:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9782:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9782:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9767:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9767:3:18"
																		},
																		"nativeSrc": "9767:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9767:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9787:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9787:2:18",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9760:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9760:6:18"
																},
																"nativeSrc": "9760:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9760:30:18"
															},
															"nativeSrc": "9760:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "9760:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9810:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9810:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9821:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9821:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9806:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9806:3:18"
																		},
																		"nativeSrc": "9806:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9806:18:18"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a204d69736d617463686564",
																		"kind": "string",
																		"nativeSrc": "9826:34:18",
																		"nodeType": "YulLiteral",
																		"src": "9826:34:18",
																		"type": "",
																		"value": "BatchTransfer failed: Mismatched"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9799:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9799:6:18"
																},
																"nativeSrc": "9799:62:18",
																"nodeType": "YulFunctionCall",
																"src": "9799:62:18"
															},
															"nativeSrc": "9799:62:18",
															"nodeType": "YulExpressionStatement",
															"src": "9799:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9881:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9881:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9892:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9892:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9877:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9877:3:18"
																		},
																		"nativeSrc": "9877:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9877:18:18"
																	},
																	{
																		"hexValue": "20617272617973",
																		"kind": "string",
																		"nativeSrc": "9897:9:18",
																		"nodeType": "YulLiteral",
																		"src": "9897:9:18",
																		"type": "",
																		"value": " arrays"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9870:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9870:6:18"
																},
																"nativeSrc": "9870:37:18",
																"nodeType": "YulFunctionCall",
																"src": "9870:37:18"
															},
															"nativeSrc": "9870:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "9870:37:18"
														},
														{
															"nativeSrc": "9916:27:18",
															"nodeType": "YulAssignment",
															"src": "9916:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9928:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9928:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9939:3:18",
																		"nodeType": "YulLiteral",
																		"src": "9939:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9924:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9924:3:18"
																},
																"nativeSrc": "9924:19:18",
																"nodeType": "YulFunctionCall",
																"src": "9924:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9916:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9916:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9546:403:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9697:9:18",
														"nodeType": "YulTypedName",
														"src": "9697:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9711:4:18",
														"nodeType": "YulTypedName",
														"src": "9711:4:18",
														"type": ""
													}
												],
												"src": "9546:403:18"
											},
											{
												"body": {
													"nativeSrc": "9986:95:18",
													"nodeType": "YulBlock",
													"src": "9986:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10003:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10003:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10010:3:18",
																				"nodeType": "YulLiteral",
																				"src": "10010:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10015:10:18",
																				"nodeType": "YulLiteral",
																				"src": "10015:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10006:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10006:3:18"
																		},
																		"nativeSrc": "10006:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10006:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9996:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9996:6:18"
																},
																"nativeSrc": "9996:31:18",
																"nodeType": "YulFunctionCall",
																"src": "9996:31:18"
															},
															"nativeSrc": "9996:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "9996:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10043:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10043:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10046:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10046:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10036:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10036:6:18"
																},
																"nativeSrc": "10036:15:18",
																"nodeType": "YulFunctionCall",
																"src": "10036:15:18"
															},
															"nativeSrc": "10036:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "10036:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10067:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10067:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10070:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10070:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10060:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10060:6:18"
																},
																"nativeSrc": "10060:15:18",
																"nodeType": "YulFunctionCall",
																"src": "10060:15:18"
															},
															"nativeSrc": "10060:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "10060:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9954:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "9954:127:18"
											},
											{
												"body": {
													"nativeSrc": "10260:236:18",
													"nodeType": "YulBlock",
													"src": "10260:236:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10277:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10277:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10288:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10270:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:18"
																},
																"nativeSrc": "10270:21:18",
																"nodeType": "YulFunctionCall",
																"src": "10270:21:18"
															},
															"nativeSrc": "10270:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "10270:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10311:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10311:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10322:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10322:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10307:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:18"
																		},
																		"nativeSrc": "10307:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10307:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10327:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10327:2:18",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10300:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:18"
																},
																"nativeSrc": "10300:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10300:30:18"
															},
															"nativeSrc": "10300:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "10300:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10350:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10350:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10361:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10361:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10346:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:18"
																		},
																		"nativeSrc": "10346:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10346:18:18"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420",
																		"kind": "string",
																		"nativeSrc": "10366:34:18",
																		"nodeType": "YulLiteral",
																		"src": "10366:34:18",
																		"type": "",
																		"value": "BatchTransfer failed: Recipient "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10339:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:18"
																},
																"nativeSrc": "10339:62:18",
																"nodeType": "YulFunctionCall",
																"src": "10339:62:18"
															},
															"nativeSrc": "10339:62:18",
															"nodeType": "YulExpressionStatement",
															"src": "10339:62:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10421:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10421:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10432:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10432:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10417:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:18"
																		},
																		"nativeSrc": "10417:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10417:18:18"
																	},
																	{
																		"hexValue": "697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "10437:16:18",
																		"nodeType": "YulLiteral",
																		"src": "10437:16:18",
																		"type": "",
																		"value": "is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10410:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10410:6:18"
																},
																"nativeSrc": "10410:44:18",
																"nodeType": "YulFunctionCall",
																"src": "10410:44:18"
															},
															"nativeSrc": "10410:44:18",
															"nodeType": "YulExpressionStatement",
															"src": "10410:44:18"
														},
														{
															"nativeSrc": "10463:27:18",
															"nodeType": "YulAssignment",
															"src": "10463:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10475:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10475:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10486:3:18",
																		"nodeType": "YulLiteral",
																		"src": "10486:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10471:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10471:3:18"
																},
																"nativeSrc": "10471:19:18",
																"nodeType": "YulFunctionCall",
																"src": "10471:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10463:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10463:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10086:410:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10237:9:18",
														"nodeType": "YulTypedName",
														"src": "10237:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10251:4:18",
														"nodeType": "YulTypedName",
														"src": "10251:4:18",
														"type": ""
													}
												],
												"src": "10086:410:18"
											},
											{
												"body": {
													"nativeSrc": "10609:101:18",
													"nodeType": "YulBlock",
													"src": "10609:101:18",
													"statements": [
														{
															"nativeSrc": "10619:26:18",
															"nodeType": "YulAssignment",
															"src": "10619:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10631:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10631:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10642:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10642:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10627:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10627:3:18"
																},
																"nativeSrc": "10627:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10627:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10619:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10619:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10661:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10661:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10676:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10676:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10684:18:18",
																				"nodeType": "YulLiteral",
																				"src": "10684:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10672:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10672:3:18"
																		},
																		"nativeSrc": "10672:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10672:31:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10654:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10654:6:18"
																},
																"nativeSrc": "10654:50:18",
																"nodeType": "YulFunctionCall",
																"src": "10654:50:18"
															},
															"nativeSrc": "10654:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "10654:50:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "10501:209:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10578:9:18",
														"nodeType": "YulTypedName",
														"src": "10578:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10589:6:18",
														"nodeType": "YulTypedName",
														"src": "10589:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10600:4:18",
														"nodeType": "YulTypedName",
														"src": "10600:4:18",
														"type": ""
													}
												],
												"src": "10501:209:18"
											},
											{
												"body": {
													"nativeSrc": "10889:164:18",
													"nodeType": "YulBlock",
													"src": "10889:164:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10906:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10906:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10917:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10917:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10899:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10899:6:18"
																},
																"nativeSrc": "10899:21:18",
																"nodeType": "YulFunctionCall",
																"src": "10899:21:18"
															},
															"nativeSrc": "10899:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "10899:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10940:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10940:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10951:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10951:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10936:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10936:3:18"
																		},
																		"nativeSrc": "10936:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10936:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10956:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10956:2:18",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10929:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10929:6:18"
																},
																"nativeSrc": "10929:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10929:30:18"
															},
															"nativeSrc": "10929:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "10929:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10979:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10979:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10990:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10990:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10975:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10975:3:18"
																		},
																		"nativeSrc": "10975:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10975:18:18"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "10995:16:18",
																		"nodeType": "YulLiteral",
																		"src": "10995:16:18",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10968:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10968:6:18"
																},
																"nativeSrc": "10968:44:18",
																"nodeType": "YulFunctionCall",
																"src": "10968:44:18"
															},
															"nativeSrc": "10968:44:18",
															"nodeType": "YulExpressionStatement",
															"src": "10968:44:18"
														},
														{
															"nativeSrc": "11021:26:18",
															"nodeType": "YulAssignment",
															"src": "11021:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11033:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11033:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11044:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11044:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11029:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11029:3:18"
																},
																"nativeSrc": "11029:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11029:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11021:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11021:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10715:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10866:9:18",
														"nodeType": "YulTypedName",
														"src": "10866:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10880:4:18",
														"nodeType": "YulTypedName",
														"src": "10880:4:18",
														"type": ""
													}
												],
												"src": "10715:338:18"
											},
											{
												"body": {
													"nativeSrc": "11232:182:18",
													"nodeType": "YulBlock",
													"src": "11232:182:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11249:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11249:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11260:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11260:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11242:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:18"
																},
																"nativeSrc": "11242:21:18",
																"nodeType": "YulFunctionCall",
																"src": "11242:21:18"
															},
															"nativeSrc": "11242:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "11242:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11283:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11283:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11294:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11294:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11279:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11279:3:18"
																		},
																		"nativeSrc": "11279:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11279:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11299:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11299:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11272:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11272:6:18"
																},
																"nativeSrc": "11272:30:18",
																"nodeType": "YulFunctionCall",
																"src": "11272:30:18"
															},
															"nativeSrc": "11272:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "11272:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11322:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11322:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11333:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11333:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11318:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11318:3:18"
																		},
																		"nativeSrc": "11318:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11318:18:18"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "11338:34:18",
																		"nodeType": "YulLiteral",
																		"src": "11338:34:18",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11311:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11311:6:18"
																},
																"nativeSrc": "11311:62:18",
																"nodeType": "YulFunctionCall",
																"src": "11311:62:18"
															},
															"nativeSrc": "11311:62:18",
															"nodeType": "YulExpressionStatement",
															"src": "11311:62:18"
														},
														{
															"nativeSrc": "11382:26:18",
															"nodeType": "YulAssignment",
															"src": "11382:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11394:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11394:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11405:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11405:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11390:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11390:3:18"
																},
																"nativeSrc": "11390:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11390:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11382:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11382:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11058:356:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11209:9:18",
														"nodeType": "YulTypedName",
														"src": "11209:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11223:4:18",
														"nodeType": "YulTypedName",
														"src": "11223:4:18",
														"type": ""
													}
												],
												"src": "11058:356:18"
											},
											{
												"body": {
													"nativeSrc": "11548:119:18",
													"nodeType": "YulBlock",
													"src": "11548:119:18",
													"statements": [
														{
															"nativeSrc": "11558:26:18",
															"nodeType": "YulAssignment",
															"src": "11558:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11570:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11570:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11581:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11581:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11566:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11566:3:18"
																},
																"nativeSrc": "11566:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11566:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11558:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11558:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11600:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11600:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11611:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11611:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11593:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11593:6:18"
																},
																"nativeSrc": "11593:25:18",
																"nodeType": "YulFunctionCall",
																"src": "11593:25:18"
															},
															"nativeSrc": "11593:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "11593:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11638:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11638:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11649:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11649:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11634:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11634:3:18"
																		},
																		"nativeSrc": "11634:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11634:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11654:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11654:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11627:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11627:6:18"
																},
																"nativeSrc": "11627:34:18",
																"nodeType": "YulFunctionCall",
																"src": "11627:34:18"
															},
															"nativeSrc": "11627:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "11627:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11419:248:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11509:9:18",
														"nodeType": "YulTypedName",
														"src": "11509:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11520:6:18",
														"nodeType": "YulTypedName",
														"src": "11520:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11528:6:18",
														"nodeType": "YulTypedName",
														"src": "11528:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11539:4:18",
														"nodeType": "YulTypedName",
														"src": "11539:4:18",
														"type": ""
													}
												],
												"src": "11419:248:18"
											},
											{
												"body": {
													"nativeSrc": "11846:166:18",
													"nodeType": "YulBlock",
													"src": "11846:166:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11863:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11863:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11874:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11874:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11856:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11856:6:18"
																},
																"nativeSrc": "11856:21:18",
																"nodeType": "YulFunctionCall",
																"src": "11856:21:18"
															},
															"nativeSrc": "11856:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "11856:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11897:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11897:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11908:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11908:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11893:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11893:3:18"
																		},
																		"nativeSrc": "11893:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11893:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11913:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11913:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11886:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11886:6:18"
																},
																"nativeSrc": "11886:30:18",
																"nodeType": "YulFunctionCall",
																"src": "11886:30:18"
															},
															"nativeSrc": "11886:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "11886:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11936:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11936:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11947:2:18",
																				"nodeType": "YulLiteral",
																				"src": "11947:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11932:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11932:3:18"
																		},
																		"nativeSrc": "11932:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11932:18:18"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "11952:18:18",
																		"nodeType": "YulLiteral",
																		"src": "11952:18:18",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11925:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11925:6:18"
																},
																"nativeSrc": "11925:46:18",
																"nodeType": "YulFunctionCall",
																"src": "11925:46:18"
															},
															"nativeSrc": "11925:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "11925:46:18"
														},
														{
															"nativeSrc": "11980:26:18",
															"nodeType": "YulAssignment",
															"src": "11980:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11992:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11992:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12003:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12003:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11988:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11988:3:18"
																},
																"nativeSrc": "11988:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11988:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11980:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11980:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11672:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11823:9:18",
														"nodeType": "YulTypedName",
														"src": "11823:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11837:4:18",
														"nodeType": "YulTypedName",
														"src": "11837:4:18",
														"type": ""
													}
												],
												"src": "11672:340:18"
											},
											{
												"body": {
													"nativeSrc": "12098:103:18",
													"nodeType": "YulBlock",
													"src": "12098:103:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12144:16:18",
																"nodeType": "YulBlock",
																"src": "12144:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12153:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12153:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12156:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12156:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12146:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12146:6:18"
																			},
																			"nativeSrc": "12146:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12146:12:18"
																		},
																		"nativeSrc": "12146:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12146:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12119:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12119:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12128:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12128:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12115:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12115:3:18"
																		},
																		"nativeSrc": "12115:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12115:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12140:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12140:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12111:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12111:3:18"
																},
																"nativeSrc": "12111:32:18",
																"nodeType": "YulFunctionCall",
																"src": "12111:32:18"
															},
															"nativeSrc": "12108:52:18",
															"nodeType": "YulIf",
															"src": "12108:52:18"
														},
														{
															"nativeSrc": "12169:26:18",
															"nodeType": "YulAssignment",
															"src": "12169:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12185:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12185:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12179:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12179:5:18"
																},
																"nativeSrc": "12179:16:18",
																"nodeType": "YulFunctionCall",
																"src": "12179:16:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12169:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "12017:184:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12064:9:18",
														"nodeType": "YulTypedName",
														"src": "12064:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12075:7:18",
														"nodeType": "YulTypedName",
														"src": "12075:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12087:6:18",
														"nodeType": "YulTypedName",
														"src": "12087:6:18",
														"type": ""
													}
												],
												"src": "12017:184:18"
											},
											{
												"body": {
													"nativeSrc": "12363:188:18",
													"nodeType": "YulBlock",
													"src": "12363:188:18",
													"statements": [
														{
															"nativeSrc": "12373:26:18",
															"nodeType": "YulAssignment",
															"src": "12373:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12385:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12385:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12396:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12396:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12381:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12381:3:18"
																},
																"nativeSrc": "12381:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12381:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12373:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12373:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12415:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12415:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12430:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12430:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12446:3:18",
																								"nodeType": "YulLiteral",
																								"src": "12446:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12451:1:18",
																								"nodeType": "YulLiteral",
																								"src": "12451:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12442:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "12442:3:18"
																						},
																						"nativeSrc": "12442:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "12442:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12455:1:18",
																						"nodeType": "YulLiteral",
																						"src": "12455:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12438:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12438:3:18"
																				},
																				"nativeSrc": "12438:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12438:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12426:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12426:3:18"
																		},
																		"nativeSrc": "12426:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12426:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12408:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12408:6:18"
																},
																"nativeSrc": "12408:51:18",
																"nodeType": "YulFunctionCall",
																"src": "12408:51:18"
															},
															"nativeSrc": "12408:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "12408:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12479:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12479:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12490:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12490:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12475:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12475:3:18"
																		},
																		"nativeSrc": "12475:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12475:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12495:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12495:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12468:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12468:6:18"
																},
																"nativeSrc": "12468:34:18",
																"nodeType": "YulFunctionCall",
																"src": "12468:34:18"
															},
															"nativeSrc": "12468:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "12468:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12522:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12522:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12533:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12533:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12518:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12518:3:18"
																		},
																		"nativeSrc": "12518:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12518:18:18"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12538:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12538:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12511:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12511:6:18"
																},
																"nativeSrc": "12511:34:18",
																"nodeType": "YulFunctionCall",
																"src": "12511:34:18"
															},
															"nativeSrc": "12511:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "12511:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12206:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12316:9:18",
														"nodeType": "YulTypedName",
														"src": "12316:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12327:6:18",
														"nodeType": "YulTypedName",
														"src": "12327:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12335:6:18",
														"nodeType": "YulTypedName",
														"src": "12335:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12343:6:18",
														"nodeType": "YulTypedName",
														"src": "12343:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12354:4:18",
														"nodeType": "YulTypedName",
														"src": "12354:4:18",
														"type": ""
													}
												],
												"src": "12206:345:18"
											},
											{
												"body": {
													"nativeSrc": "12730:170:18",
													"nodeType": "YulBlock",
													"src": "12730:170:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12747:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12747:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12758:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12758:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12740:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12740:6:18"
																},
																"nativeSrc": "12740:21:18",
																"nodeType": "YulFunctionCall",
																"src": "12740:21:18"
															},
															"nativeSrc": "12740:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "12740:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12781:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12781:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12792:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12792:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12777:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12777:3:18"
																		},
																		"nativeSrc": "12777:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12777:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12797:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12797:2:18",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12770:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12770:6:18"
																},
																"nativeSrc": "12770:30:18",
																"nodeType": "YulFunctionCall",
																"src": "12770:30:18"
															},
															"nativeSrc": "12770:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "12770:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12820:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12820:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12831:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12831:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12816:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12816:3:18"
																		},
																		"nativeSrc": "12816:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12816:18:18"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "12836:22:18",
																		"nodeType": "YulLiteral",
																		"src": "12836:22:18",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12809:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12809:6:18"
																},
																"nativeSrc": "12809:50:18",
																"nodeType": "YulFunctionCall",
																"src": "12809:50:18"
															},
															"nativeSrc": "12809:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "12809:50:18"
														},
														{
															"nativeSrc": "12868:26:18",
															"nodeType": "YulAssignment",
															"src": "12868:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12880:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12880:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12891:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12891:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12876:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12876:3:18"
																},
																"nativeSrc": "12876:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12876:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12868:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12868:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12556:344:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12707:9:18",
														"nodeType": "YulTypedName",
														"src": "12707:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12721:4:18",
														"nodeType": "YulTypedName",
														"src": "12721:4:18",
														"type": ""
													}
												],
												"src": "12556:344:18"
											},
											{
												"body": {
													"nativeSrc": "12953:174:18",
													"nodeType": "YulBlock",
													"src": "12953:174:18",
													"statements": [
														{
															"nativeSrc": "12963:16:18",
															"nodeType": "YulAssignment",
															"src": "12963:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12974:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "12974:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12977:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "12977:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12970:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12970:3:18"
																},
																"nativeSrc": "12970:9:18",
																"nodeType": "YulFunctionCall",
																"src": "12970:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12963:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12963:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13010:111:18",
																"nodeType": "YulBlock",
																"src": "13010:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13031:1:18",
																					"nodeType": "YulLiteral",
																					"src": "13031:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13038:3:18",
																							"nodeType": "YulLiteral",
																							"src": "13038:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "13043:10:18",
																							"nodeType": "YulLiteral",
																							"src": "13043:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "13034:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "13034:3:18"
																					},
																					"nativeSrc": "13034:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13034:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13024:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13024:6:18"
																			},
																			"nativeSrc": "13024:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13024:31:18"
																		},
																		"nativeSrc": "13024:31:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13024:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13075:1:18",
																					"nodeType": "YulLiteral",
																					"src": "13075:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13078:4:18",
																					"nodeType": "YulLiteral",
																					"src": "13078:4:18",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13068:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13068:6:18"
																			},
																			"nativeSrc": "13068:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13068:15:18"
																		},
																		"nativeSrc": "13068:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13068:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13103:1:18",
																					"nodeType": "YulLiteral",
																					"src": "13103:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13106:4:18",
																					"nodeType": "YulLiteral",
																					"src": "13106:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13096:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13096:6:18"
																			},
																			"nativeSrc": "13096:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13096:15:18"
																		},
																		"nativeSrc": "13096:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13096:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12994:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "12994:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12997:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12997:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12991:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12991:2:18"
																},
																"nativeSrc": "12991:10:18",
																"nodeType": "YulFunctionCall",
																"src": "12991:10:18"
															},
															"nativeSrc": "12988:133:18",
															"nodeType": "YulIf",
															"src": "12988:133:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12905:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12936:1:18",
														"nodeType": "YulTypedName",
														"src": "12936:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12939:1:18",
														"nodeType": "YulTypedName",
														"src": "12939:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12945:3:18",
														"nodeType": "YulTypedName",
														"src": "12945:3:18",
														"type": ""
													}
												],
												"src": "12905:222:18"
											},
											{
												"body": {
													"nativeSrc": "13188:65:18",
													"nodeType": "YulBlock",
													"src": "13188:65:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13205:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13205:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "13208:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13208:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13198:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13198:6:18"
																},
																"nativeSrc": "13198:14:18",
																"nodeType": "YulFunctionCall",
																"src": "13198:14:18"
															},
															"nativeSrc": "13198:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "13198:14:18"
														},
														{
															"nativeSrc": "13221:26:18",
															"nodeType": "YulAssignment",
															"src": "13221:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13239:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13239:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13242:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13242:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "13229:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "13229:9:18"
																},
																"nativeSrc": "13229:18:18",
																"nodeType": "YulFunctionCall",
																"src": "13229:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13221:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13221:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "13132:121:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13171:3:18",
														"nodeType": "YulTypedName",
														"src": "13171:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "13179:4:18",
														"nodeType": "YulTypedName",
														"src": "13179:4:18",
														"type": ""
													}
												],
												"src": "13132:121:18"
											},
											{
												"body": {
													"nativeSrc": "13339:437:18",
													"nodeType": "YulBlock",
													"src": "13339:437:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "13372:398:18",
																"nodeType": "YulBlock",
																"src": "13372:398:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13393:1:18",
																					"nodeType": "YulLiteral",
																					"src": "13393:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "13396:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "13396:5:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13386:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13386:6:18"
																			},
																			"nativeSrc": "13386:16:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13386:16:18"
																		},
																		"nativeSrc": "13386:16:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13386:16:18"
																	},
																	{
																		"nativeSrc": "13415:30:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13415:30:18",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13437:1:18",
																					"nodeType": "YulLiteral",
																					"src": "13437:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13440:4:18",
																					"nodeType": "YulLiteral",
																					"src": "13440:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "13427:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13427:9:18"
																			},
																			"nativeSrc": "13427:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13427:18:18"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "13419:4:18",
																				"nodeType": "YulTypedName",
																				"src": "13419:4:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13458:57:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13458:57:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "13481:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "13481:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13491:1:18",
																							"nodeType": "YulLiteral",
																							"src": "13491:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "13498:10:18",
																									"nodeType": "YulIdentifier",
																									"src": "13498:10:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13510:2:18",
																									"nodeType": "YulLiteral",
																									"src": "13510:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13494:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "13494:3:18"
																							},
																							"nativeSrc": "13494:19:18",
																							"nodeType": "YulFunctionCall",
																							"src": "13494:19:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "13487:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "13487:3:18"
																					},
																					"nativeSrc": "13487:27:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13487:27:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13477:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "13477:3:18"
																			},
																			"nativeSrc": "13477:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13477:38:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "13462:11:18",
																				"nodeType": "YulTypedName",
																				"src": "13462:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "13552:23:18",
																			"nodeType": "YulBlock",
																			"src": "13552:23:18",
																			"statements": [
																				{
																					"nativeSrc": "13554:19:18",
																					"nodeType": "YulAssignment",
																					"src": "13554:19:18",
																					"value": {
																						"name": "data",
																						"nativeSrc": "13569:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "13569:4:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "13554:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "13554:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "13534:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "13534:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13546:4:18",
																					"nodeType": "YulLiteral",
																					"src": "13546:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "13531:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "13531:2:18"
																			},
																			"nativeSrc": "13531:20:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13531:20:18"
																		},
																		"nativeSrc": "13528:47:18",
																		"nodeType": "YulIf",
																		"src": "13528:47:18"
																	},
																	{
																		"nativeSrc": "13588:41:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13588:41:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "13602:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "13602:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13612:1:18",
																							"nodeType": "YulLiteral",
																							"src": "13612:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "13619:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "13619:3:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13624:2:18",
																									"nodeType": "YulLiteral",
																									"src": "13624:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13615:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "13615:3:18"
																							},
																							"nativeSrc": "13615:12:18",
																							"nodeType": "YulFunctionCall",
																							"src": "13615:12:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "13608:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "13608:3:18"
																					},
																					"nativeSrc": "13608:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13608:20:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13598:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "13598:3:18"
																			},
																			"nativeSrc": "13598:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13598:31:18"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "13592:2:18",
																				"nodeType": "YulTypedName",
																				"src": "13592:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13642:24:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13642:24:18",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "13655:11:18",
																			"nodeType": "YulIdentifier",
																			"src": "13655:11:18"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "13646:5:18",
																				"nodeType": "YulTypedName",
																				"src": "13646:5:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "13740:20:18",
																			"nodeType": "YulBlock",
																			"src": "13740:20:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "13749:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "13749:5:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13756:1:18",
																								"nodeType": "YulLiteral",
																								"src": "13756:1:18",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "13742:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "13742:6:18"
																						},
																						"nativeSrc": "13742:16:18",
																						"nodeType": "YulFunctionCall",
																						"src": "13742:16:18"
																					},
																					"nativeSrc": "13742:16:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "13742:16:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "13690:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "13690:5:18"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "13697:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "13697:2:18"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "13687:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "13687:2:18"
																			},
																			"nativeSrc": "13687:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13687:13:18"
																		},
																		"nativeSrc": "13679:81:18",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "13701:26:18",
																			"nodeType": "YulBlock",
																			"src": "13701:26:18",
																			"statements": [
																				{
																					"nativeSrc": "13703:22:18",
																					"nodeType": "YulAssignment",
																					"src": "13703:22:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "13716:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "13716:5:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13723:1:18",
																								"nodeType": "YulLiteral",
																								"src": "13723:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "13712:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "13712:3:18"
																						},
																						"nativeSrc": "13712:13:18",
																						"nodeType": "YulFunctionCall",
																						"src": "13712:13:18"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "13703:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "13703:5:18"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "13683:3:18",
																			"nodeType": "YulBlock",
																			"src": "13683:3:18",
																			"statements": []
																		},
																		"src": "13679:81:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "13355:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13355:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13360:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13360:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13352:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "13352:2:18"
																},
																"nativeSrc": "13352:11:18",
																"nodeType": "YulFunctionCall",
																"src": "13352:11:18"
															},
															"nativeSrc": "13349:421:18",
															"nodeType": "YulIf",
															"src": "13349:421:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "13258:518:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "13311:5:18",
														"nodeType": "YulTypedName",
														"src": "13311:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13318:3:18",
														"nodeType": "YulTypedName",
														"src": "13318:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "13323:10:18",
														"nodeType": "YulTypedName",
														"src": "13323:10:18",
														"type": ""
													}
												],
												"src": "13258:518:18"
											},
											{
												"body": {
													"nativeSrc": "13866:81:18",
													"nodeType": "YulBlock",
													"src": "13866:81:18",
													"statements": [
														{
															"nativeSrc": "13876:65:18",
															"nodeType": "YulAssignment",
															"src": "13876:65:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "13891:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "13891:4:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "13909:1:18",
																										"nodeType": "YulLiteral",
																										"src": "13909:1:18",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "13912:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "13912:3:18"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "13905:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "13905:3:18"
																								},
																								"nativeSrc": "13905:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "13905:11:18"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "13922:1:18",
																										"nodeType": "YulLiteral",
																										"src": "13922:1:18",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "13918:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "13918:3:18"
																								},
																								"nativeSrc": "13918:6:18",
																								"nodeType": "YulFunctionCall",
																								"src": "13918:6:18"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "13901:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "13901:3:18"
																						},
																						"nativeSrc": "13901:24:18",
																						"nodeType": "YulFunctionCall",
																						"src": "13901:24:18"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "13897:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13897:3:18"
																				},
																				"nativeSrc": "13897:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13897:29:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13887:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13887:3:18"
																		},
																		"nativeSrc": "13887:40:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13887:40:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13933:1:18",
																				"nodeType": "YulLiteral",
																				"src": "13933:1:18",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "13936:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "13936:3:18"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13929:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13929:3:18"
																		},
																		"nativeSrc": "13929:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13929:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13884:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "13884:2:18"
																},
																"nativeSrc": "13884:57:18",
																"nodeType": "YulFunctionCall",
																"src": "13884:57:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "13876:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13876:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "13781:166:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13843:4:18",
														"nodeType": "YulTypedName",
														"src": "13843:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13849:3:18",
														"nodeType": "YulTypedName",
														"src": "13849:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "13857:4:18",
														"nodeType": "YulTypedName",
														"src": "13857:4:18",
														"type": ""
													}
												],
												"src": "13781:166:18"
											},
											{
												"body": {
													"nativeSrc": "14048:1203:18",
													"nodeType": "YulBlock",
													"src": "14048:1203:18",
													"statements": [
														{
															"nativeSrc": "14058:24:18",
															"nodeType": "YulVariableDeclaration",
															"src": "14058:24:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "14078:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14078:3:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14072:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "14072:5:18"
																},
																"nativeSrc": "14072:10:18",
																"nodeType": "YulFunctionCall",
																"src": "14072:10:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "14062:6:18",
																	"nodeType": "YulTypedName",
																	"src": "14062:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14125:22:18",
																"nodeType": "YulBlock",
																"src": "14125:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "14127:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "14127:16:18"
																			},
																			"nativeSrc": "14127:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14127:18:18"
																		},
																		"nativeSrc": "14127:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "14127:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14097:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14097:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14105:18:18",
																		"nodeType": "YulLiteral",
																		"src": "14105:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14094:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "14094:2:18"
																},
																"nativeSrc": "14094:30:18",
																"nodeType": "YulFunctionCall",
																"src": "14094:30:18"
															},
															"nativeSrc": "14091:56:18",
															"nodeType": "YulIf",
															"src": "14091:56:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14200:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "14200:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "14238:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "14238:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "14232:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "14232:5:18"
																				},
																				"nativeSrc": "14232:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14232:11:18"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "14206:25:18",
																			"nodeType": "YulIdentifier",
																			"src": "14206:25:18"
																		},
																		"nativeSrc": "14206:38:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14206:38:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "14246:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14246:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "14156:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "14156:43:18"
																},
																"nativeSrc": "14156:97:18",
																"nodeType": "YulFunctionCall",
																"src": "14156:97:18"
															},
															"nativeSrc": "14156:97:18",
															"nodeType": "YulExpressionStatement",
															"src": "14156:97:18"
														},
														{
															"nativeSrc": "14262:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "14262:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "14279:1:18",
																"nodeType": "YulLiteral",
																"src": "14279:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "14266:9:18",
																	"nodeType": "YulTypedName",
																	"src": "14266:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14289:17:18",
															"nodeType": "YulAssignment",
															"src": "14289:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "14302:4:18",
																"nodeType": "YulLiteral",
																"src": "14302:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "14289:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "14289:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14352:642:18",
																		"nodeType": "YulBlock",
																		"src": "14352:642:18",
																		"statements": [
																			{
																				"nativeSrc": "14366:35:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14366:35:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "14385:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "14385:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "14397:2:18",
																									"nodeType": "YulLiteral",
																									"src": "14397:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "14393:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "14393:3:18"
																							},
																							"nativeSrc": "14393:7:18",
																							"nodeType": "YulFunctionCall",
																							"src": "14393:7:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "14381:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "14381:3:18"
																					},
																					"nativeSrc": "14381:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14381:20:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "14370:7:18",
																						"nodeType": "YulTypedName",
																						"src": "14370:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "14414:49:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14414:49:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14458:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "14458:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "14428:29:18",
																						"nodeType": "YulIdentifier",
																						"src": "14428:29:18"
																					},
																					"nativeSrc": "14428:35:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14428:35:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "14418:6:18",
																						"nodeType": "YulTypedName",
																						"src": "14418:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "14476:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14476:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14485:1:18",
																					"nodeType": "YulLiteral",
																					"src": "14485:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "14480:1:18",
																						"nodeType": "YulTypedName",
																						"src": "14480:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14556:165:18",
																					"nodeType": "YulBlock",
																					"src": "14556:165:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14581:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "14581:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "14599:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "14599:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "14604:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "14604:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "14595:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "14595:3:18"
																												},
																												"nativeSrc": "14595:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "14595:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "14589:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "14589:5:18"
																										},
																										"nativeSrc": "14589:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "14589:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14574:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "14574:6:18"
																								},
																								"nativeSrc": "14574:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "14574:42:18"
																							},
																							"nativeSrc": "14574:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "14574:42:18"
																						},
																						{
																							"nativeSrc": "14633:24:18",
																							"nodeType": "YulAssignment",
																							"src": "14633:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14647:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "14647:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14655:1:18",
																										"nodeType": "YulLiteral",
																										"src": "14655:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14643:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "14643:3:18"
																								},
																								"nativeSrc": "14643:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "14643:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "14633:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "14633:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "14674:33:18",
																							"nodeType": "YulAssignment",
																							"src": "14674:33:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "14691:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "14691:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14702:4:18",
																										"nodeType": "YulLiteral",
																										"src": "14702:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14687:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "14687:3:18"
																								},
																								"nativeSrc": "14687:20:18",
																								"nodeType": "YulFunctionCall",
																								"src": "14687:20:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "14674:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "14674:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "14510:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "14510:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "14513:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "14513:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14507:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "14507:2:18"
																					},
																					"nativeSrc": "14507:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14507:14:18"
																				},
																				"nativeSrc": "14499:222:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "14522:21:18",
																					"nodeType": "YulBlock",
																					"src": "14522:21:18",
																					"statements": [
																						{
																							"nativeSrc": "14524:17:18",
																							"nodeType": "YulAssignment",
																							"src": "14524:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "14533:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "14533:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14536:4:18",
																										"nodeType": "YulLiteral",
																										"src": "14536:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14529:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "14529:3:18"
																								},
																								"nativeSrc": "14529:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "14529:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "14524:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "14524:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "14503:3:18",
																					"nodeType": "YulBlock",
																					"src": "14503:3:18",
																					"statements": []
																				},
																				"src": "14499:222:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "14769:166:18",
																					"nodeType": "YulBlock",
																					"src": "14769:166:18",
																					"statements": [
																						{
																							"nativeSrc": "14787:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "14787:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "14814:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "14814:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "14819:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "14819:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14810:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "14810:3:18"
																										},
																										"nativeSrc": "14810:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "14810:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14804:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "14804:5:18"
																								},
																								"nativeSrc": "14804:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "14804:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "14791:9:18",
																									"nodeType": "YulTypedName",
																									"src": "14791:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14854:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "14854:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "14866:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "14866:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "14893:1:18",
																																				"nodeType": "YulLiteral",
																																				"src": "14893:1:18",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "14896:6:18",
																																				"nodeType": "YulIdentifier",
																																				"src": "14896:6:18"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "14889:3:18",
																																			"nodeType": "YulIdentifier",
																																			"src": "14889:3:18"
																																		},
																																		"nativeSrc": "14889:14:18",
																																		"nodeType": "YulFunctionCall",
																																		"src": "14889:14:18"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "14905:3:18",
																																		"nodeType": "YulLiteral",
																																		"src": "14905:3:18",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "14885:3:18",
																																	"nodeType": "YulIdentifier",
																																	"src": "14885:3:18"
																																},
																																"nativeSrc": "14885:24:18",
																																"nodeType": "YulFunctionCall",
																																"src": "14885:24:18"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "14915:1:18",
																																		"nodeType": "YulLiteral",
																																		"src": "14915:1:18",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "14911:3:18",
																																	"nodeType": "YulIdentifier",
																																	"src": "14911:3:18"
																																},
																																"nativeSrc": "14911:6:18",
																																"nodeType": "YulFunctionCall",
																																"src": "14911:6:18"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "14881:3:18",
																															"nodeType": "YulIdentifier",
																															"src": "14881:3:18"
																														},
																														"nativeSrc": "14881:37:18",
																														"nodeType": "YulFunctionCall",
																														"src": "14881:37:18"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "14877:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "14877:3:18"
																												},
																												"nativeSrc": "14877:42:18",
																												"nodeType": "YulFunctionCall",
																												"src": "14877:42:18"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "14862:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "14862:3:18"
																										},
																										"nativeSrc": "14862:58:18",
																										"nodeType": "YulFunctionCall",
																										"src": "14862:58:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14847:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "14847:6:18"
																								},
																								"nativeSrc": "14847:74:18",
																								"nodeType": "YulFunctionCall",
																								"src": "14847:74:18"
																							},
																							"nativeSrc": "14847:74:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "14847:74:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "14740:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "14740:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "14749:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "14749:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14737:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "14737:2:18"
																					},
																					"nativeSrc": "14737:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14737:19:18"
																				},
																				"nativeSrc": "14734:201:18",
																				"nodeType": "YulIf",
																				"src": "14734:201:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14955:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "14955:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "14969:1:18",
																											"nodeType": "YulLiteral",
																											"src": "14969:1:18",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "14972:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "14972:6:18"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "14965:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "14965:3:18"
																									},
																									"nativeSrc": "14965:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "14965:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "14981:1:18",
																									"nodeType": "YulLiteral",
																									"src": "14981:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "14961:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "14961:3:18"
																							},
																							"nativeSrc": "14961:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "14961:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "14948:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14948:6:18"
																					},
																					"nativeSrc": "14948:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "14948:36:18"
																				},
																				"nativeSrc": "14948:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "14948:36:18"
																			}
																		]
																	},
																	"nativeSrc": "14345:649:18",
																	"nodeType": "YulCase",
																	"src": "14345:649:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14350:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14350:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15011:234:18",
																		"nodeType": "YulBlock",
																		"src": "15011:234:18",
																		"statements": [
																			{
																				"nativeSrc": "15025:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15025:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15038:1:18",
																					"nodeType": "YulLiteral",
																					"src": "15038:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "15029:5:18",
																						"nodeType": "YulTypedName",
																						"src": "15029:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15074:67:18",
																					"nodeType": "YulBlock",
																					"src": "15074:67:18",
																					"statements": [
																						{
																							"nativeSrc": "15092:35:18",
																							"nodeType": "YulAssignment",
																							"src": "15092:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "15111:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "15111:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "15116:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "15116:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "15107:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "15107:3:18"
																										},
																										"nativeSrc": "15107:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "15107:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "15101:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "15101:5:18"
																								},
																								"nativeSrc": "15101:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "15101:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "15092:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "15092:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "15055:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "15055:6:18"
																				},
																				"nativeSrc": "15052:89:18",
																				"nodeType": "YulIf",
																				"src": "15052:89:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15161:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "15161:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "15220:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "15220:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "15227:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "15227:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "15167:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "15167:52:18"
																							},
																							"nativeSrc": "15167:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "15167:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15154:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "15154:6:18"
																					},
																					"nativeSrc": "15154:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "15154:81:18"
																				},
																				"nativeSrc": "15154:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "15154:81:18"
																			}
																		]
																	},
																	"nativeSrc": "15003:242:18",
																	"nodeType": "YulCase",
																	"src": "15003:242:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14325:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14325:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14333:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14333:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14322:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "14322:2:18"
																},
																"nativeSrc": "14322:14:18",
																"nodeType": "YulFunctionCall",
																"src": "14322:14:18"
															},
															"nativeSrc": "14315:930:18",
															"nodeType": "YulSwitch",
															"src": "14315:930:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "13952:1299:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14033:4:18",
														"nodeType": "YulTypedName",
														"src": "14033:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "14039:3:18",
														"nodeType": "YulTypedName",
														"src": "14039:3:18",
														"type": ""
													}
												],
												"src": "13952:1299:18"
											},
											{
												"body": {
													"nativeSrc": "15393:164:18",
													"nodeType": "YulBlock",
													"src": "15393:164:18",
													"statements": [
														{
															"nativeSrc": "15403:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15403:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15423:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15423:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15417:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "15417:5:18"
																},
																"nativeSrc": "15417:13:18",
																"nodeType": "YulFunctionCall",
																"src": "15417:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15407:6:18",
																	"nodeType": "YulTypedName",
																	"src": "15407:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15445:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15445:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15454:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15454:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15462:4:18",
																				"nodeType": "YulLiteral",
																				"src": "15462:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15450:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15450:3:18"
																		},
																		"nativeSrc": "15450:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15450:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15469:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15469:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "15439:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "15439:5:18"
																},
																"nativeSrc": "15439:37:18",
																"nodeType": "YulFunctionCall",
																"src": "15439:37:18"
															},
															"nativeSrc": "15439:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "15439:37:18"
														},
														{
															"nativeSrc": "15485:26:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15485:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15499:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15499:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15504:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15504:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15495:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15495:3:18"
																},
																"nativeSrc": "15495:16:18",
																"nodeType": "YulFunctionCall",
																"src": "15495:16:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "15489:2:18",
																	"nodeType": "YulTypedName",
																	"src": "15489:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "15527:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "15527:2:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15531:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15531:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15520:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15520:6:18"
																},
																"nativeSrc": "15520:13:18",
																"nodeType": "YulFunctionCall",
																"src": "15520:13:18"
															},
															"nativeSrc": "15520:13:18",
															"nodeType": "YulExpressionStatement",
															"src": "15520:13:18"
														},
														{
															"nativeSrc": "15542:9:18",
															"nodeType": "YulAssignment",
															"src": "15542:9:18",
															"value": {
																"name": "_1",
																"nativeSrc": "15549:2:18",
																"nodeType": "YulIdentifier",
																"src": "15549:2:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15542:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15542:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15256:301:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15369:3:18",
														"nodeType": "YulTypedName",
														"src": "15369:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15374:6:18",
														"nodeType": "YulTypedName",
														"src": "15374:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15385:3:18",
														"nodeType": "YulTypedName",
														"src": "15385:3:18",
														"type": ""
													}
												],
												"src": "15256:301:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Null Address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Transfer failed: Sender is black\")\n        mstore(add(headStart, 96), \"listed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer failed: Recipient is bl\")\n        mstore(add(headStart, 96), \"acklisted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Amount shouldn't be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Transfer failed: Tokens are lock\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Address is not a contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"BatchTransfer failed: Mismatched\")\n        mstore(add(headStart, 96), \" arrays\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"BatchTransfer failed: Recipient \")\n        mstore(add(headStart, 96), \"is blacklisted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 4168
									},
									{
										"length": 32,
										"start": 4209
									},
									{
										"length": 32,
										"start": 4536
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610195575f3560e01c80638456cb59116100e7578063ad3cb1cc11610087578063dbac26e911610062578063dbac26e9146104c8578063dd62ed3e146104f6578063f2fde38b14610515578063f326f0d714610534575f80fd5b8063ad3cb1cc1461045a578063b119490e1461048a578063c66e4095146104a9575f80fd5b806395d89b41116100c257806395d89b41146103d15780639bc289f1146103e5578063a153e70814610410578063a9059cbb1461043b575f80fd5b80638456cb591461034e57806388d695b2146103625780638da5cb5b14610381575f80fd5b8063313ce5671161015257806352d1902d1161012d57806352d1902d146102d05780635c975abb146102e457806370a08231146102fa578063715018a61461033a575f80fd5b8063313ce5671461028e5780633f4ba83a146102a95780634f1ef286146102bd575f80fd5b806306fdde0314610199578063095ea7b3146101c3578063153b0d1e146101f257806318160ddd1461021357806323b872dd146102505780632e0d2a001461026f575b5f80fd5b3480156101a4575f80fd5b506101ad610553565b6040516101ba91906118c5565b60405180910390f35b3480156101ce575f80fd5b506101e26101dd366004611915565b610613565b60405190151581526020016101ba565b3480156101fd575f80fd5b5061021161020c36600461193d565b61062c565b005b34801561021e575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b6040519081526020016101ba565b34801561025b575f80fd5b506101e261026a366004611976565b6106c1565b34801561027a575f80fd5b506102116102893660046119b0565b6107f0565b348015610299575f80fd5b50604051601281526020016101ba565b3480156102b4575f80fd5b506102116108c6565b6102116102cb366004611a54565b6108d8565b3480156102db575f80fd5b506102426108f7565b3480156102ef575f80fd5b505f5460ff166101e2565b348015610305575f80fd5b506102426103143660046119b0565b6001600160a01b03165f9081525f80516020611ee2833981519152602052604090205490565b348015610345575f80fd5b50610211610912565b348015610359575f80fd5b50610211610923565b34801561036d575f80fd5b5061021161037c366004611afa565b610933565b34801561038c575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03165b6040516001600160a01b0390911681526020016101ba565b3480156103dc575f80fd5b506101ad610aa8565b3480156103f0575f80fd5b506102426103ff3660046119b0565b60356020525f908152604090205481565b34801561041b575f80fd5b5061024261042a3660046119b0565b60366020525f908152604090205481565b348015610446575f80fd5b506101e2610455366004611915565b610ae6565b348015610465575f80fd5b506101ad604051806040016040528060058152602001640352e302e360dc1b81525081565b348015610495575f80fd5b506102116104a4366004611b84565b610bef565b3480156104b4575f80fd5b506032546103b9906001600160a01b031681565b3480156104d3575f80fd5b506101e26104e23660046119b0565b60346020525f908152604090205460ff1681565b348015610501575f80fd5b50610242610510366004611bf2565b610d28565b348015610520575f80fd5b5061021161052f3660046119b0565b610d71565b34801561053f575f80fd5b5061021161054e366004611c23565b610dae565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f80516020611ee28339815191529161059190611c53565b80601f01602080910402602001604051908101604052809291908181526020018280546105bd90611c53565b80156106085780601f106105df57610100808354040283529160200191610608565b820191905f5260205f20905b8154815290600101906020018083116105eb57829003601f168201915b505050505091505090565b5f33610620818585610f1c565b60019150505b92915050565b610634610f29565b6001600160a01b0382166106635760405162461bcd60e51b815260040161065a90611c8b565b60405180910390fd5b6001600160a01b0382165f81815260346020908152604091829020805460ff191685151590811790915591519182527fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8910160405180910390a25050565b5f6106ca610f84565b6001600160a01b0384165f9081526034602052604090205460ff16156107025760405162461bcd60e51b815260040161065a90611cb1565b6001600160a01b0383165f9081526034602052604090205460ff161561073a5760405162461bcd60e51b815260040161065a90611cf7565b815f036107845760405162461bcd60e51b8152602060048201526018602482015277416d6f756e742073686f756c646e2774206265207a65726f60401b604482015260640161065a565b6001600160a01b0384165f90815260356020526040902054421015806107bf57506001600160a01b0384165f90815260356020526040902054155b6107db5760405162461bcd60e51b815260040161065a90611d40565b6107e6848484610fc9565b90505b9392505050565b6107f8610f84565b610800610f29565b6001600160a01b0381166108265760405162461bcd60e51b815260040161065a90611c8b565b6001600160a01b0381163b61087d5760405162461bcd60e51b815260206004820152601960248201527f41646472657373206973206e6f74206120636f6e747261637400000000000000604482015260640161065a565b603280546001600160a01b0319166001600160a01b0383169081179091556040517fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8905f90a250565b6108ce610f29565b6108d6610fec565b565b6108e061103d565b6108e9826110e1565b6108f382826110f1565b5050565b5f6109006111ad565b505f80516020611f0283398151915290565b61091a610f29565b6108d65f6111f6565b61092b610f29565b6108d6611266565b61093b610f84565b82811461099a5760405162461bcd60e51b815260206004820152602760248201527f42617463685472616e73666572206661696c65643a204d69736d6174636865646044820152662061727261797360c81b606482015260840161065a565b825f5b81811015610aa05760345f8787848181106109ba576109ba611d82565b90506020020160208101906109cf91906119b0565b6001600160a01b0316815260208101919091526040015f205460ff1615610a4f5760405162461bcd60e51b815260206004820152602e60248201527f42617463685472616e73666572206661696c65643a20526563697069656e742060448201526d1a5cc8189b1858dadb1a5cdd195960921b606482015260840161065a565b610a9833878784818110610a6557610a65611d82565b9050602002016020810190610a7a91906119b0565b868685818110610a8c57610a8c611d82565b905060200201356112a2565b60010161099d565b505050505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020611ee28339815191529161059190611c53565b5f610aef610f84565b335f9081526034602052604090205460ff1615610b1e5760405162461bcd60e51b815260040161065a90611cb1565b6001600160a01b0383165f9081526034602052604090205460ff1615610b565760405162461bcd60e51b815260040161065a90611cf7565b815f03610ba05760405162461bcd60e51b8152602060048201526018602482015277416d6f756e742073686f756c646e2774206265207a65726f60401b604482015260640161065a565b335f9081526035602052604090205442101580610bc95750335f90815260356020526040902054155b610be55760405162461bcd60e51b815260040161065a90611d40565b6107e983836112ff565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610c345750825b90505f8267ffffffffffffffff166001148015610c505750303b155b905081158015610c5e575080155b15610c7c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610ca657845460ff60401b1916600160401b1785555b610cb0888861130c565b610cb93361131e565b610cc161132f565b610cc961133f565b6033869055610cd83387611347565b8315610d1e57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b610d79610f29565b6001600160a01b038116610da257604051631e4fbdf760e01b81525f600482015260240161065a565b610dab816111f6565b50565b610db6610f84565b6032546001600160a01b03163314610e015760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b604482015260640161065a565b6001600160a01b038316610e275760405162461bcd60e51b815260040161065a90611c8b565b805f03610e765760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161065a565b6001600160a01b0383165f9081526035602052604090205482141580610eb357506001600160a01b0383165f908152603660205260409020548114155b15610f17576001600160a01b0383165f818152603560209081526040808320869055603682529182902084905581518581529081018490527f86f2e10d5622d896b3f56e66c1a60639ca21a4674480f054bec2cb9ba62f40cb910160405180910390a25b505050565b610f17838383600161137b565b33610f5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146108d65760405163118cdaa760e01b815233600482015260240161065a565b5f5460ff16156108d65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161065a565b5f33610fd685828561145f565b610fe18585856112a2565b506001949350505050565b610ff46114c2565b5f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806110c357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110b75f80516020611f02833981519152546001600160a01b031690565b6001600160a01b031614155b156108d65760405163703e46dd60e11b815260040160405180910390fd5b6110e9610f84565b610dab610f29565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561114b575060408051601f3d908101601f1916820190925261114891810190611d96565b60015b61117357604051634c9c8ce360e01b81526001600160a01b038316600482015260240161065a565b5f80516020611f0283398151915281146111a357604051632a87526960e21b81526004810182905260240161065a565b610f17838361150a565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d65760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b61126e610f84565b5f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110203390565b6001600160a01b0383166112cb57604051634b637e8f60e11b81525f600482015260240161065a565b6001600160a01b0382166112f45760405163ec442f0560e01b81525f600482015260240161065a565b610f1783838361155f565b5f336106208185856112a2565b611314611698565b6108f382826116e1565b611326611698565b610dab81611731565b611337611698565b6108d6611739565b6108d6611698565b6001600160a01b0382166113705760405163ec442f0560e01b81525f600482015260240161065a565b6108f35f838361155f565b5f80516020611ee28339815191526001600160a01b0385166113b25760405163e602df0560e01b81525f600482015260240161065a565b6001600160a01b0384166113db57604051634a1406b160e11b81525f600482015260240161065a565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561145857836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161144f91815260200190565b60405180910390a35b5050505050565b5f61146a8484610d28565b90505f1981146114bc57818110156114ae57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161065a565b6114bc84848484035f61137b565b50505050565b5f5460ff166108d65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161065a565b6115138261174c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561155757610f1782826117af565b6108f3611821565b5f80516020611ee28339815191526001600160a01b0384166115995781816002015f82825461158e9190611dad565b909155506116099050565b6001600160a01b0384165f90815260208290526040902054828110156115eb5760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161065a565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316611627576002810180548390039055611645565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161168a91815260200190565b60405180910390a350505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166108d657604051631afcd79f60e31b815260040160405180910390fd5b6116e9611698565b5f80516020611ee28339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace036117228482611e10565b50600481016114bc8382611e10565b610d79611698565b611741611698565b5f805460ff19169055565b806001600160a01b03163b5f0361178157604051634c9c8ce360e01b81526001600160a01b038216600482015260240161065a565b5f80516020611f0283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516117cb9190611ecb565b5f60405180830381855af49150503d805f8114611803576040519150601f19603f3d011682016040523d82523d5f602084013e611808565b606091505b5091509150611818858383611840565b95945050505050565b34156108d65760405163b398979f60e01b815260040160405180910390fd5b606082611855576118508261189c565b6107e9565b815115801561186c57506001600160a01b0384163b155b1561189557604051639996b31560e01b81526001600160a01b038516600482015260240161065a565b50806107e9565b8051156118ac5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611910575f80fd5b919050565b5f8060408385031215611926575f80fd5b61192f836118fa565b946020939093013593505050565b5f806040838503121561194e575f80fd5b611957836118fa565b91506020830135801515811461196b575f80fd5b809150509250929050565b5f805f60608486031215611988575f80fd5b611991846118fa565b925061199f602085016118fa565b929592945050506040919091013590565b5f602082840312156119c0575f80fd5b6107e9826118fa565b634e487b7160e01b5f52604160045260245ffd5b5f8067ffffffffffffffff8411156119f7576119f76119c9565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715611a2657611a266119c9565b604052838152905080828401851015611a3d575f80fd5b838360208301375f60208583010152509392505050565b5f8060408385031215611a65575f80fd5b611a6e836118fa565b9150602083013567ffffffffffffffff811115611a89575f80fd5b8301601f81018513611a99575f80fd5b611aa8858235602084016119dd565b9150509250929050565b5f8083601f840112611ac2575f80fd5b50813567ffffffffffffffff811115611ad9575f80fd5b6020830191508360208260051b8501011115611af3575f80fd5b9250929050565b5f805f8060408587031215611b0d575f80fd5b843567ffffffffffffffff811115611b23575f80fd5b611b2f87828801611ab2565b909550935050602085013567ffffffffffffffff811115611b4e575f80fd5b611b5a87828801611ab2565b95989497509550505050565b5f82601f830112611b75575f80fd5b6107e9838335602085016119dd565b5f805f60608486031215611b96575f80fd5b833567ffffffffffffffff811115611bac575f80fd5b611bb886828701611b66565b935050602084013567ffffffffffffffff811115611bd4575f80fd5b611be086828701611b66565b93969395505050506040919091013590565b5f8060408385031215611c03575f80fd5b611c0c836118fa565b9150611c1a602084016118fa565b90509250929050565b5f805f60608486031215611c35575f80fd5b611c3e846118fa565b95602085013595506040909401359392505050565b600181811c90821680611c6757607f821691505b602082108103611c8557634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252600c908201526b4e756c6c204164647265737360a01b604082015260600190565b60208082526026908201527f5472616e73666572206661696c65643a2053656e64657220697320626c61636b6040820152651b1a5cdd195960d21b606082015260800190565b60208082526029908201527f5472616e73666572206661696c65643a20526563697069656e7420697320626c6040820152681858dadb1a5cdd195960ba1b606082015260800190565b60208082526022908201527f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b604082015261195960f21b606082015260800190565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215611da6575f80fd5b5051919050565b8082018082111561062657634e487b7160e01b5f52601160045260245ffd5b601f821115610f1757805f5260205f20601f840160051c81016020851015611df15750805b601f840160051c820191505b81811015611458575f8155600101611dfd565b815167ffffffffffffffff811115611e2a57611e2a6119c9565b611e3e81611e388454611c53565b84611dcc565b6020601f821160018114611e70575f8315611e595750848201515b5f19600385901b1c1916600184901b178455611458565b5f84815260208120601f198516915b82811015611e9f5787850151825560209485019460019092019101611e7f565b5084821015611ebc57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f82518060208501845e5f92019182525091905056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca264697066735822122057699568d062fe1eb966be089b3c32bdffa6b68aca2f039c63770a36c2fd60eb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x195 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDBAC26E9 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4F6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xF326F0D7 EQ PUSH2 0x534 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xB119490E EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x4A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xA153E708 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x43B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x381 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x152 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x12D JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x33A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x26F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x1DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x193D JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x1976 JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x7F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1A54 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x8F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x1E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x912 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x923 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFA JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH2 0xAA8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x3FF CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x42A CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0xAE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B84 JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x32 SLOAD PUSH2 0x3B9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x501 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x510 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0xD71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x1C23 JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x591 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x1C53 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x608 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5DF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x608 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x620 DUP2 DUP6 DUP6 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x634 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6CA PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x416D6F756E742073686F756C646E2774206265207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x7BF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1D40 JUMP JUMPDEST PUSH2 0x7E6 DUP5 DUP5 DUP5 PUSH2 0xFC9 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x800 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x87D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206973206E6F74206120636F6E747261637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x32 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x8CE PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0xFEC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8E0 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x8E9 DUP3 PUSH2 0x10E1 JUMP JUMPDEST PUSH2 0x8F3 DUP3 DUP3 PUSH2 0x10F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x900 PUSH2 0x11AD JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x91A PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x8D6 PUSH0 PUSH2 0x11F6 JUMP JUMPDEST PUSH2 0x92B PUSH2 0xF29 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x1266 JUMP JUMPDEST PUSH2 0x93B PUSH2 0xF84 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20617272617973 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65A JUMP JUMPDEST DUP3 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA0 JUMPI PUSH1 0x34 PUSH0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x9BA JUMPI PUSH2 0x9BA PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x1A5CC8189B1858DADB1A5CDD1959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0xA98 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xA65 JUMPI PUSH2 0xA65 PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA7A SWAP2 SWAP1 PUSH2 0x19B0 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xA8C JUMPI PUSH2 0xA8C PUSH2 0x1D82 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x99D JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x591 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST PUSH0 PUSH2 0xAEF PUSH2 0xF84 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST DUP2 PUSH0 SUB PUSH2 0xBA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x416D6F756E742073686F756C646E2774206265207A65726F PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0xBC9 JUMPI POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0xBE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1D40 JUMP JUMPDEST PUSH2 0x7E9 DUP4 DUP4 PUSH2 0x12FF JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xC34 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xC50 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xC5E JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xC7C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xCA6 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xCB0 DUP9 DUP9 PUSH2 0x130C JUMP JUMPDEST PUSH2 0xCB9 CALLER PUSH2 0x131E JUMP JUMPDEST PUSH2 0xCC1 PUSH2 0x132F JUMP JUMPDEST PUSH2 0xCC9 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x33 DUP7 SWAP1 SSTORE PUSH2 0xCD8 CALLER DUP8 PUSH2 0x1347 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xD1E JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD79 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDA2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0xDAB DUP2 PUSH2 0x11F6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDB6 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x32 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65A SWAP1 PUSH2 0x1C8B JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0xE76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 EQ ISZERO DUP1 PUSH2 0xEB3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x36 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xF17 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x36 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x86F2E10D5622D896B3F56E66C1A60639CA21A4674480F054BEC2CB9BA62F40CB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF17 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x137B JUMP JUMPDEST CALLER PUSH2 0xF5B PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH0 CALLER PUSH2 0xFD6 DUP6 DUP3 DUP6 PUSH2 0x145F JUMP JUMPDEST PUSH2 0xFE1 DUP6 DUP6 DUP6 PUSH2 0x12A2 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xFF4 PUSH2 0x14C2 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x10C3 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10B7 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E9 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0xDAB PUSH2 0xF29 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x114B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1148 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0xF17 DUP4 DUP4 PUSH2 0x150A JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x126E PUSH2 0xF84 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1020 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0xF17 DUP4 DUP4 DUP4 PUSH2 0x155F JUMP JUMPDEST PUSH0 CALLER PUSH2 0x620 DUP2 DUP6 DUP6 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x1314 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x8F3 DUP3 DUP3 PUSH2 0x16E1 JUMP JUMPDEST PUSH2 0x1326 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0xDAB DUP2 PUSH2 0x1731 JUMP JUMPDEST PUSH2 0x1337 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1370 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x8F3 PUSH0 DUP4 DUP4 PUSH2 0x155F JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x1458 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x144F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x146A DUP5 DUP5 PUSH2 0xD28 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x14BC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x14AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x14BC DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x137B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH2 0x1513 DUP3 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1557 JUMPI PUSH2 0xF17 DUP3 DUP3 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x8F3 PUSH2 0x1821 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1599 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x158E SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1609 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x15EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x65A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1627 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1645 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x168A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E9 PUSH2 0x1698 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EE2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x1722 DUP5 DUP3 PUSH2 0x1E10 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x14BC DUP4 DUP3 PUSH2 0x1E10 JUMP JUMPDEST PUSH2 0xD79 PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1741 PUSH2 0x1698 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1781 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F02 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x17CB SWAP2 SWAP1 PUSH2 0x1ECB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1803 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1818 DUP6 DUP4 DUP4 PUSH2 0x1840 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1855 JUMPI PUSH2 0x1850 DUP3 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x186C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1895 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x65A JUMP JUMPDEST POP DUP1 PUSH2 0x7E9 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x18AC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1910 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1926 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x192F DUP4 PUSH2 0x18FA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x194E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1957 DUP4 PUSH2 0x18FA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x196B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1988 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1991 DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP3 POP PUSH2 0x199F PUSH1 0x20 DUP6 ADD PUSH2 0x18FA JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E9 DUP3 PUSH2 0x18FA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x19F7 JUMPI PUSH2 0x19F7 PUSH2 0x19C9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A26 JUMPI PUSH2 0x1A26 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x1A3D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A65 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A6E DUP4 PUSH2 0x18FA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A89 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1A99 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AA8 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x19DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1AC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1AF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B0D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B23 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B2F DUP8 DUP3 DUP9 ADD PUSH2 0x1AB2 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B4E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1B5A DUP8 DUP3 DUP9 ADD PUSH2 0x1AB2 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B75 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7E9 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x19DD JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B96 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BB8 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BD4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BE0 DUP7 DUP3 DUP8 ADD PUSH2 0x1B66 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C03 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C0C DUP4 PUSH2 0x18FA JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1A PUSH1 0x20 DUP5 ADD PUSH2 0x18FA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C35 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C3E DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1C67 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C85 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x4E756C6C2041646472657373 PUSH1 0xA0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1B1A5CDD1959 PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x1858DADB1A5CDD1959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x626 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xF17 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1DF1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1458 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1DFD JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E2A JUMPI PUSH2 0x1E2A PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x1E3E DUP2 PUSH2 0x1E38 DUP5 SLOAD PUSH2 0x1C53 JUMP JUMPDEST DUP5 PUSH2 0x1DCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1E70 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x1E59 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1458 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E9F JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1E7F JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1EBC JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00360894A13B LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122057 PUSH10 0x9568D062FE1EB966BE08 SWAP12 EXTCODECOPY ORIGIN 0xBD SELFDESTRUCT 0xA6 0xB6 DUP11 0xCA 0x2F SUB SWAP13 PUSH4 0x770A36C2 REVERT PUSH1 0xEB PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "445:4371:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;;;;;-1:-1:-1;5210:186:4;;;;;:::i;:::-;;:::i;:::-;;;1085:14:18;;1078:22;1060:41;;1048:2;1033:18;5210:186:4;920:187:18;2425:214:17;;;;;;;;;;-1:-1:-1;2425:214:17;;;;;:::i;:::-;;:::i;:::-;;3896:152:4;;;;;;;;;;-1:-1:-1;4027:14:4;;3896:152;;;1610:25:18;;;1598:2;1583:18;3896:152:4;1464:177:18;3291:534:17;;;;;;;;;;-1:-1:-1;3291:534:17;;;;;:::i;:::-;;:::i;3831:300::-;;;;;;;;;;-1:-1:-1;3831:300:17;;;;;:::i;:::-;;:::i;3754:82:4:-;;;;;;;;;;-1:-1:-1;3754:82:4;;3827:2;2358:36:18;;2346:2;2331:18;3754:82:4;2216:184:18;1822:65:17;;;;;;;;;;;;;:::i;4161:214:2:-;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;1879:84:3:-;;;;;;;;;;-1:-1:-1;1926:4:3;1949:7;;;1879:84;;4106:171:4;;;;;;;;;;-1:-1:-1;4106:171:4;;;;;:::i;:::-;-1:-1:-1;;;;;4250:20:4;4171:7;4250:20;;;-1:-1:-1;;;;;;;;;;;4250:20:4;;;;;;;4106:171;3155:101:0;;;;;;;;;;;;;:::i;1755:61:17:-;;;;;;;;;;;;;:::i;4137:573::-;;;;;;;;;;-1:-1:-1;4137:573:17;;;;;:::i;:::-;;:::i;2441:144:0:-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;;-1:-1:-1;;;;;5276:32:18;;;5258:51;;5246:2;5231:18;2441:144:0;5112:203:18;2973:148:4;;;;;;;;;;;;;:::i;707:46:17:-;;;;;;;;;;-1:-1:-1;707:46:17;;;;;:::i;:::-;;;;;;;;;;;;;;759:47;;;;;;;;;;-1:-1:-1;759:47:17;;;;;:::i;:::-;;;;;;;;;;;;;;2771:514;;;;;;;;;;-1:-1:-1;2771:514:17;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;1273:363:17;;;;;;;;;;-1:-1:-1;1273:363:17;;;;;:::i;:::-;;:::i;549:26::-;;;;;;;;;;-1:-1:-1;549:26:17;;;;-1:-1:-1;;;;;549:26:17;;;658:43;;;;;;;;;;-1:-1:-1;658:43:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;4708:195:4;;;;;;;;;;-1:-1:-1;4708:195:4;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;1893:526:17:-;;;;;;;;;;-1:-1:-1;1893:526:17;;;;;:::i;:::-;;:::i;2716:144:4:-;2846:7;2839:14;;2761:13;;-1:-1:-1;;;;;;;;;;;2064:20:4;2839:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;966:10:6;5337:31:4;966:10:6;5353:7:4;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;;:::o;2425:214:17:-;2334:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2514:20:17;::::1;2506:44;;;;-1:-1:-1::0;;;2506:44:17::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;2560:20:17;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;;:29;;-1:-1:-1;;2560:29:17::1;::::0;::::1;;::::0;;::::1;::::0;;;2604:28;;1060:41:18;;;2604:28:17::1;::::0;1033:18:18;2604:28:17::1;;;;;;;2425:214:::0;;:::o;3291:534::-;3403:4;1503:19:3;:17;:19::i;:::-;-1:-1:-1;;;;;3428:19:17;::::1;;::::0;;;:11:::1;:19;::::0;;;;;::::1;;3427:20;3419:71;;;;-1:-1:-1::0;;;3419:71:17::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3509:22:17;::::1;;::::0;;;:11:::1;:22;::::0;;;;;::::1;;3508:23;3500:77;;;;-1:-1:-1::0;;;3500:77:17::1;;;;;;;:::i;:::-;3595:6;3604:1;3595:10:::0;3587:46:::1;;;::::0;-1:-1:-1;;;3587:46:17;;8638:2:18;3587:46:17::1;::::0;::::1;8620:21:18::0;8677:2;8657:18;;;8650:30;-1:-1:-1;;;8696:18:18;;;8689:54;8760:18;;3587:46:17::1;8436:348:18::0;3587:46:17::1;-1:-1:-1::0;;;;;3670:19:17;::::1;;::::0;;;:11:::1;:19;::::0;;;;;3651:15:::1;:38;;::::0;:66:::1;;-1:-1:-1::0;;;;;;3693:19:17;::::1;;::::0;;;:11:::1;:19;::::0;;;;;:24;3651:66:::1;3643:113;;;;-1:-1:-1::0;;;3643:113:17::1;;;;;;;:::i;:::-;3773:45;3792:6;3800:9;3811:6;3773:18;:45::i;:::-;3766:52;;1532:1:3;3291:534:17::0;;;;;:::o;3831:300::-;1503:19:3;:17;:19::i;:::-;2334:13:0::1;:11;:13::i;:::-;-1:-1:-1::0;;;;;3929:26:17;::::2;3921:51;;;;-1:-1:-1::0;;;3921:51:17::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3990:23:17;::::2;1713:19:5::0;3982:63:17::2;;;::::0;-1:-1:-1;;;3982:63:17;;9394:2:18;3982:63:17::2;::::0;::::2;9376:21:18::0;9433:2;9413:18;;;9406:30;9472:27;9452:18;;;9445:55;9517:18;;3982:63:17::2;9192:349:18::0;3982:63:17::2;4055:11;:26:::0;;-1:-1:-1;;;;;;4055:26:17::2;-1:-1:-1::0;;;;;4055:26:17;::::2;::::0;;::::2;::::0;;;4096:28:::2;::::0;::::2;::::0;-1:-1:-1;;4096:28:17::2;3831:300:::0;:::o;1822:65::-;2334:13:0;:11;:13::i;:::-;1870:10:17::1;:8;:10::i;:::-;1822:65::o:0;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;1755:61:17:-:0;2334:13:0;:11;:13::i;:::-;1801:8:17::1;:6;:8::i;4137:573::-:0;1503:19:3;:17;:19::i;:::-;4260:35:17;;::::1;4252:87;;;::::0;-1:-1:-1;;;4252:87:17;;9748:2:18;4252:87:17::1;::::0;::::1;9730:21:18::0;9787:2;9767:18;;;9760:30;9826:34;9806:18;;;9799:62;-1:-1:-1;;;9877:18:18;;;9870:37;9924:19;;4252:87:17::1;9546:403:18::0;4252:87:17::1;4375:10:::0;4349:23:::1;4402:302;4426:15;4422:1;:19;4402:302;;;4493:11;:26;4505:10;;4516:1;4505:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4493:26:17::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4493:26:17;;::::1;;4489:129;;;4543:56;::::0;-1:-1:-1;;;4543:56:17;;10288:2:18;4543:56:17::1;::::0;::::1;10270:21:18::0;10327:2;10307:18;;;10300:30;10366:34;10346:18;;;10339:62;-1:-1:-1;;;10417:18:18;;;10410:44;10471:19;;4543:56:17::1;10086:410:18::0;4489:129:17::1;4631:48;4641:10;4653;;4664:1;4653:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4668:7;;4676:1;4668:10;;;;;;;:::i;:::-;;;;;;;4631:9;:48::i;:::-;4443:3;;4402:302;;;;4242:468;4137:573:::0;;;;:::o;2973:148:4:-;3105:9;3098:16;;3020:13;;-1:-1:-1;;;;;;;;;;;2064:20:4;3098:16;;;:::i;2771:514:17:-;2863:4;1503:19:3;:17;:19::i;:::-;2900:10:17::1;2888:23;::::0;;;:11:::1;:23;::::0;;;;;::::1;;2887:24;2879:75;;;;-1:-1:-1::0;;;2879:75:17::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2973:22:17;::::1;;::::0;;;:11:::1;:22;::::0;;;;;::::1;;2972:23;2964:77;;;;-1:-1:-1::0;;;2964:77:17::1;;;;;;;:::i;:::-;3059:6;3068:1;3059:10:::0;3051:46:::1;;;::::0;-1:-1:-1;;;3051:46:17;;8638:2:18;3051:46:17::1;::::0;::::1;8620:21:18::0;8677:2;8657:18;;;8650:30;-1:-1:-1;;;8696:18:18;;;8689:54;8760:18;;3051:46:17::1;8436:348:18::0;3051:46:17::1;3146:10;3134:23;::::0;;;:11:::1;:23;::::0;;;;;3115:15:::1;:42;;::::0;:74:::1;;-1:-1:-1::0;3173:10:17::1;3161:23;::::0;;;:11:::1;:23;::::0;;;;;:28;3115:74:::1;3107:121;;;;-1:-1:-1::0;;;3107:121:17::1;;;;;;;:::i;:::-;3245:33;3260:9;3271:6;3245:14;:33::i;1273:363::-:0;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;1388:26:17::1;1401:4;1407:6;1388:12;:26::i;:::-;1424;1439:10;1424:14;:26::i;:::-;1460:17;:15;:17::i;:::-;1487:24;:22;:24::i;:::-;1522:12;:27:::0;;;1559:31:::1;1565:10;1537:12:::0;1559:5:::1;:31::i;:::-;5070:14:1::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;10654:50:18;;5142:14:1;;10642:2:18;10627:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;1273:363:17;;;:::o;4708:195:4:-;-1:-1:-1;;;;;4867:20:4;;;4788:7;4867:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;4708:195::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;5258:51:18::0;5231:18;;3534:31:0::1;5112:203:18::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1893:526:17:-;1503:19:3;:17;:19::i;:::-;1701:11:17::1;::::0;-1:-1:-1;;;;;1701:11:17::1;1687:10;:25;1679:52;;;::::0;-1:-1:-1;;;1679:52:17;;10917:2:18;1679:52:17::1;::::0;::::1;10899:21:18::0;10956:2;10936:18;;;10929:30;-1:-1:-1;;;10975:18:18;;;10968:44;11029:18;;1679:52:17::1;10715:338:18::0;1679:52:17::1;-1:-1:-1::0;;;;;2018:21:17;::::2;2010:46;;;;-1:-1:-1::0;;;2010:46:17::2;;;;;;;:::i;:::-;2070:6;2080:1;2070:11:::0;2062:56:::2;;;::::0;-1:-1:-1;;;2062:56:17;;11260:2:18;2062:56:17::2;::::0;::::2;11242:21:18::0;;;11279:18;;;11272:30;11338:34;11318:18;;;11311:62;11390:18;;2062:56:17::2;11058:356:18::0;2062:56:17::2;-1:-1:-1::0;;;;;2175:20:17;::::2;;::::0;;;:11:::2;:20;::::0;;;;;:33;::::2;;::::0;:68:::2;;-1:-1:-1::0;;;;;;2212:21:17;::::2;;::::0;;;:12:::2;:21;::::0;;;;;:31;::::2;;2175:68;2171:246;;;-1:-1:-1::0;;;;;2255:20:17;::::2;;::::0;;;:11:::2;:20;::::0;;;;;;;:32;;;2297:12:::2;:21:::0;;;;;;:30;;;2373:37;;11593:25:18;;;11634:18;;;11627:34;;;2373:37:17::2;::::0;11566:18:18;2373:37:17::2;;;;;;;2171:246;1893:526:::0;;;:::o;10001:128:4:-;10085:37;10094:5;10101:7;10110:5;10117:4;10085:8;:37::i;2658:162:0:-;966:10:6;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:6;2763:40:0;;;5258:51:18;5231:18;;2763:40:0;5112:203:18;2031:106:3;1926:4;1949:7;;;2100:9;2092:38;;;;-1:-1:-1;;;2092:38:3;;11874:2:18;2092:38:3;;;11856:21:18;11913:2;11893:18;;;11886:30;-1:-1:-1;;;11932:18:18;;;11925:46;11988:18;;2092:38:3;11672:340:18;5988:244:4;6075:4;966:10:6;6131:37:4;6147:4;966:10:6;6162:5:4;6131:15;:37::i;:::-;6178:26;6188:4;6194:2;6198:5;6178:9;:26::i;:::-;-1:-1:-1;6221:4:4;;5988:244;-1:-1:-1;;;;5988:244:4:o;2697:117:3:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:15:::0;;-1:-1:-1;;2755:15:3::1;::::0;;2785:22:::1;966:10:6::0;2794:12:3::1;2785:22;::::0;-1:-1:-1;;;;;5276:32:18;;;5258:51;;5246:2;5231:18;2785:22:3::1;;;;;;;2697:117::o:0;4603:312:2:-;4683:4;-1:-1:-1;;;;;4692:6:2;4675:23;;;:120;;;4789:6;-1:-1:-1;;;;;4753:42:2;:32;-1:-1:-1;;;;;;;;;;;1519:53:10;-1:-1:-1;;;;;1519:53:10;;1441:138;4753:32:2;-1:-1:-1;;;;;4753:42:2;;;4675:120;4658:251;;;4869:29;;-1:-1:-1;;;4869:29:2;;;;;;;;;;;4716:98:17;1503:19:3;:17;:19::i;:::-;2334:13:0::1;:11;:13::i;6057:538:2:-:0;6174:17;-1:-1:-1;;;;;6156:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6156:52:2;;;;;;;;-1:-1:-1;;6156:52:2;;;;;;;;;;;;:::i;:::-;;;6152:437;;6518:60;;-1:-1:-1;;;6518:60:2;;-1:-1:-1;;;;;5276:32:18;;6518:60:2;;;5258:51:18;5231:18;;6518:60:2;5112:203:18;6152:437:2;-1:-1:-1;;;;;;;;;;;6250:40:2;;6246:120;;6317:34;;-1:-1:-1;;;6317:34:2;;;;;1610:25:18;;;1583:18;;6317:34:2;1464:177:18;6246:120:2;6379:54;6409:17;6428:4;6379:29;:54::i;5032:213::-;5106:4;-1:-1:-1;;;;;5115:6:2;5098:23;;5094:145;;5199:29;;-1:-1:-1;;;5199:29:2;;;;;;;;;;;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;2450:115:3:-;1503:19;:17;:19::i;:::-;2509:7:::1;:14:::0;;-1:-1:-1;;2509:14:3::1;2519:4;2509:14;::::0;;2538:20:::1;2545:12;966:10:6::0;;887:96;6605:300:4;-1:-1:-1;;;;;6688:18:4;;6684:86;;6729:30;;-1:-1:-1;;;6729:30:4;;6756:1;6729:30;;;5258:51:18;5231:18;;6729:30:4;5112:203:18;6684:86:4;-1:-1:-1;;;;;6783:16:4;;6779:86;;6822:32;;-1:-1:-1;;;6822:32:4;;6851:1;6822:32;;;5258:51:18;5231:18;;6822:32:4;5112:203:18;6779:86:4;6874:24;6882:4;6888:2;6892:5;6874:7;:24::i;4472:178::-;4541:4;966:10:6;4595:27:4;966:10:6;4612:2:4;4616:5;4595:9;:27::i;2282:147::-;6931:20:1;:18;:20::i;:::-;2384:38:4::1;2407:5;2414:7;2384:22;:38::i;1847:127:0:-:0;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;1084:97:3:-:0;6931:20:1;:18;:20::i;:::-;1147:27:3::1;:25;:27::i;2970:67:2:-:0;6931:20:1;:18;:20::i;8733:208:4:-;-1:-1:-1;;;;;8803:21:4;;8799:91;;8847:32;;-1:-1:-1;;;8847:32:4;;8876:1;8847:32;;;5258:51:18;5231:18;;8847:32:4;5112:203:18;8799:91:4;8899:35;8915:1;8919:7;8928:5;8899:7;:35::i;10976:487::-;-1:-1:-1;;;;;;;;;;;;;;;;11141:19:4;;11137:89;;11183:32;;-1:-1:-1;;;11183:32:4;;11212:1;11183:32;;;5258:51:18;5231:18;;11183:32:4;5112:203:18;11137:89:4;-1:-1:-1;;;;;11239:21:4;;11235:90;;11283:31;;-1:-1:-1;;;11283:31:4;;11311:1;11283:31;;;5258:51:18;5231:18;;11283:31:4;5112:203:18;11235:90:4;-1:-1:-1;;;;;11334:20:4;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11381:76;;;;11431:7;-1:-1:-1;;;;;11415:31:4;11424:5;-1:-1:-1;;;;;11415:31:4;;11440:5;11415:31;;;;1610:25:18;;1598:2;1583:18;;1464:177;11415:31:4;;;;;;;;11381:76;11074:389;10976:487;;;;:::o;11745:477::-;11844:24;11871:25;11881:5;11888:7;11871:9;:25::i;:::-;11844:52;;-1:-1:-1;;11910:16:4;:37;11906:310;;11986:5;11967:16;:24;11963:130;;;12018:60;;-1:-1:-1;;;12018:60:4;;-1:-1:-1;;;;;12426:32:18;;12018:60:4;;;12408:51:18;12475:18;;;12468:34;;;12518:18;;;12511:34;;;12381:18;;12018:60:4;12206:345:18;11963:130:4;12134:57;12143:5;12150:7;12178:5;12159:16;:24;12185:5;12134:8;:57::i;:::-;11834:388;11745:477;;;:::o;2209:106:3:-;1926:4;1949:7;;;2267:41;;;;-1:-1:-1;;;2267:41:3;;12758:2:18;2267:41:3;;;12740:21:18;12797:2;12777:18;;;12770:30;-1:-1:-1;;;12816:18:18;;;12809:50;12876:18;;2267:41:3;12556:344:18;2264::10;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:10;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;7220:1170:4:-;-1:-1:-1;;;;;;;;;;;;;;;;7362:18:4;;7358:546;;7516:5;7498:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7358:546:4;;-1:-1:-1;7358:546:4;;-1:-1:-1;;;;;7574:17:4;;7552:19;7574:17;;;;;;;;;;;7609:19;;;7605:115;;;7655:50;;-1:-1:-1;;;7655:50:4;;-1:-1:-1;;;;;12426:32:18;;7655:50:4;;;12408:51:18;12475:18;;;12468:34;;;12518:18;;;12511:34;;;12381:18;;7655:50:4;12206:345:18;7605:115:4;-1:-1:-1;;;;;7840:17:4;;:11;:17;;;;;;;;;;7860:19;;;;7840:39;;7358:546;-1:-1:-1;;;;;7918:16:4;;7914:429;;8081:14;;;:23;;;;;;;7914:429;;;-1:-1:-1;;;;;8294:15:4;;:11;:15;;;;;;;;;;:24;;;;;;7914:429;8373:2;-1:-1:-1;;;;;8358:25:4;8367:4;-1:-1:-1;;;;;8358:25:4;;8377:5;8358:25;;;;1610::18;;1598:2;1583:18;;1464:177;8358:25:4;;;;;;;;7295:1095;7220:1170;;;:::o;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;2435:216:4;6931:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2600:7:4;:15:::1;2610:5:::0;2600:7;:15:::1;:::i;:::-;-1:-1:-1::0;2625:9:4::1;::::0;::::1;:19;2637:7:::0;2625:9;:19:::1;:::i;1980:235:0:-:0;6931:20:1;:18;:20::i;1187:95:3:-;6931:20:1;:18;:20::i;:::-;1270:5:3::1;1260:15:::0;;-1:-1:-1;;1260:15:3::1;::::0;;1187:95::o;1671:281:10:-;1748:17;-1:-1:-1;;;;;1748:29:10;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:10;;-1:-1:-1;;;;;5276:32:18;;1805:47:10;;;5258:51:18;5231:18;;1805:47:10;5112:203:18;1744:119:10;-1:-1:-1;;;;;;;;;;;1872:73:10;;-1:-1:-1;;;;;;1872:73:10;-1:-1:-1;;;;;1872:73:10;;;;;;;;;;1671:281::o;3900:253:14:-;3983:12;4008;4022:23;4049:6;-1:-1:-1;;;;;4049:19:14;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;:::-;4084:62;3900:253;-1:-1:-1;;;;;3900:253:14:o;6113:122:10:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:10;;;;;;;;;;;4421:582:14;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4841:17;;:22;:49;;;;-1:-1:-1;;;;;;4867:18:14;;;:23;4841:49;4837:119;;;4917:24;;-1:-1:-1;;;4917:24:14;;-1:-1:-1;;;;;5276:32:18;;4917:24:14;;;5258:51:18;5231:18;;4917:24:14;5112:203:18;4837:119:14;-1:-1:-1;4976:10:14;4969:17;;5543:487;5674:17;;:21;5670:354;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;-1:-1:-1;;;5994:19:14;;;;;;;;;;;14:418:18;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:18;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:18:o;1112:347::-;1177:6;1185;1238:2;1226:9;1217:7;1213:23;1209:32;1206:52;;;1254:1;1251;1244:12;1206:52;1277:29;1296:9;1277:29;:::i;:::-;1267:39;;1356:2;1345:9;1341:18;1328:32;1403:5;1396:13;1389:21;1382:5;1379:32;1369:60;;1425:1;1422;1415:12;1369:60;1448:5;1438:15;;;1112:347;;;;;:::o;1646:374::-;1723:6;1731;1739;1792:2;1780:9;1771:7;1767:23;1763:32;1760:52;;;1808:1;1805;1798:12;1760:52;1831:29;1850:9;1831:29;:::i;:::-;1821:39;;1879:38;1913:2;1902:9;1898:18;1879:38;:::i;:::-;1646:374;;1869:48;;-1:-1:-1;;;1986:2:18;1971:18;;;;1958:32;;1646:374::o;2025:186::-;2084:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:52;;;2153:1;2150;2143:12;2105:52;2176:29;2195:9;2176:29;:::i;2405:127::-;2466:10;2461:3;2457:20;2454:1;2447:31;2497:4;2494:1;2487:15;2521:4;2518:1;2511:15;2537:715;2601:5;2633:1;2657:18;2649:6;2646:30;2643:56;;;2679:18;;:::i;:::-;-1:-1:-1;2834:2:18;2828:9;-1:-1:-1;;2747:2:18;2726:15;;2722:29;;2892:2;2880:15;2876:29;2864:42;;2957:22;;;2936:18;2921:34;;2918:62;2915:88;;;2983:18;;:::i;:::-;3019:2;3012:22;3067;;;3052:6;-1:-1:-1;3052:6:18;3104:16;;;3101:25;-1:-1:-1;3098:45:18;;;3139:1;3136;3129:12;3098:45;3189:6;3184:3;3177:4;3169:6;3165:17;3152:44;3244:1;3237:4;3228:6;3220;3216:19;3212:30;3205:41;;2537:715;;;;;:::o;3257:523::-;3334:6;3342;3395:2;3383:9;3374:7;3370:23;3366:32;3363:52;;;3411:1;3408;3401:12;3363:52;3434:29;3453:9;3434:29;:::i;:::-;3424:39;;3514:2;3503:9;3499:18;3486:32;3541:18;3533:6;3530:30;3527:50;;;3573:1;3570;3563:12;3527:50;3596:22;;3649:4;3641:13;;3637:27;-1:-1:-1;3627:55:18;;3678:1;3675;3668:12;3627:55;3701:73;3766:7;3761:2;3748:16;3743:2;3739;3735:11;3701:73;:::i;:::-;3691:83;;;3257:523;;;;;:::o;3967:367::-;4030:8;4040:6;4094:3;4087:4;4079:6;4075:17;4071:27;4061:55;;4112:1;4109;4102:12;4061:55;-1:-1:-1;4135:20:18;;4178:18;4167:30;;4164:50;;;4210:1;4207;4200:12;4164:50;4247:4;4239:6;4235:17;4223:29;;4307:3;4300:4;4290:6;4287:1;4283:14;4275:6;4271:27;4267:38;4264:47;4261:67;;;4324:1;4321;4314:12;4261:67;3967:367;;;;;:::o;4339:768::-;4461:6;4469;4477;4485;4538:2;4526:9;4517:7;4513:23;4509:32;4506:52;;;4554:1;4551;4544:12;4506:52;4594:9;4581:23;4627:18;4619:6;4616:30;4613:50;;;4659:1;4656;4649:12;4613:50;4698:70;4760:7;4751:6;4740:9;4736:22;4698:70;:::i;:::-;4787:8;;-1:-1:-1;4672:96:18;-1:-1:-1;;4875:2:18;4860:18;;4847:32;4904:18;4891:32;;4888:52;;;4936:1;4933;4926:12;4888:52;4975:72;5039:7;5028:8;5017:9;5013:24;4975:72;:::i;:::-;4339:768;;;;-1:-1:-1;5066:8:18;-1:-1:-1;;;;4339:768:18:o;5320:221::-;5363:5;5416:3;5409:4;5401:6;5397:17;5393:27;5383:55;;5434:1;5431;5424:12;5383:55;5456:79;5531:3;5522:6;5509:20;5502:4;5494:6;5490:17;5456:79;:::i;5546:652::-;5643:6;5651;5659;5712:2;5700:9;5691:7;5687:23;5683:32;5680:52;;;5728:1;5725;5718:12;5680:52;5768:9;5755:23;5801:18;5793:6;5790:30;5787:50;;;5833:1;5830;5823:12;5787:50;5856;5898:7;5889:6;5878:9;5874:22;5856:50;:::i;:::-;5846:60;;;5959:2;5948:9;5944:18;5931:32;5988:18;5978:8;5975:32;5972:52;;;6020:1;6017;6010:12;5972:52;6043;6087:7;6076:8;6065:9;6061:24;6043:52;:::i;:::-;5546:652;;6033:62;;-1:-1:-1;;;;6164:2:18;6149:18;;;;6136:32;;5546:652::o;6203:260::-;6271:6;6279;6332:2;6320:9;6311:7;6307:23;6303:32;6300:52;;;6348:1;6345;6338:12;6300:52;6371:29;6390:9;6371:29;:::i;:::-;6361:39;;6419:38;6453:2;6442:9;6438:18;6419:38;:::i;:::-;6409:48;;6203:260;;;;;:::o;6468:420::-;6545:6;6553;6561;6614:2;6602:9;6593:7;6589:23;6585:32;6582:52;;;6630:1;6627;6620:12;6582:52;6653:29;6672:9;6653:29;:::i;:::-;6643:39;6751:2;6736:18;;6723:32;;-1:-1:-1;6852:2:18;6837:18;;;6824:32;;6468:420;-1:-1:-1;;;6468:420:18:o;6893:380::-;6972:1;6968:12;;;;7015;;;7036:61;;7090:4;7082:6;7078:17;7068:27;;7036:61;7143:2;7135:6;7132:14;7112:18;7109:38;7106:161;;7189:10;7184:3;7180:20;7177:1;7170:31;7224:4;7221:1;7214:15;7252:4;7249:1;7242:15;7106:161;;6893:380;;;:::o;7278:336::-;7480:2;7462:21;;;7519:2;7499:18;;;7492:30;-1:-1:-1;;;7553:2:18;7538:18;;7531:42;7605:2;7590:18;;7278:336::o;7619:402::-;7821:2;7803:21;;;7860:2;7840:18;;;7833:30;7899:34;7894:2;7879:18;;7872:62;-1:-1:-1;;;7965:2:18;7950:18;;7943:36;8011:3;7996:19;;7619:402::o;8026:405::-;8228:2;8210:21;;;8267:2;8247:18;;;8240:30;8306:34;8301:2;8286:18;;8279:62;-1:-1:-1;;;8372:2:18;8357:18;;8350:39;8421:3;8406:19;;8026:405::o;8789:398::-;8991:2;8973:21;;;9030:2;9010:18;;;9003:30;9069:34;9064:2;9049:18;;9042:62;-1:-1:-1;;;9135:2:18;9120:18;;9113:32;9177:3;9162:19;;8789:398::o;9954:127::-;10015:10;10010:3;10006:20;10003:1;9996:31;10046:4;10043:1;10036:15;10070:4;10067:1;10060:15;12017:184;12087:6;12140:2;12128:9;12119:7;12115:23;12111:32;12108:52;;;12156:1;12153;12146:12;12108:52;-1:-1:-1;12179:16:18;;12017:184;-1:-1:-1;12017:184:18:o;12905:222::-;12970:9;;;12991:10;;;12988:133;;;13043:10;13038:3;13034:20;13031:1;13024:31;13078:4;13075:1;13068:15;13106:4;13103:1;13096:15;13258:518;13360:2;13355:3;13352:11;13349:421;;;13396:5;13393:1;13386:16;13440:4;13437:1;13427:18;13510:2;13498:10;13494:19;13491:1;13487:27;13481:4;13477:38;13546:4;13534:10;13531:20;13528:47;;;-1:-1:-1;13569:4:18;13528:47;13624:2;13619:3;13615:12;13612:1;13608:20;13602:4;13598:31;13588:41;;13679:81;13697:2;13690:5;13687:13;13679:81;;;13756:1;13742:16;;13723:1;13712:13;13679:81;;13952:1299;14078:3;14072:10;14105:18;14097:6;14094:30;14091:56;;;14127:18;;:::i;:::-;14156:97;14246:6;14206:38;14238:4;14232:11;14206:38;:::i;:::-;14200:4;14156:97;:::i;:::-;14302:4;14333:2;14322:14;;14350:1;14345:649;;;;15038:1;15055:6;15052:89;;;-1:-1:-1;15107:19:18;;;15101:26;15052:89;-1:-1:-1;;13909:1:18;13905:11;;;13901:24;13897:29;13887:40;13933:1;13929:11;;;13884:57;15154:81;;14315:930;;14345:649;13205:1;13198:14;;;13242:4;13229:18;;-1:-1:-1;;14381:20:18;;;14499:222;14513:7;14510:1;14507:14;14499:222;;;14595:19;;;14589:26;14574:42;;14702:4;14687:20;;;;14655:1;14643:14;;;;14529:12;14499:222;;;14503:3;14749:6;14740:7;14737:19;14734:201;;;14810:19;;;14804:26;-1:-1:-1;;14893:1:18;14889:14;;;14905:3;14885:24;14881:37;14877:42;14862:58;14847:74;;14734:201;-1:-1:-1;;;;14981:1:18;14965:14;;;14961:22;14948:36;;-1:-1:-1;13952:1299:18:o;15256:301::-;15385:3;15423:6;15417:13;15469:6;15462:4;15454:6;15450:17;15445:3;15439:37;15531:1;15495:16;;15520:13;;;-1:-1:-1;15495:16:18;15256:301;-1:-1:-1;15256:301:18:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1604600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"batchTransfer(address[],uint256[])": "infinite",
								"blacklisted(address)": "2572",
								"decimals()": "222",
								"icoContract()": "2425",
								"initialize(string,string,uint256)": "infinite",
								"lockedAmount(address)": "2605",
								"lockedUntil(address)": "2583",
								"name()": "infinite",
								"owner()": "2409",
								"pause()": "infinite",
								"paused()": "2369",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"setBlacklist(address,bool)": "28430",
								"setICOContract(address)": "infinite",
								"setLockup(address,uint256,uint256)": "55310",
								"symbol()": "infinite",
								"totalSupply()": "2370",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28453",
								"unpause()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 445,
									"end": 4816,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1162,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1186,
									"end": 1208,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1186,
									"end": 1206,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 1186,
									"end": 1208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1186,
									"end": 1208,
									"name": "tag",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1186,
									"end": 1208,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "10000000000000000"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "468"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4816,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122057699568d062fe1eb966be089b3c32bdffa6b68aca2f039c63770a36c2fd60eb64736f6c634300081a0033",
									".code": [
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "DBAC26E9"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "DBAC26E9"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "DD62ED3E"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "F326F0D7"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "B119490E"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "C66E4095"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "9BC289F1"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "A153E708"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "A9059CBB"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "88D695B2"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "52D1902D"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "52D1902D"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "5C975ABB"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "3F4BA83A"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "4F1EF286"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "153B0D1E"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "18160DDD"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "2E0D2A00"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4816,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 2425,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 2425,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02"
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1600,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1464,
											"end": 1641,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3291,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 3291,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "tag",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "tag",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 3831,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 3831,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2358,
											"end": 2394,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2358,
											"end": 2394,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2346,
											"end": 2348,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2331,
											"end": 2349,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2216,
											"end": 2400,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1822,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "tag",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 1755,
											"end": 1816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "tag",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 4137,
											"end": 4710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 4137,
											"end": 4710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5246,
											"end": 5248,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 707,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 707,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 707,
											"end": 753,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 759,
											"end": 806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "tag",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 759,
											"end": 806,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "tag",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 2771,
											"end": 3285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "tag",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2771,
											"end": 3285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 1273,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "tag",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 1273,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 549,
											"end": 575,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 658,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 658,
											"end": 701,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 701,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 1893,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 1893,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5337,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2514,
											"end": 2534,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2514,
											"end": 2534,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 2506,
											"end": 2550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 2506,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2560,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2580,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2560,
											"end": 2589,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2560,
											"end": 2589,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2604,
											"end": 2632,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2604,
											"end": 2632,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2604,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "CF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8"
										},
										{
											"begin": 2604,
											"end": 2632,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2604,
											"end": 2632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2632,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2604,
											"end": 2632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2604,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2604,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2604,
											"end": 2632,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2604,
											"end": 2632,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3403,
											"end": 3407,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3428,
											"end": 3447,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3428,
											"end": 3447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3428,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3447,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3428,
											"end": 3447,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3428,
											"end": 3447,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3428,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 3428,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3428,
											"end": 3447,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3428,
											"end": 3447,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3428,
											"end": 3447,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3428,
											"end": 3447,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3428,
											"end": 3447,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3428,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3428,
											"end": 3447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3427,
											"end": 3447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 3419,
											"end": 3490,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 3419,
											"end": 3490,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3509,
											"end": 3531,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3509,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3509,
											"end": 3520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 3509,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3509,
											"end": 3531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3509,
											"end": 3531,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3508,
											"end": 3531,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 3500,
											"end": 3577,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 3500,
											"end": 3577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3595,
											"end": 3601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3604,
											"end": 3605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3605,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3587,
											"end": 3633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 3587,
											"end": 3633,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3587,
											"end": 3633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3633,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3587,
											"end": 3633,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3587,
											"end": 3633,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8638,
											"end": 8640,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3587,
											"end": 3633,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3587,
											"end": 3633,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8641,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8677,
											"end": 8679,
											"name": "PUSH",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8650,
											"end": 8680,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416D6F756E742073686F756C646E2774206265207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8696,
											"end": 8714,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8696,
											"end": 8714,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8696,
											"end": 8714,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8689,
											"end": 8743,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3587,
											"end": 3633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 8436,
											"end": 8784,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3587,
											"end": 3633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 3587,
											"end": 3633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3689,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3689,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3689,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3689,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3689,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3670,
											"end": 3689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3670,
											"end": 3689,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3689,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3689,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3689,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3689,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3651,
											"end": 3666,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3651,
											"end": 3689,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3651,
											"end": 3689,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3651,
											"end": 3689,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3651,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 3651,
											"end": 3717,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3693,
											"end": 3712,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3712,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3712,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3712,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3693,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3693,
											"end": 3712,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3712,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3693,
											"end": 3712,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3712,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3712,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3651,
											"end": 3717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 3651,
											"end": 3717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 3643,
											"end": 3756,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 3643,
											"end": 3756,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3773,
											"end": 3818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 3792,
											"end": 3798,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3800,
											"end": 3809,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3811,
											"end": 3817,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3773,
											"end": 3791,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 3773,
											"end": 3818,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3773,
											"end": 3818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 3773,
											"end": 3818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3766,
											"end": 3818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3766,
											"end": 3818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1532,
											"end": 1533,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1532,
											"end": 1533,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3929,
											"end": 3955,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3929,
											"end": 3955,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 3921,
											"end": 3972,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 3921,
											"end": 3972,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3990,
											"end": 4013,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3990,
											"end": 4013,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 3982,
											"end": 4045,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3982,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4045,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3982,
											"end": 4045,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3982,
											"end": 4045,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9394,
											"end": 9396,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3982,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3982,
											"end": 4045,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3982,
											"end": 4045,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9376,
											"end": 9397,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9433,
											"end": 9435,
											"name": "PUSH",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 9413,
											"end": 9431,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9413,
											"end": 9431,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9413,
											"end": 9431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9406,
											"end": 9436,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9472,
											"end": 9499,
											"name": "PUSH",
											"source": 18,
											"value": "41646472657373206973206E6F74206120636F6E747261637400000000000000"
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9452,
											"end": 9470,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9445,
											"end": 9500,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9517,
											"end": 9535,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3982,
											"end": 4045,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 9192,
											"end": 9541,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3982,
											"end": 4045,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 3982,
											"end": 4045,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4066,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 4055,
											"end": 4081,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4081,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4055,
											"end": 4081,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4055,
											"end": 4081,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4081,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4081,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4081,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4081,
											"modifierDepth": 2,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4081,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4081,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4081,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4096,
											"end": 4124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4096,
											"end": 4124,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4096,
											"end": 4124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "E7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8"
										},
										{
											"begin": 4096,
											"end": 4124,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4096,
											"end": 4124,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1822,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 1870,
											"end": 1878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 1870,
											"end": 1880,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1870,
											"end": 1880,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 1870,
											"end": 1880,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 1755,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 1801,
											"end": 1807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "247"
										},
										{
											"begin": 1801,
											"end": 1809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "tag",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4260,
											"end": 4295,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4260,
											"end": 4295,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4260,
											"end": 4295,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4252,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 4252,
											"end": 4339,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4252,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4252,
											"end": 4339,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4252,
											"end": 4339,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4252,
											"end": 4339,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4252,
											"end": 4339,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4252,
											"end": 4339,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9730,
											"end": 9751,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9787,
											"end": 9789,
											"name": "PUSH",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9760,
											"end": 9790,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9826,
											"end": 9860,
											"name": "PUSH",
											"source": 18,
											"value": "42617463685472616E73666572206661696C65643A204D69736D617463686564"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9799,
											"end": 9861,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20617272617973"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9877,
											"end": 9895,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9877,
											"end": 9895,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9877,
											"end": 9895,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9870,
											"end": 9907,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9924,
											"end": 9943,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 9924,
											"end": 9943,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4252,
											"end": 4339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 9546,
											"end": 9949,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4252,
											"end": 4339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 4252,
											"end": 4339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4375,
											"end": 4385,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4349,
											"end": 4372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 4402,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4426,
											"end": 4441,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4422,
											"end": 4423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4422,
											"end": 4441,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4402,
											"end": 4704,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4402,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 4402,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 4493,
											"end": 4519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4515,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4515,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4516,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 4505,
											"end": 4518,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 4505,
											"end": 4518,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 4505,
											"end": 4518,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4493,
											"end": 4519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4493,
											"end": 4519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 4493,
											"end": 4519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4489,
											"end": 4618,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4489,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 4489,
											"end": 4618,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4543,
											"end": 4599,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4543,
											"end": 4599,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4599,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4543,
											"end": 4599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4543,
											"end": 4599,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4543,
											"end": 4599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10270,
											"end": 10291,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10327,
											"end": 10329,
											"name": "PUSH",
											"source": 18,
											"value": "2E"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10300,
											"end": 10330,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10366,
											"end": 10400,
											"name": "PUSH",
											"source": 18,
											"value": "42617463685472616E73666572206661696C65643A20526563697069656E7420"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10339,
											"end": 10401,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5CC8189B1858DADB1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10410,
											"end": 10454,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10471,
											"end": 10490,
											"name": "PUSH",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 10471,
											"end": 10490,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4543,
											"end": 4599,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 10086,
											"end": 10496,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4489,
											"end": 4618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 4489,
											"end": 4618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4631,
											"end": 4679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 4641,
											"end": 4651,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4663,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4663,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4664,
											"end": 4665,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 4653,
											"end": 4666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 4653,
											"end": 4666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 4653,
											"end": 4666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4675,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4675,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4676,
											"end": 4677,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 4668,
											"end": 4678,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4668,
											"end": 4678,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4631,
											"end": 4640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 4631,
											"end": 4679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4631,
											"end": 4679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 4631,
											"end": 4679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4443,
											"end": 4446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4443,
											"end": 4446,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4402,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 4402,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4402,
											"end": 4704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 4402,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4402,
											"end": 4704,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4242,
											"end": 4710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2771,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2863,
											"end": 2867,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2900,
											"end": 2910,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2888,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2888,
											"end": 2899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2888,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2888,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2888,
											"end": 2911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2887,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 2879,
											"end": 2954,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 2879,
											"end": 2954,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2973,
											"end": 2995,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 2995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 2995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2995,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 2995,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 2995,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2973,
											"end": 2995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 2995,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 2995,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 2995,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 2995,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 2995,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 2995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2973,
											"end": 2995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2995,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 2964,
											"end": 3041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 2964,
											"end": 3041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3059,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3068,
											"end": 3069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3069,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 3051,
											"end": 3097,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3097,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3051,
											"end": 3097,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3097,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8638,
											"end": 8640,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3051,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3051,
											"end": 3097,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3097,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8620,
											"end": 8641,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8677,
											"end": 8679,
											"name": "PUSH",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8650,
											"end": 8680,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416D6F756E742073686F756C646E2774206265207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8696,
											"end": 8714,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8696,
											"end": 8714,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8696,
											"end": 8714,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8689,
											"end": 8743,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3051,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 8436,
											"end": 8784,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3051,
											"end": 3097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 3051,
											"end": 3097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3146,
											"end": 3156,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3134,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3157,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3134,
											"end": 3157,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3134,
											"end": 3157,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3134,
											"end": 3145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3134,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3157,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3134,
											"end": 3157,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3157,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3134,
											"end": 3157,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3134,
											"end": 3157,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3130,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3157,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3157,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3157,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 3115,
											"end": 3189,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3173,
											"end": 3183,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3184,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3184,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3184,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3161,
											"end": 3184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3161,
											"end": 3184,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3184,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3184,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3184,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3184,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3161,
											"end": 3189,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3115,
											"end": 3189,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 3115,
											"end": 3189,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 3107,
											"end": 3228,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 3107,
											"end": 3228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3245,
											"end": 3278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 3260,
											"end": 3269,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3271,
											"end": 3277,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3245,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 3245,
											"end": 3278,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "tag",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 1401,
											"end": 1405,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 1413,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 1388,
											"end": 1400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 1388,
											"end": 1414,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 1388,
											"end": 1414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 1439,
											"end": 1449,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 1424,
											"end": 1450,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1424,
											"end": 1450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 1424,
											"end": 1450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1460,
											"end": 1477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 1460,
											"end": 1475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 1460,
											"end": 1477,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1460,
											"end": 1477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 1460,
											"end": 1477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 1487,
											"end": 1509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 1487,
											"end": 1511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 1487,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1522,
											"end": 1549,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1559,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 1565,
											"end": 1575,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1537,
											"end": 1549,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 1559,
											"end": 1564,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 1559,
											"end": 1590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1559,
											"end": 1590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 1559,
											"end": 1590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 10654,
											"end": 10704,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10654,
											"end": 10704,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 10644,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1273,
											"end": 1636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 1701,
											"end": 1712,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1687,
											"end": 1697,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1687,
											"end": 1712,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1731,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1679,
											"end": 1731,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10917,
											"end": 10919,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1679,
											"end": 1731,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10899,
											"end": 10920,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10956,
											"end": 10958,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10929,
											"end": 10959,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10975,
											"end": 10993,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10975,
											"end": 10993,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10975,
											"end": 10993,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10968,
											"end": 11012,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11029,
											"end": 11047,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 11029,
											"end": 11047,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 10715,
											"end": 11053,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 1679,
											"end": 1731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2018,
											"end": 2039,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 2010,
											"end": 2056,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 2010,
											"end": 2056,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2076,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2080,
											"end": 2081,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2081,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2118,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 2062,
											"end": 2118,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2118,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2118,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2118,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2118,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11260,
											"end": 11262,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2062,
											"end": 2118,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2118,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2118,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11242,
											"end": 11263,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11242,
											"end": 11263,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11242,
											"end": 11263,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11272,
											"end": 11302,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11338,
											"end": 11372,
											"name": "PUSH",
											"source": 18,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 11318,
											"end": 11336,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 11318,
											"end": 11336,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11318,
											"end": 11336,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11311,
											"end": 11373,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11390,
											"end": 11408,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 11390,
											"end": 11408,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2062,
											"end": 2118,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 11058,
											"end": 11414,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2062,
											"end": 2118,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 2062,
											"end": 2118,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2195,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2195,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2186,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2175,
											"end": 2195,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2195,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2208,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2208,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2208,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2208,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2243,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 2175,
											"end": 2243,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2233,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2233,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2233,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2233,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2233,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2224,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 2212,
											"end": 2233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2233,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2233,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2233,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2233,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2233,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2243,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2243,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2212,
											"end": 2243,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2243,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 2175,
											"end": 2243,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2171,
											"end": 2417,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2171,
											"end": 2417,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 2171,
											"end": 2417,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2275,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2266,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2255,
											"end": 2275,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2275,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 2297,
											"end": 2318,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2318,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2318,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2318,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2318,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2318,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2327,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2327,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2327,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2373,
											"end": 2410,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2373,
											"end": 2410,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11593,
											"end": 11618,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11593,
											"end": 11618,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11593,
											"end": 11618,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11627,
											"end": 11661,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11627,
											"end": 11661,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11627,
											"end": 11661,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2373,
											"end": 2410,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "86F2E10D5622D896B3F56E66C1A60639CA21A4674480F054BEC2CB9BA62F40CB"
										},
										{
											"begin": 2373,
											"end": 2410,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2373,
											"end": 2410,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2373,
											"end": 2410,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2373,
											"end": 2410,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2373,
											"end": 2410,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2373,
											"end": 2410,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2373,
											"end": 2410,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2373,
											"end": 2410,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 2171,
											"end": 2417,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 2171,
											"end": 2417,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1893,
											"end": 2419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10085,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 10085,
											"end": 10122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11874,
											"end": 11876,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11856,
											"end": 11877,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11913,
											"end": 11915,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11893,
											"end": 11911,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11886,
											"end": 11916,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11925,
											"end": 11971,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11988,
											"end": 12006,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 11988,
											"end": 12006,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 11672,
											"end": 12012,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6167,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 6131,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6196,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6178,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 1750,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5246,
											"end": 5248,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4716,
											"end": 4814,
											"name": "tag",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 4716,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2334,
											"end": 2345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1464,
											"end": 1641,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "tag",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 6874,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 4595,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2407,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 2384,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "309"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 8915,
											"end": 8916,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 8899,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "tag",
											"source": 4,
											"value": "441"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11440,
											"end": 11445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1600,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1464,
											"end": 1641,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "tag",
											"source": 4,
											"value": "443"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 11881,
											"end": 11886,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11888,
											"end": 11895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 11871,
											"end": 11896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "tag",
											"source": 4,
											"value": "446"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11910,
											"end": 11947,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11986,
											"end": 11991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11967,
											"end": 11983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11967,
											"end": 11991,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12426,
											"end": 12458,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12426,
											"end": 12458,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12408,
											"end": 12459,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12475,
											"end": 12493,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12475,
											"end": 12493,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12475,
											"end": 12493,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12468,
											"end": 12502,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12468,
											"end": 12502,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12468,
											"end": 12502,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12518,
											"end": 12536,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 12518,
											"end": 12536,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12518,
											"end": 12536,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 12206,
											"end": 12551,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "tag",
											"source": 4,
											"value": "448"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 12143,
											"end": 12148,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12150,
											"end": 12157,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12178,
											"end": 12183,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12159,
											"end": 12183,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12185,
											"end": 12190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 12134,
											"end": 12191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "tag",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11834,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12758,
											"end": 12760,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12740,
											"end": 12761,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12797,
											"end": 12799,
											"name": "PUSH",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12777,
											"end": 12795,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12770,
											"end": 12800,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12809,
											"end": 12859,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 12556,
											"end": 12900,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "tag",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "473"
										},
										{
											"begin": 7498,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "tag",
											"source": 4,
											"value": "472"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12426,
											"end": 12458,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12426,
											"end": 12458,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12408,
											"end": 12459,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12475,
											"end": 12493,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12475,
											"end": 12493,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12475,
											"end": 12493,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12468,
											"end": 12502,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12468,
											"end": 12502,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12468,
											"end": 12502,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12518,
											"end": 12536,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 12518,
											"end": 12536,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12518,
											"end": 12536,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 12206,
											"end": 12551,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "tag",
											"source": 4,
											"value": "475"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "474"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8373,
											"end": 8375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8377,
											"end": 8382,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1600,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1464,
											"end": 1641,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "tag",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7295,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 2600,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "488"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "451"
										},
										{
											"begin": 2637,
											"end": 2644,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "489"
										},
										{
											"begin": 2625,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "429"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 4049,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DELEGATECALL",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 4091,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3900,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5231,
											"end": 5249,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 5112,
											"end": 5315,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5865,
											"end": 5882,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5927,
											"end": 5942,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5914,
											"end": 5924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5925,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5899,
											"end": 5943,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D6BDA275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1112,
											"end": 1459,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 1112,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1238,
											"end": 1240,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1209,
											"end": 1241,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1258,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 1206,
											"end": 1258,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1254,
											"end": 1255,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1244,
											"end": 1256,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1258,
											"name": "tag",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 1206,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1277,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 1296,
											"end": 1305,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1277,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 1277,
											"end": 1306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1277,
											"end": 1306,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 1277,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1267,
											"end": 1306,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1267,
											"end": 1306,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1356,
											"end": 1358,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1341,
											"end": 1359,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1328,
											"end": 1360,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1403,
											"end": 1408,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1396,
											"end": 1409,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1389,
											"end": 1410,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1382,
											"end": 1387,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1379,
											"end": 1411,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 1369,
											"end": 1429,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1425,
											"end": 1426,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1429,
											"name": "tag",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 1369,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1453,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1453,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1438,
											"end": 1453,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1112,
											"end": 1459,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1112,
											"end": 1459,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1112,
											"end": 1459,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1112,
											"end": 1459,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1112,
											"end": 1459,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1112,
											"end": 1459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1646,
											"end": 2020,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1646,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1723,
											"end": 1729,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1771,
											"end": 1778,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1767,
											"end": 1790,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1763,
											"end": 1795,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1760,
											"end": 1812,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1760,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 1760,
											"end": 1812,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1806,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 1810,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1760,
											"end": 1812,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 1760,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 1831,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "tag",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1821,
											"end": 1860,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1821,
											"end": 1860,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1879,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 1913,
											"end": 1915,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1902,
											"end": 1911,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1898,
											"end": 1916,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1879,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 1879,
											"end": 1917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1879,
											"end": 1917,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 1879,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1646,
											"end": 2020,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1646,
											"end": 2020,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1917,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1917,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1986,
											"end": 1988,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1958,
											"end": 1990,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1958,
											"end": 1990,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1646,
											"end": 2020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2025,
											"end": 2211,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 2025,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2105,
											"end": 2157,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2105,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 2105,
											"end": 2157,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2153,
											"end": 2154,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2143,
											"end": 2155,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2105,
											"end": 2157,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 2105,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2176,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 2195,
											"end": 2204,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2176,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 2176,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2405,
											"end": 2532,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 2405,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 2461,
											"end": 2464,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2478,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2497,
											"end": 2501,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2494,
											"end": 2495,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2487,
											"end": 2502,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2521,
											"end": 2525,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2518,
											"end": 2519,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2526,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2537,
											"end": 3252,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 2537,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2601,
											"end": 2606,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2657,
											"end": 2675,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2655,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2646,
											"end": 2676,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2643,
											"end": 2699,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2643,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 2643,
											"end": 2699,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 2679,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "tag",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2834,
											"end": 2836,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2828,
											"end": 2837,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2722,
											"end": 2751,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2722,
											"end": 2751,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 2880,
											"end": 2895,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2876,
											"end": 2905,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2864,
											"end": 2906,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2864,
											"end": 2906,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2957,
											"end": 2979,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2957,
											"end": 2979,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2957,
											"end": 2979,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2936,
											"end": 2954,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 2955,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2921,
											"end": 2955,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2918,
											"end": 2980,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 3003,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 2915,
											"end": 3003,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 2983,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "tag",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3019,
											"end": 3021,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3034,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3067,
											"end": 3089,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3067,
											"end": 3089,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3067,
											"end": 3089,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3104,
											"end": 3120,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3104,
											"end": 3120,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3104,
											"end": 3120,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3098,
											"end": 3143,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3098,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 3098,
											"end": 3143,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3139,
											"end": 3140,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3137,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3129,
											"end": 3141,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3098,
											"end": 3143,
											"name": "tag",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 3098,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3184,
											"end": 3187,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3169,
											"end": 3175,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3165,
											"end": 3182,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3152,
											"end": 3196,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 3244,
											"end": 3245,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3228,
											"end": 3234,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3235,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3242,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3205,
											"end": 3246,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3205,
											"end": 3246,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2537,
											"end": 3252,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2537,
											"end": 3252,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2537,
											"end": 3252,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2537,
											"end": 3252,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2537,
											"end": 3252,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2537,
											"end": 3252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3257,
											"end": 3780,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 3257,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3334,
											"end": 3340,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3348,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3395,
											"end": 3397,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3392,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3374,
											"end": 3381,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3370,
											"end": 3393,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3398,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3363,
											"end": 3415,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3363,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 3363,
											"end": 3415,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3411,
											"end": 3412,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3409,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3401,
											"end": 3413,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3363,
											"end": 3415,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 3363,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3434,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3434,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 3434,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3434,
											"end": 3463,
											"name": "tag",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 3434,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3424,
											"end": 3463,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3424,
											"end": 3463,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3514,
											"end": 3516,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3512,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3486,
											"end": 3518,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3541,
											"end": 3559,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3533,
											"end": 3539,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3530,
											"end": 3560,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3527,
											"end": 3577,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3527,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 3527,
											"end": 3577,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3571,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3563,
											"end": 3575,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3527,
											"end": 3577,
											"name": "tag",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 3527,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3596,
											"end": 3618,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3596,
											"end": 3618,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3649,
											"end": 3653,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3641,
											"end": 3654,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3641,
											"end": 3654,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3637,
											"end": 3664,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 3627,
											"end": 3682,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3678,
											"end": 3679,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3627,
											"end": 3682,
											"name": "tag",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 3627,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3701,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 3766,
											"end": 3773,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3761,
											"end": 3763,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3743,
											"end": 3745,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3739,
											"end": 3741,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3735,
											"end": 3746,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3701,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 3701,
											"end": 3774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3701,
											"end": 3774,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 3701,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3691,
											"end": 3774,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3691,
											"end": 3774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3691,
											"end": 3774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3257,
											"end": 3780,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3257,
											"end": 3780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3257,
											"end": 3780,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3257,
											"end": 3780,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3257,
											"end": 3780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3257,
											"end": 3780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3967,
											"end": 4334,
											"name": "tag",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 3967,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4030,
											"end": 4038,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4046,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4094,
											"end": 4097,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4087,
											"end": 4091,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 4079,
											"end": 4085,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4075,
											"end": 4092,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4071,
											"end": 4098,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4061,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 4061,
											"end": 4116,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4102,
											"end": 4114,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4061,
											"end": 4116,
											"name": "tag",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 4061,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4135,
											"end": 4155,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4135,
											"end": 4155,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4167,
											"end": 4197,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4167,
											"end": 4197,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4164,
											"end": 4214,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4164,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 4164,
											"end": 4214,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4211,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4207,
											"end": 4208,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4200,
											"end": 4212,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4164,
											"end": 4214,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 4164,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4247,
											"end": 4251,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4245,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4235,
											"end": 4252,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4223,
											"end": 4252,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4223,
											"end": 4252,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4307,
											"end": 4310,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4300,
											"end": 4304,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4290,
											"end": 4296,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4287,
											"end": 4288,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 4283,
											"end": 4297,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 4275,
											"end": 4281,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4271,
											"end": 4298,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4267,
											"end": 4305,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4264,
											"end": 4311,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4261,
											"end": 4328,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4261,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 4261,
											"end": 4328,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4324,
											"end": 4325,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4314,
											"end": 4326,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4261,
											"end": 4328,
											"name": "tag",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 4261,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3967,
											"end": 4334,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3967,
											"end": 4334,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3967,
											"end": 4334,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3967,
											"end": 4334,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3967,
											"end": 4334,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3967,
											"end": 4334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4339,
											"end": 5107,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 4339,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4461,
											"end": 4467,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4475,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4477,
											"end": 4483,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4538,
											"end": 4540,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4526,
											"end": 4535,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4517,
											"end": 4524,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4513,
											"end": 4536,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4509,
											"end": 4541,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4558,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 4506,
											"end": 4558,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4552,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4544,
											"end": 4556,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4558,
											"name": "tag",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 4506,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4594,
											"end": 4603,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4581,
											"end": 4604,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4627,
											"end": 4645,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4616,
											"end": 4646,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4613,
											"end": 4663,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4613,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 4613,
											"end": 4663,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4659,
											"end": 4660,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4649,
											"end": 4661,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4613,
											"end": 4663,
											"name": "tag",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 4613,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4698,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 4760,
											"end": 4767,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4751,
											"end": 4757,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4740,
											"end": 4749,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 4736,
											"end": 4758,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4698,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 4698,
											"end": 4768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4698,
											"end": 4768,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 4698,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4795,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4787,
											"end": 4795,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4672,
											"end": 4768,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4875,
											"end": 4877,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4847,
											"end": 4879,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4891,
											"end": 4923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4891,
											"end": 4923,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4888,
											"end": 4940,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4888,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 4888,
											"end": 4940,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4936,
											"end": 4937,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4934,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4888,
											"end": 4940,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 4888,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4975,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 5039,
											"end": 5046,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5028,
											"end": 5036,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 5013,
											"end": 5037,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4975,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 4975,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4975,
											"end": 5047,
											"name": "tag",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 4975,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4339,
											"end": 5107,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 4339,
											"end": 5107,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 4339,
											"end": 5107,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4339,
											"end": 5107,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5066,
											"end": 5074,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4339,
											"end": 5107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5320,
											"end": 5541,
											"name": "tag",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 5320,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5363,
											"end": 5368,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5419,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5409,
											"end": 5413,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 5401,
											"end": 5407,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5397,
											"end": 5414,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5393,
											"end": 5420,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5383,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 5383,
											"end": 5438,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5434,
											"end": 5435,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5431,
											"end": 5432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5424,
											"end": 5436,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5383,
											"end": 5438,
											"name": "tag",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 5383,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5456,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 5531,
											"end": 5534,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5522,
											"end": 5528,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5509,
											"end": 5529,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5506,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5494,
											"end": 5500,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5490,
											"end": 5507,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5456,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 5456,
											"end": 5535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5546,
											"end": 6198,
											"name": "tag",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 5546,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5657,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5659,
											"end": 5665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5714,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5700,
											"end": 5709,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5691,
											"end": 5698,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5687,
											"end": 5710,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5680,
											"end": 5732,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5680,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 5680,
											"end": 5732,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5728,
											"end": 5729,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5726,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5718,
											"end": 5730,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5680,
											"end": 5732,
											"name": "tag",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 5680,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5768,
											"end": 5777,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5755,
											"end": 5778,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5801,
											"end": 5819,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5793,
											"end": 5799,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5790,
											"end": 5820,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5787,
											"end": 5837,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5787,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 5787,
											"end": 5837,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5833,
											"end": 5834,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5830,
											"end": 5831,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5787,
											"end": 5837,
											"name": "tag",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 5787,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5856,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 5898,
											"end": 5905,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5889,
											"end": 5895,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5878,
											"end": 5887,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5874,
											"end": 5896,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5856,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 5856,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5856,
											"end": 5906,
											"name": "tag",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 5856,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5846,
											"end": 5906,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5846,
											"end": 5906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5846,
											"end": 5906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 5957,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5931,
											"end": 5963,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5978,
											"end": 5986,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5975,
											"end": 6007,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5972,
											"end": 6024,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5972,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 5972,
											"end": 6024,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6020,
											"end": 6021,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6018,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6010,
											"end": 6022,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5972,
											"end": 6024,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 5972,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 6087,
											"end": 6094,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6076,
											"end": 6084,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6065,
											"end": 6074,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 6061,
											"end": 6085,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 6043,
											"end": 6095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 6043,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5546,
											"end": 6198,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5546,
											"end": 6198,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 6033,
											"end": 6095,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 6033,
											"end": 6095,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6164,
											"end": 6166,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6136,
											"end": 6168,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5546,
											"end": 6198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6203,
											"end": 6463,
											"name": "tag",
											"source": 18,
											"value": "150"
										},
										{
											"begin": 6203,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6271,
											"end": 6277,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6320,
											"end": 6329,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6311,
											"end": 6318,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6307,
											"end": 6330,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6300,
											"end": 6352,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6300,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 6300,
											"end": 6352,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6348,
											"end": 6349,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6345,
											"end": 6346,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6300,
											"end": 6352,
											"name": "tag",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 6300,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6371,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 6390,
											"end": 6399,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6371,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 6371,
											"end": 6400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6371,
											"end": 6400,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 6371,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6361,
											"end": 6400,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6361,
											"end": 6400,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6419,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 6453,
											"end": 6455,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6442,
											"end": 6451,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6438,
											"end": 6456,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6419,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 6419,
											"end": 6457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6419,
											"end": 6457,
											"name": "tag",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 6419,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6409,
											"end": 6457,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6203,
											"end": 6463,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6203,
											"end": 6463,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6203,
											"end": 6463,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6203,
											"end": 6463,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6203,
											"end": 6463,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6203,
											"end": 6463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6468,
											"end": 6888,
											"name": "tag",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 6468,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6545,
											"end": 6551,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6616,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6602,
											"end": 6611,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6593,
											"end": 6600,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6589,
											"end": 6612,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6585,
											"end": 6617,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6582,
											"end": 6634,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6582,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 6582,
											"end": 6634,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6630,
											"end": 6631,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6628,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6620,
											"end": 6632,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6582,
											"end": 6634,
											"name": "tag",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 6582,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6653,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 6672,
											"end": 6681,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6653,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 6653,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6653,
											"end": 6682,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 6653,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6643,
											"end": 6682,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 6751,
											"end": 6753,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6736,
											"end": 6754,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6736,
											"end": 6754,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6723,
											"end": 6755,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6723,
											"end": 6755,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6852,
											"end": 6854,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6837,
											"end": 6855,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6837,
											"end": 6855,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 6837,
											"end": 6855,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6824,
											"end": 6856,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6824,
											"end": 6856,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 6468,
											"end": 6888,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6468,
											"end": 6888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6893,
											"end": 7273,
											"name": "tag",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 6893,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6972,
											"end": 6973,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 6968,
											"end": 6980,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6968,
											"end": 6980,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6968,
											"end": 6980,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 6968,
											"end": 6980,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7015,
											"end": 7027,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7015,
											"end": 7027,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7015,
											"end": 7027,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 7036,
											"end": 7097,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7090,
											"end": 7094,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 7082,
											"end": 7088,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7078,
											"end": 7095,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 7068,
											"end": 7095,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7068,
											"end": 7095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7097,
											"name": "tag",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 7036,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7143,
											"end": 7145,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7135,
											"end": 7141,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7132,
											"end": 7146,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 7112,
											"end": 7130,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7109,
											"end": 7147,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7106,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 7106,
											"end": 7267,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7189,
											"end": 7199,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 7184,
											"end": 7187,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 7180,
											"end": 7200,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 7177,
											"end": 7178,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7201,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7224,
											"end": 7228,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 7221,
											"end": 7222,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7214,
											"end": 7229,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7252,
											"end": 7256,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7249,
											"end": 7250,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7106,
											"end": 7267,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 7106,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7106,
											"end": 7267,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6893,
											"end": 7273,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6893,
											"end": 7273,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6893,
											"end": 7273,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6893,
											"end": 7273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7278,
											"end": 7614,
											"name": "tag",
											"source": 18,
											"value": "182"
										},
										{
											"begin": 7278,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7480,
											"end": 7482,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7462,
											"end": 7483,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7462,
											"end": 7483,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7462,
											"end": 7483,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7519,
											"end": 7521,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7492,
											"end": 7522,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E756C6C2041646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7555,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7531,
											"end": 7573,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7605,
											"end": 7607,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 7590,
											"end": 7608,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7590,
											"end": 7608,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7278,
											"end": 7614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7619,
											"end": 8021,
											"name": "tag",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 7619,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7821,
											"end": 7823,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7803,
											"end": 7824,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7803,
											"end": 7824,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7803,
											"end": 7824,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7860,
											"end": 7862,
											"name": "PUSH",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 7840,
											"end": 7858,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7840,
											"end": 7858,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7840,
											"end": 7858,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7833,
											"end": 7863,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7899,
											"end": 7933,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73666572206661696C65643A2053656E64657220697320626C61636B"
										},
										{
											"begin": 7894,
											"end": 7896,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7879,
											"end": 7897,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7879,
											"end": 7897,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7872,
											"end": 7934,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7965,
											"end": 7967,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7950,
											"end": 7968,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7943,
											"end": 7979,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8011,
											"end": 8014,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 7996,
											"end": 8015,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7996,
											"end": 8015,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7619,
											"end": 8021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8026,
											"end": 8431,
											"name": "tag",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 8026,
											"end": 8431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8228,
											"end": 8230,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8210,
											"end": 8231,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8231,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8231,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8267,
											"end": 8269,
											"name": "PUSH",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8240,
											"end": 8270,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8306,
											"end": 8340,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73666572206661696C65643A20526563697069656E7420697320626C"
										},
										{
											"begin": 8301,
											"end": 8303,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8286,
											"end": 8304,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8286,
											"end": 8304,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8279,
											"end": 8341,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1858DADB1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8372,
											"end": 8374,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8350,
											"end": 8389,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8421,
											"end": 8424,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 8406,
											"end": 8425,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8406,
											"end": 8425,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8026,
											"end": 8431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8789,
											"end": 9187,
											"name": "tag",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 8789,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8991,
											"end": 8993,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8973,
											"end": 8994,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8994,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8973,
											"end": 8994,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9030,
											"end": 9032,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9003,
											"end": 9033,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9069,
											"end": 9103,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B"
										},
										{
											"begin": 9064,
											"end": 9066,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9049,
											"end": 9067,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9049,
											"end": 9067,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9104,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9135,
											"end": 9137,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 9120,
											"end": 9138,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9120,
											"end": 9138,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9113,
											"end": 9145,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9177,
											"end": 9180,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9162,
											"end": 9181,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8789,
											"end": 9187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9954,
											"end": 10081,
											"name": "tag",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 9954,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10015,
											"end": 10025,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 10010,
											"end": 10013,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 10006,
											"end": 10026,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 10003,
											"end": 10004,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 10027,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10046,
											"end": 10050,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 10043,
											"end": 10044,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 10036,
											"end": 10051,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10070,
											"end": 10074,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10067,
											"end": 10068,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10060,
											"end": 10075,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 12017,
											"end": 12201,
											"name": "tag",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 12017,
											"end": 12201,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12087,
											"end": 12093,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12140,
											"end": 12142,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12128,
											"end": 12137,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12119,
											"end": 12126,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12115,
											"end": 12138,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 12111,
											"end": 12143,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 12108,
											"end": 12160,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12108,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 12108,
											"end": 12160,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12156,
											"end": 12157,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12154,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12146,
											"end": 12158,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 12108,
											"end": 12160,
											"name": "tag",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 12108,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12179,
											"end": 12195,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12179,
											"end": 12195,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12017,
											"end": 12201,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12017,
											"end": 12201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12905,
											"end": 13127,
											"name": "tag",
											"source": 18,
											"value": "473"
										},
										{
											"begin": 12905,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12970,
											"end": 12979,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12970,
											"end": 12979,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12970,
											"end": 12979,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12991,
											"end": 13001,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 12991,
											"end": 13001,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12991,
											"end": 13001,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12988,
											"end": 13121,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12988,
											"end": 13121,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 12988,
											"end": 13121,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13043,
											"end": 13053,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 13038,
											"end": 13041,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 13034,
											"end": 13054,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 13031,
											"end": 13032,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13024,
											"end": 13055,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13078,
											"end": 13082,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 13068,
											"end": 13083,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13106,
											"end": 13110,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13103,
											"end": 13104,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13096,
											"end": 13111,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 13258,
											"end": 13776,
											"name": "tag",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 13258,
											"end": 13776,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13360,
											"end": 13362,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 13355,
											"end": 13358,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13352,
											"end": 13363,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 13349,
											"end": 13770,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13349,
											"end": 13770,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 13349,
											"end": 13770,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13396,
											"end": 13401,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13393,
											"end": 13394,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13386,
											"end": 13402,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13440,
											"end": 13444,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13437,
											"end": 13438,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13427,
											"end": 13445,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 13510,
											"end": 13512,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 13498,
											"end": 13508,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13494,
											"end": 13513,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13491,
											"end": 13492,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 13487,
											"end": 13514,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 13481,
											"end": 13485,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13477,
											"end": 13515,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13546,
											"end": 13550,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13534,
											"end": 13544,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13531,
											"end": 13551,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 13528,
											"end": 13575,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13528,
											"end": 13575,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 13528,
											"end": 13575,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13569,
											"end": 13573,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13528,
											"end": 13575,
											"name": "tag",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 13528,
											"end": 13575,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13624,
											"end": 13626,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 13619,
											"end": 13622,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13615,
											"end": 13627,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13612,
											"end": 13613,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 13608,
											"end": 13628,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 13602,
											"end": 13606,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13598,
											"end": 13629,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13588,
											"end": 13629,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13588,
											"end": 13629,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13679,
											"end": 13760,
											"name": "tag",
											"source": 18,
											"value": "625"
										},
										{
											"begin": 13679,
											"end": 13760,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13697,
											"end": 13699,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13690,
											"end": 13695,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13687,
											"end": 13700,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 13679,
											"end": 13760,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13679,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 13679,
											"end": 13760,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13756,
											"end": 13757,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13742,
											"end": 13758,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13742,
											"end": 13758,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 13723,
											"end": 13724,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 13712,
											"end": 13725,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13679,
											"end": 13760,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "625"
										},
										{
											"begin": 13679,
											"end": 13760,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13952,
											"end": 15251,
											"name": "tag",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 13952,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14078,
											"end": 14081,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14072,
											"end": 14082,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 14105,
											"end": 14123,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14097,
											"end": 14103,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14094,
											"end": 14124,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 14091,
											"end": 14147,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14091,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 14091,
											"end": 14147,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14127,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 14127,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 14127,
											"end": 14145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14127,
											"end": 14145,
											"name": "tag",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 14127,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14156,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 14246,
											"end": 14252,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14206,
											"end": 14244,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 14238,
											"end": 14242,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14232,
											"end": 14243,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 14206,
											"end": 14244,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 14206,
											"end": 14244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14206,
											"end": 14244,
											"name": "tag",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 14206,
											"end": 14244,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14200,
											"end": 14204,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14156,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 14156,
											"end": 14253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14156,
											"end": 14253,
											"name": "tag",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 14156,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14302,
											"end": 14306,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14333,
											"end": 14335,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 14322,
											"end": 14336,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14322,
											"end": 14336,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 14350,
											"end": 14351,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 14345,
											"end": 14994,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14345,
											"end": 14994,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 14345,
											"end": 14994,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 14345,
											"end": 14994,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15038,
											"end": 15039,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15055,
											"end": 15061,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15141,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15141,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 15052,
											"end": 15141,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15107,
											"end": 15126,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15107,
											"end": 15126,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15107,
											"end": 15126,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15101,
											"end": 15127,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 15052,
											"end": 15141,
											"name": "tag",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 15052,
											"end": 15141,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13909,
											"end": 13910,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 13905,
											"end": 13916,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13905,
											"end": 13916,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13905,
											"end": 13916,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 13901,
											"end": 13925,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 13897,
											"end": 13926,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 13887,
											"end": 13927,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 13933,
											"end": 13934,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 13929,
											"end": 13940,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13929,
											"end": 13940,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13929,
											"end": 13940,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 13884,
											"end": 13941,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 15154,
											"end": 15235,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15154,
											"end": 15235,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 14315,
											"end": 15245,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 14315,
											"end": 15245,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14345,
											"end": 14994,
											"name": "tag",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 14345,
											"end": 14994,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13205,
											"end": 13206,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13198,
											"end": 13212,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13198,
											"end": 13212,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13198,
											"end": 13212,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13242,
											"end": 13246,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14381,
											"end": 14401,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14381,
											"end": 14401,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 14381,
											"end": 14401,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14499,
											"end": 14721,
											"name": "tag",
											"source": 18,
											"value": "639"
										},
										{
											"begin": 14499,
											"end": 14721,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14513,
											"end": 14520,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14510,
											"end": 14511,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14507,
											"end": 14521,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 14499,
											"end": 14721,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14499,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 14499,
											"end": 14721,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14595,
											"end": 14614,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14595,
											"end": 14614,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14595,
											"end": 14614,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14589,
											"end": 14615,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 14574,
											"end": 14616,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14574,
											"end": 14616,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 14702,
											"end": 14706,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 14655,
											"end": 14656,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 14643,
											"end": 14657,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14643,
											"end": 14657,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14643,
											"end": 14657,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14643,
											"end": 14657,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14529,
											"end": 14541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14499,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "639"
										},
										{
											"begin": 14499,
											"end": 14721,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14499,
											"end": 14721,
											"name": "tag",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 14499,
											"end": 14721,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14503,
											"end": 14506,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14749,
											"end": 14755,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14740,
											"end": 14747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14737,
											"end": 14756,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 14734,
											"end": 14935,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14734,
											"end": 14935,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 14734,
											"end": 14935,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14810,
											"end": 14829,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14810,
											"end": 14829,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14810,
											"end": 14829,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14804,
											"end": 14830,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14893,
											"end": 14894,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 14889,
											"end": 14903,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 14889,
											"end": 14903,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14889,
											"end": 14903,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 14905,
											"end": 14908,
											"name": "PUSH",
											"source": 18,
											"value": "F8"
										},
										{
											"begin": 14885,
											"end": 14909,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 14881,
											"end": 14918,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 14877,
											"end": 14919,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 14862,
											"end": 14920,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 14847,
											"end": 14921,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14847,
											"end": 14921,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 14734,
											"end": 14935,
											"name": "tag",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 14734,
											"end": 14935,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14981,
											"end": 14982,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 14965,
											"end": 14979,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14965,
											"end": 14979,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14965,
											"end": 14979,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 14961,
											"end": 14983,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14948,
											"end": 14984,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14948,
											"end": 14984,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13952,
											"end": 15251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15256,
											"end": 15557,
											"name": "tag",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 15256,
											"end": 15557,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15385,
											"end": 15388,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15423,
											"end": 15429,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15417,
											"end": 15430,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 15469,
											"end": 15475,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 15462,
											"end": 15466,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15454,
											"end": 15460,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15450,
											"end": 15467,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15445,
											"end": 15448,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15439,
											"end": 15476,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 15531,
											"end": 15532,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15495,
											"end": 15511,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15495,
											"end": 15511,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15520,
											"end": 15533,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15520,
											"end": 15533,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15520,
											"end": 15533,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15495,
											"end": 15511,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15256,
											"end": 15557,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15256,
											"end": 15557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									],
									".data": {
										"3874827173E8DF9F34323B12B251D1D3C53926CE129E30A0D69F1D47C277041B": "52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00",
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchTransfer(address[],uint256[])": "88d695b2",
							"blacklisted(address)": "dbac26e9",
							"decimals()": "313ce567",
							"icoContract()": "c66e4095",
							"initialize(string,string,uint256)": "b119490e",
							"lockedAmount(address)": "a153e708",
							"lockedUntil(address)": "9bc289f1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"setBlacklist(address,bool)": "153b0d1e",
							"setICOContract(address)": "2e0d2a00",
							"setLockup(address,uint256,uint256)": "f326f0d7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyTokenRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"icoContract\",\"type\":\"address\"}],\"name\":\"ICOContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedUntilTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"}],\"name\":\"LockupSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_icoContract\",\"type\":\"address\"}],\"name\":\"setICOContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setLockup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RVA/UpgradableToken.sol\":\"ERC20Token\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"RVA/UpgradableToken.sol\":{\"keccak256\":\"0xb4b07ccb3ece9c256713805da0539effaa9c16f6874dc5b7d9c6fe2b4626ee13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2e7d5768c3c0ca57a58769468b187a7717cad6304d1eca20749d6700350d56\",\"dweb:/ipfs/QmZ76ovhHt5qjhJ6mm6div5xLWJyKTXd6DbTc3kDqNcprC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 757,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2749,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "icoContract",
								"offset": 0,
								"slot": "50",
								"type": "t_address"
							},
							{
								"astId": 2751,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "51",
								"type": "t_uint256"
							},
							{
								"astId": 2758,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "blacklisted",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2762,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "lockedUntil",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2766,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "lockedAmount",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1752,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1751,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1751,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							2213
						],
						"IERC1822Proxiable": [
							1782
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1783,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1782,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 2214,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2213,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1782,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								1782,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 630,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 630,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1781
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1934,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 630,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 630,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4648:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4692:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "4753:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1965,
																"src": "4753:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4789:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4658:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4848:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4869:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4862:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:2"
									},
									"scope": 630,
									"src": "4603:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5084:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5115:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5094:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5123:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5199:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5192:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:2"
									},
									"scope": 630,
									"src": "5032:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5655:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:2"
									},
									"scope": 630,
									"src": "5628:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6142:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6232:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6250:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "6258:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1934,
																			"src": "6258:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6246:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6292:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6346:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6317:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6409:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6428:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "6379:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2028,
																			"src": "6379:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6218:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:2"
														},
														"src": "6209:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6451:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6560:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "6518:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1939,
																			"src": "6518:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6445:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6174:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "6156:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1782_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1782",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1781,
														"src": "6156:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6152:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6088:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6115:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:2"
									},
									"scope": 630,
									"src": "6057:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5611:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								1939,
								1952,
								2337,
								2599
							],
							"usedEvents": [
								219,
								1759
							]
						}
					],
					"src": "115:6483:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							758
						]
					},
					"id": 759,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 759,
							"sourceUnit": 1752,
							"src": "130:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 759,
							"sourceUnit": 449,
							"src": "172:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 634,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "180:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 637,
										"name": "Initializable",
										"nameLocations": [
											"718:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "718:13:3"
									},
									"id": 638,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:3"
								},
								{
									"baseName": {
										"id": 639,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "733:18:3"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 636,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 758,
							"linearizedBaseContracts": [
								758,
								1751,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 645,
									"name": "Paused",
									"nameLocation": "842:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "849:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:3"
									},
									"src": "836:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 650,
									"name": "Unpaused",
									"nameLocation": "953:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"src": "947:32:3"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 758,
									"src": "985:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 651,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "1137:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 658,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1147:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:3"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 656,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 655,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1120:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:3"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:3"
									},
									"scope": 758,
									"src": "1084:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "1250:32:3",
										"statements": [
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "1260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1233:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:3"
									},
									"scope": 758,
									"src": "1187:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1493:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 675,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "1503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:3"
											},
											{
												"id": 678,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:3"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 680,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:3"
									},
									"src": "1468:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "1740:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 683,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "1750:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:3"
											},
											{
												"id": 686,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:3"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 688,
									"name": "whenPaused",
									"nameLocation": "1727:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:3"
									},
									"src": "1718:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "1932:31:3",
										"statements": [
											{
												"expression": {
													"id": 694,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 652,
													"src": "1949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 693,
												"id": 695,
												"nodeType": "Return",
												"src": "1942:14:3"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:3"
									},
									"scope": 758,
									"src": "1879:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "2082:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 702,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "2101:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:3"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:3"
									},
									"scope": 758,
									"src": "2031:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2257:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 714,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "2275:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:3"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:3"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:3"
									},
									"scope": 758,
									"src": "2209:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "2499:66:3",
										"statements": [
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 731,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "2545:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 730,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "2538:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "EmitStatement",
												"src": "2533:25:3"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 724,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 723,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2485:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:3"
									},
									"scope": 758,
									"src": "2450:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "2745:69:3",
										"statements": [
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 742,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2755:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 747,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "2794:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 746,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "2785:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "2780:27:3"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 740,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 739,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 688,
												"src": "2734:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:3"
									},
									"scope": 758,
									"src": "2697:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 757,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 758,
									"src": "3079:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 754,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 756,
										"length": {
											"hexValue": "3439",
											"id": 755,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 759,
							"src": "677:2430:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219,
								645,
								650
							]
						}
					],
					"src": "105:3003:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"ERC20Upgradeable": [
							1375
						],
						"IERC20": [
							2301
						],
						"IERC20Errors": [
							1824
						],
						"IERC20Metadata": [
							2327
						],
						"Initializable": [
							448
						]
					},
					"id": 1376,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 2302,
							"src": "131:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 761,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2301,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 2328,
							"src": "202:97:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 763,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2327,
										"src": "210:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1752,
							"src": "300:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 765,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1751,
										"src": "308:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1920,
							"src": "371:83:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 767,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1824,
										"src": "379:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 449,
							"src": "455:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 769,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1319:13:4"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:4"
								},
								{
									"baseName": {
										"id": 774,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "1334:18:4"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:4"
								},
								{
									"baseName": {
										"id": 776,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2301,
										"src": "1354:6:4"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:4"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2327,
										"src": "1362:14:4"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:4"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1824,
										"src": "1378:12:4"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:4"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 771,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1375,
							"linearizedBaseContracts": [
								1375,
								1824,
								2327,
								2301,
								1751,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 799,
									"members": [
										{
											"constant": false,
											"id": 786,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1495:45:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 785,
												"keyName": "account",
												"keyNameLocation": "1511:7:4",
												"keyType": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1551:75:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 791,
												"keyName": "account",
												"keyNameLocation": "1567:7:4",
												"keyType": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 790,
													"keyName": "spender",
													"keyNameLocation": "1594:7:4",
													"keyType": {
														"id": 788,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 789,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1637:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1668:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 795,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1690:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 797,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:4",
									"nodeType": "StructDefinition",
									"scope": 1375,
									"src": "1465:246:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 802,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "1826:114:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 800,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 801,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "2021:79:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:4",
													"nodeType": "YulBlock",
													"src": "2040:54:4",
													"statements": [
														{
															"nativeSrc": "2054:30:4",
															"nodeType": "YulAssignment",
															"src": "2054:30:4",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:4",
																"nodeType": "YulIdentifier",
																"src": "2064:20:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 802,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:4",
														"valueSize": 1
													}
												],
												"id": 808,
												"nodeType": "InlineAssembly",
												"src": "2031:63:4"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1997:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 799,
														"src": "1997:12:4"
													},
													"referencedDeclaration": 799,
													"src": "1997:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:4"
									},
									"scope": 1375,
									"src": "1947:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2374:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2407:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 822,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "2414:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 820,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2384:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "2384:38:4"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "2106:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 817,
												"name": "onlyInitializing",
												"nameLocations": [
													"2357:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2357:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2357:16:4"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2291:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2318:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2304:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2339:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2325:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 814,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:44:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:4"
									},
									"scope": 1375,
									"src": "2282:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2537:114:4",
										"statements": [
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2568:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "2547:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 836,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 835,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2547:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2547:12:4"
															},
															"referencedDeclaration": 799,
															"src": "2547:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 838,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2572:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2547:43:4"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 841,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2600:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2602:5:4",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 796,
														"src": "2600:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "2610:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2600:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "2600:15:4"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 847,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2625:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2627:7:4",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 798,
														"src": "2625:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2637:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2625:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "2625:19:4"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 833,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 832,
												"name": "onlyInitializing",
												"nameLocations": [
													"2520:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2520:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2520:16:4"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2444:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2481:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2467:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 827,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2488:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:44:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:4"
									},
									"scope": 1375,
									"src": "2435:216:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2314
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2776:84:4",
										"statements": [
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2807:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "2786:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 861,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 860,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2786:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2786:12:4"
															},
															"referencedDeclaration": 799,
															"src": "2786:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2811:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 866,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2846:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2848:5:4",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 796,
													"src": "2846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 859,
												"id": 868,
												"nodeType": "Return",
												"src": "2839:14:4"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2657:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2725:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2761:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2761:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:15:4"
									},
									"scope": 1375,
									"src": "2716:144:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2320
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "3035:86:4",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3066:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "3045:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 877,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 876,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3045:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "3045:12:4"
															},
															"referencedDeclaration": 799,
															"src": "3045:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 879,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3070:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3045:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 882,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3105:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3107:7:4",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 798,
													"src": "3105:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 875,
												"id": 884,
												"nodeType": "Return",
												"src": "3098:16:4"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2866:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2982:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:2:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "3020:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3020:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:15:4"
									},
									"scope": 1375,
									"src": "2973:148:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2326
									],
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3810:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3827:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 891,
												"id": 893,
												"nodeType": "Return",
												"src": "3820:9:4"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "3127:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3763:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:2:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3803:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 889,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:7:4"
									},
									"scope": 1375,
									"src": "3754:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2250
									],
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "3957:91:4",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3988:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 910,
														"src": "3967:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 902,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 901,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3967:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "3967:12:4"
															},
															"referencedDeclaration": 799,
															"src": "3967:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 904,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3992:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 907,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "4027:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4029:12:4",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 794,
													"src": "4027:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 900,
												"id": 909,
												"nodeType": "Return",
												"src": "4020:21:4"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3842:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3905:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3948:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:4"
									},
									"scope": 1375,
									"src": "3896:152:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2258
									],
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "4180:97:4",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4211:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "4190:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 920,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 919,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4190:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "4190:12:4"
															},
															"referencedDeclaration": 799,
															"src": "4190:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 922,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4215:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4190:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 925,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4250:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4252:9:4",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 786,
														"src": "4250:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 928,
													"indexExpression": {
														"id": 927,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "4262:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4250:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 918,
												"id": 929,
												"nodeType": "Return",
												"src": "4243:27:4"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "4054:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4115:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4133:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "4125:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:17:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "4171:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:9:4"
									},
									"scope": 1375,
									"src": "4106:171:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2268
									],
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "4547:103:4",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4565:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "4557:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 941,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4557:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 943,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "4573:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4573:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4557:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4605:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "4612:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "4616:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4595:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "4595:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4639:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 940,
												"id": 953,
												"nodeType": "Return",
												"src": "4632:11:4"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "4283:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4481:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4498:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4490:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4510:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4502:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:27:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4541:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:6:4"
									},
									"scope": 1375,
									"src": "4472:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2278
									],
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4797:106:4",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4828:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "4807:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 966,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 965,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4807:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "4807:12:4"
															},
															"referencedDeclaration": 799,
															"src": "4807:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 968,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4832:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 971,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "4867:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:11:4",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 792,
															"src": "4867:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 974,
														"indexExpression": {
															"id": 973,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "4881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4867:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 976,
													"indexExpression": {
														"id": 975,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4888:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4867:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 964,
												"id": 977,
												"nodeType": "Return",
												"src": "4860:36:4"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "4656:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4717:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4727:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4750:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4742:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:32:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4788:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4787:9:4"
									},
									"scope": 1375,
									"src": "4708:195:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2288
									],
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "5289:107:4",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5307:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1002,
														"src": "5299:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 989,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5299:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 991,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "5315:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5315:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5346:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "5353:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "5362:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1326
														],
														"referencedDeclaration": 1258,
														"src": "5337:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "5337:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5385:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 988,
												"id": 1001,
												"nodeType": "Return",
												"src": "5378:11:4"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4909:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5219:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5235:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5227:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5252:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5244:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:32:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5283:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5283:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:6:4"
									},
									"scope": 1375,
									"src": "5210:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2300
									],
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "6081:151:4",
										"statements": [
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6099:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "6091:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1015,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6091:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1017,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "6109:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6091:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6147:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "6153:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6162:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "6131:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "6131:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1027,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6188:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "6194:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6198:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "6178:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "6178:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6221:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1014,
												"id": 1033,
												"nodeType": "Return",
												"src": "6214:11:4"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "5402:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5997:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6018:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6010:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6044:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6036:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:41:4"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6074:6:4"
									},
									"scope": 1375,
									"src": "5988:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "6674:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "6688:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6704:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6696:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1046,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6696:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6696:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6688:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "6684:86:4",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "6708:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6756:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6748:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1052,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6748:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6748:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1051,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "6729:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6729:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1057,
															"nodeType": "RevertStatement",
															"src": "6722:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "6783:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6797:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6789:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6789:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6789:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6783:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "6779:86:4",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "6801:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6851:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6843:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1067,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6843:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6843:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1066,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "6822:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6822:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1072,
															"nodeType": "RevertStatement",
															"src": "6815:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "6882:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "6888:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "6892:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "6874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6874:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "6874:24:4"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "6238:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6614:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6632:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6624:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6646:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6638:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6658:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6650:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:41:4"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6674:0:4"
									},
									"scope": 1375,
									"src": "6605:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "7295:1095:4",
										"statements": [
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7326:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "7305:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1093,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1092,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7305:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "7305:12:4"
															},
															"referencedDeclaration": 799,
															"src": "7305:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1097,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1095,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "7330:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7330:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7305:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1098,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "7362:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7378:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1099,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7370:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7370:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7362:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "7538:366:4",
													"statements": [
														{
															"assignments": [
																1112
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1112,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7560:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1140,
																	"src": "7552:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1111,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7552:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1117,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1113,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "7574:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7576:9:4",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 786,
																	"src": "7574:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1116,
																"indexExpression": {
																	"id": 1115,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "7586:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7574:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7552:39:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1118,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "7609:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1119,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7609:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1128,
															"nodeType": "IfStatement",
															"src": "7605:115:4",
															"trueBody": {
																"id": 1127,
																"nodeType": "Block",
																"src": "7630:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1122,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "7680:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1123,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "7686:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1124,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "7699:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1121,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "7655:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7655:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1126,
																		"nodeType": "RevertStatement",
																		"src": "7648:57:4"
																	}
																]
															}
														},
														{
															"id": 1139,
															"nodeType": "UncheckedBlock",
															"src": "7733:161:4",
															"statements": [
																{
																	"expression": {
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1129,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "7840:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1132,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7842:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "7840:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1133,
																			"indexExpression": {
																				"id": 1131,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "7852:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7840:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1134,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "7860:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1135,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "7874:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7860:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7840:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1138,
																	"nodeType": "ExpressionStatement",
																	"src": "7840:39:4"
																}
															]
														}
													]
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "7358:546:4",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "7382:150:4",
													"statements": [
														{
															"expression": {
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1104,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "7498:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7500:12:4",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "7498:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1107,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7516:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7498:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "7498:23:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "7918:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7932:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7924:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7924:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7924:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7918:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "8135:208:4",
													"statements": [
														{
															"id": 1164,
															"nodeType": "UncheckedBlock",
															"src": "8149:184:4",
															"statements": [
																{
																	"expression": {
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1156,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "8294:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8296:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "8294:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1160,
																			"indexExpression": {
																				"id": 1158,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "8306:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8294:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1161,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "8313:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8294:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1163,
																	"nodeType": "ExpressionStatement",
																	"src": "8294:24:4"
																}
															]
														}
													]
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "7914:429:4",
												"trueBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "7936:193:4",
													"statements": [
														{
															"id": 1154,
															"nodeType": "UncheckedBlock",
															"src": "7950:169:4",
															"statements": [
																{
																	"expression": {
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1148,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "8081:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8083:12:4",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 794,
																			"src": "8081:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "8099:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8081:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1153,
																	"nodeType": "ExpressionStatement",
																	"src": "8081:23:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1168,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "8367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "8373:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "8377:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1167,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "8358:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8358:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "EmitStatement",
												"src": "8353:30:4"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "6911:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7229:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7245:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7237:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7259:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7251:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7271:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7236:41:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7295:0:4"
									},
									"scope": 1375,
									"src": "7220:1170:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "8789:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "8803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8814:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8814:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8814:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8803:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "8799:91:4",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "8826:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8876:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8868:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1189,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8868:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8868:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1188,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "8847:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8847:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1194,
															"nodeType": "RevertStatement",
															"src": "8840:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8907:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1198,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8907:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8907:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "8919:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "8928:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "8899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "8899:35:4"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "8396:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8742:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8756:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "8748:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "8765:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:32:4"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:4"
									},
									"scope": 1375,
									"src": "8733:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "9315:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "9329:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9348:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9340:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9340:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9340:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9329:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1229,
												"nodeType": "IfStatement",
												"src": "9325:89:4",
												"trueBody": {
													"id": 1228,
													"nodeType": "Block",
													"src": "9352:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9400:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9392:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1222,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9392:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9392:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1221,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "9373:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9373:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1227,
															"nodeType": "RevertStatement",
															"src": "9366:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "9431:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9448:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9440:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9440:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9440:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "9452:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1230,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "9423:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9423:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "9423:35:4"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "8947:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9268:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9282:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "9274:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9274:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9299:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "9291:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9291:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9273:32:4"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9315:0:4"
									},
									"scope": 1375,
									"src": "9259:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "10075:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1251,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "10094:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "10101:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "10110:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10117:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1250,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1326
														],
														"referencedDeclaration": 1326,
														"src": "10085:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10085:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "10085:37:4"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "9471:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10010:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10027:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10019:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10042:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10034:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10034:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:47:4"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10075:0:4"
									},
									"scope": 1375,
									"src": "10001:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "11074:389:4",
										"statements": [
											{
												"assignments": [
													1272
												],
												"declarations": [
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11105:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "11084:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1271,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1270,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11084:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "11084:12:4"
															},
															"referencedDeclaration": 799,
															"src": "11084:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1275,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1273,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "11109:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11109:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11084:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1276,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "11141:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1277,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11150:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11150:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11141:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "11137:89:4",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "11162:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11212:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11204:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1283,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11204:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11204:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1282,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "11183:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1288,
															"nodeType": "RevertStatement",
															"src": "11176:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "11239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11258:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11250:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11250:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11250:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11239:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "11235:90:4",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "11262:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11311:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11303:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1298,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11303:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11303:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1297,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "11283:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11283:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1303,
															"nodeType": "RevertStatement",
															"src": "11276:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1306,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "11334:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11336:11:4",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 792,
																"src": "11334:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1311,
															"indexExpression": {
																"id": 1308,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "11348:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11334:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1312,
														"indexExpression": {
															"id": 1309,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "11355:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11334:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1313,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "11366:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11334:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "11334:37:4"
											},
											{
												"condition": {
													"id": 1316,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1267,
													"src": "11385:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"nodeType": "IfStatement",
												"src": "11381:76:4",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "11396:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1318,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "11424:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1319,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "11431:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1320,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "11440:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1317,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "11415:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11415:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "EmitStatement",
															"src": "11410:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "10135:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10985:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "10994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11017:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11009:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11009:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11034:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11026:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11046:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11041:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11041:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10993:63:4"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11074:0:4"
									},
									"scope": 1375,
									"src": "10976:487:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "11834:388:4",
										"statements": [
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11852:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "11844:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11844:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"id": 1339,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "11881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1340,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "11888:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "11871:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11871:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11844:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1343,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "11910:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11935:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1345,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11935:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1344,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11930:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11930:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11944:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11930:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11910:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "11906:310:4",
												"trueBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "11949:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1350,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "11967:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1351,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "11986:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11967:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1360,
															"nodeType": "IfStatement",
															"src": "11963:130:4",
															"trueBody": {
																"id": 1359,
																"nodeType": "Block",
																"src": "11993:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1354,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1331,
																					"src": "12045:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1355,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12054:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1356,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "12072:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1353,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1813,
																				"src": "12018:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12018:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1358,
																		"nodeType": "RevertStatement",
																		"src": "12011:67:4"
																	}
																]
															}
														},
														{
															"id": 1370,
															"nodeType": "UncheckedBlock",
															"src": "12106:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1362,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1329,
																				"src": "12143:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1363,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1331,
																				"src": "12150:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1364,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12159:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1365,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "12178:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12159:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12185:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1361,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1258,
																				1326
																			],
																			"referencedDeclaration": 1326,
																			"src": "12134:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12134:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "12134:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "11469:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11754:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11778:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11770:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11770:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11793:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11785:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11785:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11810:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11802:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11769:47:4"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11834:0:4"
									},
									"scope": 1375,
									"src": "11745:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1376,
							"src": "1281:10943:4",
							"usedErrors": [
								211,
								214,
								1794,
								1799,
								1804,
								1813,
								1818,
								1823
							],
							"usedEvents": [
								219,
								2235,
								2244
							]
						}
					],
					"src": "105:12120:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1705
						]
					},
					"id": 1706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1377,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1378,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1705,
							"linearizedBaseContracts": [
								1705
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "1489:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1386,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "1713:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1391,
												"nodeType": "Return",
												"src": "1706:30:5"
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1443:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:5"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1483:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:5"
									},
									"scope": 1705,
									"src": "1423:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "2729:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1404,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1402,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1407,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "2772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:5"
											},
											{
												"assignments": [
													1413,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1426,
														"src": "2824:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1412,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1420,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1414,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "2842:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1416,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "2864:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1422,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "2893:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:5"
											}
										]
									},
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2677:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2704:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:5"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:5"
									},
									"scope": 1705,
									"src": "2658:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "3801:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1438,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "3840:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1439,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "3848:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1437,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1485,
															1529
														],
														"referencedDeclaration": 1529,
														"src": "3818:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1443,
												"nodeType": "Return",
												"src": "3811:79:5"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3734:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3750:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:5"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3787:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:5"
									},
									"scope": 1705,
									"src": "3712:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "4266:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1458,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "4305:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "4313:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1461,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4322:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1457,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1485,
															1529
														],
														"referencedDeclaration": 1529,
														"src": "4283:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1456,
												"id": 1463,
												"nodeType": "Return",
												"src": "4276:59:5"
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4150:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4174:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4201:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:5"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4252:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:5"
									},
									"scope": 1705,
									"src": "4119:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "4817:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1478,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4856:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "4864:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1480,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "4870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1477,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1485,
															1529
														],
														"referencedDeclaration": 1529,
														"src": "4834:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1483,
												"nodeType": "Return",
												"src": "4827:94:5"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4735:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4751:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4770:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:5"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4803:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:5"
									},
									"scope": 1705,
									"src": "4704:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "5355:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1502,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1500,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1505,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "5398:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:5"
											},
											{
												"assignments": [
													1511,
													1513
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "5457:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1510,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1513,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "5471:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1512,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1520,
												"initialValue": {
													"arguments": [
														{
															"id": 1518,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "5524:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1514,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "5498:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "5517:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1522,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "5573:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1523,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "5581:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1524,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5590:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1525,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "5602:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1521,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "5546:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1527,
												"nodeType": "Return",
												"src": "5539:76:5"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5216:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5240:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5290:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:5"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5341:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:5"
									},
									"scope": 1705,
									"src": "5176:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "5899:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1540,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "5935:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "5943:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1539,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1546,
															1575
														],
														"referencedDeclaration": 1575,
														"src": "5916:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1544,
												"nodeType": "Return",
												"src": "5909:80:5"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5827:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5843:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:5"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5885:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:5"
									},
									"scope": 1705,
									"src": "5799:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "6338:168:5",
										"statements": [
											{
												"assignments": [
													1559,
													1561
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "6349:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1558,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1561,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "6363:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1560,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"arguments": [
														{
															"id": 1564,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "6408:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1562,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "6390:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1568,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "6457:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1569,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "6465:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1570,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "6474:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1571,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "6486:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1567,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "6430:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1557,
												"id": 1573,
												"nodeType": "Return",
												"src": "6423:76:5"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6217:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6241:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6268:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:5"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6324:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:5"
									},
									"scope": 1705,
									"src": "6180:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "6782:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1586,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "6820:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1587,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "6828:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1585,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1592,
															1621
														],
														"referencedDeclaration": 1621,
														"src": "6799:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1590,
												"nodeType": "Return",
												"src": "6792:84:5"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "6715:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "6731:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:5"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "6768:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:5"
									},
									"scope": 1705,
									"src": "6685:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "7224:170:5",
										"statements": [
											{
												"assignments": [
													1605,
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1620,
														"src": "7235:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1604,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1620,
														"src": "7249:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1606,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"initialValue": {
													"arguments": [
														{
															"id": 1610,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "7296:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1608,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "7276:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1614,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "7345:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1615,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "7353:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1616,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "7362:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1617,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "7374:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1613,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "7318:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1619,
												"nodeType": "Return",
												"src": "7311:76:5"
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7108:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7132:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1596,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7159:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:5"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7210:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:5"
									},
									"scope": 1705,
									"src": "7069:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "7876:434:5",
										"statements": [
											{
												"condition": {
													"id": 1635,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1626,
													"src": "7890:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1657,
													"nodeType": "Block",
													"src": "8246:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1653,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "8268:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1654,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "8280:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1652,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "8260:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1656,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:5"
														}
													]
												},
												"id": 1658,
												"nodeType": "IfStatement",
												"src": "7886:418:5",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "7899:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1636,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "7917:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1648,
															"nodeType": "IfStatement",
															"src": "7913:286:5",
															"trueBody": {
																"id": 1647,
																"nodeType": "Block",
																"src": "7941:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1642,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1624,
																							"src": "8143:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1641,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1393,
																						"src": "8132:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1643,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1640,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1646,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1649,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "8219:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1634,
															"id": 1650,
															"nodeType": "Return",
															"src": "8212:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7751:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7773:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7806:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:5"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7862:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:5"
									},
									"scope": 1705,
									"src": "7682:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "8691:135:5",
										"statements": [
											{
												"condition": {
													"id": 1672,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1663,
													"src": "8705:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1681,
													"nodeType": "Block",
													"src": "8762:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1677,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "8784:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1678,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "8796:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1676,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "8776:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1680,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:5"
														}
													]
												},
												"id": 1682,
												"nodeType": "IfStatement",
												"src": "8701:119:5",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "8714:42:5",
													"statements": [
														{
															"expression": {
																"id": 1673,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1665,
																"src": "8735:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1671,
															"id": 1674,
															"nodeType": "Return",
															"src": "8728:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8566:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8588:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8621:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1666,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:5"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8677:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:5"
									},
									"scope": 1705,
									"src": "8531:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "8915:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1691,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "8991:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1701,
													"nodeType": "Block",
													"src": "9321:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1698,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "9342:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1697,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1700,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:5"
														}
													]
												},
												"id": 1702,
												"nodeType": "IfStatement",
												"src": "8987:379:5",
												"trueBody": {
													"id": 1696,
													"nodeType": "Block",
													"src": "9014:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:5",
																"nodeType": "YulBlock",
																"src": "9172:133:5",
																"statements": [
																	{
																		"nativeSrc": "9190:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:5"
																			},
																			"nativeSrc": "9213:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:5",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:5",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:5"
																					},
																					"nativeSrc": "9254:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:5"
																			},
																			"nativeSrc": "9247:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:5"
																		},
																		"nativeSrc": "9247:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1686,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1686,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:5",
																	"valueSize": 1
																}
															],
															"id": 1695,
															"nodeType": "InlineAssembly",
															"src": "9163:142:5"
														}
													]
												}
											}
										]
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "8849:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "8874:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:5"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:5"
									},
									"scope": 1705,
									"src": "8832:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1706,
							"src": "194:9180:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"Initializable": [
							448
						]
					},
					"id": 1752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1752,
							"sourceUnit": 449,
							"src": "126:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1708,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1711,
										"name": "Initializable",
										"nameLocations": [
											"728:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:6"
									},
									"id": 1712,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:6"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1710,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1751,
							"linearizedBaseContracts": [
								1751,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "800:7:6",
										"statements": []
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1715,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1714,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:6"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:6"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:6"
									},
									"scope": 1751,
									"src": "748:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "875:7:6",
										"statements": []
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1720,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:6"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:6"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:6"
									},
									"scope": 1751,
									"src": "813:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "949:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1729,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1731,
												"nodeType": "Return",
												"src": "959:17:6"
											}
										]
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:6"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "940:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:6"
									},
									"scope": 1751,
									"src": "887:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "1056:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1738,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1740,
												"nodeType": "Return",
												"src": "1066:15:6"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:6"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1040:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:6"
									},
									"scope": 1751,
									"src": "989:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "1166:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1746,
												"id": 1748,
												"nodeType": "Return",
												"src": "1176:8:6"
											}
										]
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:6"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1157:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:6"
									},
									"scope": 1751,
									"src": "1094:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1752,
							"src": "688:505:6",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1772
						]
					},
					"id": 1773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1753,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1754,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:7",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1772,
							"linearizedBaseContracts": [
								1772
							],
							"name": "IERC1967",
							"nameLocation": "245:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:7",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1759,
									"name": "Upgraded",
									"nameLocation": "339:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "348:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:7"
									},
									"src": "333:47:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:7",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1766,
									"name": "AdminChanged",
									"nameLocation": "464:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "477:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "500:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:7"
									},
									"src": "458:60:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:7",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1771,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "609:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:7"
									},
									"src": "588:45:7"
								}
							],
							"scope": 1773,
							"src": "235:400:7",
							"usedErrors": [],
							"usedEvents": [
								1759,
								1766,
								1771
							]
						}
					],
					"src": "107:529:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1782
						]
					},
					"id": 1783,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1775,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:8",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1782,
							"linearizedBaseContracts": [
								1782
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:8",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:8"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "869:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:8"
									},
									"scope": 1782,
									"src": "821:57:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1783,
							"src": "344:536:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1919
						],
						"IERC20Errors": [
							1824
						],
						"IERC721Errors": [
							1872
						]
					},
					"id": 1920,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1784,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1785,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:9",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1824,
							"linearizedBaseContracts": [
								1824
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:9",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1794,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "654:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "670:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "687:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:9"
									},
									"src": "623:80:9"
								},
								{
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1799,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "891:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:9"
									},
									"src": "866:41:9"
								},
								{
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1804,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1104:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:9"
									},
									"src": "1077:45:9"
								},
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:9",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1813,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1511:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1528:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1547:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:9"
									},
									"src": "1478:85:9"
								},
								{
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1818,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "1775:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:9"
									},
									"src": "1748:45:9"
								},
								{
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:9",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1823,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "2025:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:9"
									},
									"src": "1999:43:9"
								}
							],
							"scope": 1920,
							"src": "280:1764:9",
							"usedErrors": [
								1794,
								1799,
								1804,
								1813,
								1818,
								1823
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1825,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:9",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1872,
							"linearizedBaseContracts": [
								1872
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:9",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1830,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "2469:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:9"
									},
									"src": "2444:40:9"
								},
								{
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:9",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1835,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "2656:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:9"
									},
									"src": "2627:46:9"
								},
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:9",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1844,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3000:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3016:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3033:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:9"
									},
									"src": "2973:75:9"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1849,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "3237:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:9"
									},
									"src": "3211:42:9"
								},
								{
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1854,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "3451:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:9"
									},
									"src": "3423:46:9"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:9",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1861,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "3760:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "3778:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:9"
									},
									"src": "3727:68:9"
								},
								{
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1866,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "4008:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:9"
									},
									"src": "3980:46:9"
								},
								{
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:9",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1871,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "4262:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:9"
									},
									"src": "4234:46:9"
								}
							],
							"scope": 1920,
							"src": "2190:2092:9",
							"usedErrors": [
								1830,
								1835,
								1844,
								1849,
								1854,
								1861,
								1866,
								1871
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1873,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:9",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1919,
							"linearizedBaseContracts": [
								1919
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:9",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1884,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4860:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4876:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4893:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4909:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:9"
									},
									"src": "4827:99:9"
								},
								{
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1889,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "5116:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:9"
									},
									"src": "5089:43:9"
								},
								{
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1894,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "5331:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:9"
									},
									"src": "5302:47:9"
								},
								{
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:9",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1901,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "5651:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "5669:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:9"
									},
									"src": "5616:68:9"
								},
								{
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1906,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "5898:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:9"
									},
									"src": "5869:47:9"
								},
								{
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:9",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1911,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "6153:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:9"
									},
									"src": "6124:47:9"
								},
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:9",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1918,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "6494:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "6513:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:9"
									},
									"src": "6462:73:9"
								}
							],
							"scope": 1920,
							"src": "4430:2107:9",
							"usedErrors": [
								1884,
								1889,
								1894,
								1901,
								1906,
								1911,
								1918
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2586
						],
						"ERC1967Utils": [
							2213
						],
						"IBeacon": [
							2223
						],
						"IERC1967": [
							1772
						],
						"StorageSlot": [
							2732
						]
					},
					"id": 2214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1921,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1923,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 2224,
							"src": "140:46:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1922,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2223,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 1773,
							"src": "187:55:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1924,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1772,
										"src": "195:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 2587,
							"src": "243:48:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1926,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2586,
										"src": "251:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 2733,
							"src": "292:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1928,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2732,
										"src": "300:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1930,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:10",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 2213,
							"linearizedBaseContracts": [
								2213
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:10",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1934,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:10",
									"nodeType": "VariableDeclaration",
									"scope": 2213,
									"src": "763:114:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1932,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1933,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:10",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1939,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "993:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:10"
									},
									"src": "958:59:10"
								},
								{
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:10",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1944,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "1114:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:10"
									},
									"src": "1088:41:10"
								},
								{
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:10",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1949,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1228:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:10"
									},
									"src": "1201:43:10"
								},
								{
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:10",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1952,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:10"
									},
									"src": "1337:26:10"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "1502:77:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1960,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "1546:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1958,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "1519:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2643,
															"src": "1519:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2613,
													"src": "1519:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1957,
												"id": 1963,
												"nodeType": "Return",
												"src": "1512:60:10"
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:10",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:10"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "1493:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:10"
									},
									"scope": 2213,
									"src": "1441:138:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "1734:218:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1971,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "1748:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1981,
												"nodeType": "IfStatement",
												"src": "1744:119:10",
												"trueBody": {
													"id": 1980,
													"nodeType": "Block",
													"src": "1784:79:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1977,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1968,
																		"src": "1834:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1976,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "1805:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1979,
															"nodeType": "RevertStatement",
															"src": "1798:54:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1985,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "1899:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1982,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "1872:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2643,
																"src": "1872:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "1872:53:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1988,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "1928:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1990,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:10"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:10",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "1699:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:10"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:10"
									},
									"scope": 2213,
									"src": "1671:281:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "2345:263:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2001,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "2374:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2000,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "2355:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2007,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "2425:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2004,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "2407:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1772_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:10",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1759,
														"src": "2407:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2009,
												"nodeType": "EmitStatement",
												"src": "2402:41:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2010,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "2458:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2025,
													"nodeType": "Block",
													"src": "2559:43:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2022,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "2573:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2024,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:10"
														}
													]
												},
												"id": 2026,
												"nodeType": "IfStatement",
												"src": "2454:148:10",
												"trueBody": {
													"id": 2021,
													"nodeType": "Block",
													"src": "2475:78:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2017,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1995,
																		"src": "2518:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2018,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1997,
																		"src": "2537:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2014,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "2489:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2586_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:10",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2503,
																	"src": "2489:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2020,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:10",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2290:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2317:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:10"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:10"
									},
									"scope": 2213,
									"src": "2264:344:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:10",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 2032,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2213,
									"src": "2829:105:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2030,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 2031,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "3339:68:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2040,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2032,
																"src": "3383:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2038,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "3356:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2643,
															"src": "3356:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2613,
													"src": "3356:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2037,
												"id": 2043,
												"nodeType": "Return",
												"src": "3349:51:10"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:10",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:10"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3330:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:10"
									},
									"scope": 2213,
									"src": "3287:120:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "3535:172:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2051,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "3549:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2052,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2065,
												"nodeType": "IfStatement",
												"src": "3545:91:10",
												"trueBody": {
													"id": 2064,
													"nodeType": "Block",
													"src": "3573:63:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2058,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2057,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "3594:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2063,
															"nodeType": "RevertStatement",
															"src": "3587:38:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2069,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "3672:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2066,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "3645:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2643,
																"src": "3645:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "3645:44:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2072,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "3692:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2074,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:10"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:10",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "3509:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:10"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:10"
									},
									"scope": 2213,
									"src": "3490:217:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "3875:94:10",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2085,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "3912:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2087,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "3924:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2082,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "3890:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1772_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:10",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1766,
														"src": "3890:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2089,
												"nodeType": "EmitStatement",
												"src": "3885:48:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2091,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "3953:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2090,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "3943:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:10"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:10",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "3848:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:10"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:10"
									},
									"scope": 2213,
									"src": "3827:142:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2096,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:10",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 2099,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 2213,
									"src": "4246:106:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2097,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 2098,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "4468:69:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2107,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "4512:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2105,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "4485:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2643,
															"src": "4485:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2613,
													"src": "4485:45:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2104,
												"id": 2110,
												"nodeType": "Return",
												"src": "4478:52:10"
											}
										]
									},
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:10",
										"text": " @dev Returns the current beacon."
									},
									"id": 2112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:10"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "4459:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:10"
									},
									"scope": 2213,
									"src": "4415:122:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "4667:390:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2118,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "4681:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2128,
												"nodeType": "IfStatement",
												"src": "4677:95:10",
												"trueBody": {
													"id": 2127,
													"nodeType": "Block",
													"src": "4709:63:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2124,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "4751:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2123,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1949,
																	"src": "4730:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2126,
															"nodeType": "RevertStatement",
															"src": "4723:38:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2132,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "4809:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2129,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "4782:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2643,
																"src": "4782:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "4782:45:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2135,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2115,
														"src": "4830:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2137,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:10"
											},
											{
												"assignments": [
													2139
												],
												"declarations": [
													{
														"constant": false,
														"id": 2139,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:10",
														"nodeType": "VariableDeclaration",
														"scope": 2157,
														"src": "4850:28:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2138,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2145,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2141,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2115,
																	"src": "4889:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2140,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "4881:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$2223_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$2223",
																"typeString": "contract IBeacon"
															}
														},
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:10",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2222,
														"src": "4881:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2146,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2139,
																"src": "4930:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2156,
												"nodeType": "IfStatement",
												"src": "4926:125:10",
												"trueBody": {
													"id": 2155,
													"nodeType": "Block",
													"src": "4969:82:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2152,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2139,
																		"src": "5019:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2151,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "4990:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2154,
															"nodeType": "RevertStatement",
															"src": "4983:57:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:10",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "4640:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:10"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:10"
									},
									"scope": 2213,
									"src": "4620:437:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "5661:263:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "5682:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2166,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "5671:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2173,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "5731:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2170,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "5707:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1772_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:10",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1771,
														"src": "5707:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2175,
												"nodeType": "EmitStatement",
												"src": "5702:39:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2176,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "5756:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "5875:43:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2192,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "5889:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:10"
														}
													]
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "5752:166:10",
												"trueBody": {
													"id": 2191,
													"nodeType": "Block",
													"src": "5773:96:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2184,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2161,
																						"src": "5824:9:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2183,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2223,
																					"src": "5816:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$2223_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 2185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$2223",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:10",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2222,
																			"src": "5816:33:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2188,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "5853:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2180,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "5787:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2586_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:10",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2503,
																	"src": "5787:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2190,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:10",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "5614:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "5633:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:10"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:10"
									},
									"scope": 2213,
									"src": "5582:342:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "6149:86:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2202,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2210,
												"nodeType": "IfStatement",
												"src": "6159:70:10",
												"trueBody": {
													"id": 2209,
													"nodeType": "Block",
													"src": "6178:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2206,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "6199:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2208,
															"nodeType": "RevertStatement",
															"src": "6192:26:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:10",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:10"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:10"
									},
									"scope": 2213,
									"src": "6113:122:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2214,
							"src": "496:5741:10",
							"usedErrors": [
								1939,
								1944,
								1949,
								1952
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							2223
						]
					},
					"id": 2224,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2216,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:11",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 2223,
							"linearizedBaseContracts": [
								2223
							],
							"name": "IBeacon",
							"nameLocation": "224:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2217,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:11",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 2222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:11"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "460:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:11"
									},
									"scope": 2223,
									"src": "411:58:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2224,
							"src": "214:257:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2301
						]
					},
					"id": 2302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2225,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2226,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:12",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 2301,
							"linearizedBaseContracts": [
								2301
							],
							"name": "IERC20",
							"nameLocation": "214:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:12",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2235,
									"name": "Transfer",
									"nameLocation": "396:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "405:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "427:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "447:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:12"
									},
									"src": "390:72:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:12",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2244,
									"name": "Approval",
									"nameLocation": "627:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "636:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "659:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "684:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:12"
									},
									"src": "621:78:12"
								},
								{
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:12",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:12"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "821:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:12"
									},
									"scope": 2301,
									"src": "775:55:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:12",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "931:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:12"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "971:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:12"
									},
									"scope": 2301,
									"src": "912:68:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:12",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1222:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1234:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:12"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1267:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:12"
									},
									"scope": 2301,
									"src": "1204:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2269,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:12",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "1567:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "1582:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:12"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "1622:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:12"
									},
									"scope": 2301,
									"src": "1548:83:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2279,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:12",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2326:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2343:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:12"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2376:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:12"
									},
									"scope": 2301,
									"src": "2309:73:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:12",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2712:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2726:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2738:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:12"
									},
									"returnParameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2771:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:12"
									},
									"scope": 2301,
									"src": "2690:87:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2302,
							"src": "204:2575:12",
							"usedErrors": [],
							"usedEvents": [
								2235,
								2244
							]
						}
					],
					"src": "106:2674:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							2301
						],
						"IERC20Metadata": [
							2327
						]
					},
					"id": 2328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2305,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2328,
							"sourceUnit": 2302,
							"src": "151:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2304,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2301,
										"src": "159:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2307,
										"name": "IERC20",
										"nameLocations": [
											"306:6:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2301,
										"src": "306:6:13"
									},
									"id": 2308,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:13"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2306,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:13",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 2327,
							"linearizedBaseContracts": [
								2327,
								2301
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2309,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:13",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:13"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "417:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:13"
									},
									"scope": 2327,
									"src": "378:54:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:13",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:13"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "540:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:13"
									},
									"scope": 2327,
									"src": "499:56:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2321,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:13",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:13"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "674:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2323,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:13"
									},
									"scope": 2327,
									"src": "631:50:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2328,
							"src": "278:405:13",
							"usedErrors": [],
							"usedEvents": [
								2235,
								2244
							]
						}
					],
					"src": "125:559:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2586
						],
						"Errors": [
							2608
						]
					},
					"id": 2587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 2331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2587,
							"sourceUnit": 2609,
							"src": "127:36:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2330,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2608,
										"src": "135:6:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2332,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:14",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2586,
							"linearizedBaseContracts": [
								2586
							],
							"name": "Address",
							"nameLocation": "241:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:14",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 2337,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "358:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:14"
									},
									"src": "335:39:14"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "1361:278:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2347,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																],
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2345,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2350,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2342,
														"src": "1399:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2364,
												"nodeType": "IfStatement",
												"src": "1371:125:14",
												"trueBody": {
													"id": 2363,
													"nodeType": "Block",
													"src": "1407:89:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2357,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2355,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:14",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2360,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2342,
																		"src": "1478:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2352,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "1428:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:14",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2596,
																	"src": "1428:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2362,
															"nodeType": "RevertStatement",
															"src": "1421:64:14"
														}
													]
												}
											},
											{
												"assignments": [
													2366,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2366,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2383,
														"src": "1507:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2365,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2373,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2367,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2340,
																"src": "1525:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2369,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "1547:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:14"
											},
											{
												"condition": {
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:14",
													"subExpression": {
														"id": 2374,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2366,
														"src": "1573:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2382,
												"nodeType": "IfStatement",
												"src": "1568:65:14",
												"trueBody": {
													"id": 2381,
													"nodeType": "Block",
													"src": "1582:51:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2376,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "1603:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:14",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2599,
																	"src": "1603:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2380,
															"nodeType": "RevertStatement",
															"src": "1596:26:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2338,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:14",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1309:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1336:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:14"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:14"
									},
									"scope": 2586,
									"src": "1290:349:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "2573:62:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2395,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "2612:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2396,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "2620:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2394,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "2590:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2393,
												"id": 2399,
												"nodeType": "Return",
												"src": "2583:45:14"
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:14",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "2506:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "2522:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:14"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "2559:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:14"
									},
									"scope": 2586,
									"src": "2484:151:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2450,
										"nodeType": "Block",
										"src": "3072:294:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2415,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																],
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2413,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2418,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "3110:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2432,
												"nodeType": "IfStatement",
												"src": "3082:123:14",
												"trueBody": {
													"id": 2431,
													"nodeType": "Block",
													"src": "3117:88:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2425,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2423,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:14",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2428,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2408,
																		"src": "3188:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2420,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "3138:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:14",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2596,
																	"src": "3138:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2430,
															"nodeType": "RevertStatement",
															"src": "3131:63:14"
														}
													]
												}
											},
											{
												"assignments": [
													2434,
													2436
												],
												"declarations": [
													{
														"constant": false,
														"id": 2434,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "3215:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2433,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2436,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "3229:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2435,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2443,
												"initialValue": {
													"arguments": [
														{
															"id": 2441,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "3282:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2437,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2404,
																"src": "3256:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2439,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2408,
																"src": "3275:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2445,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "3331:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2446,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2434,
															"src": "3339:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2447,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "3348:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2444,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "3304:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2412,
												"id": 2449,
												"nodeType": "Return",
												"src": "3297:62:14"
											}
										]
									},
									"documentation": {
										"id": 2402,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "2990:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "3006:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "3025:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:14"
									},
									"returnParameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "3058:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:14"
									},
									"scope": 2586,
									"src": "2959:407:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2476,
										"nodeType": "Block",
										"src": "3605:154:14",
										"statements": [
											{
												"assignments": [
													2462,
													2464
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2476,
														"src": "3616:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2461,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2464,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2476,
														"src": "3630:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2463,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2469,
												"initialValue": {
													"arguments": [
														{
															"id": 2467,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "3675:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "3657:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:14",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "3724:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2472,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "3732:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2473,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2464,
															"src": "3741:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2470,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "3697:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2460,
												"id": 2475,
												"nodeType": "Return",
												"src": "3690:62:14"
											}
										]
									},
									"documentation": {
										"id": 2452,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "3533:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "3549:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:14"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "3591:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:14"
									},
									"scope": 2586,
									"src": "3505:254:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2502,
										"nodeType": "Block",
										"src": "3997:156:14",
										"statements": [
											{
												"assignments": [
													2488,
													2490
												],
												"declarations": [
													{
														"constant": false,
														"id": 2488,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2502,
														"src": "4008:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2487,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2490,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2502,
														"src": "4022:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2495,
												"initialValue": {
													"arguments": [
														{
															"id": 2493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "4069:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2491,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "4049:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:14",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "4118:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2498,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "4126:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2499,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "4135:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2496,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "4091:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2486,
												"id": 2501,
												"nodeType": "Return",
												"src": "4084:62:14"
											}
										]
									},
									"documentation": {
										"id": 2478,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "3930:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "3946:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:14"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "3983:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:14"
									},
									"scope": 2586,
									"src": "3900:253:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "4579:424:14",
										"statements": [
											{
												"condition": {
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:14",
													"subExpression": {
														"id": 2515,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2508,
														"src": "4594:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2540,
													"nodeType": "Block",
													"src": "4653:344:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2522,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2510,
																			"src": "4841:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2526,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2506,
																				"src": "4867:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:14",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2537,
															"nodeType": "IfStatement",
															"src": "4837:119:14",
															"trueBody": {
																"id": 2536,
																"nodeType": "Block",
																"src": "4892:64:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2533,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2506,
																					"src": "4934:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2532,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2337,
																				"src": "4917:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2535,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:14"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2538,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2510,
																"src": "4976:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2514,
															"id": 2539,
															"nodeType": "Return",
															"src": "4969:17:14"
														}
													]
												},
												"id": 2541,
												"nodeType": "IfStatement",
												"src": "4589:408:14",
												"trueBody": {
													"id": 2521,
													"nodeType": "Block",
													"src": "4603:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2518,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2510,
																		"src": "4625:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2517,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "4617:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2520,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2504,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:14",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4466:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4490:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4512:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:14"
									},
									"returnParameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4565:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2512,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:14"
									},
									"scope": 2586,
									"src": "4421:582:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "5307:122:14",
										"statements": [
											{
												"condition": {
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:14",
													"subExpression": {
														"id": 2553,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "5322:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2562,
													"nodeType": "Block",
													"src": "5381:42:14",
													"statements": [
														{
															"expression": {
																"id": 2560,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2548,
																"src": "5402:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2552,
															"id": 2561,
															"nodeType": "Return",
															"src": "5395:17:14"
														}
													]
												},
												"id": 2563,
												"nodeType": "IfStatement",
												"src": "5317:106:14",
												"trueBody": {
													"id": 2559,
													"nodeType": "Block",
													"src": "5331:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2556,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2548,
																		"src": "5353:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2555,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "5345:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2558,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2544,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:14",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5231:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5245:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:14"
									},
									"returnParameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5293:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:14"
									},
									"scope": 2586,
									"src": "5205:224:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "5598:432:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2568,
															"src": "5674:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2582,
													"nodeType": "Block",
													"src": "5973:51:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2577,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "5994:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:14",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2599,
																	"src": "5994:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2581,
															"nodeType": "RevertStatement",
															"src": "5987:26:14"
														}
													]
												},
												"id": 2583,
												"nodeType": "IfStatement",
												"src": "5670:354:14",
												"trueBody": {
													"id": 2576,
													"nodeType": "Block",
													"src": "5697:270:14",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:14",
																"nodeType": "YulBlock",
																"src": "5824:133:14",
																"statements": [
																	{
																		"nativeSrc": "5842:40:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:14"
																			},
																			"nativeSrc": "5865:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:14"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:14",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:14",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:14",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:14"
																					},
																					"nativeSrc": "5906:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:14"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:14"
																			},
																			"nativeSrc": "5899:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:14"
																		},
																		"nativeSrc": "5899:44:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:14"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2568,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:14",
																	"valueSize": 1
																},
																{
																	"declaration": 2568,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:14",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2575,
															"nodeType": "InlineAssembly",
															"src": "5799:158:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:14",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5560:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:14"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:14"
									},
									"scope": 2586,
									"src": "5543:487:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2587,
							"src": "233:5799:14",
							"usedErrors": [
								2337
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2608
						]
					},
					"id": 2609,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2589,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:15",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2608,
							"linearizedBaseContracts": [
								2608
							],
							"name": "Errors",
							"nameLocation": "419:6:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2590,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:15",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2596,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "557:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "574:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:15"
									},
									"src": "531:59:15"
								},
								{
									"documentation": {
										"id": 2597,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:15",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2599,
									"name": "FailedCall",
									"nameLocation": "696:10:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:15"
									},
									"src": "690:19:15"
								},
								{
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:15",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2602,
									"name": "FailedDeployment",
									"nameLocation": "772:16:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:15"
									},
									"src": "766:25:15"
								},
								{
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:15",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2607,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "884:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:15"
									},
									"src": "860:33:15"
								}
							],
							"scope": 2609,
							"src": "411:484:15",
							"usedErrors": [
								2596,
								2599,
								2602,
								2607
							],
							"usedEvents": []
						}
					],
					"src": "100:796:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2732
						]
					},
					"id": 2733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2610,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2611,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:16",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2732,
							"linearizedBaseContracts": [
								2732
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2614,
									"members": [
										{
											"constant": false,
											"id": 2613,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2614,
											"src": "1462:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2612,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1433:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2617,
									"members": [
										{
											"constant": false,
											"id": 2616,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2617,
											"src": "1517:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2615,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1488:46:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2620,
									"members": [
										{
											"constant": false,
											"id": 2619,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2620,
											"src": "1569:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2618,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1540:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2623,
									"members": [
										{
											"constant": false,
											"id": 2622,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2623,
											"src": "1624:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2621,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1595:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2626,
									"members": [
										{
											"constant": false,
											"id": 2625,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2626,
											"src": "1678:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2624,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1650:47:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2629,
									"members": [
										{
											"constant": false,
											"id": 2628,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2629,
											"src": "1731:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2627,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1703:47:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2632,
									"members": [
										{
											"constant": false,
											"id": 2631,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2632,
											"src": "1783:11:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2630,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1756:45:16",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2642,
										"nodeType": "Block",
										"src": "1983:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:16",
													"nodeType": "YulBlock",
													"src": "2018:38:16",
													"statements": [
														{
															"nativeSrc": "2032:14:16",
															"nodeType": "YulAssignment",
															"src": "2032:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:16",
																"nodeType": "YulIdentifier",
																"src": "2042:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2639,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2635,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2641,
												"nodeType": "InlineAssembly",
												"src": "1993:63:16"
											}
										]
									},
									"documentation": {
										"id": 2633,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:16",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "1923:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2634,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:16"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "1960:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2638,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2637,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2614,
														"src": "1960:11:16"
													},
													"referencedDeclaration": 2614,
													"src": "1960:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:16"
									},
									"scope": 2732,
									"src": "1899:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2653,
										"nodeType": "Block",
										"src": "2243:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:16",
													"nodeType": "YulBlock",
													"src": "2278:38:16",
													"statements": [
														{
															"nativeSrc": "2292:14:16",
															"nodeType": "YulAssignment",
															"src": "2292:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:16",
																"nodeType": "YulIdentifier",
																"src": "2302:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2646,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2652,
												"nodeType": "InlineAssembly",
												"src": "2253:63:16"
											}
										]
									},
									"documentation": {
										"id": 2644,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:16",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "2183:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:16"
									},
									"returnParameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "2220:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2617_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2649,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2648,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2617,
														"src": "2220:11:16"
													},
													"referencedDeclaration": 2617,
													"src": "2220:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2617_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:16"
									},
									"scope": 2732,
									"src": "2159:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "2503:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:16",
													"nodeType": "YulBlock",
													"src": "2538:38:16",
													"statements": [
														{
															"nativeSrc": "2552:14:16",
															"nodeType": "YulAssignment",
															"src": "2552:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:16",
																"nodeType": "YulIdentifier",
																"src": "2562:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2661,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2657,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2663,
												"nodeType": "InlineAssembly",
												"src": "2513:63:16"
											}
										]
									},
									"documentation": {
										"id": 2655,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:16",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "2443:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:16"
									},
									"returnParameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "2480:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2620_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2659,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2620,
														"src": "2480:11:16"
													},
													"referencedDeclaration": 2620,
													"src": "2480:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2620_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:16"
									},
									"scope": 2732,
									"src": "2419:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2675,
										"nodeType": "Block",
										"src": "2763:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:16",
													"nodeType": "YulBlock",
													"src": "2798:38:16",
													"statements": [
														{
															"nativeSrc": "2812:14:16",
															"nodeType": "YulAssignment",
															"src": "2812:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:16",
																"nodeType": "YulIdentifier",
																"src": "2822:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2672,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2668,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2674,
												"nodeType": "InlineAssembly",
												"src": "2773:63:16"
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:16",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "2703:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2667,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:16"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "2740:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2623_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2670,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2623,
														"src": "2740:11:16"
													},
													"referencedDeclaration": 2623,
													"src": "2740:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2623_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:16"
									},
									"scope": 2732,
									"src": "2679:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "3020:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:16",
													"nodeType": "YulBlock",
													"src": "3055:38:16",
													"statements": [
														{
															"nativeSrc": "3069:14:16",
															"nodeType": "YulAssignment",
															"src": "3069:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:16",
																"nodeType": "YulIdentifier",
																"src": "3079:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2683,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2685,
												"nodeType": "InlineAssembly",
												"src": "3030:63:16"
											}
										]
									},
									"documentation": {
										"id": 2677,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:16",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "2961:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2678,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:16"
									},
									"returnParameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "2998:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2626_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2681,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2626,
														"src": "2998:10:16"
													},
													"referencedDeclaration": 2626,
													"src": "2998:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2626_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:16"
									},
									"scope": 2732,
									"src": "2938:161:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "3277:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:16",
													"nodeType": "YulBlock",
													"src": "3312:38:16",
													"statements": [
														{
															"nativeSrc": "3326:14:16",
															"nodeType": "YulAssignment",
															"src": "3326:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:16",
																"nodeType": "YulIdentifier",
																"src": "3336:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2694,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2690,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2696,
												"nodeType": "InlineAssembly",
												"src": "3287:63:16"
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:16",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "3218:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:16"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "3255:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2693,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2692,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2629,
														"src": "3255:10:16"
													},
													"referencedDeclaration": 2629,
													"src": "3255:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:16"
									},
									"scope": 2732,
									"src": "3195:161:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2708,
										"nodeType": "Block",
										"src": "3558:85:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:16",
													"nodeType": "YulBlock",
													"src": "3593:44:16",
													"statements": [
														{
															"nativeSrc": "3607:20:16",
															"nodeType": "YulAssignment",
															"src": "3607:20:16",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:16",
																"nodeType": "YulIdentifier",
																"src": "3617:10:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2705,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2701,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:16",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2707,
												"nodeType": "InlineAssembly",
												"src": "3568:69:16"
											}
										]
									},
									"documentation": {
										"id": 2699,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:16",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "3491:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:16"
									},
									"returnParameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "3536:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2703,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2629,
														"src": "3536:10:16"
													},
													"referencedDeclaration": 2629,
													"src": "3536:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:16"
									},
									"scope": 2732,
									"src": "3468:175:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "3818:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:16",
													"nodeType": "YulBlock",
													"src": "3853:38:16",
													"statements": [
														{
															"nativeSrc": "3867:14:16",
															"nodeType": "YulAssignment",
															"src": "3867:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:16",
																"nodeType": "YulIdentifier",
																"src": "3877:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2716,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2712,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2718,
												"nodeType": "InlineAssembly",
												"src": "3828:63:16"
											}
										]
									},
									"documentation": {
										"id": 2710,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:16",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "3760:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2711,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:16"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "3797:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2715,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2714,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2632,
														"src": "3797:9:16"
													},
													"referencedDeclaration": 2632,
													"src": "3797:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:16"
									},
									"scope": 2732,
									"src": "3738:159:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2730,
										"nodeType": "Block",
										"src": "4094:85:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:16",
													"nodeType": "YulBlock",
													"src": "4129:44:16",
													"statements": [
														{
															"nativeSrc": "4143:20:16",
															"nodeType": "YulAssignment",
															"src": "4143:20:16",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:16",
																"nodeType": "YulIdentifier",
																"src": "4153:10:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2727,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2723,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:16",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2729,
												"nodeType": "InlineAssembly",
												"src": "4104:69:16"
											}
										]
									},
									"documentation": {
										"id": 2721,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:16",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "4029:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:16"
									},
									"returnParameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "4073:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2725,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2632,
														"src": "4073:9:16"
													},
													"referencedDeclaration": 2632,
													"src": "4073:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:16"
									},
									"scope": 2732,
									"src": "4007:172:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2733,
							"src": "1407:2774:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:16"
				},
				"id": 16
			},
			"RVA/UpgradableToken.sol": {
				"ast": {
					"absolutePath": "RVA/UpgradableToken.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1705
						],
						"ContextUpgradeable": [
							1751
						],
						"ERC1967Utils": [
							2213
						],
						"ERC20Token": [
							3189
						],
						"ERC20Upgradeable": [
							1375
						],
						"IERC1822Proxiable": [
							1782
						],
						"IERC20": [
							2301
						],
						"IERC20Errors": [
							1824
						],
						"IERC20Metadata": [
							2327
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							758
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 3190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2734,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3190,
							"sourceUnit": 195,
							"src": "57:75:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3190,
							"sourceUnit": 1376,
							"src": "133:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 2737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3190,
							"sourceUnit": 759,
							"src": "212:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2738,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3190,
							"sourceUnit": 631,
							"src": "291:77:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"id": 2739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3190,
							"sourceUnit": 1706,
							"src": "369:74:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2740,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"468:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1375,
										"src": "468:16:17"
									},
									"id": 2741,
									"nodeType": "InheritanceSpecifier",
									"src": "468:16:17"
								},
								{
									"baseName": {
										"id": 2742,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"486:18:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "486:18:17"
									},
									"id": 2743,
									"nodeType": "InheritanceSpecifier",
									"src": "486:18:17"
								},
								{
									"baseName": {
										"id": 2744,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"506:19:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 758,
										"src": "506:19:17"
									},
									"id": 2745,
									"nodeType": "InheritanceSpecifier",
									"src": "506:19:17"
								},
								{
									"baseName": {
										"id": 2746,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"527:15:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "527:15:17"
									},
									"id": 2747,
									"nodeType": "InheritanceSpecifier",
									"src": "527:15:17"
								}
							],
							"canonicalName": "ERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3189,
							"linearizedBaseContracts": [
								3189,
								630,
								1782,
								758,
								194,
								1375,
								1824,
								2327,
								2301,
								1751,
								448
							],
							"name": "ERC20Token",
							"nameLocation": "454:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c66e4095",
									"id": 2749,
									"mutability": "mutable",
									"name": "icoContract",
									"nameLocation": "564:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3189,
									"src": "549:26:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2748,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "549:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2751,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "597:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 3189,
									"src": "581:28:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2750,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "581:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"global": false,
									"id": 2754,
									"libraryName": {
										"id": 2752,
										"name": "AddressUpgradeable",
										"nameLocations": [
											"621:18:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "621:18:17"
									},
									"nodeType": "UsingForDirective",
									"src": "615:37:17",
									"typeName": {
										"id": 2753,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "644:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "dbac26e9",
									"id": 2758,
									"mutability": "mutable",
									"name": "blacklisted",
									"nameLocation": "690:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3189,
									"src": "658:43:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2757,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2755,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "666:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "658:24:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2756,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "677:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9bc289f1",
									"id": 2762,
									"mutability": "mutable",
									"name": "lockedUntil",
									"nameLocation": "742:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3189,
									"src": "707:46:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2761,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2759,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "715:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "707:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2760,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "726:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a153e708",
									"id": 2766,
									"mutability": "mutable",
									"name": "lockedAmount",
									"nameLocation": "794:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 3189,
									"src": "759:47:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2765,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2763,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "759:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2764,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "778:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8",
									"id": 2770,
									"name": "ICOContractSet",
									"nameLocation": "819:14:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"indexed": true,
												"mutability": "mutable",
												"name": "icoContract",
												"nameLocation": "850:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "834:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:29:17"
									},
									"src": "813:50:17"
								},
								{
									"anonymous": false,
									"eventSelector": "86f2e10d5622d896b3f56e66c1a60639ca21a4674480f054bec2cb9ba62f40cb",
									"id": 2778,
									"name": "LockupSet",
									"nameLocation": "874:9:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "900:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "884:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2774,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedUntilTimestamp",
												"nameLocation": "917:20:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "909:28:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2776,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedAmount",
												"nameLocation": "947:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "939:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:77:17"
									},
									"src": "868:93:17"
								},
								{
									"anonymous": false,
									"eventSelector": "cf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8",
									"id": 2784,
									"name": "Blacklisted",
									"nameLocation": "972:11:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1000:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "984:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2782,
												"indexed": false,
												"mutability": "mutable",
												"name": "isBlacklisted",
												"nameLocation": "1014:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "1009:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1009:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:45:17"
									},
									"src": "966:63:17"
								},
								{
									"anonymous": false,
									"eventSelector": "96352ad7a9be4c45ad1b71ff4390921022216946b3b7348fd652f133a6ee5453",
									"id": 2790,
									"name": "EmergencyTokenRecovered",
									"nameLocation": "1040:23:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1080:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1064:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2788,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1095:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2790,
												"src": "1087:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:39:17"
									},
									"src": "1034:69:17"
								},
								{
									"body": {
										"id": 2797,
										"nodeType": "Block",
										"src": "1176:91:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2794,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1186:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1186:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2796,
												"nodeType": "ExpressionStatement",
												"src": "1186:22:17"
											}
										]
									},
									"documentation": {
										"id": 2791,
										"nodeType": "StructuredDocumentation",
										"src": "1109:48:17",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2798,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:2:17"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1176:0:17"
									},
									"scope": 3189,
									"src": "1162:105:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2835,
										"nodeType": "Block",
										"src": "1378:258:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2810,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2800,
															"src": "1401:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2811,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2802,
															"src": "1407:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2809,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "1388:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2813,
												"nodeType": "ExpressionStatement",
												"src": "1388:26:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2815,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1439:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1443:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1439:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2814,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1424:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1424:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2818,
												"nodeType": "ExpressionStatement",
												"src": "1424:26:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2819,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1460:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1460:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2821,
												"nodeType": "ExpressionStatement",
												"src": "1460:17:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2822,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1487:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1487:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2824,
												"nodeType": "ExpressionStatement",
												"src": "1487:24:17"
											},
											{
												"expression": {
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2825,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2751,
														"src": "1522:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2826,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2804,
														"src": "1537:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1522:27:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2828,
												"nodeType": "ExpressionStatement",
												"src": "1522:27:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2830,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1565:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1569:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1565:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2832,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2751,
															"src": "1577:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2829,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "1559:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1559:31:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2834,
												"nodeType": "ExpressionStatement",
												"src": "1559:31:17"
											}
										]
									},
									"functionSelector": "b119490e",
									"id": 2836,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2806,
												"name": "initializer",
												"nameLocations": [
													"1366:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1366:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1366:11:17"
										}
									],
									"name": "initialize",
									"nameLocation": "1282:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1307:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "1293:18:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1293:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1327:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "1313:20:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1313:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "totalSupply_",
												"nameLocation": "1343:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2836,
												"src": "1335:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:64:17"
									},
									"returnParameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1378:0:17"
									},
									"scope": 3189,
									"src": "1273:363:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2847,
										"nodeType": "Block",
										"src": "1669:80:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2839,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1687:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1691:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1687:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2841,
																"name": "icoContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "1701:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1687:25:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1714:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 2838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1679:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:52:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2845,
												"nodeType": "ExpressionStatement",
												"src": "1679:52:17"
											},
											{
												"id": 2846,
												"nodeType": "PlaceholderStatement",
												"src": "1741:1:17"
											}
										]
									},
									"id": 2848,
									"name": "onlyICOContract",
									"nameLocation": "1651:15:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1666:2:17"
									},
									"src": "1642:107:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2856,
										"nodeType": "Block",
										"src": "1791:25:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2853,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "1801:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1801:8:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2855,
												"nodeType": "ExpressionStatement",
												"src": "1801:8:17"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2857,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2851,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2850,
												"name": "onlyOwner",
												"nameLocations": [
													"1781:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1781:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1781:9:17"
										}
									],
									"name": "pause",
									"nameLocation": "1764:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1769:2:17"
									},
									"returnParameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1791:0:17"
									},
									"scope": 3189,
									"src": "1755:61:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "1860:27:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2862,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "1870:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:10:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2864,
												"nodeType": "ExpressionStatement",
												"src": "1870:10:17"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2866,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2859,
												"name": "onlyOwner",
												"nameLocations": [
													"1850:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1850:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1850:9:17"
										}
									],
									"name": "unpause",
									"nameLocation": "1831:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1838:2:17"
									},
									"returnParameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:0:17"
									},
									"scope": 3189,
									"src": "1822:65:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2927,
										"nodeType": "Block",
										"src": "2004:415:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2880,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2868,
																"src": "2018:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2037:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2029:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2881,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2029:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2029:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2018:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756c6c2041646472657373",
															"id": 2886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2041:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															},
															"value": "Null Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															}
														],
														"id": 2879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2010:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2010:46:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2888,
												"nodeType": "ExpressionStatement",
												"src": "2010:46:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2890,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2872,
																"src": "2070:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2080:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2070:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2083:34:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 2889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2062:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2062:56:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2895,
												"nodeType": "ExpressionStatement",
												"src": "2062:56:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2896,
																"name": "lockedUntil",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2762,
																"src": "2175:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2898,
															"indexExpression": {
																"id": 2897,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2868,
																"src": "2187:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2175:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2899,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2870,
															"src": "2199:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2175:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2901,
																"name": "lockedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2766,
																"src": "2212:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2903,
															"indexExpression": {
																"id": 2902,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2868,
																"src": "2225:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2212:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2904,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2872,
															"src": "2237:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2212:31:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2175:68:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2926,
												"nodeType": "IfStatement",
												"src": "2171:246:17",
												"trueBody": {
													"id": 2925,
													"nodeType": "Block",
													"src": "2245:172:17",
													"statements": [
														{
															"expression": {
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2907,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "2255:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2909,
																	"indexExpression": {
																		"id": 2908,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2868,
																		"src": "2267:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2255:20:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2910,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2870,
																	"src": "2278:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2255:32:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2912,
															"nodeType": "ExpressionStatement",
															"src": "2255:32:17"
														},
														{
															"expression": {
																"id": 2917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2913,
																		"name": "lockedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2766,
																		"src": "2297:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2915,
																	"indexExpression": {
																		"id": 2914,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2868,
																		"src": "2310:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2297:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2916,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2872,
																	"src": "2321:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2297:30:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2918,
															"nodeType": "ExpressionStatement",
															"src": "2297:30:17"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2920,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2868,
																		"src": "2383:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2921,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2870,
																		"src": "2392:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2922,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2872,
																		"src": "2403:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2919,
																	"name": "LockupSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2778,
																	"src": "2373:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2373:37:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2924,
															"nodeType": "EmitStatement",
															"src": "2368:42:17"
														}
													]
												}
											}
										]
									},
									"functionSelector": "f326f0d7",
									"id": 2928,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2875,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2874,
												"name": "whenNotPaused",
												"nameLocations": [
													"1973:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "1973:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1973:13:17"
										},
										{
											"id": 2877,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2876,
												"name": "onlyICOContract",
												"nameLocations": [
													"1987:15:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2848,
												"src": "1987:15:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1987:15:17"
										}
									],
									"name": "setLockup",
									"nameLocation": "1902:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1920:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1912:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1937:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1929:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1956:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "1948:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:52:17"
									},
									"returnParameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2004:0:17"
									},
									"scope": 3189,
									"src": "1893:526:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2958,
										"nodeType": "Block",
										"src": "2496:143:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2938,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2930,
																"src": "2514:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2532:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2524:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2939,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2524:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2524:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2514:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756c6c2041646472657373",
															"id": 2944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2535:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															},
															"value": "Null Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															}
														],
														"id": 2937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2506:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2506:44:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2946,
												"nodeType": "ExpressionStatement",
												"src": "2506:44:17"
											},
											{
												"expression": {
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2947,
															"name": "blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2758,
															"src": "2560:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2949,
														"indexExpression": {
															"id": 2948,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "2572:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2560:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2950,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2932,
														"src": "2583:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2560:29:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2952,
												"nodeType": "ExpressionStatement",
												"src": "2560:29:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2954,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "2616:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2955,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2932,
															"src": "2625:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2953,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2784,
														"src": "2604:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2604:28:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2957,
												"nodeType": "EmitStatement",
												"src": "2599:33:17"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 2959,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2934,
												"name": "onlyOwner",
												"nameLocations": [
													"2486:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "2486:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2486:9:17"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "2434:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2455:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "2447:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2469:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2959,
												"src": "2464:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2464:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:30:17"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:17"
									},
									"scope": 3189,
									"src": "2425:214:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 3019,
										"nodeType": "Block",
										"src": "2869:416:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2887:24:17",
															"subExpression": {
																"baseExpression": {
																	"id": 2972,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "2888:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2975,
																"indexExpression": {
																	"expression": {
																		"id": 2973,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2900:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2904:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2900:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2888:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2913:40:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 2971,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2879:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2879:75:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2979,
												"nodeType": "ExpressionStatement",
												"src": "2879:75:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2972:23:17",
															"subExpression": {
																"baseExpression": {
																	"id": 2981,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "2973:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2983,
																"indexExpression": {
																	"id": 2982,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2961,
																	"src": "2985:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2973:22:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2997:43:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 2980,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2964:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2964:77:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2987,
												"nodeType": "ExpressionStatement",
												"src": "2964:77:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2989,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2963,
																"src": "3059:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3068:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3059:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c646e2774206265207a65726f",
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3070:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															},
															"value": "Amount shouldn't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															}
														],
														"id": 2988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3051:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:46:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2994,
												"nodeType": "ExpressionStatement",
												"src": "3051:46:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2996,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3115:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3121:9:17",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3115:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2998,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "3134:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3001,
																	"indexExpression": {
																		"expression": {
																			"id": 2999,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3146:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3150:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3146:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3134:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3115:42:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3003,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "3161:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3006,
																	"indexExpression": {
																		"expression": {
																			"id": 3004,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3173:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3177:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3173:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3161:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3188:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3161:28:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3115:74:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 3010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3191:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 2995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3107:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3107:121:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3012,
												"nodeType": "ExpressionStatement",
												"src": "3107:121:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3015,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2961,
															"src": "3260:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3016,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2963,
															"src": "3271:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3013,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3245:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Token_$3189_$",
																"typeString": "type(contract super ERC20Token)"
															}
														},
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3251:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "3245:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 3017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3245:33:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2970,
												"id": 3018,
												"nodeType": "Return",
												"src": "3238:40:17"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 3020,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2967,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2966,
												"name": "whenNotPaused",
												"nameLocations": [
													"2840:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2840:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2840:13:17"
										}
									],
									"name": "transfer",
									"nameLocation": "2780:8:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2965,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2831:8:17"
									},
									"parameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2797:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "2789:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2789:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2816:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "2808:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2788:35:17"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "2863:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2863:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2862:6:17"
									},
									"scope": 3189,
									"src": "2771:514:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 3080,
										"nodeType": "Block",
										"src": "3409:416:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3427:20:17",
															"subExpression": {
																"baseExpression": {
																	"id": 3035,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "3428:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3037,
																"indexExpression": {
																	"id": 3036,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3022,
																	"src": "3440:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3428:19:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 3039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:40:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 3034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3419:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:71:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3041,
												"nodeType": "ExpressionStatement",
												"src": "3419:71:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3508:23:17",
															"subExpression": {
																"baseExpression": {
																	"id": 3043,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "3509:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3045,
																"indexExpression": {
																	"id": 3044,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3024,
																	"src": "3521:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3509:22:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3533:43:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 3042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3500:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3500:77:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3049,
												"nodeType": "ExpressionStatement",
												"src": "3500:77:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3051,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3026,
																"src": "3595:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3604:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3595:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c646e2774206265207a65726f",
															"id": 3054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3606:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															},
															"value": "Amount shouldn't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															}
														],
														"id": 3050,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3587:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3587:46:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3056,
												"nodeType": "ExpressionStatement",
												"src": "3587:46:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3058,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3651:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3657:9:17",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3651:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3060,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "3670:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3062,
																	"indexExpression": {
																		"id": 3061,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3022,
																		"src": "3682:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3670:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3651:38:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3064,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2762,
																		"src": "3693:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3066,
																	"indexExpression": {
																		"id": 3065,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3022,
																		"src": "3705:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3693:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3716:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3693:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3651:66:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 3070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3719:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 3057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3643:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3643:113:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3072,
												"nodeType": "ExpressionStatement",
												"src": "3643:113:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3075,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3022,
															"src": "3792:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3076,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3024,
															"src": "3800:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3077,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3026,
															"src": "3811:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3073,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3773:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Token_$3189_$",
																"typeString": "type(contract super ERC20Token)"
															}
														},
														"id": 3074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3779:12:17",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1035,
														"src": "3773:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3773:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3033,
												"id": 3079,
												"nodeType": "Return",
												"src": "3766:52:17"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 3081,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3030,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3029,
												"name": "whenNotPaused",
												"nameLocations": [
													"3380:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "3380:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3380:13:17"
										}
									],
									"name": "transferFrom",
									"nameLocation": "3300:12:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3028,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3371:8:17"
									},
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3321:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3313:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3313:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3337:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3329:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3356:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3348:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:51:17"
									},
									"returnParameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3403:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3031,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3403:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3402:6:17"
									},
									"scope": 3189,
									"src": "3291:534:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3115,
										"nodeType": "Block",
										"src": "3911:220:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3091,
																"name": "_icoContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3083,
																"src": "3929:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3953:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3945:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3092,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3945:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 3095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3945:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3929:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756c6c2041646472657373",
															"id": 3097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3957:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															},
															"value": "Null Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															}
														],
														"id": 3090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3921:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:51:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3099,
												"nodeType": "ExpressionStatement",
												"src": "3921:51:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 3101,
																	"name": "_icoContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3083,
																	"src": "3990:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4003:10:17",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1393,
																"src": "3990:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 3103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3990:25:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373206973206e6f74206120636f6e7472616374",
															"id": 3104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4017:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed",
																"typeString": "literal_string \"Address is not a contract\""
															},
															"value": "Address is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed",
																"typeString": "literal_string \"Address is not a contract\""
															}
														],
														"id": 3100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3982:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:63:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3106,
												"nodeType": "ExpressionStatement",
												"src": "3982:63:17"
											},
											{
												"expression": {
													"id": 3109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3107,
														"name": "icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2749,
														"src": "4055:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3108,
														"name": "_icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3083,
														"src": "4069:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4055:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3110,
												"nodeType": "ExpressionStatement",
												"src": "4055:26:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3112,
															"name": "_icoContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3083,
															"src": "4111:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3111,
														"name": "ICOContractSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2770,
														"src": "4096:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4096:28:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3114,
												"nodeType": "EmitStatement",
												"src": "4091:33:17"
											}
										]
									},
									"functionSelector": "2e0d2a00",
									"id": 3116,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3086,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3085,
												"name": "whenNotPaused",
												"nameLocations": [
													"3886:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "3886:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3886:13:17"
										},
										{
											"id": 3088,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3087,
												"name": "onlyOwner",
												"nameLocations": [
													"3900:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3900:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3900:9:17"
										}
									],
									"name": "setICOContract",
									"nameLocation": "3840:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "_icoContract",
												"nameLocation": "3863:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "3855:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3855:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:22:17"
									},
									"returnParameters": {
										"id": 3089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3911:0:17"
									},
									"scope": 3189,
									"src": "3831:300:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3176,
										"nodeType": "Block",
										"src": "4242:468:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3128,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3119,
																	"src": "4260:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 3129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4271:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4260:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3130,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3122,
																	"src": "4281:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4289:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4281:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4260:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42617463685472616e73666572206661696c65643a204d69736d61746368656420617272617973",
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4297:41:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															},
															"value": "BatchTransfer failed: Mismatched arrays"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															}
														],
														"id": 3127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4252:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4252:87:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3135,
												"nodeType": "ExpressionStatement",
												"src": "4252:87:17"
											},
											{
												"assignments": [
													3137
												],
												"declarations": [
													{
														"constant": false,
														"id": 3137,
														"mutability": "mutable",
														"name": "recipientLength",
														"nameLocation": "4357:15:17",
														"nodeType": "VariableDeclaration",
														"scope": 3176,
														"src": "4349:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4349:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3140,
												"initialValue": {
													"expression": {
														"id": 3138,
														"name": "recipients",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3119,
														"src": "4375:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 3139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4386:6:17",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4375:17:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4349:43:17"
											},
											{
												"body": {
													"id": 3174,
													"nodeType": "Block",
													"src": "4448:256:17",
													"statements": [
														{
															"id": 3173,
															"nodeType": "UncheckedBlock",
															"src": "4462:232:17",
															"statements": [
																{
																	"condition": {
																		"baseExpression": {
																			"id": 3151,
																			"name": "blacklisted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2758,
																			"src": "4493:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 3155,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 3152,
																				"name": "recipients",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3119,
																				"src": "4505:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 3154,
																			"indexExpression": {
																				"id": 3153,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3142,
																				"src": "4516:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4505:13:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4493:26:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3161,
																	"nodeType": "IfStatement",
																	"src": "4489:129:17",
																	"trueBody": {
																		"id": 3160,
																		"nodeType": "Block",
																		"src": "4521:97:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
																							"id": 3157,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4550:48:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																								"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																							},
																							"value": "BatchTransfer failed: Recipient is blacklisted"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																								"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																							}
																						],
																						"id": 3156,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "4543:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 3158,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4543:56:17",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 3159,
																				"nodeType": "ExpressionStatement",
																				"src": "4543:56:17"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 3163,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4641:3:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4645:6:17",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4641:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 3165,
																					"name": "recipients",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3119,
																					"src": "4653:10:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 3167,
																				"indexExpression": {
																					"id": 3166,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3142,
																					"src": "4664:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4653:13:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 3168,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3122,
																					"src": "4668:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 3170,
																				"indexExpression": {
																					"id": 3169,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3142,
																					"src": "4676:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4668:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 3162,
																			"name": "_transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "4631:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 3171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4631:48:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3172,
																	"nodeType": "ExpressionStatement",
																	"src": "4631:48:17"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3145,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3142,
														"src": "4422:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3146,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3137,
														"src": "4426:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4422:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3175,
												"initializationExpression": {
													"assignments": [
														3142
													],
													"declarations": [
														{
															"constant": false,
															"id": 3142,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4415:1:17",
															"nodeType": "VariableDeclaration",
															"scope": 3175,
															"src": "4407:9:17",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3141,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4407:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3144,
													"initialValue": {
														"hexValue": "30",
														"id": 3143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4419:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4407:13:17"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4443:3:17",
														"subExpression": {
															"id": 3148,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "4443:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3150,
													"nodeType": "ExpressionStatement",
													"src": "4443:3:17"
												},
												"nodeType": "ForStatement",
												"src": "4402:302:17"
											}
										]
									},
									"functionSelector": "88d695b2",
									"id": 3177,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3125,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3124,
												"name": "whenNotPaused",
												"nameLocations": [
													"4228:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "4228:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4228:13:17"
										}
									],
									"name": "batchTransfer",
									"nameLocation": "4146:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "4179:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "4160:29:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4160:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3118,
													"nodeType": "ArrayTypeName",
													"src": "4160:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4210:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "4191:26:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3120,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4191:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3121,
													"nodeType": "ArrayTypeName",
													"src": "4191:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4159:59:17"
									},
									"returnParameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4242:0:17"
									},
									"scope": 3189,
									"src": "4137:573:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 3187,
										"nodeType": "Block",
										"src": "4812:2:17",
										"statements": []
									},
									"id": 3188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3182,
												"name": "whenNotPaused",
												"nameLocations": [
													"4788:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "4788:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4788:13:17"
										},
										{
											"id": 3185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3184,
												"name": "onlyOwner",
												"nameLocations": [
													"4802:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4802:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4802:9:17"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "4725:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4779:8:17"
									},
									"parameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4751:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "4743:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4743:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4742:27:17"
									},
									"returnParameters": {
										"id": 3186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4812:0:17"
									},
									"scope": 3189,
									"src": "4716:98:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3190,
							"src": "445:4371:17",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								1794,
								1799,
								1804,
								1813,
								1818,
								1823,
								1939,
								1952,
								2337,
								2599
							],
							"usedEvents": [
								41,
								219,
								645,
								650,
								1759,
								2235,
								2244,
								2770,
								2778,
								2784,
								2790
							]
						}
					],
					"src": "32:4852:17"
				},
				"id": 17
			}
		}
	}
}