{
	"id": "dd5777a8bb2787ed3bbd06e587eacc42",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"RVA/Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\n\ncontract erc20Token is ERC20, Ownable, Pausable {\n\n    address public icoContract;\n    uint256 private _totalSupply = 1000000 * 10 ** 18; \n\n    mapping(address => uint256) public lockedUntil; \n    mapping(address => bool) public blacklisted;  \n\n\n    event ICOContractSet(address indexed icoContract);\n    event LockupSet(address indexed account, uint256 lockedUntilTimestamp);\n    event Blacklisted(address indexed account, bool isBlacklisted);\n    event EmergencyTokenRecovered(address indexed token, uint256 amount);\n\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) Ownable(msg.sender) {\n        _mint(msg.sender, _totalSupply); \n    }\n\n    modifier onlyICOContract() {\n        require(msg.sender == icoContract, \"Not authorized\");\n        _;\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return 18;\n    }\n\n    function setLockup(address account, uint256 timestamp) external onlyICOContract {\n        lockedUntil[account] = timestamp;\n        emit LockupSet(account, timestamp);\n    }\n    \n\n    function setBlacklist(address account, bool status) external onlyOwner {\n        blacklisted[account] = status;\n        emit Blacklisted(account, status);\n    }\n\n    function isBlacklisted(address account) public view returns (bool) {\n        return blacklisted[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transfer(recipient, amount);\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    function setICOContract(address _icoContract) external onlyOwner {\n        icoContract = _icoContract;\n        emit ICOContractSet(_icoContract);\n    }\n\n    function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {\n        require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\");\n        uint256 recipientLength = recipients.length;\n        for (uint256 i = 0; i < recipientLength; i++) {\n            require(!blacklisted[recipients[i]], \"BatchTransfer failed: Recipient is blacklisted\");\n            _transfer(msg.sender, recipients[i], amounts[i]);\n        }\n    }\n\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"RVA/Token.sol": {
				"erc20Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isBlacklisted",
									"type": "bool"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyTokenRecovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "icoContract",
									"type": "address"
								}
							],
							"name": "ICOContractSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedUntilTimestamp",
									"type": "uint256"
								}
							],
							"name": "LockupSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "icoContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedUntil",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_icoContract",
									"type": "address"
								}
							],
							"name": "setICOContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "setLockup",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RVA/Token.sol\":225:3303  contract erc20Token is ERC20, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"RVA/Token.sol\":343:361  1000000 * 10 ** 18 */\n  0xd3c21bcecceda1000000\n    /* \"RVA/Token.sol\":312:361  uint256 private _totalSupply = 1000000 * 10 ** 18 */\n  0x07\n  sstore\n    /* \"RVA/Token.sol\":749:892  constructor(string memory name, string memory symbol) ERC20(name, symbol) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"RVA/Token.sol\":831:841  msg.sender */\n  caller\n    /* \"RVA/Token.sol\":809:813  name */\n  dup3\n    /* \"RVA/Token.sol\":815:821  symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"RVA/Token.sol\":853:884  _mint(msg.sender, _totalSupply) */\n  tag_20\n    /* \"RVA/Token.sol\":859:869  msg.sender */\n  caller\n    /* \"RVA/Token.sol\":871:883  _totalSupply */\n  sload(0x07)\n    /* \"RVA/Token.sol\":853:858  _mint */\n  shl(0x20, tag_21)\n    /* \"RVA/Token.sol\":853:884  _mint(msg.sender, _totalSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"RVA/Token.sol\":749:892  constructor(string memory name, string memory symbol) ERC20(name, symbol) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"RVA/Token.sol\":225:3303  contract erc20Token is ERC20, Ownable, Pausable {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_33)\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_41:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_42:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_43:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_44:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_45:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_46:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_47:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_48:\n    /* \"#utility.yul\":957:984   */\n  tag_87\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_46\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_89\n  tag_47\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1030:1118   */\ntag_88:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_49:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_91\n  tag_41\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_92\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_48\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_50:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_95\n  tag_47\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1434:1490   */\ntag_94:\n    /* \"#utility.yul\":1508:1537   */\n  tag_96\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_46\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1858   */\ntag_51:\n    /* \"#utility.yul\":1692:1693   */\n  0x00\n    /* \"#utility.yul\":1702:1815   */\ntag_98:\n    /* \"#utility.yul\":1716:1722   */\n  dup4\n    /* \"#utility.yul\":1713:1714   */\n  dup2\n    /* \"#utility.yul\":1710:1723   */\n  lt\n    /* \"#utility.yul\":1702:1815   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":1801:1802   */\n  dup1\n    /* \"#utility.yul\":1796:1799   */\n  dup3\n    /* \"#utility.yul\":1792:1803   */\n  add\n    /* \"#utility.yul\":1786:1804   */\n  mload\n    /* \"#utility.yul\":1782:1783   */\n  dup2\n    /* \"#utility.yul\":1777:1780   */\n  dup5\n    /* \"#utility.yul\":1773:1784   */\n  add\n    /* \"#utility.yul\":1766:1805   */\n  mstore\n    /* \"#utility.yul\":1738:1740   */\n  0x20\n    /* \"#utility.yul\":1735:1736   */\n  dup2\n    /* \"#utility.yul\":1731:1741   */\n  add\n    /* \"#utility.yul\":1726:1741   */\n  swap1\n  pop\n    /* \"#utility.yul\":1702:1815   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":1849:1850   */\n  0x00\n    /* \"#utility.yul\":1840:1846   */\n  dup5\n    /* \"#utility.yul\":1835:1838   */\n  dup5\n    /* \"#utility.yul\":1831:1847   */\n  add\n    /* \"#utility.yul\":1824:1851   */\n  mstore\n    /* \"#utility.yul\":1672:1858   */\n  pop\n    /* \"#utility.yul\":1610:1858   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1864:2298   */\ntag_52:\n    /* \"#utility.yul\":1953:1958   */\n  0x00\n    /* \"#utility.yul\":1978:2044   */\n  tag_102\n    /* \"#utility.yul\":1994:2043   */\n  tag_103\n    /* \"#utility.yul\":2036:2042   */\n  dup5\n    /* \"#utility.yul\":1994:2043   */\n  tag_50\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1978:2044   */\n  tag_49\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1969:2044   */\n  swap1\n  pop\n    /* \"#utility.yul\":2067:2073   */\n  dup3\n    /* \"#utility.yul\":2060:2065   */\n  dup2\n    /* \"#utility.yul\":2053:2074   */\n  mstore\n    /* \"#utility.yul\":2105:2109   */\n  0x20\n    /* \"#utility.yul\":2098:2103   */\n  dup2\n    /* \"#utility.yul\":2094:2110   */\n  add\n    /* \"#utility.yul\":2143:2146   */\n  dup5\n    /* \"#utility.yul\":2134:2140   */\n  dup5\n    /* \"#utility.yul\":2129:2132   */\n  dup5\n    /* \"#utility.yul\":2125:2141   */\n  add\n    /* \"#utility.yul\":2122:2147   */\n  gt\n    /* \"#utility.yul\":2119:2231   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2150:2229   */\n  tag_105\n  tag_45\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2119:2231   */\ntag_104:\n    /* \"#utility.yul\":2240:2292   */\n  tag_106\n    /* \"#utility.yul\":2285:2291   */\n  dup5\n    /* \"#utility.yul\":2280:2283   */\n  dup3\n    /* \"#utility.yul\":2275:2278   */\n  dup6\n    /* \"#utility.yul\":2240:2292   */\n  tag_51\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1959:2298   */\n  pop\n    /* \"#utility.yul\":1864:2298   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2318:2673   */\ntag_53:\n    /* \"#utility.yul\":2385:2390   */\n  0x00\n    /* \"#utility.yul\":2434:2437   */\n  dup3\n    /* \"#utility.yul\":2427:2431   */\n  0x1f\n    /* \"#utility.yul\":2419:2425   */\n  dup4\n    /* \"#utility.yul\":2415:2432   */\n  add\n    /* \"#utility.yul\":2411:2438   */\n  slt\n    /* \"#utility.yul\":2401:2523   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":2442:2521   */\n  tag_109\n  tag_44\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2401:2523   */\ntag_108:\n    /* \"#utility.yul\":2552:2558   */\n  dup2\n    /* \"#utility.yul\":2546:2559   */\n  mload\n    /* \"#utility.yul\":2577:2667   */\n  tag_110\n    /* \"#utility.yul\":2663:2666   */\n  dup5\n    /* \"#utility.yul\":2655:2661   */\n  dup3\n    /* \"#utility.yul\":2648:2652   */\n  0x20\n    /* \"#utility.yul\":2640:2646   */\n  dup7\n    /* \"#utility.yul\":2636:2653   */\n  add\n    /* \"#utility.yul\":2577:2667   */\n  tag_52\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2568:2667   */\n  swap2\n  pop\n    /* \"#utility.yul\":2391:2673   */\n  pop\n    /* \"#utility.yul\":2318:2673   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2679:3532   */\ntag_3:\n    /* \"#utility.yul\":2778:2784   */\n  0x00\n    /* \"#utility.yul\":2786:2792   */\n  dup1\n    /* \"#utility.yul\":2835:2837   */\n  0x40\n    /* \"#utility.yul\":2823:2832   */\n  dup4\n    /* \"#utility.yul\":2814:2821   */\n  dup6\n    /* \"#utility.yul\":2810:2833   */\n  sub\n    /* \"#utility.yul\":2806:2838   */\n  slt\n    /* \"#utility.yul\":2803:2922   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":2841:2920   */\n  tag_113\n  tag_42\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2803:2922   */\ntag_112:\n    /* \"#utility.yul\":2982:2983   */\n  0x00\n    /* \"#utility.yul\":2971:2980   */\n  dup4\n    /* \"#utility.yul\":2967:2984   */\n  add\n    /* \"#utility.yul\":2961:2985   */\n  mload\n    /* \"#utility.yul\":3012:3030   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3004:3010   */\n  dup2\n    /* \"#utility.yul\":3001:3031   */\n  gt\n    /* \"#utility.yul\":2998:3115   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3034:3113   */\n  tag_115\n  tag_43\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2998:3115   */\ntag_114:\n    /* \"#utility.yul\":3139:3213   */\n  tag_116\n    /* \"#utility.yul\":3205:3212   */\n  dup6\n    /* \"#utility.yul\":3196:3202   */\n  dup3\n    /* \"#utility.yul\":3185:3194   */\n  dup7\n    /* \"#utility.yul\":3181:3203   */\n  add\n    /* \"#utility.yul\":3139:3213   */\n  tag_53\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3129:3213   */\n  swap3\n  pop\n    /* \"#utility.yul\":2932:3223   */\n  pop\n    /* \"#utility.yul\":3283:3285   */\n  0x20\n    /* \"#utility.yul\":3272:3281   */\n  dup4\n    /* \"#utility.yul\":3268:3286   */\n  add\n    /* \"#utility.yul\":3262:3287   */\n  mload\n    /* \"#utility.yul\":3314:3332   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3306:3312   */\n  dup2\n    /* \"#utility.yul\":3303:3333   */\n  gt\n    /* \"#utility.yul\":3300:3417   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3336:3415   */\n  tag_118\n  tag_43\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3300:3417   */\ntag_117:\n    /* \"#utility.yul\":3441:3515   */\n  tag_119\n    /* \"#utility.yul\":3507:3514   */\n  dup6\n    /* \"#utility.yul\":3498:3504   */\n  dup3\n    /* \"#utility.yul\":3487:3496   */\n  dup7\n    /* \"#utility.yul\":3483:3505   */\n  add\n    /* \"#utility.yul\":3441:3515   */\n  tag_53\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3431:3515   */\n  swap2\n  pop\n    /* \"#utility.yul\":3233:3525   */\n  pop\n    /* \"#utility.yul\":2679:3532   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3538:3637   */\ntag_54:\n    /* \"#utility.yul\":3590:3596   */\n  0x00\n    /* \"#utility.yul\":3624:3629   */\n  dup2\n    /* \"#utility.yul\":3618:3630   */\n  mload\n    /* \"#utility.yul\":3608:3630   */\n  swap1\n  pop\n    /* \"#utility.yul\":3538:3637   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3643:3823   */\ntag_55:\n    /* \"#utility.yul\":3691:3768   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3688:3689   */\n  0x00\n    /* \"#utility.yul\":3681:3769   */\n  mstore\n    /* \"#utility.yul\":3788:3792   */\n  0x22\n    /* \"#utility.yul\":3785:3786   */\n  0x04\n    /* \"#utility.yul\":3778:3793   */\n  mstore\n    /* \"#utility.yul\":3812:3816   */\n  0x24\n    /* \"#utility.yul\":3809:3810   */\n  0x00\n    /* \"#utility.yul\":3802:3817   */\n  revert\n    /* \"#utility.yul\":3829:4149   */\ntag_56:\n    /* \"#utility.yul\":3873:3879   */\n  0x00\n    /* \"#utility.yul\":3910:3911   */\n  0x02\n    /* \"#utility.yul\":3904:3908   */\n  dup3\n    /* \"#utility.yul\":3900:3912   */\n  div\n    /* \"#utility.yul\":3890:3912   */\n  swap1\n  pop\n    /* \"#utility.yul\":3957:3958   */\n  0x01\n    /* \"#utility.yul\":3951:3955   */\n  dup3\n    /* \"#utility.yul\":3947:3959   */\n  and\n    /* \"#utility.yul\":3978:3996   */\n  dup1\n    /* \"#utility.yul\":3968:4049   */\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4034:4038   */\n  0x7f\n    /* \"#utility.yul\":4026:4032   */\n  dup3\n    /* \"#utility.yul\":4022:4039   */\n  and\n    /* \"#utility.yul\":4012:4039   */\n  swap2\n  pop\n    /* \"#utility.yul\":3968:4049   */\ntag_123:\n    /* \"#utility.yul\":4096:4098   */\n  0x20\n    /* \"#utility.yul\":4088:4094   */\n  dup3\n    /* \"#utility.yul\":4085:4099   */\n  lt\n    /* \"#utility.yul\":4065:4083   */\n  dup2\n    /* \"#utility.yul\":4062:4100   */\n  sub\n    /* \"#utility.yul\":4059:4143   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4115:4133   */\n  tag_125\n  tag_55\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4059:4143   */\ntag_124:\n    /* \"#utility.yul\":3880:4149   */\n  pop\n    /* \"#utility.yul\":3829:4149   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4155:4296   */\ntag_57:\n    /* \"#utility.yul\":4204:4208   */\n  0x00\n    /* \"#utility.yul\":4227:4230   */\n  dup2\n    /* \"#utility.yul\":4219:4230   */\n  swap1\n  pop\n    /* \"#utility.yul\":4250:4253   */\n  dup2\n    /* \"#utility.yul\":4247:4248   */\n  0x00\n    /* \"#utility.yul\":4240:4254   */\n  mstore\n    /* \"#utility.yul\":4284:4288   */\n  0x20\n    /* \"#utility.yul\":4281:4282   */\n  0x00\n    /* \"#utility.yul\":4271:4289   */\n  keccak256\n    /* \"#utility.yul\":4263:4289   */\n  swap1\n  pop\n    /* \"#utility.yul\":4155:4296   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4302:4395   */\ntag_58:\n    /* \"#utility.yul\":4339:4345   */\n  0x00\n    /* \"#utility.yul\":4386:4388   */\n  0x20\n    /* \"#utility.yul\":4381:4383   */\n  0x1f\n    /* \"#utility.yul\":4374:4379   */\n  dup4\n    /* \"#utility.yul\":4370:4384   */\n  add\n    /* \"#utility.yul\":4366:4389   */\n  div\n    /* \"#utility.yul\":4356:4389   */\n  swap1\n  pop\n    /* \"#utility.yul\":4302:4395   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4401:4508   */\ntag_59:\n    /* \"#utility.yul\":4445:4453   */\n  0x00\n    /* \"#utility.yul\":4495:4500   */\n  dup3\n    /* \"#utility.yul\":4489:4493   */\n  dup3\n    /* \"#utility.yul\":4485:4501   */\n  shl\n    /* \"#utility.yul\":4464:4501   */\n  swap1\n  pop\n    /* \"#utility.yul\":4401:4508   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4514:4907   */\ntag_60:\n    /* \"#utility.yul\":4583:4589   */\n  0x00\n    /* \"#utility.yul\":4633:4634   */\n  0x08\n    /* \"#utility.yul\":4621:4631   */\n  dup4\n    /* \"#utility.yul\":4617:4635   */\n  mul\n    /* \"#utility.yul\":4656:4753   */\n  tag_130\n    /* \"#utility.yul\":4686:4752   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4675:4684   */\n  dup3\n    /* \"#utility.yul\":4656:4753   */\n  tag_59\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4774:4813   */\n  tag_131\n    /* \"#utility.yul\":4804:4812   */\n  dup7\n    /* \"#utility.yul\":4793:4802   */\n  dup4\n    /* \"#utility.yul\":4774:4813   */\n  tag_59\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4762:4813   */\n  swap6\n  pop\n    /* \"#utility.yul\":4846:4850   */\n  dup1\n    /* \"#utility.yul\":4842:4851   */\n  not\n    /* \"#utility.yul\":4835:4840   */\n  dup5\n    /* \"#utility.yul\":4831:4852   */\n  and\n    /* \"#utility.yul\":4822:4852   */\n  swap4\n  pop\n    /* \"#utility.yul\":4895:4899   */\n  dup1\n    /* \"#utility.yul\":4885:4893   */\n  dup7\n    /* \"#utility.yul\":4881:4900   */\n  and\n    /* \"#utility.yul\":4874:4879   */\n  dup5\n    /* \"#utility.yul\":4871:4901   */\n  or\n    /* \"#utility.yul\":4861:4901   */\n  swap3\n  pop\n    /* \"#utility.yul\":4590:4907   */\n  pop\n  pop\n    /* \"#utility.yul\":4514:4907   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4913:4990   */\ntag_61:\n    /* \"#utility.yul\":4950:4957   */\n  0x00\n    /* \"#utility.yul\":4979:4984   */\n  dup2\n    /* \"#utility.yul\":4968:4984   */\n  swap1\n  pop\n    /* \"#utility.yul\":4913:4990   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4996:5056   */\ntag_62:\n    /* \"#utility.yul\":5024:5027   */\n  0x00\n    /* \"#utility.yul\":5045:5050   */\n  dup2\n    /* \"#utility.yul\":5038:5050   */\n  swap1\n  pop\n    /* \"#utility.yul\":4996:5056   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5062:5204   */\ntag_63:\n    /* \"#utility.yul\":5112:5121   */\n  0x00\n    /* \"#utility.yul\":5145:5198   */\n  tag_135\n    /* \"#utility.yul\":5163:5197   */\n  tag_136\n    /* \"#utility.yul\":5172:5196   */\n  tag_137\n    /* \"#utility.yul\":5190:5195   */\n  dup5\n    /* \"#utility.yul\":5172:5196   */\n  tag_61\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5163:5197   */\n  tag_62\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5145:5198   */\n  tag_61\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5132:5198   */\n  swap1\n  pop\n    /* \"#utility.yul\":5062:5204   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5210:5285   */\ntag_64:\n    /* \"#utility.yul\":5253:5256   */\n  0x00\n    /* \"#utility.yul\":5274:5279   */\n  dup2\n    /* \"#utility.yul\":5267:5279   */\n  swap1\n  pop\n    /* \"#utility.yul\":5210:5285   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5291:5560   */\ntag_65:\n    /* \"#utility.yul\":5401:5440   */\n  tag_140\n    /* \"#utility.yul\":5432:5439   */\n  dup4\n    /* \"#utility.yul\":5401:5440   */\n  tag_63\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5462:5553   */\n  tag_141\n    /* \"#utility.yul\":5511:5552   */\n  tag_142\n    /* \"#utility.yul\":5535:5551   */\n  dup3\n    /* \"#utility.yul\":5511:5552   */\n  tag_64\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5503:5509   */\n  dup5\n    /* \"#utility.yul\":5496:5500   */\n  dup5\n    /* \"#utility.yul\":5490:5501   */\n  sload\n    /* \"#utility.yul\":5462:5553   */\n  tag_60\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5456:5460   */\n  dup3\n    /* \"#utility.yul\":5449:5554   */\n  sstore\n    /* \"#utility.yul\":5367:5560   */\n  pop\n    /* \"#utility.yul\":5291:5560   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5566:5639   */\ntag_66:\n    /* \"#utility.yul\":5611:5614   */\n  0x00\n    /* \"#utility.yul\":5566:5639   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5645:5834   */\ntag_67:\n    /* \"#utility.yul\":5722:5754   */\n  tag_145\n  tag_66\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5763:5828   */\n  tag_146\n    /* \"#utility.yul\":5821:5827   */\n  dup2\n    /* \"#utility.yul\":5813:5819   */\n  dup5\n    /* \"#utility.yul\":5807:5811   */\n  dup5\n    /* \"#utility.yul\":5763:5828   */\n  tag_65\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5698:5834   */\n  pop\n    /* \"#utility.yul\":5645:5834   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5840:6026   */\ntag_68:\n    /* \"#utility.yul\":5900:6020   */\ntag_148:\n    /* \"#utility.yul\":5917:5920   */\n  dup2\n    /* \"#utility.yul\":5910:5915   */\n  dup2\n    /* \"#utility.yul\":5907:5921   */\n  lt\n    /* \"#utility.yul\":5900:6020   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":5971:6010   */\n  tag_151\n    /* \"#utility.yul\":6008:6009   */\n  0x00\n    /* \"#utility.yul\":6001:6006   */\n  dup3\n    /* \"#utility.yul\":5971:6010   */\n  tag_67\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5944:5945   */\n  0x01\n    /* \"#utility.yul\":5937:5942   */\n  dup2\n    /* \"#utility.yul\":5933:5946   */\n  add\n    /* \"#utility.yul\":5924:5946   */\n  swap1\n  pop\n    /* \"#utility.yul\":5900:6020   */\n  jump(tag_148)\ntag_150:\n    /* \"#utility.yul\":5840:6026   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6032:6575   */\ntag_69:\n    /* \"#utility.yul\":6133:6135   */\n  0x1f\n    /* \"#utility.yul\":6128:6131   */\n  dup3\n    /* \"#utility.yul\":6125:6136   */\n  gt\n    /* \"#utility.yul\":6122:6568   */\n  iszero\n  tag_153\n  jumpi\n    /* \"#utility.yul\":6167:6205   */\n  tag_154\n    /* \"#utility.yul\":6199:6204   */\n  dup2\n    /* \"#utility.yul\":6167:6205   */\n  tag_57\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6251:6280   */\n  tag_155\n    /* \"#utility.yul\":6269:6279   */\n  dup5\n    /* \"#utility.yul\":6251:6280   */\n  tag_58\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6241:6249   */\n  dup2\n    /* \"#utility.yul\":6237:6281   */\n  add\n    /* \"#utility.yul\":6434:6436   */\n  0x20\n    /* \"#utility.yul\":6422:6432   */\n  dup6\n    /* \"#utility.yul\":6419:6437   */\n  lt\n    /* \"#utility.yul\":6416:6465   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6455:6463   */\n  dup2\n    /* \"#utility.yul\":6440:6463   */\n  swap1\n  pop\n    /* \"#utility.yul\":6416:6465   */\ntag_156:\n    /* \"#utility.yul\":6478:6558   */\n  tag_157\n    /* \"#utility.yul\":6534:6556   */\n  tag_158\n    /* \"#utility.yul\":6552:6555   */\n  dup6\n    /* \"#utility.yul\":6534:6556   */\n  tag_58\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6524:6532   */\n  dup4\n    /* \"#utility.yul\":6520:6557   */\n  add\n    /* \"#utility.yul\":6507:6518   */\n  dup3\n    /* \"#utility.yul\":6478:6558   */\n  tag_68\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6137:6568   */\n  pop\n  pop\n    /* \"#utility.yul\":6122:6568   */\ntag_153:\n    /* \"#utility.yul\":6032:6575   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6581:6698   */\ntag_70:\n    /* \"#utility.yul\":6635:6643   */\n  0x00\n    /* \"#utility.yul\":6685:6690   */\n  dup3\n    /* \"#utility.yul\":6679:6683   */\n  dup3\n    /* \"#utility.yul\":6675:6691   */\n  shr\n    /* \"#utility.yul\":6654:6691   */\n  swap1\n  pop\n    /* \"#utility.yul\":6581:6698   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6704:6873   */\ntag_71:\n    /* \"#utility.yul\":6748:6754   */\n  0x00\n    /* \"#utility.yul\":6781:6832   */\n  tag_161\n    /* \"#utility.yul\":6829:6830   */\n  0x00\n    /* \"#utility.yul\":6825:6831   */\n  not\n    /* \"#utility.yul\":6817:6822   */\n  dup5\n    /* \"#utility.yul\":6814:6815   */\n  0x08\n    /* \"#utility.yul\":6810:6823   */\n  mul\n    /* \"#utility.yul\":6781:6832   */\n  tag_70\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6777:6833   */\n  not\n    /* \"#utility.yul\":6862:6866   */\n  dup1\n    /* \"#utility.yul\":6856:6860   */\n  dup4\n    /* \"#utility.yul\":6852:6867   */\n  and\n    /* \"#utility.yul\":6842:6867   */\n  swap2\n  pop\n    /* \"#utility.yul\":6755:6873   */\n  pop\n    /* \"#utility.yul\":6704:6873   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6878:7173   */\ntag_72:\n    /* \"#utility.yul\":6954:6958   */\n  0x00\n    /* \"#utility.yul\":7100:7129   */\n  tag_163\n    /* \"#utility.yul\":7125:7128   */\n  dup4\n    /* \"#utility.yul\":7119:7123   */\n  dup4\n    /* \"#utility.yul\":7100:7129   */\n  tag_71\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7092:7129   */\n  swap2\n  pop\n    /* \"#utility.yul\":7162:7165   */\n  dup3\n    /* \"#utility.yul\":7159:7160   */\n  0x02\n    /* \"#utility.yul\":7155:7166   */\n  mul\n    /* \"#utility.yul\":7149:7153   */\n  dup3\n    /* \"#utility.yul\":7146:7167   */\n  or\n    /* \"#utility.yul\":7138:7167   */\n  swap1\n  pop\n    /* \"#utility.yul\":6878:7173   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7178:8573   */\ntag_10:\n    /* \"#utility.yul\":7295:7332   */\n  tag_165\n    /* \"#utility.yul\":7328:7331   */\n  dup3\n    /* \"#utility.yul\":7295:7332   */\n  tag_54\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7397:7415   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7389:7395   */\n  dup2\n    /* \"#utility.yul\":7386:7416   */\n  gt\n    /* \"#utility.yul\":7383:7439   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":7419:7437   */\n  tag_167\n  tag_47\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7383:7439   */\ntag_166:\n    /* \"#utility.yul\":7463:7501   */\n  tag_168\n    /* \"#utility.yul\":7495:7499   */\n  dup3\n    /* \"#utility.yul\":7489:7500   */\n  sload\n    /* \"#utility.yul\":7463:7501   */\n  tag_56\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7548:7615   */\n  tag_169\n    /* \"#utility.yul\":7608:7614   */\n  dup3\n    /* \"#utility.yul\":7600:7606   */\n  dup3\n    /* \"#utility.yul\":7594:7598   */\n  dup6\n    /* \"#utility.yul\":7548:7615   */\n  tag_69\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7642:7643   */\n  0x00\n    /* \"#utility.yul\":7666:7670   */\n  0x20\n    /* \"#utility.yul\":7653:7670   */\n  swap1\n  pop\n    /* \"#utility.yul\":7698:7700   */\n  0x1f\n    /* \"#utility.yul\":7690:7696   */\n  dup4\n    /* \"#utility.yul\":7687:7701   */\n  gt\n    /* \"#utility.yul\":7715:7716   */\n  0x01\n    /* \"#utility.yul\":7710:8328   */\n  dup2\n  eq\n  tag_171\n  jumpi\n    /* \"#utility.yul\":8372:8373   */\n  0x00\n    /* \"#utility.yul\":8389:8395   */\n  dup5\n    /* \"#utility.yul\":8386:8463   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":8438:8447   */\n  dup3\n    /* \"#utility.yul\":8433:8436   */\n  dup8\n    /* \"#utility.yul\":8429:8448   */\n  add\n    /* \"#utility.yul\":8423:8449   */\n  mload\n    /* \"#utility.yul\":8414:8449   */\n  swap1\n  pop\n    /* \"#utility.yul\":8386:8463   */\ntag_172:\n    /* \"#utility.yul\":8489:8556   */\n  tag_173\n    /* \"#utility.yul\":8549:8555   */\n  dup6\n    /* \"#utility.yul\":8542:8547   */\n  dup3\n    /* \"#utility.yul\":8489:8556   */\n  tag_72\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8483:8487   */\n  dup7\n    /* \"#utility.yul\":8476:8557   */\n  sstore\n    /* \"#utility.yul\":8345:8567   */\n  pop\n    /* \"#utility.yul\":7680:8567   */\n  jump(tag_170)\n    /* \"#utility.yul\":7710:8328   */\ntag_171:\n    /* \"#utility.yul\":7762:7766   */\n  0x1f\n    /* \"#utility.yul\":7758:7767   */\n  not\n    /* \"#utility.yul\":7750:7756   */\n  dup5\n    /* \"#utility.yul\":7746:7768   */\n  and\n    /* \"#utility.yul\":7796:7833   */\n  tag_174\n    /* \"#utility.yul\":7828:7832   */\n  dup7\n    /* \"#utility.yul\":7796:7833   */\n  tag_57\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7855:7856   */\n  0x00\n    /* \"#utility.yul\":7869:8077   */\ntag_175:\n    /* \"#utility.yul\":7883:7890   */\n  dup3\n    /* \"#utility.yul\":7880:7881   */\n  dup2\n    /* \"#utility.yul\":7877:7891   */\n  lt\n    /* \"#utility.yul\":7869:8077   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":7962:7971   */\n  dup5\n    /* \"#utility.yul\":7957:7960   */\n  dup10\n    /* \"#utility.yul\":7953:7972   */\n  add\n    /* \"#utility.yul\":7947:7973   */\n  mload\n    /* \"#utility.yul\":7939:7945   */\n  dup3\n    /* \"#utility.yul\":7932:7974   */\n  sstore\n    /* \"#utility.yul\":8013:8014   */\n  0x01\n    /* \"#utility.yul\":8005:8011   */\n  dup3\n    /* \"#utility.yul\":8001:8015   */\n  add\n    /* \"#utility.yul\":7991:8015   */\n  swap2\n  pop\n    /* \"#utility.yul\":8060:8062   */\n  0x20\n    /* \"#utility.yul\":8049:8058   */\n  dup6\n    /* \"#utility.yul\":8045:8063   */\n  add\n    /* \"#utility.yul\":8032:8063   */\n  swap5\n  pop\n    /* \"#utility.yul\":7906:7910   */\n  0x20\n    /* \"#utility.yul\":7903:7904   */\n  dup2\n    /* \"#utility.yul\":7899:7911   */\n  add\n    /* \"#utility.yul\":7894:7911   */\n  swap1\n  pop\n    /* \"#utility.yul\":7869:8077   */\n  jump(tag_175)\ntag_177:\n    /* \"#utility.yul\":8105:8111   */\n  dup7\n    /* \"#utility.yul\":8096:8103   */\n  dup4\n    /* \"#utility.yul\":8093:8112   */\n  lt\n    /* \"#utility.yul\":8090:8269   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8163:8172   */\n  dup5\n    /* \"#utility.yul\":8158:8161   */\n  dup10\n    /* \"#utility.yul\":8154:8173   */\n  add\n    /* \"#utility.yul\":8148:8174   */\n  mload\n    /* \"#utility.yul\":8206:8254   */\n  tag_179\n    /* \"#utility.yul\":8248:8252   */\n  0x1f\n    /* \"#utility.yul\":8240:8246   */\n  dup10\n    /* \"#utility.yul\":8236:8253   */\n  and\n    /* \"#utility.yul\":8225:8234   */\n  dup3\n    /* \"#utility.yul\":8206:8254   */\n  tag_71\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8198:8204   */\n  dup4\n    /* \"#utility.yul\":8191:8255   */\n  sstore\n    /* \"#utility.yul\":8113:8269   */\n  pop\n    /* \"#utility.yul\":8090:8269   */\ntag_178:\n    /* \"#utility.yul\":8315:8316   */\n  0x01\n    /* \"#utility.yul\":8311:8312   */\n  0x02\n    /* \"#utility.yul\":8303:8309   */\n  dup9\n    /* \"#utility.yul\":8299:8313   */\n  mul\n    /* \"#utility.yul\":8295:8317   */\n  add\n    /* \"#utility.yul\":8289:8293   */\n  dup9\n    /* \"#utility.yul\":8282:8318   */\n  sstore\n    /* \"#utility.yul\":7717:8328   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7680:8567   */\ntag_170:\n  pop\n    /* \"#utility.yul\":7270:8573   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7178:8573   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8579:8705   */\ntag_73:\n    /* \"#utility.yul\":8616:8623   */\n  0x00\n    /* \"#utility.yul\":8656:8698   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8649:8654   */\n  dup3\n    /* \"#utility.yul\":8645:8699   */\n  and\n    /* \"#utility.yul\":8634:8699   */\n  swap1\n  pop\n    /* \"#utility.yul\":8579:8705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8711:8807   */\ntag_74:\n    /* \"#utility.yul\":8748:8755   */\n  0x00\n    /* \"#utility.yul\":8777:8801   */\n  tag_182\n    /* \"#utility.yul\":8795:8800   */\n  dup3\n    /* \"#utility.yul\":8777:8801   */\n  tag_73\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8766:8801   */\n  swap1\n  pop\n    /* \"#utility.yul\":8711:8807   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8813:8931   */\ntag_75:\n    /* \"#utility.yul\":8900:8924   */\n  tag_184\n    /* \"#utility.yul\":8918:8923   */\n  dup2\n    /* \"#utility.yul\":8900:8924   */\n  tag_74\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8895:8898   */\n  dup3\n    /* \"#utility.yul\":8888:8925   */\n  mstore\n    /* \"#utility.yul\":8813:8931   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8937:9159   */\ntag_15:\n    /* \"#utility.yul\":9030:9034   */\n  0x00\n    /* \"#utility.yul\":9068:9070   */\n  0x20\n    /* \"#utility.yul\":9057:9066   */\n  dup3\n    /* \"#utility.yul\":9053:9071   */\n  add\n    /* \"#utility.yul\":9045:9071   */\n  swap1\n  pop\n    /* \"#utility.yul\":9081:9152   */\n  tag_186\n    /* \"#utility.yul\":9149:9150   */\n  0x00\n    /* \"#utility.yul\":9138:9147   */\n  dup4\n    /* \"#utility.yul\":9134:9151   */\n  add\n    /* \"#utility.yul\":9125:9131   */\n  dup5\n    /* \"#utility.yul\":9081:9152   */\n  tag_75\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8937:9159   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9165:9345   */\ntag_76:\n    /* \"#utility.yul\":9213:9290   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9210:9211   */\n  0x00\n    /* \"#utility.yul\":9203:9291   */\n  mstore\n    /* \"#utility.yul\":9310:9314   */\n  0x11\n    /* \"#utility.yul\":9307:9308   */\n  0x04\n    /* \"#utility.yul\":9300:9315   */\n  mstore\n    /* \"#utility.yul\":9334:9338   */\n  0x24\n    /* \"#utility.yul\":9331:9332   */\n  0x00\n    /* \"#utility.yul\":9324:9339   */\n  revert\n    /* \"#utility.yul\":9351:9542   */\ntag_32:\n    /* \"#utility.yul\":9391:9394   */\n  0x00\n    /* \"#utility.yul\":9410:9430   */\n  tag_189\n    /* \"#utility.yul\":9428:9429   */\n  dup3\n    /* \"#utility.yul\":9410:9430   */\n  tag_61\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9405:9430   */\n  swap2\n  pop\n    /* \"#utility.yul\":9444:9464   */\n  tag_190\n    /* \"#utility.yul\":9462:9463   */\n  dup4\n    /* \"#utility.yul\":9444:9464   */\n  tag_61\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9439:9464   */\n  swap3\n  pop\n    /* \"#utility.yul\":9487:9488   */\n  dup3\n    /* \"#utility.yul\":9484:9485   */\n  dup3\n    /* \"#utility.yul\":9480:9489   */\n  add\n    /* \"#utility.yul\":9473:9489   */\n  swap1\n  pop\n    /* \"#utility.yul\":9508:9511   */\n  dup1\n    /* \"#utility.yul\":9505:9506   */\n  dup3\n    /* \"#utility.yul\":9502:9512   */\n  gt\n    /* \"#utility.yul\":9499:9535   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":9515:9533   */\n  tag_192\n  tag_76\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9499:9535   */\ntag_191:\n    /* \"#utility.yul\":9351:9542   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9548:9666   */\ntag_77:\n    /* \"#utility.yul\":9635:9659   */\n  tag_194\n    /* \"#utility.yul\":9653:9658   */\n  dup2\n    /* \"#utility.yul\":9635:9659   */\n  tag_61\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9630:9633   */\n  dup3\n    /* \"#utility.yul\":9623:9660   */\n  mstore\n    /* \"#utility.yul\":9548:9666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9672:10114   */\ntag_36:\n    /* \"#utility.yul\":9821:9825   */\n  0x00\n    /* \"#utility.yul\":9859:9861   */\n  0x60\n    /* \"#utility.yul\":9848:9857   */\n  dup3\n    /* \"#utility.yul\":9844:9862   */\n  add\n    /* \"#utility.yul\":9836:9862   */\n  swap1\n  pop\n    /* \"#utility.yul\":9872:9943   */\n  tag_196\n    /* \"#utility.yul\":9940:9941   */\n  0x00\n    /* \"#utility.yul\":9929:9938   */\n  dup4\n    /* \"#utility.yul\":9925:9942   */\n  add\n    /* \"#utility.yul\":9916:9922   */\n  dup7\n    /* \"#utility.yul\":9872:9943   */\n  tag_75\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9953:10025   */\n  tag_197\n    /* \"#utility.yul\":10021:10023   */\n  0x20\n    /* \"#utility.yul\":10010:10019   */\n  dup4\n    /* \"#utility.yul\":10006:10024   */\n  add\n    /* \"#utility.yul\":9997:10003   */\n  dup6\n    /* \"#utility.yul\":9953:10025   */\n  tag_77\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":10035:10107   */\n  tag_198\n    /* \"#utility.yul\":10103:10105   */\n  0x40\n    /* \"#utility.yul\":10092:10101   */\n  dup4\n    /* \"#utility.yul\":10088:10106   */\n  add\n    /* \"#utility.yul\":10079:10085   */\n  dup5\n    /* \"#utility.yul\":10035:10107   */\n  tag_77\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9672:10114   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10120:10342   */\ntag_40:\n    /* \"#utility.yul\":10213:10217   */\n  0x00\n    /* \"#utility.yul\":10251:10253   */\n  0x20\n    /* \"#utility.yul\":10240:10249   */\n  dup3\n    /* \"#utility.yul\":10236:10254   */\n  add\n    /* \"#utility.yul\":10228:10254   */\n  swap1\n  pop\n    /* \"#utility.yul\":10264:10335   */\n  tag_200\n    /* \"#utility.yul\":10332:10333   */\n  0x00\n    /* \"#utility.yul\":10321:10330   */\n  dup4\n    /* \"#utility.yul\":10317:10334   */\n  add\n    /* \"#utility.yul\":10308:10314   */\n  dup5\n    /* \"#utility.yul\":10264:10335   */\n  tag_77\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10120:10342   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"RVA/Token.sol\":225:3303  contract erc20Token is ERC20, Ownable, Pausable {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RVA/Token.sol\":225:3303  contract erc20Token is ERC20, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc66e4095\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdbac26e9\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x88d695b2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9bc289f1\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x2e0d2a00\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x2e0d2a00\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3e579307\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/Token.sol\":1422:1582  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/Token.sol\":2169:2647  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/Token.sol\":2653:2804  function setICOContract(address _icoContract) external onlyOwner {... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"RVA/Token.sol\":1149:1232  function decimals() public pure override returns (uint8) {... */\n    tag_9:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/Token.sol\":1238:1411  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"RVA/Token.sol\":1078:1143  function unpause() external onlyOwner {... */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"RVA/Token.sol\":1011:1072  function pause() external onlyOwner {... */\n    tag_15:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"RVA/Token.sol\":2810:3300  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/Token.sol\":369:415  mapping(address => uint256) public lockedUntil */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/Token.sol\":1705:2163  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/Token.sol\":280:306  address public icoContract */\n    tag_21:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/Token.sol\":422:465  mapping(address => bool) public blacklisted */\n    tag_22:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"RVA/Token.sol\":1588:1699  function isBlacklisted(address account) public view returns (bool) {... */\n    tag_25:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/Token.sol\":1422:1582  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"RVA/Token.sol\":1526:1532  status */\n      dup1\n        /* \"RVA/Token.sol\":1503:1514  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":1503:1523  blacklisted[account] */\n      0x00\n        /* \"RVA/Token.sol\":1515:1522  account */\n      dup5\n        /* \"RVA/Token.sol\":1503:1523  blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"RVA/Token.sol\":1503:1532  blacklisted[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"RVA/Token.sol\":1559:1566  account */\n      dup2\n        /* \"RVA/Token.sol\":1547:1575  Blacklisted(account, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8\n        /* \"RVA/Token.sol\":1568:1574  status */\n      dup3\n        /* \"RVA/Token.sol\":1547:1575  Blacklisted(account, status) */\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/Token.sol\":1422:1582  function setBlacklist(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/Token.sol\":2169:2647  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_50:\n        /* \"RVA/Token.sol\":2281:2285  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_133\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_133:\n        /* \"RVA/Token.sol\":2306:2317  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":2306:2325  blacklisted[sender] */\n      0x00\n        /* \"RVA/Token.sol\":2318:2324  sender */\n      dup6\n        /* \"RVA/Token.sol\":2306:2325  blacklisted[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/Token.sol\":2305:2325  !blacklisted[sender] */\n      iszero\n        /* \"RVA/Token.sol\":2297:2368  require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"RVA/Token.sol\":2387:2398  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":2387:2409  blacklisted[recipient] */\n      0x00\n        /* \"RVA/Token.sol\":2399:2408  recipient */\n      dup5\n        /* \"RVA/Token.sol\":2387:2409  blacklisted[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/Token.sol\":2386:2409  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/Token.sol\":2378:2455  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"RVA/Token.sol\":2492:2503  lockedUntil */\n      0x08\n        /* \"RVA/Token.sol\":2492:2511  lockedUntil[sender] */\n      0x00\n        /* \"RVA/Token.sol\":2504:2510  sender */\n      dup6\n        /* \"RVA/Token.sol\":2492:2511  lockedUntil[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/Token.sol\":2473:2488  block.timestamp */\n      timestamp\n        /* \"RVA/Token.sol\":2473:2511  block.timestamp >= lockedUntil[sender] */\n      lt\n      iszero\n        /* \"RVA/Token.sol\":2473:2539  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n      dup1\n      tag_142\n      jumpi\n      pop\n        /* \"RVA/Token.sol\":2538:2539  0 */\n      0x00\n        /* \"RVA/Token.sol\":2515:2526  lockedUntil */\n      0x08\n        /* \"RVA/Token.sol\":2515:2534  lockedUntil[sender] */\n      0x00\n        /* \"RVA/Token.sol\":2527:2533  sender */\n      dup7\n        /* \"RVA/Token.sol\":2515:2534  lockedUntil[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/Token.sol\":2515:2539  lockedUntil[sender] == 0 */\n      eq\n        /* \"RVA/Token.sol\":2473:2539  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n    tag_142:\n        /* \"RVA/Token.sol\":2465:2578  require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"RVA/Token.sol\":2595:2640  super.transferFrom(sender, recipient, amount) */\n      tag_146\n        /* \"RVA/Token.sol\":2614:2620  sender */\n      dup5\n        /* \"RVA/Token.sol\":2622:2631  recipient */\n      dup5\n        /* \"RVA/Token.sol\":2633:2639  amount */\n      dup5\n        /* \"RVA/Token.sol\":2595:2613  super.transferFrom */\n      tag_147\n        /* \"RVA/Token.sol\":2595:2640  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_146:\n        /* \"RVA/Token.sol\":2588:2640  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"RVA/Token.sol\":2169:2647  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/Token.sol\":2653:2804  function setICOContract(address _icoContract) external onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"RVA/Token.sol\":2742:2754  _icoContract */\n      dup1\n        /* \"RVA/Token.sol\":2728:2739  icoContract */\n      0x06\n      0x00\n        /* \"RVA/Token.sol\":2728:2754  icoContract = _icoContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"RVA/Token.sol\":2784:2796  _icoContract */\n      dup1\n        /* \"RVA/Token.sol\":2769:2797  ICOContractSet(_icoContract) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/Token.sol\":2653:2804  function setICOContract(address _icoContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"RVA/Token.sol\":1149:1232  function decimals() public pure override returns (uint8) {... */\n    tag_57:\n        /* \"RVA/Token.sol\":1199:1204  uint8 */\n      0x00\n        /* \"RVA/Token.sol\":1223:1225  18 */\n      0x12\n        /* \"RVA/Token.sol\":1216:1225  return 18 */\n      swap1\n      pop\n        /* \"RVA/Token.sol\":1149:1232  function decimals() public pure override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/Token.sol\":1238:1411  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n    tag_62:\n        /* \"RVA/Token.sol\":957:968  icoContract */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/Token.sol\":943:968  msg.sender == icoContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/Token.sol\":943:953  msg.sender */\n      caller\n        /* \"RVA/Token.sol\":943:968  msg.sender == icoContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"RVA/Token.sol\":935:987  require(msg.sender == icoContract, \"Not authorized\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"RVA/Token.sol\":1351:1360  timestamp */\n      dup1\n        /* \"RVA/Token.sol\":1328:1339  lockedUntil */\n      0x08\n        /* \"RVA/Token.sol\":1328:1348  lockedUntil[account] */\n      0x00\n        /* \"RVA/Token.sol\":1340:1347  account */\n      dup5\n        /* \"RVA/Token.sol\":1328:1348  lockedUntil[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"RVA/Token.sol\":1328:1360  lockedUntil[account] = timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RVA/Token.sol\":1385:1392  account */\n      dup2\n        /* \"RVA/Token.sol\":1375:1404  LockupSet(account, timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f\n        /* \"RVA/Token.sol\":1394:1403  timestamp */\n      dup3\n        /* \"RVA/Token.sol\":1375:1404  LockupSet(account, timestamp) */\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/Token.sol\":1238:1411  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/Token.sol\":1078:1143  function unpause() external onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"RVA/Token.sol\":1126:1136  _unpause() */\n      tag_161\n        /* \"RVA/Token.sol\":1126:1134  _unpause */\n      tag_162\n        /* \"RVA/Token.sol\":1126:1136  _unpause() */\n      jump\t// in\n    tag_161:\n        /* \"RVA/Token.sol\":1078:1143  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"RVA/Token.sol\":1011:1072  function pause() external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"RVA/Token.sol\":1057:1065  _pause() */\n      tag_173\n        /* \"RVA/Token.sol\":1057:1063  _pause */\n      tag_174\n        /* \"RVA/Token.sol\":1057:1065  _pause() */\n      jump\t// in\n    tag_173:\n        /* \"RVA/Token.sol\":1011:1072  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"RVA/Token.sol\":2810:3300  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_176\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_176:\n        /* \"RVA/Token.sol\":2954:2961  amounts */\n      dup2\n      dup2\n        /* \"RVA/Token.sol\":2954:2968  amounts.length */\n      swap1\n      pop\n        /* \"RVA/Token.sol\":2933:2943  recipients */\n      dup5\n      dup5\n        /* \"RVA/Token.sol\":2933:2950  recipients.length */\n      swap1\n      pop\n        /* \"RVA/Token.sol\":2933:2968  recipients.length == amounts.length */\n      eq\n        /* \"RVA/Token.sol\":2925:3012  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"RVA/Token.sol\":3022:3045  uint256 recipientLength */\n      0x00\n        /* \"RVA/Token.sol\":3048:3058  recipients */\n      dup5\n      dup5\n        /* \"RVA/Token.sol\":3048:3065  recipients.length */\n      swap1\n      pop\n        /* \"RVA/Token.sol\":3022:3065  uint256 recipientLength = recipients.length */\n      swap1\n      pop\n        /* \"RVA/Token.sol\":3080:3089  uint256 i */\n      0x00\n        /* \"RVA/Token.sol\":3075:3294  for (uint256 i = 0; i < recipientLength; i++) {... */\n    tag_181:\n        /* \"RVA/Token.sol\":3099:3114  recipientLength */\n      dup2\n        /* \"RVA/Token.sol\":3095:3096  i */\n      dup2\n        /* \"RVA/Token.sol\":3095:3114  i < recipientLength */\n      lt\n        /* \"RVA/Token.sol\":3075:3294  for (uint256 i = 0; i < recipientLength; i++) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"RVA/Token.sol\":3144:3155  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":3144:3170  blacklisted[recipients[i]] */\n      0x00\n        /* \"RVA/Token.sol\":3156:3166  recipients */\n      dup8\n      dup8\n        /* \"RVA/Token.sol\":3167:3168  i */\n      dup5\n        /* \"RVA/Token.sol\":3156:3169  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n    tag_184:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_187:\n        /* \"RVA/Token.sol\":3144:3170  blacklisted[recipients[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/Token.sol\":3143:3170  !blacklisted[recipients[i]] */\n      iszero\n        /* \"RVA/Token.sol\":3135:3221  require(!blacklisted[recipients[i]], \"BatchTransfer failed: Recipient is blacklisted\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"RVA/Token.sol\":3235:3283  _transfer(msg.sender, recipients[i], amounts[i]) */\n      tag_191\n        /* \"RVA/Token.sol\":3245:3255  msg.sender */\n      caller\n        /* \"RVA/Token.sol\":3257:3267  recipients */\n      dup8\n      dup8\n        /* \"RVA/Token.sol\":3268:3269  i */\n      dup5\n        /* \"RVA/Token.sol\":3257:3270  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_192\n      jumpi\n      tag_193\n      tag_186\n      jump\t// in\n    tag_193:\n    tag_192:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_194:\n        /* \"RVA/Token.sol\":3272:3279  amounts */\n      dup7\n      dup7\n        /* \"RVA/Token.sol\":3280:3281  i */\n      dup6\n        /* \"RVA/Token.sol\":3272:3282  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_196\n      tag_186\n      jump\t// in\n    tag_196:\n    tag_195:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"RVA/Token.sol\":3235:3244  _transfer */\n      tag_197\n        /* \"RVA/Token.sol\":3235:3283  _transfer(msg.sender, recipients[i], amounts[i]) */\n      jump\t// in\n    tag_191:\n        /* \"RVA/Token.sol\":3116:3119  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"RVA/Token.sol\":3075:3294  for (uint256 i = 0; i < recipientLength; i++) {... */\n      jump(tag_181)\n    tag_182:\n      pop\n        /* \"RVA/Token.sol\":2915:3300  {... */\n      pop\n        /* \"RVA/Token.sol\":2810:3300  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_200\n      swap1\n      tag_116\n      jump\t// in\n    tag_200:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_116\n      jump\t// in\n    tag_201:\n      dup1\n      iszero\n      tag_202\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_203\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_202)\n    tag_203:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_204:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_204\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/Token.sol\":369:415  mapping(address => uint256) public lockedUntil */\n    tag_89:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"RVA/Token.sol\":1705:2163  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_93:\n        /* \"RVA/Token.sol\":1797:1801  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_206\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_206:\n        /* \"RVA/Token.sol\":1822:1833  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":1822:1845  blacklisted[msg.sender] */\n      0x00\n        /* \"RVA/Token.sol\":1834:1844  msg.sender */\n      caller\n        /* \"RVA/Token.sol\":1822:1845  blacklisted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/Token.sol\":1821:1845  !blacklisted[msg.sender] */\n      iszero\n        /* \"RVA/Token.sol\":1813:1888  require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_138\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"RVA/Token.sol\":1907:1918  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":1907:1929  blacklisted[recipient] */\n      0x00\n        /* \"RVA/Token.sol\":1919:1928  recipient */\n      dup5\n        /* \"RVA/Token.sol\":1907:1929  blacklisted[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/Token.sol\":1906:1929  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/Token.sol\":1898:1975  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_141\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"RVA/Token.sol\":2012:2023  lockedUntil */\n      0x08\n        /* \"RVA/Token.sol\":2012:2035  lockedUntil[msg.sender] */\n      0x00\n        /* \"RVA/Token.sol\":2024:2034  msg.sender */\n      caller\n        /* \"RVA/Token.sol\":2012:2035  lockedUntil[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/Token.sol\":1993:2008  block.timestamp */\n      timestamp\n        /* \"RVA/Token.sol\":1993:2035  block.timestamp >= lockedUntil[msg.sender] */\n      lt\n      iszero\n        /* \"RVA/Token.sol\":1993:2067  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n      dup1\n      tag_212\n      jumpi\n      pop\n        /* \"RVA/Token.sol\":2066:2067  0 */\n      0x00\n        /* \"RVA/Token.sol\":2039:2050  lockedUntil */\n      0x08\n        /* \"RVA/Token.sol\":2039:2062  lockedUntil[msg.sender] */\n      0x00\n        /* \"RVA/Token.sol\":2051:2061  msg.sender */\n      caller\n        /* \"RVA/Token.sol\":2039:2062  lockedUntil[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/Token.sol\":2039:2067  lockedUntil[msg.sender] == 0 */\n      eq\n        /* \"RVA/Token.sol\":1993:2067  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n    tag_212:\n        /* \"RVA/Token.sol\":1985:2106  require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_145\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"RVA/Token.sol\":2123:2156  super.transfer(recipient, amount) */\n      tag_215\n        /* \"RVA/Token.sol\":2138:2147  recipient */\n      dup4\n        /* \"RVA/Token.sol\":2149:2155  amount */\n      dup4\n        /* \"RVA/Token.sol\":2123:2137  super.transfer */\n      tag_216\n        /* \"RVA/Token.sol\":2123:2156  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_215:\n        /* \"RVA/Token.sol\":2116:2156  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"RVA/Token.sol\":1705:2163  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/Token.sol\":280:306  address public icoContract */\n    tag_96:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"RVA/Token.sol\":422:465  mapping(address => bool) public blacklisted */\n    tag_100:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_223\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"RVA/Token.sol\":1588:1699  function isBlacklisted(address account) public view returns (bool) {... */\n    tag_112:\n        /* \"RVA/Token.sol\":1649:1653  bool */\n      0x00\n        /* \"RVA/Token.sol\":1672:1683  blacklisted */\n      0x09\n        /* \"RVA/Token.sol\":1672:1692  blacklisted[account] */\n      0x00\n        /* \"RVA/Token.sol\":1684:1691  account */\n      dup4\n        /* \"RVA/Token.sol\":1672:1692  blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/Token.sol\":1665:1692  return blacklisted[account] */\n      swap1\n      pop\n        /* \"RVA/Token.sol\":1588:1699  function isBlacklisted(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_236\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_66\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_246\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_247\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_249\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_250\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_253\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_255\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_256\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_273\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_282\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_66\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_290)\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_294)\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_295\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_296:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_297:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_298:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_346:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_346)\n    tag_348:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_299:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_300:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_351\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_296\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":820:891   */\n      tag_352\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_297\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_353\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_298\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":990:1019   */\n      tag_354\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_299\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_32:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_356\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_300\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1432:1549   */\n    tag_302:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1538:1539   */\n      dup1\n        /* \"#utility.yul\":1531:1543   */\n      revert\n        /* \"#utility.yul\":1555:1672   */\n    tag_303:\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1678:1804   */\n    tag_304:\n        /* \"#utility.yul\":1715:1722   */\n      0x00\n        /* \"#utility.yul\":1755:1797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1748:1753   */\n      dup3\n        /* \"#utility.yul\":1744:1798   */\n      and\n        /* \"#utility.yul\":1733:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1906   */\n    tag_305:\n        /* \"#utility.yul\":1847:1854   */\n      0x00\n        /* \"#utility.yul\":1876:1900   */\n      tag_362\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1876:1900   */\n      tag_304\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":1865:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1810:1906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1912:2034   */\n    tag_306:\n        /* \"#utility.yul\":1985:2009   */\n      tag_364\n        /* \"#utility.yul\":2003:2008   */\n      dup2\n        /* \"#utility.yul\":1985:2009   */\n      tag_305\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1975:2010   */\n      eq\n        /* \"#utility.yul\":1965:2028   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      dup1\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1965:2028   */\n    tag_365:\n        /* \"#utility.yul\":1912:2034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2179   */\n    tag_307:\n        /* \"#utility.yul\":2086:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2111:2131   */\n      calldataload\n        /* \"#utility.yul\":2102:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2173   */\n      tag_367\n        /* \"#utility.yul\":2167:2172   */\n      dup2\n        /* \"#utility.yul\":2140:2173   */\n      tag_306\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2040:2179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2262   */\n    tag_308:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2390   */\n    tag_309:\n        /* \"#utility.yul\":2341:2365   */\n      tag_370\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_308\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_371:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_310:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_373\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_309\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:3015   */\n    tag_35:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2617:2623   */\n      dup1\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2645:2652   */\n      dup6\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_376\n      tag_302\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2634:2753   */\n    tag_375:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2870   */\n      tag_377\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_307\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2807:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2763:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_378\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_310\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2541:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3111   */\n    tag_311:\n        /* \"#utility.yul\":3055:3062   */\n      0x00\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3073:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3226   */\n    tag_312:\n        /* \"#utility.yul\":3198:3219   */\n      tag_381\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3198:3219   */\n      tag_311\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3117:3226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3442   */\n    tag_38:\n        /* \"#utility.yul\":3319:3323   */\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3334:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3435   */\n      tag_383\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3370:3435   */\n      tag_312\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3232:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3564   */\n    tag_313:\n        /* \"#utility.yul\":3518:3539   */\n      tag_385\n        /* \"#utility.yul\":3533:3538   */\n      dup2\n        /* \"#utility.yul\":3518:3539   */\n      tag_311\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3511:3516   */\n      dup2\n        /* \"#utility.yul\":3508:3540   */\n      eq\n        /* \"#utility.yul\":3498:3558   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":3554:3555   */\n      0x00\n        /* \"#utility.yul\":3551:3552   */\n      dup1\n        /* \"#utility.yul\":3544:3556   */\n      revert\n        /* \"#utility.yul\":3498:3558   */\n    tag_386:\n        /* \"#utility.yul\":3448:3564   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3703   */\n    tag_314:\n        /* \"#utility.yul\":3613:3618   */\n      0x00\n        /* \"#utility.yul\":3651:3657   */\n      dup2\n        /* \"#utility.yul\":3638:3658   */\n      calldataload\n        /* \"#utility.yul\":3629:3658   */\n      swap1\n      pop\n        /* \"#utility.yul\":3667:3697   */\n      tag_388\n        /* \"#utility.yul\":3691:3696   */\n      dup2\n        /* \"#utility.yul\":3667:3697   */\n      tag_313\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3570:3703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3709:4177   */\n    tag_41:\n        /* \"#utility.yul\":3774:3780   */\n      0x00\n        /* \"#utility.yul\":3782:3788   */\n      dup1\n        /* \"#utility.yul\":3831:3833   */\n      0x40\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3810:3817   */\n      dup6\n        /* \"#utility.yul\":3806:3829   */\n      sub\n        /* \"#utility.yul\":3802:3834   */\n      slt\n        /* \"#utility.yul\":3799:3918   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":3837:3916   */\n      tag_391\n      tag_302\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3799:3918   */\n    tag_390:\n        /* \"#utility.yul\":3957:3958   */\n      0x00\n        /* \"#utility.yul\":3982:4035   */\n      tag_392\n        /* \"#utility.yul\":4027:4034   */\n      dup6\n        /* \"#utility.yul\":4018:4024   */\n      dup3\n        /* \"#utility.yul\":4007:4016   */\n      dup7\n        /* \"#utility.yul\":4003:4025   */\n      add\n        /* \"#utility.yul\":3982:4035   */\n      tag_307\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3972:4035   */\n      swap3\n      pop\n        /* \"#utility.yul\":3928:4045   */\n      pop\n        /* \"#utility.yul\":4084:4086   */\n      0x20\n        /* \"#utility.yul\":4110:4160   */\n      tag_393\n        /* \"#utility.yul\":4152:4159   */\n      dup6\n        /* \"#utility.yul\":4143:4149   */\n      dup3\n        /* \"#utility.yul\":4132:4141   */\n      dup7\n        /* \"#utility.yul\":4128:4150   */\n      add\n        /* \"#utility.yul\":4110:4160   */\n      tag_314\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4100:4160   */\n      swap2\n      pop\n        /* \"#utility.yul\":4055:4170   */\n      pop\n        /* \"#utility.yul\":3709:4177   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4183:4301   */\n    tag_315:\n        /* \"#utility.yul\":4270:4294   */\n      tag_395\n        /* \"#utility.yul\":4288:4293   */\n      dup2\n        /* \"#utility.yul\":4270:4294   */\n      tag_308\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4265:4268   */\n      dup3\n        /* \"#utility.yul\":4258:4295   */\n      mstore\n        /* \"#utility.yul\":4183:4301   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4307:4529   */\n    tag_46:\n        /* \"#utility.yul\":4400:4404   */\n      0x00\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4427:4436   */\n      dup3\n        /* \"#utility.yul\":4423:4441   */\n      add\n        /* \"#utility.yul\":4415:4441   */\n      swap1\n      pop\n        /* \"#utility.yul\":4451:4522   */\n      tag_397\n        /* \"#utility.yul\":4519:4520   */\n      0x00\n        /* \"#utility.yul\":4508:4517   */\n      dup4\n        /* \"#utility.yul\":4504:4521   */\n      add\n        /* \"#utility.yul\":4495:4501   */\n      dup5\n        /* \"#utility.yul\":4451:4522   */\n      tag_315\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4307:4529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4535:5154   */\n    tag_49:\n        /* \"#utility.yul\":4612:4618   */\n      0x00\n        /* \"#utility.yul\":4620:4626   */\n      dup1\n        /* \"#utility.yul\":4628:4634   */\n      0x00\n        /* \"#utility.yul\":4677:4679   */\n      0x60\n        /* \"#utility.yul\":4665:4674   */\n      dup5\n        /* \"#utility.yul\":4656:4663   */\n      dup7\n        /* \"#utility.yul\":4652:4675   */\n      sub\n        /* \"#utility.yul\":4648:4680   */\n      slt\n        /* \"#utility.yul\":4645:4764   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":4683:4762   */\n      tag_400\n      tag_302\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4645:4764   */\n    tag_399:\n        /* \"#utility.yul\":4803:4804   */\n      0x00\n        /* \"#utility.yul\":4828:4881   */\n      tag_401\n        /* \"#utility.yul\":4873:4880   */\n      dup7\n        /* \"#utility.yul\":4864:4870   */\n      dup3\n        /* \"#utility.yul\":4853:4862   */\n      dup8\n        /* \"#utility.yul\":4849:4871   */\n      add\n        /* \"#utility.yul\":4828:4881   */\n      tag_307\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4818:4881   */\n      swap4\n      pop\n        /* \"#utility.yul\":4774:4891   */\n      pop\n        /* \"#utility.yul\":4930:4932   */\n      0x20\n        /* \"#utility.yul\":4956:5009   */\n      tag_402\n        /* \"#utility.yul\":5001:5008   */\n      dup7\n        /* \"#utility.yul\":4992:4998   */\n      dup3\n        /* \"#utility.yul\":4981:4990   */\n      dup8\n        /* \"#utility.yul\":4977:4999   */\n      add\n        /* \"#utility.yul\":4956:5009   */\n      tag_307\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4946:5009   */\n      swap3\n      pop\n        /* \"#utility.yul\":4901:5019   */\n      pop\n        /* \"#utility.yul\":5058:5060   */\n      0x40\n        /* \"#utility.yul\":5084:5137   */\n      tag_403\n        /* \"#utility.yul\":5129:5136   */\n      dup7\n        /* \"#utility.yul\":5120:5126   */\n      dup3\n        /* \"#utility.yul\":5109:5118   */\n      dup8\n        /* \"#utility.yul\":5105:5127   */\n      add\n        /* \"#utility.yul\":5084:5137   */\n      tag_310\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5074:5137   */\n      swap2\n      pop\n        /* \"#utility.yul\":5029:5147   */\n      pop\n        /* \"#utility.yul\":4535:5154   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5160:5489   */\n    tag_54:\n        /* \"#utility.yul\":5219:5225   */\n      0x00\n        /* \"#utility.yul\":5268:5270   */\n      0x20\n        /* \"#utility.yul\":5256:5265   */\n      dup3\n        /* \"#utility.yul\":5247:5254   */\n      dup5\n        /* \"#utility.yul\":5243:5266   */\n      sub\n        /* \"#utility.yul\":5239:5271   */\n      slt\n        /* \"#utility.yul\":5236:5355   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":5274:5353   */\n      tag_406\n      tag_302\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5236:5355   */\n    tag_405:\n        /* \"#utility.yul\":5394:5395   */\n      0x00\n        /* \"#utility.yul\":5419:5472   */\n      tag_407\n        /* \"#utility.yul\":5464:5471   */\n      dup5\n        /* \"#utility.yul\":5455:5461   */\n      dup3\n        /* \"#utility.yul\":5444:5453   */\n      dup6\n        /* \"#utility.yul\":5440:5462   */\n      add\n        /* \"#utility.yul\":5419:5472   */\n      tag_307\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":5409:5472   */\n      swap2\n      pop\n        /* \"#utility.yul\":5365:5482   */\n      pop\n        /* \"#utility.yul\":5160:5489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5495:5581   */\n    tag_316:\n        /* \"#utility.yul\":5530:5537   */\n      0x00\n        /* \"#utility.yul\":5570:5574   */\n      0xff\n        /* \"#utility.yul\":5563:5568   */\n      dup3\n        /* \"#utility.yul\":5559:5575   */\n      and\n        /* \"#utility.yul\":5548:5575   */\n      swap1\n      pop\n        /* \"#utility.yul\":5495:5581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5587:5699   */\n    tag_317:\n        /* \"#utility.yul\":5670:5692   */\n      tag_410\n        /* \"#utility.yul\":5686:5691   */\n      dup2\n        /* \"#utility.yul\":5670:5692   */\n      tag_316\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5665:5668   */\n      dup3\n        /* \"#utility.yul\":5658:5693   */\n      mstore\n        /* \"#utility.yul\":5587:5699   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5705:5919   */\n    tag_59:\n        /* \"#utility.yul\":5794:5798   */\n      0x00\n        /* \"#utility.yul\":5832:5834   */\n      0x20\n        /* \"#utility.yul\":5821:5830   */\n      dup3\n        /* \"#utility.yul\":5817:5835   */\n      add\n        /* \"#utility.yul\":5809:5835   */\n      swap1\n      pop\n        /* \"#utility.yul\":5845:5912   */\n      tag_412\n        /* \"#utility.yul\":5909:5910   */\n      0x00\n        /* \"#utility.yul\":5898:5907   */\n      dup4\n        /* \"#utility.yul\":5894:5911   */\n      add\n        /* \"#utility.yul\":5885:5891   */\n      dup5\n        /* \"#utility.yul\":5845:5912   */\n      tag_317\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5705:5919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5925:6042   */\n    tag_318:\n        /* \"#utility.yul\":6034:6035   */\n      0x00\n        /* \"#utility.yul\":6031:6032   */\n      dup1\n        /* \"#utility.yul\":6024:6036   */\n      revert\n        /* \"#utility.yul\":6048:6165   */\n    tag_319:\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6154:6155   */\n      dup1\n        /* \"#utility.yul\":6147:6159   */\n      revert\n        /* \"#utility.yul\":6171:6288   */\n    tag_320:\n        /* \"#utility.yul\":6280:6281   */\n      0x00\n        /* \"#utility.yul\":6277:6278   */\n      dup1\n        /* \"#utility.yul\":6270:6282   */\n      revert\n        /* \"#utility.yul\":6311:6879   */\n    tag_321:\n        /* \"#utility.yul\":6384:6392   */\n      0x00\n        /* \"#utility.yul\":6394:6400   */\n      dup1\n        /* \"#utility.yul\":6444:6447   */\n      dup4\n        /* \"#utility.yul\":6437:6441   */\n      0x1f\n        /* \"#utility.yul\":6429:6435   */\n      dup5\n        /* \"#utility.yul\":6425:6442   */\n      add\n        /* \"#utility.yul\":6421:6448   */\n      slt\n        /* \"#utility.yul\":6411:6533   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":6452:6531   */\n      tag_418\n      tag_318\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6411:6533   */\n    tag_417:\n        /* \"#utility.yul\":6565:6571   */\n      dup3\n        /* \"#utility.yul\":6552:6572   */\n      calldataload\n        /* \"#utility.yul\":6542:6572   */\n      swap1\n      pop\n        /* \"#utility.yul\":6595:6613   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6587:6593   */\n      dup2\n        /* \"#utility.yul\":6584:6614   */\n      gt\n        /* \"#utility.yul\":6581:6698   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":6617:6696   */\n      tag_420\n      tag_319\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":6581:6698   */\n    tag_419:\n        /* \"#utility.yul\":6731:6735   */\n      0x20\n        /* \"#utility.yul\":6723:6729   */\n      dup4\n        /* \"#utility.yul\":6719:6736   */\n      add\n        /* \"#utility.yul\":6707:6736   */\n      swap2\n      pop\n        /* \"#utility.yul\":6785:6788   */\n      dup4\n        /* \"#utility.yul\":6777:6781   */\n      0x20\n        /* \"#utility.yul\":6769:6775   */\n      dup3\n        /* \"#utility.yul\":6765:6782   */\n      mul\n        /* \"#utility.yul\":6755:6763   */\n      dup4\n        /* \"#utility.yul\":6751:6783   */\n      add\n        /* \"#utility.yul\":6748:6789   */\n      gt\n        /* \"#utility.yul\":6745:6873   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":6792:6871   */\n      tag_422\n      tag_320\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6745:6873   */\n    tag_421:\n        /* \"#utility.yul\":6311:6879   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6902:7470   */\n    tag_322:\n        /* \"#utility.yul\":6975:6983   */\n      0x00\n        /* \"#utility.yul\":6985:6991   */\n      dup1\n        /* \"#utility.yul\":7035:7038   */\n      dup4\n        /* \"#utility.yul\":7028:7032   */\n      0x1f\n        /* \"#utility.yul\":7020:7026   */\n      dup5\n        /* \"#utility.yul\":7016:7033   */\n      add\n        /* \"#utility.yul\":7012:7039   */\n      slt\n        /* \"#utility.yul\":7002:7124   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":7043:7122   */\n      tag_425\n      tag_318\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7002:7124   */\n    tag_424:\n        /* \"#utility.yul\":7156:7162   */\n      dup3\n        /* \"#utility.yul\":7143:7163   */\n      calldataload\n        /* \"#utility.yul\":7133:7163   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7204   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7178:7184   */\n      dup2\n        /* \"#utility.yul\":7175:7205   */\n      gt\n        /* \"#utility.yul\":7172:7289   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":7208:7287   */\n      tag_427\n      tag_319\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7172:7289   */\n    tag_426:\n        /* \"#utility.yul\":7322:7326   */\n      0x20\n        /* \"#utility.yul\":7314:7320   */\n      dup4\n        /* \"#utility.yul\":7310:7327   */\n      add\n        /* \"#utility.yul\":7298:7327   */\n      swap2\n      pop\n        /* \"#utility.yul\":7376:7379   */\n      dup4\n        /* \"#utility.yul\":7368:7372   */\n      0x20\n        /* \"#utility.yul\":7360:7366   */\n      dup3\n        /* \"#utility.yul\":7356:7373   */\n      mul\n        /* \"#utility.yul\":7346:7354   */\n      dup4\n        /* \"#utility.yul\":7342:7374   */\n      add\n        /* \"#utility.yul\":7339:7380   */\n      gt\n        /* \"#utility.yul\":7336:7464   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":7383:7462   */\n      tag_429\n      tag_320\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7336:7464   */\n    tag_428:\n        /* \"#utility.yul\":6902:7470   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7476:8410   */\n    tag_78:\n        /* \"#utility.yul\":7598:7604   */\n      0x00\n        /* \"#utility.yul\":7606:7612   */\n      dup1\n        /* \"#utility.yul\":7614:7620   */\n      0x00\n        /* \"#utility.yul\":7622:7628   */\n      dup1\n        /* \"#utility.yul\":7671:7673   */\n      0x40\n        /* \"#utility.yul\":7659:7668   */\n      dup6\n        /* \"#utility.yul\":7650:7657   */\n      dup8\n        /* \"#utility.yul\":7646:7669   */\n      sub\n        /* \"#utility.yul\":7642:7674   */\n      slt\n        /* \"#utility.yul\":7639:7758   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":7677:7756   */\n      tag_432\n      tag_302\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7639:7758   */\n    tag_431:\n        /* \"#utility.yul\":7825:7826   */\n      0x00\n        /* \"#utility.yul\":7814:7823   */\n      dup6\n        /* \"#utility.yul\":7810:7827   */\n      add\n        /* \"#utility.yul\":7797:7828   */\n      calldataload\n        /* \"#utility.yul\":7855:7873   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7847:7853   */\n      dup2\n        /* \"#utility.yul\":7844:7874   */\n      gt\n        /* \"#utility.yul\":7841:7958   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":7877:7956   */\n      tag_434\n      tag_303\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":7841:7958   */\n    tag_433:\n        /* \"#utility.yul\":7990:8070   */\n      tag_435\n        /* \"#utility.yul\":8062:8069   */\n      dup8\n        /* \"#utility.yul\":8053:8059   */\n      dup3\n        /* \"#utility.yul\":8042:8051   */\n      dup9\n        /* \"#utility.yul\":8038:8060   */\n      add\n        /* \"#utility.yul\":7990:8070   */\n      tag_321\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7972:8070   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":7768:8080   */\n      pop\n        /* \"#utility.yul\":8147:8149   */\n      0x20\n        /* \"#utility.yul\":8136:8145   */\n      dup6\n        /* \"#utility.yul\":8132:8150   */\n      add\n        /* \"#utility.yul\":8119:8151   */\n      calldataload\n        /* \"#utility.yul\":8178:8196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8170:8176   */\n      dup2\n        /* \"#utility.yul\":8167:8197   */\n      gt\n        /* \"#utility.yul\":8164:8281   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":8200:8279   */\n      tag_437\n      tag_303\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8164:8281   */\n    tag_436:\n        /* \"#utility.yul\":8313:8393   */\n      tag_438\n        /* \"#utility.yul\":8385:8392   */\n      dup8\n        /* \"#utility.yul\":8376:8382   */\n      dup3\n        /* \"#utility.yul\":8365:8374   */\n      dup9\n        /* \"#utility.yul\":8361:8383   */\n      add\n        /* \"#utility.yul\":8313:8393   */\n      tag_322\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8295:8393   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":8090:8403   */\n      pop\n        /* \"#utility.yul\":7476:8410   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8416:8534   */\n    tag_323:\n        /* \"#utility.yul\":8503:8527   */\n      tag_440\n        /* \"#utility.yul\":8521:8526   */\n      dup2\n        /* \"#utility.yul\":8503:8527   */\n      tag_305\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8498:8501   */\n      dup3\n        /* \"#utility.yul\":8491:8528   */\n      mstore\n        /* \"#utility.yul\":8416:8534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8540:8762   */\n    tag_83:\n        /* \"#utility.yul\":8633:8637   */\n      0x00\n        /* \"#utility.yul\":8671:8673   */\n      0x20\n        /* \"#utility.yul\":8660:8669   */\n      dup3\n        /* \"#utility.yul\":8656:8674   */\n      add\n        /* \"#utility.yul\":8648:8674   */\n      swap1\n      pop\n        /* \"#utility.yul\":8684:8755   */\n      tag_442\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8741:8750   */\n      dup4\n        /* \"#utility.yul\":8737:8754   */\n      add\n        /* \"#utility.yul\":8728:8734   */\n      dup5\n        /* \"#utility.yul\":8684:8755   */\n      tag_323\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8540:8762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8768:9242   */\n    tag_104:\n        /* \"#utility.yul\":8836:8842   */\n      0x00\n        /* \"#utility.yul\":8844:8850   */\n      dup1\n        /* \"#utility.yul\":8893:8895   */\n      0x40\n        /* \"#utility.yul\":8881:8890   */\n      dup4\n        /* \"#utility.yul\":8872:8879   */\n      dup6\n        /* \"#utility.yul\":8868:8891   */\n      sub\n        /* \"#utility.yul\":8864:8896   */\n      slt\n        /* \"#utility.yul\":8861:8980   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":8899:8978   */\n      tag_445\n      tag_302\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8861:8980   */\n    tag_444:\n        /* \"#utility.yul\":9019:9020   */\n      0x00\n        /* \"#utility.yul\":9044:9097   */\n      tag_446\n        /* \"#utility.yul\":9089:9096   */\n      dup6\n        /* \"#utility.yul\":9080:9086   */\n      dup3\n        /* \"#utility.yul\":9069:9078   */\n      dup7\n        /* \"#utility.yul\":9065:9087   */\n      add\n        /* \"#utility.yul\":9044:9097   */\n      tag_307\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":9034:9097   */\n      swap3\n      pop\n        /* \"#utility.yul\":8990:9107   */\n      pop\n        /* \"#utility.yul\":9146:9148   */\n      0x20\n        /* \"#utility.yul\":9172:9225   */\n      tag_447\n        /* \"#utility.yul\":9217:9224   */\n      dup6\n        /* \"#utility.yul\":9208:9214   */\n      dup3\n        /* \"#utility.yul\":9197:9206   */\n      dup7\n        /* \"#utility.yul\":9193:9215   */\n      add\n        /* \"#utility.yul\":9172:9225   */\n      tag_307\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":9162:9225   */\n      swap2\n      pop\n        /* \"#utility.yul\":9117:9235   */\n      pop\n        /* \"#utility.yul\":8768:9242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9248:9428   */\n    tag_324:\n        /* \"#utility.yul\":9296:9373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9293:9294   */\n      0x00\n        /* \"#utility.yul\":9286:9374   */\n      mstore\n        /* \"#utility.yul\":9393:9397   */\n      0x22\n        /* \"#utility.yul\":9390:9391   */\n      0x04\n        /* \"#utility.yul\":9383:9398   */\n      mstore\n        /* \"#utility.yul\":9417:9421   */\n      0x24\n        /* \"#utility.yul\":9414:9415   */\n      0x00\n        /* \"#utility.yul\":9407:9422   */\n      revert\n        /* \"#utility.yul\":9434:9754   */\n    tag_116:\n        /* \"#utility.yul\":9478:9484   */\n      0x00\n        /* \"#utility.yul\":9515:9516   */\n      0x02\n        /* \"#utility.yul\":9509:9513   */\n      dup3\n        /* \"#utility.yul\":9505:9517   */\n      div\n        /* \"#utility.yul\":9495:9517   */\n      swap1\n      pop\n        /* \"#utility.yul\":9562:9563   */\n      0x01\n        /* \"#utility.yul\":9556:9560   */\n      dup3\n        /* \"#utility.yul\":9552:9564   */\n      and\n        /* \"#utility.yul\":9583:9601   */\n      dup1\n        /* \"#utility.yul\":9573:9654   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":9639:9643   */\n      0x7f\n        /* \"#utility.yul\":9631:9637   */\n      dup3\n        /* \"#utility.yul\":9627:9644   */\n      and\n        /* \"#utility.yul\":9617:9644   */\n      swap2\n      pop\n        /* \"#utility.yul\":9573:9654   */\n    tag_450:\n        /* \"#utility.yul\":9701:9703   */\n      0x20\n        /* \"#utility.yul\":9693:9699   */\n      dup3\n        /* \"#utility.yul\":9690:9704   */\n      lt\n        /* \"#utility.yul\":9670:9688   */\n      dup2\n        /* \"#utility.yul\":9667:9705   */\n      sub\n        /* \"#utility.yul\":9664:9748   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":9720:9738   */\n      tag_452\n      tag_324\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":9664:9748   */\n    tag_451:\n        /* \"#utility.yul\":9485:9754   */\n      pop\n        /* \"#utility.yul\":9434:9754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9760:9985   */\n    tag_325:\n        /* \"#utility.yul\":9900:9934   */\n      0x5472616e73666572206661696c65643a2053656e64657220697320626c61636b\n        /* \"#utility.yul\":9896:9897   */\n      0x00\n        /* \"#utility.yul\":9888:9894   */\n      dup3\n        /* \"#utility.yul\":9884:9898   */\n      add\n        /* \"#utility.yul\":9877:9935   */\n      mstore\n        /* \"#utility.yul\":9969:9977   */\n      0x6c69737465640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9964:9966   */\n      0x20\n        /* \"#utility.yul\":9956:9962   */\n      dup3\n        /* \"#utility.yul\":9952:9967   */\n      add\n        /* \"#utility.yul\":9945:9978   */\n      mstore\n        /* \"#utility.yul\":9760:9985   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10357   */\n    tag_326:\n        /* \"#utility.yul\":10133:10136   */\n      0x00\n        /* \"#utility.yul\":10154:10221   */\n      tag_455\n        /* \"#utility.yul\":10218:10220   */\n      0x26\n        /* \"#utility.yul\":10213:10216   */\n      dup4\n        /* \"#utility.yul\":10154:10221   */\n      tag_297\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":10147:10221   */\n      swap2\n      pop\n        /* \"#utility.yul\":10230:10323   */\n      tag_456\n        /* \"#utility.yul\":10319:10322   */\n      dup3\n        /* \"#utility.yul\":10230:10323   */\n      tag_325\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10348:10350   */\n      0x40\n        /* \"#utility.yul\":10343:10346   */\n      dup3\n        /* \"#utility.yul\":10339:10351   */\n      add\n        /* \"#utility.yul\":10332:10351   */\n      swap1\n      pop\n        /* \"#utility.yul\":9991:10357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10363:10782   */\n    tag_138:\n        /* \"#utility.yul\":10529:10533   */\n      0x00\n        /* \"#utility.yul\":10567:10569   */\n      0x20\n        /* \"#utility.yul\":10556:10565   */\n      dup3\n        /* \"#utility.yul\":10552:10570   */\n      add\n        /* \"#utility.yul\":10544:10570   */\n      swap1\n      pop\n        /* \"#utility.yul\":10616:10625   */\n      dup2\n        /* \"#utility.yul\":10610:10614   */\n      dup2\n        /* \"#utility.yul\":10606:10626   */\n      sub\n        /* \"#utility.yul\":10602:10603   */\n      0x00\n        /* \"#utility.yul\":10591:10600   */\n      dup4\n        /* \"#utility.yul\":10587:10604   */\n      add\n        /* \"#utility.yul\":10580:10627   */\n      mstore\n        /* \"#utility.yul\":10644:10775   */\n      tag_458\n        /* \"#utility.yul\":10770:10774   */\n      dup2\n        /* \"#utility.yul\":10644:10775   */\n      tag_326\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10636:10775   */\n      swap1\n      pop\n        /* \"#utility.yul\":10363:10782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10788:11016   */\n    tag_327:\n        /* \"#utility.yul\":10928:10962   */\n      0x5472616e73666572206661696c65643a20526563697069656e7420697320626c\n        /* \"#utility.yul\":10924:10925   */\n      0x00\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10912:10926   */\n      add\n        /* \"#utility.yul\":10905:10963   */\n      mstore\n        /* \"#utility.yul\":10997:11008   */\n      0x61636b6c69737465640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10992:10994   */\n      0x20\n        /* \"#utility.yul\":10984:10990   */\n      dup3\n        /* \"#utility.yul\":10980:10995   */\n      add\n        /* \"#utility.yul\":10973:11009   */\n      mstore\n        /* \"#utility.yul\":10788:11016   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11022:11388   */\n    tag_328:\n        /* \"#utility.yul\":11164:11167   */\n      0x00\n        /* \"#utility.yul\":11185:11252   */\n      tag_461\n        /* \"#utility.yul\":11249:11251   */\n      0x29\n        /* \"#utility.yul\":11244:11247   */\n      dup4\n        /* \"#utility.yul\":11185:11252   */\n      tag_297\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":11178:11252   */\n      swap2\n      pop\n        /* \"#utility.yul\":11261:11354   */\n      tag_462\n        /* \"#utility.yul\":11350:11353   */\n      dup3\n        /* \"#utility.yul\":11261:11354   */\n      tag_327\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":11379:11381   */\n      0x40\n        /* \"#utility.yul\":11374:11377   */\n      dup3\n        /* \"#utility.yul\":11370:11382   */\n      add\n        /* \"#utility.yul\":11363:11382   */\n      swap1\n      pop\n        /* \"#utility.yul\":11022:11388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11394:11813   */\n    tag_141:\n        /* \"#utility.yul\":11560:11564   */\n      0x00\n        /* \"#utility.yul\":11598:11600   */\n      0x20\n        /* \"#utility.yul\":11587:11596   */\n      dup3\n        /* \"#utility.yul\":11583:11601   */\n      add\n        /* \"#utility.yul\":11575:11601   */\n      swap1\n      pop\n        /* \"#utility.yul\":11647:11656   */\n      dup2\n        /* \"#utility.yul\":11641:11645   */\n      dup2\n        /* \"#utility.yul\":11637:11657   */\n      sub\n        /* \"#utility.yul\":11633:11634   */\n      0x00\n        /* \"#utility.yul\":11622:11631   */\n      dup4\n        /* \"#utility.yul\":11618:11635   */\n      add\n        /* \"#utility.yul\":11611:11658   */\n      mstore\n        /* \"#utility.yul\":11675:11806   */\n      tag_464\n        /* \"#utility.yul\":11801:11805   */\n      dup2\n        /* \"#utility.yul\":11675:11806   */\n      tag_328\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":11667:11806   */\n      swap1\n      pop\n        /* \"#utility.yul\":11394:11813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11819:12040   */\n    tag_329:\n        /* \"#utility.yul\":11959:11993   */\n      0x5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b\n        /* \"#utility.yul\":11955:11956   */\n      0x00\n        /* \"#utility.yul\":11947:11953   */\n      dup3\n        /* \"#utility.yul\":11943:11957   */\n      add\n        /* \"#utility.yul\":11936:11994   */\n      mstore\n        /* \"#utility.yul\":12028:12032   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12023:12025   */\n      0x20\n        /* \"#utility.yul\":12015:12021   */\n      dup3\n        /* \"#utility.yul\":12011:12026   */\n      add\n        /* \"#utility.yul\":12004:12033   */\n      mstore\n        /* \"#utility.yul\":11819:12040   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12046:12412   */\n    tag_330:\n        /* \"#utility.yul\":12188:12191   */\n      0x00\n        /* \"#utility.yul\":12209:12276   */\n      tag_467\n        /* \"#utility.yul\":12273:12275   */\n      0x22\n        /* \"#utility.yul\":12268:12271   */\n      dup4\n        /* \"#utility.yul\":12209:12276   */\n      tag_297\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12202:12276   */\n      swap2\n      pop\n        /* \"#utility.yul\":12285:12378   */\n      tag_468\n        /* \"#utility.yul\":12374:12377   */\n      dup3\n        /* \"#utility.yul\":12285:12378   */\n      tag_329\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":12403:12405   */\n      0x40\n        /* \"#utility.yul\":12398:12401   */\n      dup3\n        /* \"#utility.yul\":12394:12406   */\n      add\n        /* \"#utility.yul\":12387:12406   */\n      swap1\n      pop\n        /* \"#utility.yul\":12046:12412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12418:12837   */\n    tag_145:\n        /* \"#utility.yul\":12584:12588   */\n      0x00\n        /* \"#utility.yul\":12622:12624   */\n      0x20\n        /* \"#utility.yul\":12611:12620   */\n      dup3\n        /* \"#utility.yul\":12607:12625   */\n      add\n        /* \"#utility.yul\":12599:12625   */\n      swap1\n      pop\n        /* \"#utility.yul\":12671:12680   */\n      dup2\n        /* \"#utility.yul\":12665:12669   */\n      dup2\n        /* \"#utility.yul\":12661:12681   */\n      sub\n        /* \"#utility.yul\":12657:12658   */\n      0x00\n        /* \"#utility.yul\":12646:12655   */\n      dup4\n        /* \"#utility.yul\":12642:12659   */\n      add\n        /* \"#utility.yul\":12635:12682   */\n      mstore\n        /* \"#utility.yul\":12699:12830   */\n      tag_470\n        /* \"#utility.yul\":12825:12829   */\n      dup2\n        /* \"#utility.yul\":12699:12830   */\n      tag_330\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12691:12830   */\n      swap1\n      pop\n        /* \"#utility.yul\":12418:12837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12843:13007   */\n    tag_331:\n        /* \"#utility.yul\":12983:12999   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":12979:12980   */\n      0x00\n        /* \"#utility.yul\":12971:12977   */\n      dup3\n        /* \"#utility.yul\":12967:12981   */\n      add\n        /* \"#utility.yul\":12960:13000   */\n      mstore\n        /* \"#utility.yul\":12843:13007   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13013:13379   */\n    tag_332:\n        /* \"#utility.yul\":13155:13158   */\n      0x00\n        /* \"#utility.yul\":13176:13243   */\n      tag_473\n        /* \"#utility.yul\":13240:13242   */\n      0x0e\n        /* \"#utility.yul\":13235:13238   */\n      dup4\n        /* \"#utility.yul\":13176:13243   */\n      tag_297\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13169:13243   */\n      swap2\n      pop\n        /* \"#utility.yul\":13252:13345   */\n      tag_474\n        /* \"#utility.yul\":13341:13344   */\n      dup3\n        /* \"#utility.yul\":13252:13345   */\n      tag_331\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13370:13372   */\n      0x20\n        /* \"#utility.yul\":13365:13368   */\n      dup3\n        /* \"#utility.yul\":13361:13373   */\n      add\n        /* \"#utility.yul\":13354:13373   */\n      swap1\n      pop\n        /* \"#utility.yul\":13013:13379   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13385:13804   */\n    tag_155:\n        /* \"#utility.yul\":13551:13555   */\n      0x00\n        /* \"#utility.yul\":13589:13591   */\n      0x20\n        /* \"#utility.yul\":13578:13587   */\n      dup3\n        /* \"#utility.yul\":13574:13592   */\n      add\n        /* \"#utility.yul\":13566:13592   */\n      swap1\n      pop\n        /* \"#utility.yul\":13638:13647   */\n      dup2\n        /* \"#utility.yul\":13632:13636   */\n      dup2\n        /* \"#utility.yul\":13628:13648   */\n      sub\n        /* \"#utility.yul\":13624:13625   */\n      0x00\n        /* \"#utility.yul\":13613:13622   */\n      dup4\n        /* \"#utility.yul\":13609:13626   */\n      add\n        /* \"#utility.yul\":13602:13649   */\n      mstore\n        /* \"#utility.yul\":13666:13797   */\n      tag_476\n        /* \"#utility.yul\":13792:13796   */\n      dup2\n        /* \"#utility.yul\":13666:13797   */\n      tag_332\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":13658:13797   */\n      swap1\n      pop\n        /* \"#utility.yul\":13385:13804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13810:14036   */\n    tag_333:\n        /* \"#utility.yul\":13950:13984   */\n      0x42617463685472616e73666572206661696c65643a204d69736d617463686564\n        /* \"#utility.yul\":13946:13947   */\n      0x00\n        /* \"#utility.yul\":13938:13944   */\n      dup3\n        /* \"#utility.yul\":13934:13948   */\n      add\n        /* \"#utility.yul\":13927:13985   */\n      mstore\n        /* \"#utility.yul\":14019:14028   */\n      0x2061727261797300000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14014:14016   */\n      0x20\n        /* \"#utility.yul\":14006:14012   */\n      dup3\n        /* \"#utility.yul\":14002:14017   */\n      add\n        /* \"#utility.yul\":13995:14029   */\n      mstore\n        /* \"#utility.yul\":13810:14036   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14042:14408   */\n    tag_334:\n        /* \"#utility.yul\":14184:14187   */\n      0x00\n        /* \"#utility.yul\":14205:14272   */\n      tag_479\n        /* \"#utility.yul\":14269:14271   */\n      0x27\n        /* \"#utility.yul\":14264:14267   */\n      dup4\n        /* \"#utility.yul\":14205:14272   */\n      tag_297\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":14198:14272   */\n      swap2\n      pop\n        /* \"#utility.yul\":14281:14374   */\n      tag_480\n        /* \"#utility.yul\":14370:14373   */\n      dup3\n        /* \"#utility.yul\":14281:14374   */\n      tag_333\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":14399:14401   */\n      0x40\n        /* \"#utility.yul\":14394:14397   */\n      dup3\n        /* \"#utility.yul\":14390:14402   */\n      add\n        /* \"#utility.yul\":14383:14402   */\n      swap1\n      pop\n        /* \"#utility.yul\":14042:14408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14414:14833   */\n    tag_180:\n        /* \"#utility.yul\":14580:14584   */\n      0x00\n        /* \"#utility.yul\":14618:14620   */\n      0x20\n        /* \"#utility.yul\":14607:14616   */\n      dup3\n        /* \"#utility.yul\":14603:14621   */\n      add\n        /* \"#utility.yul\":14595:14621   */\n      swap1\n      pop\n        /* \"#utility.yul\":14667:14676   */\n      dup2\n        /* \"#utility.yul\":14661:14665   */\n      dup2\n        /* \"#utility.yul\":14657:14677   */\n      sub\n        /* \"#utility.yul\":14653:14654   */\n      0x00\n        /* \"#utility.yul\":14642:14651   */\n      dup4\n        /* \"#utility.yul\":14638:14655   */\n      add\n        /* \"#utility.yul\":14631:14678   */\n      mstore\n        /* \"#utility.yul\":14695:14826   */\n      tag_482\n        /* \"#utility.yul\":14821:14825   */\n      dup2\n        /* \"#utility.yul\":14695:14826   */\n      tag_334\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":14687:14826   */\n      swap1\n      pop\n        /* \"#utility.yul\":14414:14833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14839:15019   */\n    tag_186:\n        /* \"#utility.yul\":14887:14964   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14884:14885   */\n      0x00\n        /* \"#utility.yul\":14877:14965   */\n      mstore\n        /* \"#utility.yul\":14984:14988   */\n      0x32\n        /* \"#utility.yul\":14981:14982   */\n      0x04\n        /* \"#utility.yul\":14974:14989   */\n      mstore\n        /* \"#utility.yul\":15008:15012   */\n      0x24\n        /* \"#utility.yul\":15005:15006   */\n      0x00\n        /* \"#utility.yul\":14998:15013   */\n      revert\n        /* \"#utility.yul\":15025:15258   */\n    tag_335:\n        /* \"#utility.yul\":15165:15199   */\n      0x42617463685472616e73666572206661696c65643a20526563697069656e7420\n        /* \"#utility.yul\":15161:15162   */\n      0x00\n        /* \"#utility.yul\":15153:15159   */\n      dup3\n        /* \"#utility.yul\":15149:15163   */\n      add\n        /* \"#utility.yul\":15142:15200   */\n      mstore\n        /* \"#utility.yul\":15234:15250   */\n      0x697320626c61636b6c6973746564000000000000000000000000000000000000\n        /* \"#utility.yul\":15229:15231   */\n      0x20\n        /* \"#utility.yul\":15221:15227   */\n      dup3\n        /* \"#utility.yul\":15217:15232   */\n      add\n        /* \"#utility.yul\":15210:15251   */\n      mstore\n        /* \"#utility.yul\":15025:15258   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15264:15630   */\n    tag_336:\n        /* \"#utility.yul\":15406:15409   */\n      0x00\n        /* \"#utility.yul\":15427:15494   */\n      tag_486\n        /* \"#utility.yul\":15491:15493   */\n      0x2e\n        /* \"#utility.yul\":15486:15489   */\n      dup4\n        /* \"#utility.yul\":15427:15494   */\n      tag_297\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":15420:15494   */\n      swap2\n      pop\n        /* \"#utility.yul\":15503:15596   */\n      tag_487\n        /* \"#utility.yul\":15592:15595   */\n      dup3\n        /* \"#utility.yul\":15503:15596   */\n      tag_335\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":15621:15623   */\n      0x40\n        /* \"#utility.yul\":15616:15619   */\n      dup3\n        /* \"#utility.yul\":15612:15624   */\n      add\n        /* \"#utility.yul\":15605:15624   */\n      swap1\n      pop\n        /* \"#utility.yul\":15264:15630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15636:16055   */\n    tag_190:\n        /* \"#utility.yul\":15802:15806   */\n      0x00\n        /* \"#utility.yul\":15840:15842   */\n      0x20\n        /* \"#utility.yul\":15829:15838   */\n      dup3\n        /* \"#utility.yul\":15825:15843   */\n      add\n        /* \"#utility.yul\":15817:15843   */\n      swap1\n      pop\n        /* \"#utility.yul\":15889:15898   */\n      dup2\n        /* \"#utility.yul\":15883:15887   */\n      dup2\n        /* \"#utility.yul\":15879:15899   */\n      sub\n        /* \"#utility.yul\":15875:15876   */\n      0x00\n        /* \"#utility.yul\":15864:15873   */\n      dup4\n        /* \"#utility.yul\":15860:15877   */\n      add\n        /* \"#utility.yul\":15853:15900   */\n      mstore\n        /* \"#utility.yul\":15917:16048   */\n      tag_489\n        /* \"#utility.yul\":16043:16047   */\n      dup2\n        /* \"#utility.yul\":15917:16048   */\n      tag_336\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":15909:16048   */\n      swap1\n      pop\n        /* \"#utility.yul\":15636:16055   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16061:16227   */\n    tag_337:\n        /* \"#utility.yul\":16201:16219   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":16197:16198   */\n      0x00\n        /* \"#utility.yul\":16189:16195   */\n      dup3\n        /* \"#utility.yul\":16185:16199   */\n      add\n        /* \"#utility.yul\":16178:16220   */\n      mstore\n        /* \"#utility.yul\":16061:16227   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16233:16599   */\n    tag_338:\n        /* \"#utility.yul\":16375:16378   */\n      0x00\n        /* \"#utility.yul\":16396:16463   */\n      tag_492\n        /* \"#utility.yul\":16460:16462   */\n      0x10\n        /* \"#utility.yul\":16455:16458   */\n      dup4\n        /* \"#utility.yul\":16396:16463   */\n      tag_297\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":16389:16463   */\n      swap2\n      pop\n        /* \"#utility.yul\":16472:16565   */\n      tag_493\n        /* \"#utility.yul\":16561:16564   */\n      dup3\n        /* \"#utility.yul\":16472:16565   */\n      tag_337\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":16590:16592   */\n      0x20\n        /* \"#utility.yul\":16585:16588   */\n      dup3\n        /* \"#utility.yul\":16581:16593   */\n      add\n        /* \"#utility.yul\":16574:16593   */\n      swap1\n      pop\n        /* \"#utility.yul\":16233:16599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16605:17024   */\n    tag_239:\n        /* \"#utility.yul\":16771:16775   */\n      0x00\n        /* \"#utility.yul\":16809:16811   */\n      0x20\n        /* \"#utility.yul\":16798:16807   */\n      dup3\n        /* \"#utility.yul\":16794:16812   */\n      add\n        /* \"#utility.yul\":16786:16812   */\n      swap1\n      pop\n        /* \"#utility.yul\":16858:16867   */\n      dup2\n        /* \"#utility.yul\":16852:16856   */\n      dup2\n        /* \"#utility.yul\":16848:16868   */\n      sub\n        /* \"#utility.yul\":16844:16845   */\n      0x00\n        /* \"#utility.yul\":16833:16842   */\n      dup4\n        /* \"#utility.yul\":16829:16846   */\n      add\n        /* \"#utility.yul\":16822:16869   */\n      mstore\n        /* \"#utility.yul\":16886:17017   */\n      tag_495\n        /* \"#utility.yul\":17012:17016   */\n      dup2\n        /* \"#utility.yul\":16886:17017   */\n      tag_338\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":16878:17017   */\n      swap1\n      pop\n        /* \"#utility.yul\":16605:17024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17030:17472   */\n    tag_279:\n        /* \"#utility.yul\":17179:17183   */\n      0x00\n        /* \"#utility.yul\":17217:17219   */\n      0x60\n        /* \"#utility.yul\":17206:17215   */\n      dup3\n        /* \"#utility.yul\":17202:17220   */\n      add\n        /* \"#utility.yul\":17194:17220   */\n      swap1\n      pop\n        /* \"#utility.yul\":17230:17301   */\n      tag_497\n        /* \"#utility.yul\":17298:17299   */\n      0x00\n        /* \"#utility.yul\":17287:17296   */\n      dup4\n        /* \"#utility.yul\":17283:17300   */\n      add\n        /* \"#utility.yul\":17274:17280   */\n      dup7\n        /* \"#utility.yul\":17230:17301   */\n      tag_323\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":17311:17383   */\n      tag_498\n        /* \"#utility.yul\":17379:17381   */\n      0x20\n        /* \"#utility.yul\":17368:17377   */\n      dup4\n        /* \"#utility.yul\":17364:17382   */\n      add\n        /* \"#utility.yul\":17355:17361   */\n      dup6\n        /* \"#utility.yul\":17311:17383   */\n      tag_315\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":17393:17465   */\n      tag_499\n        /* \"#utility.yul\":17461:17463   */\n      0x40\n        /* \"#utility.yul\":17450:17459   */\n      dup4\n        /* \"#utility.yul\":17446:17464   */\n      add\n        /* \"#utility.yul\":17437:17443   */\n      dup5\n        /* \"#utility.yul\":17393:17465   */\n      tag_315\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":17030:17472   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17478:17648   */\n    tag_339:\n        /* \"#utility.yul\":17618:17640   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":17614:17615   */\n      0x00\n        /* \"#utility.yul\":17606:17612   */\n      dup3\n        /* \"#utility.yul\":17602:17616   */\n      add\n        /* \"#utility.yul\":17595:17641   */\n      mstore\n        /* \"#utility.yul\":17478:17648   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17654:18020   */\n    tag_340:\n        /* \"#utility.yul\":17796:17799   */\n      0x00\n        /* \"#utility.yul\":17817:17884   */\n      tag_502\n        /* \"#utility.yul\":17881:17883   */\n      0x14\n        /* \"#utility.yul\":17876:17879   */\n      dup4\n        /* \"#utility.yul\":17817:17884   */\n      tag_297\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":17810:17884   */\n      swap2\n      pop\n        /* \"#utility.yul\":17893:17986   */\n      tag_503\n        /* \"#utility.yul\":17982:17985   */\n      dup3\n        /* \"#utility.yul\":17893:17986   */\n      tag_339\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":18011:18013   */\n      0x20\n        /* \"#utility.yul\":18006:18009   */\n      dup3\n        /* \"#utility.yul\":18002:18014   */\n      add\n        /* \"#utility.yul\":17995:18014   */\n      swap1\n      pop\n        /* \"#utility.yul\":17654:18020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18026:18445   */\n    tag_285:\n        /* \"#utility.yul\":18192:18196   */\n      0x00\n        /* \"#utility.yul\":18230:18232   */\n      0x20\n        /* \"#utility.yul\":18219:18228   */\n      dup3\n        /* \"#utility.yul\":18215:18233   */\n      add\n        /* \"#utility.yul\":18207:18233   */\n      swap1\n      pop\n        /* \"#utility.yul\":18279:18288   */\n      dup2\n        /* \"#utility.yul\":18273:18277   */\n      dup2\n        /* \"#utility.yul\":18269:18289   */\n      sub\n        /* \"#utility.yul\":18265:18266   */\n      0x00\n        /* \"#utility.yul\":18254:18263   */\n      dup4\n        /* \"#utility.yul\":18250:18267   */\n      add\n        /* \"#utility.yul\":18243:18290   */\n      mstore\n        /* \"#utility.yul\":18307:18438   */\n      tag_505\n        /* \"#utility.yul\":18433:18437   */\n      dup2\n        /* \"#utility.yul\":18307:18438   */\n      tag_340\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":18299:18438   */\n      swap1\n      pop\n        /* \"#utility.yul\":18026:18445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18451:18631   */\n    tag_341:\n        /* \"#utility.yul\":18499:18576   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18496:18497   */\n      0x00\n        /* \"#utility.yul\":18489:18577   */\n      mstore\n        /* \"#utility.yul\":18596:18600   */\n      0x11\n        /* \"#utility.yul\":18593:18594   */\n      0x04\n        /* \"#utility.yul\":18586:18601   */\n      mstore\n        /* \"#utility.yul\":18620:18624   */\n      0x24\n        /* \"#utility.yul\":18617:18618   */\n      0x00\n        /* \"#utility.yul\":18610:18625   */\n      revert\n        /* \"#utility.yul\":18637:18828   */\n    tag_289:\n        /* \"#utility.yul\":18677:18680   */\n      0x00\n        /* \"#utility.yul\":18696:18716   */\n      tag_508\n        /* \"#utility.yul\":18714:18715   */\n      dup3\n        /* \"#utility.yul\":18696:18716   */\n      tag_308\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":18691:18716   */\n      swap2\n      pop\n        /* \"#utility.yul\":18730:18750   */\n      tag_509\n        /* \"#utility.yul\":18748:18749   */\n      dup4\n        /* \"#utility.yul\":18730:18750   */\n      tag_308\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":18725:18750   */\n      swap3\n      pop\n        /* \"#utility.yul\":18773:18774   */\n      dup3\n        /* \"#utility.yul\":18770:18771   */\n      dup3\n        /* \"#utility.yul\":18766:18775   */\n      add\n        /* \"#utility.yul\":18759:18775   */\n      swap1\n      pop\n        /* \"#utility.yul\":18794:18797   */\n      dup1\n        /* \"#utility.yul\":18791:18792   */\n      dup3\n        /* \"#utility.yul\":18788:18798   */\n      gt\n        /* \"#utility.yul\":18785:18821   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":18801:18819   */\n      tag_511\n      tag_341\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":18785:18821   */\n    tag_510:\n        /* \"#utility.yul\":18637:18828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dff3612085fad06aae850ba16757fa5114b99f91355d7bcd994cb6e0b282843064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_747": {
									"entryPoint": 481,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 283,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 617,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1427,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2620,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2063,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1213,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10345:8",
										"nodeType": "YulBlock",
										"src": "0:10345:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "423:28:8",
													"nodeType": "YulBlock",
													"src": "423:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:8",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:8",
																		"nodeType": "YulLiteral",
																		"src": "443:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nativeSrc": "433:12:8",
																"nodeType": "YulFunctionCall",
																"src": "433:12:8"
															},
															"nativeSrc": "433:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:8"
											},
											{
												"body": {
													"nativeSrc": "546:28:8",
													"nodeType": "YulBlock",
													"src": "546:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:8",
																		"nodeType": "YulLiteral",
																		"src": "563:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:8",
																		"nodeType": "YulLiteral",
																		"src": "566:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:8"
																},
																"nativeSrc": "556:12:8",
																"nodeType": "YulFunctionCall",
																"src": "556:12:8"
															},
															"nativeSrc": "556:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:8"
											},
											{
												"body": {
													"nativeSrc": "628:54:8",
													"nodeType": "YulBlock",
													"src": "628:54:8",
													"statements": [
														{
															"nativeSrc": "638:38:8",
															"nodeType": "YulAssignment",
															"src": "638:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:8",
																				"nodeType": "YulLiteral",
																				"src": "663:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:8"
																		},
																		"nativeSrc": "652:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:8",
																				"nodeType": "YulLiteral",
																				"src": "672:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:8"
																		},
																		"nativeSrc": "668:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:8"
																},
																"nativeSrc": "648:28:8",
																"nodeType": "YulFunctionCall",
																"src": "648:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:8",
														"nodeType": "YulTypedName",
														"src": "611:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:8",
														"nodeType": "YulTypedName",
														"src": "621:6:8",
														"type": ""
													}
												],
												"src": "580:102:8"
											},
											{
												"body": {
													"nativeSrc": "716:152:8",
													"nodeType": "YulBlock",
													"src": "716:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:8",
																		"nodeType": "YulLiteral",
																		"src": "733:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:8",
																		"nodeType": "YulLiteral",
																		"src": "736:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:8"
																},
																"nativeSrc": "726:88:8",
																"nodeType": "YulFunctionCall",
																"src": "726:88:8"
															},
															"nativeSrc": "726:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:8",
																		"nodeType": "YulLiteral",
																		"src": "830:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:8",
																		"nodeType": "YulLiteral",
																		"src": "833:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																},
																"nativeSrc": "823:15:8",
																"nodeType": "YulFunctionCall",
																"src": "823:15:8"
															},
															"nativeSrc": "823:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:8",
																		"nodeType": "YulLiteral",
																		"src": "854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:8",
																		"nodeType": "YulLiteral",
																		"src": "857:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:8"
																},
																"nativeSrc": "847:15:8",
																"nodeType": "YulFunctionCall",
																"src": "847:15:8"
															},
															"nativeSrc": "847:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:8"
											},
											{
												"body": {
													"nativeSrc": "917:238:8",
													"nodeType": "YulBlock",
													"src": "917:238:8",
													"statements": [
														{
															"nativeSrc": "927:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:8"
																		},
																		"nativeSrc": "957:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:8"
																},
																"nativeSrc": "945:40:8",
																"nodeType": "YulFunctionCall",
																"src": "945:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:8",
																	"nodeType": "YulTypedName",
																	"src": "931:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:8",
																"nodeType": "YulBlock",
																"src": "1096:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:8"
																			},
																			"nativeSrc": "1098:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:8"
																		},
																		"nativeSrc": "1098:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:8",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:8"
																		},
																		"nativeSrc": "1036:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:8"
																		},
																		"nativeSrc": "1072:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:8"
																},
																"nativeSrc": "1033:62:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:8"
															},
															"nativeSrc": "1030:88:8",
															"nodeType": "YulIf",
															"src": "1030:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:8"
																},
																"nativeSrc": "1127:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:8"
															},
															"nativeSrc": "1127:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:8",
														"nodeType": "YulTypedName",
														"src": "903:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:8",
														"nodeType": "YulTypedName",
														"src": "911:4:8",
														"type": ""
													}
												],
												"src": "874:281:8"
											},
											{
												"body": {
													"nativeSrc": "1202:88:8",
													"nodeType": "YulBlock",
													"src": "1202:88:8",
													"statements": [
														{
															"nativeSrc": "1212:30:8",
															"nodeType": "YulAssignment",
															"src": "1212:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:8"
																},
																"nativeSrc": "1222:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:8"
																},
																"nativeSrc": "1251:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:8"
															},
															"nativeSrc": "1251:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:8",
														"nodeType": "YulTypedName",
														"src": "1186:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:8",
														"nodeType": "YulTypedName",
														"src": "1195:6:8",
														"type": ""
													}
												],
												"src": "1161:129:8"
											},
											{
												"body": {
													"nativeSrc": "1363:241:8",
													"nodeType": "YulBlock",
													"src": "1363:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:8",
																"nodeType": "YulBlock",
																"src": "1468:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:8"
																			},
																			"nativeSrc": "1470:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:8"
																		},
																		"nativeSrc": "1470:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:8"
																},
																"nativeSrc": "1437:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:8"
															},
															"nativeSrc": "1434:56:8",
															"nodeType": "YulIf",
															"src": "1434:56:8"
														},
														{
															"nativeSrc": "1500:37:8",
															"nodeType": "YulAssignment",
															"src": "1500:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:8"
																},
																"nativeSrc": "1508:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:8"
																}
															]
														},
														{
															"nativeSrc": "1574:23:8",
															"nodeType": "YulAssignment",
															"src": "1574:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:8"
																},
																"nativeSrc": "1582:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:8",
														"nodeType": "YulTypedName",
														"src": "1347:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:8",
														"nodeType": "YulTypedName",
														"src": "1358:4:8",
														"type": ""
													}
												],
												"src": "1296:308:8"
											},
											{
												"body": {
													"nativeSrc": "1672:186:8",
													"nodeType": "YulBlock",
													"src": "1672:186:8",
													"statements": [
														{
															"nativeSrc": "1683:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1683:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1692:1:8",
																"nodeType": "YulLiteral",
																"src": "1692:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1687:1:8",
																	"nodeType": "YulTypedName",
																	"src": "1687:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1752:63:8",
																"nodeType": "YulBlock",
																"src": "1752:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1777:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1777:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1782:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "1782:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1773:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1773:3:8"
																					},
																					"nativeSrc": "1773:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1773:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1796:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1796:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1801:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "1801:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1792:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:8"
																							},
																							"nativeSrc": "1792:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1786:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1786:5:8"
																					},
																					"nativeSrc": "1786:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1786:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1766:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1766:6:8"
																			},
																			"nativeSrc": "1766:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1766:39:8"
																		},
																		"nativeSrc": "1766:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1766:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1713:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "1713:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1716:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1716:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1710:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1710:2:8"
																},
																"nativeSrc": "1710:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1710:13:8"
															},
															"nativeSrc": "1702:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1724:19:8",
																"nodeType": "YulBlock",
																"src": "1724:19:8",
																"statements": [
																	{
																		"nativeSrc": "1726:15:8",
																		"nodeType": "YulAssignment",
																		"src": "1726:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1735:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "1735:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1738:2:8",
																					"nodeType": "YulLiteral",
																					"src": "1738:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1731:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1731:3:8"
																			},
																			"nativeSrc": "1731:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1731:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1726:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1726:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1706:3:8",
																"nodeType": "YulBlock",
																"src": "1706:3:8",
																"statements": []
															},
															"src": "1702:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1835:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1835:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1840:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1840:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1831:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1831:3:8"
																		},
																		"nativeSrc": "1831:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1831:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1849:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1849:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1824:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:8"
																},
																"nativeSrc": "1824:27:8",
																"nodeType": "YulFunctionCall",
																"src": "1824:27:8"
															},
															"nativeSrc": "1824:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "1824:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:248:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:8",
														"nodeType": "YulTypedName",
														"src": "1654:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:8",
														"nodeType": "YulTypedName",
														"src": "1659:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:8",
														"nodeType": "YulTypedName",
														"src": "1664:6:8",
														"type": ""
													}
												],
												"src": "1610:248:8"
											},
											{
												"body": {
													"nativeSrc": "1959:339:8",
													"nodeType": "YulBlock",
													"src": "1959:339:8",
													"statements": [
														{
															"nativeSrc": "1969:75:8",
															"nodeType": "YulAssignment",
															"src": "1969:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2036:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2036:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1994:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "1994:41:8"
																		},
																		"nativeSrc": "1994:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1994:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1978:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "1978:15:8"
																},
																"nativeSrc": "1978:66:8",
																"nodeType": "YulFunctionCall",
																"src": "1978:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1969:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1969:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2060:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2060:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2067:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2067:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2053:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:8"
																},
																"nativeSrc": "2053:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2053:21:8"
															},
															"nativeSrc": "2053:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "2053:21:8"
														},
														{
															"nativeSrc": "2083:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2083:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2098:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2105:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2094:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:8"
																},
																"nativeSrc": "2094:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2094:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2087:3:8",
																	"nodeType": "YulTypedName",
																	"src": "2087:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2148:83:8",
																"nodeType": "YulBlock",
																"src": "2148:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2150:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2150:77:8"
																			},
																			"nativeSrc": "2150:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2150:79:8"
																		},
																		"nativeSrc": "2150:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2150:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2129:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2129:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2134:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2134:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2125:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2125:3:8"
																		},
																		"nativeSrc": "2125:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2143:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2143:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2122:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2122:2:8"
																},
																"nativeSrc": "2122:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2122:25:8"
															},
															"nativeSrc": "2119:112:8",
															"nodeType": "YulIf",
															"src": "2119:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2275:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2275:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2280:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2280:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2285:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2285:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2240:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "2240:34:8"
																},
																"nativeSrc": "2240:52:8",
																"nodeType": "YulFunctionCall",
																"src": "2240:52:8"
															},
															"nativeSrc": "2240:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "2240:52:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1864:434:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1932:3:8",
														"nodeType": "YulTypedName",
														"src": "1932:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1937:6:8",
														"nodeType": "YulTypedName",
														"src": "1937:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1945:3:8",
														"nodeType": "YulTypedName",
														"src": "1945:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1953:5:8",
														"nodeType": "YulTypedName",
														"src": "1953:5:8",
														"type": ""
													}
												],
												"src": "1864:434:8"
											},
											{
												"body": {
													"nativeSrc": "2391:282:8",
													"nodeType": "YulBlock",
													"src": "2391:282:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2440:83:8",
																"nodeType": "YulBlock",
																"src": "2440:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2442:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2442:77:8"
																			},
																			"nativeSrc": "2442:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2442:79:8"
																		},
																		"nativeSrc": "2442:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2442:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2419:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2419:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2427:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2427:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2415:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2415:3:8"
																				},
																				"nativeSrc": "2415:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2415:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2434:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2434:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2411:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:8"
																		},
																		"nativeSrc": "2411:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2411:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2404:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:8"
																},
																"nativeSrc": "2404:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2404:35:8"
															},
															"nativeSrc": "2401:122:8",
															"nodeType": "YulIf",
															"src": "2401:122:8"
														},
														{
															"nativeSrc": "2532:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2532:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2552:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2552:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2546:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2546:5:8"
																},
																"nativeSrc": "2546:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2546:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2536:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2536:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2568:99:8",
															"nodeType": "YulAssignment",
															"src": "2568:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2640:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2648:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2648:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2636:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2636:3:8"
																		},
																		"nativeSrc": "2636:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2636:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2655:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2663:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2663:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2577:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "2577:58:8"
																},
																"nativeSrc": "2577:90:8",
																"nodeType": "YulFunctionCall",
																"src": "2577:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2568:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2568:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2318:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2369:6:8",
														"nodeType": "YulTypedName",
														"src": "2369:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2377:3:8",
														"nodeType": "YulTypedName",
														"src": "2377:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2385:5:8",
														"nodeType": "YulTypedName",
														"src": "2385:5:8",
														"type": ""
													}
												],
												"src": "2318:355:8"
											},
											{
												"body": {
													"nativeSrc": "2793:739:8",
													"nodeType": "YulBlock",
													"src": "2793:739:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2839:83:8",
																"nodeType": "YulBlock",
																"src": "2839:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2841:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2841:77:8"
																			},
																			"nativeSrc": "2841:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2841:79:8"
																		},
																		"nativeSrc": "2841:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2814:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2814:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2823:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2823:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2810:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2810:3:8"
																		},
																		"nativeSrc": "2810:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2810:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2835:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2835:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2806:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:8"
																},
																"nativeSrc": "2806:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2806:32:8"
															},
															"nativeSrc": "2803:119:8",
															"nodeType": "YulIf",
															"src": "2803:119:8"
														},
														{
															"nativeSrc": "2932:291:8",
															"nodeType": "YulBlock",
															"src": "2932:291:8",
															"statements": [
																{
																	"nativeSrc": "2947:38:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2947:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2971:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2971:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2982:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2982:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2967:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2967:3:8"
																				},
																				"nativeSrc": "2967:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2967:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2961:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2961:5:8"
																		},
																		"nativeSrc": "2961:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2961:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2951:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2951:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3032:83:8",
																		"nodeType": "YulBlock",
																		"src": "3032:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3034:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "3034:77:8"
																					},
																					"nativeSrc": "3034:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3034:79:8"
																				},
																				"nativeSrc": "3034:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3034:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3004:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3004:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3012:18:8",
																				"nodeType": "YulLiteral",
																				"src": "3012:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3001:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3001:2:8"
																		},
																		"nativeSrc": "3001:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3001:30:8"
																	},
																	"nativeSrc": "2998:117:8",
																	"nodeType": "YulIf",
																	"src": "2998:117:8"
																},
																{
																	"nativeSrc": "3129:84:8",
																	"nodeType": "YulAssignment",
																	"src": "3129:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3185:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3185:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3196:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3196:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3181:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3181:3:8"
																				},
																				"nativeSrc": "3181:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3181:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3205:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3205:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3139:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "3139:41:8"
																		},
																		"nativeSrc": "3139:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3139:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3129:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3129:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3233:292:8",
															"nodeType": "YulBlock",
															"src": "3233:292:8",
															"statements": [
																{
																	"nativeSrc": "3248:39:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3248:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3272:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3272:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3283:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3283:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3268:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3268:3:8"
																				},
																				"nativeSrc": "3268:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3268:18:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3262:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3262:5:8"
																		},
																		"nativeSrc": "3262:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3262:25:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3252:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3252:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3334:83:8",
																		"nodeType": "YulBlock",
																		"src": "3334:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3336:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "3336:77:8"
																					},
																					"nativeSrc": "3336:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3336:79:8"
																				},
																				"nativeSrc": "3336:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3336:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3306:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3306:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3314:18:8",
																				"nodeType": "YulLiteral",
																				"src": "3314:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3303:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3303:2:8"
																		},
																		"nativeSrc": "3303:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:30:8"
																	},
																	"nativeSrc": "3300:117:8",
																	"nodeType": "YulIf",
																	"src": "3300:117:8"
																},
																{
																	"nativeSrc": "3431:84:8",
																	"nodeType": "YulAssignment",
																	"src": "3431:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3487:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3487:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3498:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3498:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3483:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3483:3:8"
																				},
																				"nativeSrc": "3483:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3483:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3507:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3507:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3441:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "3441:41:8"
																		},
																		"nativeSrc": "3441:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3431:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3431:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2679:853:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2755:9:8",
														"nodeType": "YulTypedName",
														"src": "2755:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2766:7:8",
														"nodeType": "YulTypedName",
														"src": "2766:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2778:6:8",
														"nodeType": "YulTypedName",
														"src": "2778:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2786:6:8",
														"nodeType": "YulTypedName",
														"src": "2786:6:8",
														"type": ""
													}
												],
												"src": "2679:853:8"
											},
											{
												"body": {
													"nativeSrc": "3597:40:8",
													"nodeType": "YulBlock",
													"src": "3597:40:8",
													"statements": [
														{
															"nativeSrc": "3608:22:8",
															"nodeType": "YulAssignment",
															"src": "3608:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3624:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3624:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3618:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3618:5:8"
																},
																"nativeSrc": "3618:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3618:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3608:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3608:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3538:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3580:5:8",
														"nodeType": "YulTypedName",
														"src": "3580:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3590:6:8",
														"nodeType": "YulTypedName",
														"src": "3590:6:8",
														"type": ""
													}
												],
												"src": "3538:99:8"
											},
											{
												"body": {
													"nativeSrc": "3671:152:8",
													"nodeType": "YulBlock",
													"src": "3671:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3688:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3688:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3691:77:8",
																		"nodeType": "YulLiteral",
																		"src": "3691:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3681:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3681:6:8"
																},
																"nativeSrc": "3681:88:8",
																"nodeType": "YulFunctionCall",
																"src": "3681:88:8"
															},
															"nativeSrc": "3681:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "3681:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3785:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3785:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3788:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3788:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3778:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:8"
																},
																"nativeSrc": "3778:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3778:15:8"
															},
															"nativeSrc": "3778:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3778:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3809:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3809:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3812:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3812:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3802:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3802:6:8"
																},
																"nativeSrc": "3802:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3802:15:8"
															},
															"nativeSrc": "3802:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3802:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3643:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3643:180:8"
											},
											{
												"body": {
													"nativeSrc": "3880:269:8",
													"nodeType": "YulBlock",
													"src": "3880:269:8",
													"statements": [
														{
															"nativeSrc": "3890:22:8",
															"nodeType": "YulAssignment",
															"src": "3890:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3904:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3904:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3910:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3910:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3900:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:8"
																},
																"nativeSrc": "3900:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3900:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3890:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3890:6:8"
																}
															]
														},
														{
															"nativeSrc": "3921:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3921:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3951:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3951:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3957:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3957:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3947:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3947:3:8"
																},
																"nativeSrc": "3947:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3947:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3925:18:8",
																	"nodeType": "YulTypedName",
																	"src": "3925:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3998:51:8",
																"nodeType": "YulBlock",
																"src": "3998:51:8",
																"statements": [
																	{
																		"nativeSrc": "4012:27:8",
																		"nodeType": "YulAssignment",
																		"src": "4012:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4026:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4026:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4034:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4034:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4022:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4022:3:8"
																			},
																			"nativeSrc": "4022:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4022:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4012:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4012:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3978:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "3978:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3971:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:8"
																},
																"nativeSrc": "3971:26:8",
																"nodeType": "YulFunctionCall",
																"src": "3971:26:8"
															},
															"nativeSrc": "3968:81:8",
															"nodeType": "YulIf",
															"src": "3968:81:8"
														},
														{
															"body": {
																"nativeSrc": "4101:42:8",
																"nodeType": "YulBlock",
																"src": "4101:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4115:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4115:16:8"
																			},
																			"nativeSrc": "4115:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4115:18:8"
																		},
																		"nativeSrc": "4115:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4115:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4065:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4065:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4088:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4088:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4096:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4096:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4085:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4085:2:8"
																		},
																		"nativeSrc": "4085:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4085:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4062:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4062:2:8"
																},
																"nativeSrc": "4062:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4062:38:8"
															},
															"nativeSrc": "4059:84:8",
															"nodeType": "YulIf",
															"src": "4059:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3829:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3864:4:8",
														"nodeType": "YulTypedName",
														"src": "3864:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3873:6:8",
														"nodeType": "YulTypedName",
														"src": "3873:6:8",
														"type": ""
													}
												],
												"src": "3829:320:8"
											},
											{
												"body": {
													"nativeSrc": "4209:87:8",
													"nodeType": "YulBlock",
													"src": "4209:87:8",
													"statements": [
														{
															"nativeSrc": "4219:11:8",
															"nodeType": "YulAssignment",
															"src": "4219:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "4227:3:8",
																"nodeType": "YulIdentifier",
																"src": "4227:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4219:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4219:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4247:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4247:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4250:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4250:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4240:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4240:6:8"
																},
																"nativeSrc": "4240:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4240:14:8"
															},
															"nativeSrc": "4240:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "4240:14:8"
														},
														{
															"nativeSrc": "4263:26:8",
															"nodeType": "YulAssignment",
															"src": "4263:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4281:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4281:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4284:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4284:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4271:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4271:9:8"
																},
																"nativeSrc": "4271:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4271:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4263:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4263:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4155:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4196:3:8",
														"nodeType": "YulTypedName",
														"src": "4196:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4204:4:8",
														"nodeType": "YulTypedName",
														"src": "4204:4:8",
														"type": ""
													}
												],
												"src": "4155:141:8"
											},
											{
												"body": {
													"nativeSrc": "4346:49:8",
													"nodeType": "YulBlock",
													"src": "4346:49:8",
													"statements": [
														{
															"nativeSrc": "4356:33:8",
															"nodeType": "YulAssignment",
															"src": "4356:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4374:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4374:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4381:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4381:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4370:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4370:3:8"
																		},
																		"nativeSrc": "4370:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4386:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4386:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4366:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4366:3:8"
																},
																"nativeSrc": "4366:23:8",
																"nodeType": "YulFunctionCall",
																"src": "4366:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4356:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4302:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4329:5:8",
														"nodeType": "YulTypedName",
														"src": "4329:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4339:6:8",
														"nodeType": "YulTypedName",
														"src": "4339:6:8",
														"type": ""
													}
												],
												"src": "4302:93:8"
											},
											{
												"body": {
													"nativeSrc": "4454:54:8",
													"nodeType": "YulBlock",
													"src": "4454:54:8",
													"statements": [
														{
															"nativeSrc": "4464:37:8",
															"nodeType": "YulAssignment",
															"src": "4464:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4489:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4489:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4495:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4495:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4485:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:8"
																},
																"nativeSrc": "4485:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4485:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4464:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4464:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4401:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4429:4:8",
														"nodeType": "YulTypedName",
														"src": "4429:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4435:5:8",
														"nodeType": "YulTypedName",
														"src": "4435:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4445:8:8",
														"nodeType": "YulTypedName",
														"src": "4445:8:8",
														"type": ""
													}
												],
												"src": "4401:107:8"
											},
											{
												"body": {
													"nativeSrc": "4590:317:8",
													"nodeType": "YulBlock",
													"src": "4590:317:8",
													"statements": [
														{
															"nativeSrc": "4600:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4600:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4621:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "4621:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4633:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4633:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4617:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4617:3:8"
																},
																"nativeSrc": "4617:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4617:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4604:9:8",
																	"nodeType": "YulTypedName",
																	"src": "4604:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4644:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4644:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4675:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:66:8",
																		"nodeType": "YulLiteral",
																		"src": "4686:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4656:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4656:18:8"
																},
																"nativeSrc": "4656:97:8",
																"nodeType": "YulFunctionCall",
																"src": "4656:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4648:4:8",
																	"nodeType": "YulTypedName",
																	"src": "4648:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4762:51:8",
															"nodeType": "YulAssignment",
															"src": "4762:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4793:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4793:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4804:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "4804:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4774:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4774:18:8"
																},
																"nativeSrc": "4774:39:8",
																"nodeType": "YulFunctionCall",
																"src": "4774:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4762:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4762:8:8"
																}
															]
														},
														{
															"nativeSrc": "4822:30:8",
															"nodeType": "YulAssignment",
															"src": "4822:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4835:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4835:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4846:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4846:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4842:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4842:3:8"
																		},
																		"nativeSrc": "4842:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4842:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4831:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4831:3:8"
																},
																"nativeSrc": "4831:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4831:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4822:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4822:5:8"
																}
															]
														},
														{
															"nativeSrc": "4861:40:8",
															"nodeType": "YulAssignment",
															"src": "4861:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4874:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4874:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4885:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "4885:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4895:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4895:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4881:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4881:3:8"
																		},
																		"nativeSrc": "4881:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4881:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4871:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4871:2:8"
																},
																"nativeSrc": "4871:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4871:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4861:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4514:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4551:5:8",
														"nodeType": "YulTypedName",
														"src": "4551:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4558:10:8",
														"nodeType": "YulTypedName",
														"src": "4558:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4570:8:8",
														"nodeType": "YulTypedName",
														"src": "4570:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4583:6:8",
														"nodeType": "YulTypedName",
														"src": "4583:6:8",
														"type": ""
													}
												],
												"src": "4514:393:8"
											},
											{
												"body": {
													"nativeSrc": "4958:32:8",
													"nodeType": "YulBlock",
													"src": "4958:32:8",
													"statements": [
														{
															"nativeSrc": "4968:16:8",
															"nodeType": "YulAssignment",
															"src": "4968:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "4979:5:8",
																"nodeType": "YulIdentifier",
																"src": "4979:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4968:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4968:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4913:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4940:5:8",
														"nodeType": "YulTypedName",
														"src": "4940:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4950:7:8",
														"nodeType": "YulTypedName",
														"src": "4950:7:8",
														"type": ""
													}
												],
												"src": "4913:77:8"
											},
											{
												"body": {
													"nativeSrc": "5028:28:8",
													"nodeType": "YulBlock",
													"src": "5028:28:8",
													"statements": [
														{
															"nativeSrc": "5038:12:8",
															"nodeType": "YulAssignment",
															"src": "5038:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "5045:5:8",
																"nodeType": "YulIdentifier",
																"src": "5045:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5038:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5038:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4996:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5014:5:8",
														"nodeType": "YulTypedName",
														"src": "5014:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5024:3:8",
														"nodeType": "YulTypedName",
														"src": "5024:3:8",
														"type": ""
													}
												],
												"src": "4996:60:8"
											},
											{
												"body": {
													"nativeSrc": "5122:82:8",
													"nodeType": "YulBlock",
													"src": "5122:82:8",
													"statements": [
														{
															"nativeSrc": "5132:66:8",
															"nodeType": "YulAssignment",
															"src": "5132:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5190:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5190:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5172:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "5172:17:8"
																				},
																				"nativeSrc": "5172:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5172:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5163:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "5163:8:8"
																		},
																		"nativeSrc": "5163:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5163:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5145:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5145:17:8"
																},
																"nativeSrc": "5145:53:8",
																"nodeType": "YulFunctionCall",
																"src": "5145:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5132:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5132:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5062:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5102:5:8",
														"nodeType": "YulTypedName",
														"src": "5102:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5112:9:8",
														"nodeType": "YulTypedName",
														"src": "5112:9:8",
														"type": ""
													}
												],
												"src": "5062:142:8"
											},
											{
												"body": {
													"nativeSrc": "5257:28:8",
													"nodeType": "YulBlock",
													"src": "5257:28:8",
													"statements": [
														{
															"nativeSrc": "5267:12:8",
															"nodeType": "YulAssignment",
															"src": "5267:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "5274:5:8",
																"nodeType": "YulIdentifier",
																"src": "5274:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5267:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5210:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5243:5:8",
														"nodeType": "YulTypedName",
														"src": "5243:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5253:3:8",
														"nodeType": "YulTypedName",
														"src": "5253:3:8",
														"type": ""
													}
												],
												"src": "5210:75:8"
											},
											{
												"body": {
													"nativeSrc": "5367:193:8",
													"nodeType": "YulBlock",
													"src": "5367:193:8",
													"statements": [
														{
															"nativeSrc": "5377:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5377:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5432:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "5432:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5401:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5401:30:8"
																},
																"nativeSrc": "5401:39:8",
																"nodeType": "YulFunctionCall",
																"src": "5401:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5381:16:8",
																	"nodeType": "YulTypedName",
																	"src": "5381:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5456:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5456:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5496:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "5496:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5490:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5490:5:8"
																				},
																				"nativeSrc": "5490:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5490:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5503:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5503:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5535:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "5535:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5511:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "5511:23:8"
																				},
																				"nativeSrc": "5511:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5511:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5462:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "5462:27:8"
																		},
																		"nativeSrc": "5462:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5462:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5449:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5449:6:8"
																},
																"nativeSrc": "5449:105:8",
																"nodeType": "YulFunctionCall",
																"src": "5449:105:8"
															},
															"nativeSrc": "5449:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "5449:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5291:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5344:4:8",
														"nodeType": "YulTypedName",
														"src": "5344:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5350:6:8",
														"nodeType": "YulTypedName",
														"src": "5350:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5358:7:8",
														"nodeType": "YulTypedName",
														"src": "5358:7:8",
														"type": ""
													}
												],
												"src": "5291:269:8"
											},
											{
												"body": {
													"nativeSrc": "5615:24:8",
													"nodeType": "YulBlock",
													"src": "5615:24:8",
													"statements": [
														{
															"nativeSrc": "5625:8:8",
															"nodeType": "YulAssignment",
															"src": "5625:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5632:1:8",
																"nodeType": "YulLiteral",
																"src": "5632:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5625:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5566:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5611:3:8",
														"nodeType": "YulTypedName",
														"src": "5611:3:8",
														"type": ""
													}
												],
												"src": "5566:73:8"
											},
											{
												"body": {
													"nativeSrc": "5698:136:8",
													"nodeType": "YulBlock",
													"src": "5698:136:8",
													"statements": [
														{
															"nativeSrc": "5708:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5708:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5722:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5722:30:8"
																},
																"nativeSrc": "5722:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5722:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5712:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5712:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5807:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5807:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5813:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5813:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5821:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5821:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5763:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5763:43:8"
																},
																"nativeSrc": "5763:65:8",
																"nodeType": "YulFunctionCall",
																"src": "5763:65:8"
															},
															"nativeSrc": "5763:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "5763:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5645:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5684:4:8",
														"nodeType": "YulTypedName",
														"src": "5684:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5690:6:8",
														"nodeType": "YulTypedName",
														"src": "5690:6:8",
														"type": ""
													}
												],
												"src": "5645:189:8"
											},
											{
												"body": {
													"nativeSrc": "5890:136:8",
													"nodeType": "YulBlock",
													"src": "5890:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5957:63:8",
																"nodeType": "YulBlock",
																"src": "5957:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6001:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6001:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6008:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6008:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5971:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "5971:29:8"
																			},
																			"nativeSrc": "5971:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5971:39:8"
																		},
																		"nativeSrc": "5971:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5971:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5910:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5910:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5917:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5917:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5907:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5907:2:8"
																},
																"nativeSrc": "5907:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5907:14:8"
															},
															"nativeSrc": "5900:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5922:26:8",
																"nodeType": "YulBlock",
																"src": "5922:26:8",
																"statements": [
																	{
																		"nativeSrc": "5924:22:8",
																		"nodeType": "YulAssignment",
																		"src": "5924:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5937:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5937:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5944:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5944:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5933:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5933:3:8"
																			},
																			"nativeSrc": "5933:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5933:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5924:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5924:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5904:2:8",
																"nodeType": "YulBlock",
																"src": "5904:2:8",
																"statements": []
															},
															"src": "5900:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5840:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5878:5:8",
														"nodeType": "YulTypedName",
														"src": "5878:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5885:3:8",
														"nodeType": "YulTypedName",
														"src": "5885:3:8",
														"type": ""
													}
												],
												"src": "5840:186:8"
											},
											{
												"body": {
													"nativeSrc": "6111:464:8",
													"nodeType": "YulBlock",
													"src": "6111:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6137:431:8",
																"nodeType": "YulBlock",
																"src": "6137:431:8",
																"statements": [
																	{
																		"nativeSrc": "6151:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6151:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6199:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6199:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6167:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "6167:31:8"
																			},
																			"nativeSrc": "6167:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6167:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6155:8:8",
																				"nodeType": "YulTypedName",
																				"src": "6155:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6218:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6218:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6241:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "6241:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6269:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6269:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6251:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "6251:17:8"
																					},
																					"nativeSrc": "6251:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6251:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6237:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6237:3:8"
																			},
																			"nativeSrc": "6237:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6237:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6222:11:8",
																				"nodeType": "YulTypedName",
																				"src": "6222:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6438:27:8",
																			"nodeType": "YulBlock",
																			"src": "6438:27:8",
																			"statements": [
																				{
																					"nativeSrc": "6440:23:8",
																					"nodeType": "YulAssignment",
																					"src": "6440:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6455:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "6455:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6440:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "6440:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6422:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6422:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6434:2:8",
																					"nodeType": "YulLiteral",
																					"src": "6434:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6419:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "6419:2:8"
																			},
																			"nativeSrc": "6419:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6419:18:8"
																		},
																		"nativeSrc": "6416:49:8",
																		"nodeType": "YulIf",
																		"src": "6416:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6507:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "6507:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6524:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "6524:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6552:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6552:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6534:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "6534:17:8"
																							},
																							"nativeSrc": "6534:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6534:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6520:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6520:3:8"
																					},
																					"nativeSrc": "6520:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6520:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6478:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "6478:28:8"
																			},
																			"nativeSrc": "6478:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6478:80:8"
																		},
																		"nativeSrc": "6478:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6478:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6128:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6128:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6133:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6133:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6125:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6125:2:8"
																},
																"nativeSrc": "6125:11:8",
																"nodeType": "YulFunctionCall",
																"src": "6125:11:8"
															},
															"nativeSrc": "6122:446:8",
															"nodeType": "YulIf",
															"src": "6122:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6032:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6087:5:8",
														"nodeType": "YulTypedName",
														"src": "6087:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6094:3:8",
														"nodeType": "YulTypedName",
														"src": "6094:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6099:10:8",
														"nodeType": "YulTypedName",
														"src": "6099:10:8",
														"type": ""
													}
												],
												"src": "6032:543:8"
											},
											{
												"body": {
													"nativeSrc": "6644:54:8",
													"nodeType": "YulBlock",
													"src": "6644:54:8",
													"statements": [
														{
															"nativeSrc": "6654:37:8",
															"nodeType": "YulAssignment",
															"src": "6654:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6679:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6679:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6685:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6685:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6675:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6675:3:8"
																},
																"nativeSrc": "6675:16:8",
																"nodeType": "YulFunctionCall",
																"src": "6675:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6654:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "6654:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6581:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6619:4:8",
														"nodeType": "YulTypedName",
														"src": "6619:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6625:5:8",
														"nodeType": "YulTypedName",
														"src": "6625:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6635:8:8",
														"nodeType": "YulTypedName",
														"src": "6635:8:8",
														"type": ""
													}
												],
												"src": "6581:117:8"
											},
											{
												"body": {
													"nativeSrc": "6755:118:8",
													"nodeType": "YulBlock",
													"src": "6755:118:8",
													"statements": [
														{
															"nativeSrc": "6765:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6765:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6814:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6814:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6817:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6817:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6810:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6810:3:8"
																				},
																				"nativeSrc": "6810:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6810:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6829:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6829:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6825:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6825:3:8"
																				},
																				"nativeSrc": "6825:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6825:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6781:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "6781:28:8"
																		},
																		"nativeSrc": "6781:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6781:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6777:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6777:3:8"
																},
																"nativeSrc": "6777:56:8",
																"nodeType": "YulFunctionCall",
																"src": "6777:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6769:4:8",
																	"nodeType": "YulTypedName",
																	"src": "6769:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6842:25:8",
															"nodeType": "YulAssignment",
															"src": "6842:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6856:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6856:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6862:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6862:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6852:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6852:3:8"
																},
																"nativeSrc": "6852:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6852:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6842:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6704:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6732:4:8",
														"nodeType": "YulTypedName",
														"src": "6732:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6738:5:8",
														"nodeType": "YulTypedName",
														"src": "6738:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6748:6:8",
														"nodeType": "YulTypedName",
														"src": "6748:6:8",
														"type": ""
													}
												],
												"src": "6704:169:8"
											},
											{
												"body": {
													"nativeSrc": "6959:214:8",
													"nodeType": "YulBlock",
													"src": "6959:214:8",
													"statements": [
														{
															"nativeSrc": "7092:37:8",
															"nodeType": "YulAssignment",
															"src": "7092:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7119:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7119:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7125:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7125:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7100:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "7100:18:8"
																},
																"nativeSrc": "7100:29:8",
																"nodeType": "YulFunctionCall",
																"src": "7100:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7092:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7092:4:8"
																}
															]
														},
														{
															"nativeSrc": "7138:29:8",
															"nodeType": "YulAssignment",
															"src": "7138:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7149:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7149:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7159:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7159:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7162:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7162:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7155:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7155:3:8"
																		},
																		"nativeSrc": "7155:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7155:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7146:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7146:2:8"
																},
																"nativeSrc": "7146:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7146:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7138:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7138:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6878:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6940:4:8",
														"nodeType": "YulTypedName",
														"src": "6940:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6946:3:8",
														"nodeType": "YulTypedName",
														"src": "6946:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6954:4:8",
														"nodeType": "YulTypedName",
														"src": "6954:4:8",
														"type": ""
													}
												],
												"src": "6878:295:8"
											},
											{
												"body": {
													"nativeSrc": "7270:1303:8",
													"nodeType": "YulBlock",
													"src": "7270:1303:8",
													"statements": [
														{
															"nativeSrc": "7281:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7281:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7328:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7328:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7295:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "7295:32:8"
																},
																"nativeSrc": "7295:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7295:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7285:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7285:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7417:22:8",
																"nodeType": "YulBlock",
																"src": "7417:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7419:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7419:16:8"
																			},
																			"nativeSrc": "7419:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7419:18:8"
																		},
																		"nativeSrc": "7419:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7419:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7389:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7389:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7397:18:8",
																		"nodeType": "YulLiteral",
																		"src": "7397:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7386:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7386:2:8"
																},
																"nativeSrc": "7386:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7386:30:8"
															},
															"nativeSrc": "7383:56:8",
															"nodeType": "YulIf",
															"src": "7383:56:8"
														},
														{
															"nativeSrc": "7449:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7449:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7495:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7495:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7489:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7489:5:8"
																		},
																		"nativeSrc": "7489:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7489:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7463:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "7463:25:8"
																},
																"nativeSrc": "7463:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7463:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7453:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7453:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7594:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7594:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7600:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7600:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7608:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7608:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7548:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "7548:45:8"
																},
																"nativeSrc": "7548:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7548:67:8"
															},
															"nativeSrc": "7548:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "7548:67:8"
														},
														{
															"nativeSrc": "7625:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7625:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7642:1:8",
																"nodeType": "YulLiteral",
																"src": "7642:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7629:9:8",
																	"nodeType": "YulTypedName",
																	"src": "7629:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7653:17:8",
															"nodeType": "YulAssignment",
															"src": "7653:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "7666:4:8",
																"nodeType": "YulLiteral",
																"src": "7666:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7653:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7653:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7717:611:8",
																		"nodeType": "YulBlock",
																		"src": "7717:611:8",
																		"statements": [
																			{
																				"nativeSrc": "7731:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7731:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7750:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "7750:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7762:4:8",
																									"nodeType": "YulLiteral",
																									"src": "7762:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7758:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "7758:3:8"
																							},
																							"nativeSrc": "7758:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7758:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7746:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7746:3:8"
																					},
																					"nativeSrc": "7746:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7746:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7735:7:8",
																						"nodeType": "YulTypedName",
																						"src": "7735:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7782:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7782:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7828:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "7828:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7796:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "7796:31:8"
																					},
																					"nativeSrc": "7796:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7796:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7786:6:8",
																						"nodeType": "YulTypedName",
																						"src": "7786:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7846:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7846:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7855:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7855:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7850:1:8",
																						"nodeType": "YulTypedName",
																						"src": "7850:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7914:163:8",
																					"nodeType": "YulBlock",
																					"src": "7914:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7939:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "7939:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7957:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "7957:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7962:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "7962:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7953:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "7953:3:8"
																												},
																												"nativeSrc": "7953:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "7953:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7947:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "7947:5:8"
																										},
																										"nativeSrc": "7947:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "7947:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7932:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "7932:6:8"
																								},
																								"nativeSrc": "7932:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7932:42:8"
																							},
																							"nativeSrc": "7932:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "7932:42:8"
																						},
																						{
																							"nativeSrc": "7991:24:8",
																							"nodeType": "YulAssignment",
																							"src": "7991:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8005:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8005:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8013:1:8",
																										"nodeType": "YulLiteral",
																										"src": "8013:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8001:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8001:3:8"
																								},
																								"nativeSrc": "8001:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8001:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7991:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "7991:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8032:31:8",
																							"nodeType": "YulAssignment",
																							"src": "8032:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8049:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "8049:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8060:2:8",
																										"nodeType": "YulLiteral",
																										"src": "8060:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8045:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8045:3:8"
																								},
																								"nativeSrc": "8045:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8045:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8032:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "8032:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7880:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "7880:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7883:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "7883:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7877:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "7877:2:8"
																					},
																					"nativeSrc": "7877:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7877:14:8"
																				},
																				"nativeSrc": "7869:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7892:21:8",
																					"nodeType": "YulBlock",
																					"src": "7892:21:8",
																					"statements": [
																						{
																							"nativeSrc": "7894:17:8",
																							"nodeType": "YulAssignment",
																							"src": "7894:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7903:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "7903:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7906:4:8",
																										"nodeType": "YulLiteral",
																										"src": "7906:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7899:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7899:3:8"
																								},
																								"nativeSrc": "7899:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "7899:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7894:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "7894:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7873:3:8",
																					"nodeType": "YulBlock",
																					"src": "7873:3:8",
																					"statements": []
																				},
																				"src": "7869:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "8113:156:8",
																					"nodeType": "YulBlock",
																					"src": "8113:156:8",
																					"statements": [
																						{
																							"nativeSrc": "8131:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8131:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8158:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "8158:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8163:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8163:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8154:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8154:3:8"
																										},
																										"nativeSrc": "8154:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8154:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8148:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8148:5:8"
																								},
																								"nativeSrc": "8148:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8148:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8135:9:8",
																									"nodeType": "YulTypedName",
																									"src": "8135:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8198:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8198:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8225:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8225:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8240:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "8240:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8248:4:8",
																														"nodeType": "YulLiteral",
																														"src": "8248:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8236:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "8236:3:8"
																												},
																												"nativeSrc": "8236:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "8236:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8206:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "8206:18:8"
																										},
																										"nativeSrc": "8206:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8206:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8191:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8191:6:8"
																								},
																								"nativeSrc": "8191:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8191:64:8"
																							},
																							"nativeSrc": "8191:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8191:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8096:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "8096:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8105:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8105:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8093:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8093:2:8"
																					},
																					"nativeSrc": "8093:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8093:19:8"
																				},
																				"nativeSrc": "8090:179:8",
																				"nodeType": "YulIf",
																				"src": "8090:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8289:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8289:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8303:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "8303:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8311:1:8",
																											"nodeType": "YulLiteral",
																											"src": "8311:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8299:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "8299:3:8"
																									},
																									"nativeSrc": "8299:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "8299:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8315:1:8",
																									"nodeType": "YulLiteral",
																									"src": "8315:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8295:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "8295:3:8"
																							},
																							"nativeSrc": "8295:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8295:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8282:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8282:6:8"
																					},
																					"nativeSrc": "8282:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8282:36:8"
																				},
																				"nativeSrc": "8282:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8282:36:8"
																			}
																		]
																	},
																	"nativeSrc": "7710:618:8",
																	"nodeType": "YulCase",
																	"src": "7710:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7715:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7715:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8345:222:8",
																		"nodeType": "YulBlock",
																		"src": "8345:222:8",
																		"statements": [
																			{
																				"nativeSrc": "8359:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8359:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8372:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8372:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8363:5:8",
																						"nodeType": "YulTypedName",
																						"src": "8363:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8396:67:8",
																					"nodeType": "YulBlock",
																					"src": "8396:67:8",
																					"statements": [
																						{
																							"nativeSrc": "8414:35:8",
																							"nodeType": "YulAssignment",
																							"src": "8414:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8433:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "8433:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8438:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8438:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8429:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8429:3:8"
																										},
																										"nativeSrc": "8429:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8429:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8423:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8423:5:8"
																								},
																								"nativeSrc": "8423:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8423:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8414:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8414:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8389:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8389:6:8"
																				},
																				"nativeSrc": "8386:77:8",
																				"nodeType": "YulIf",
																				"src": "8386:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8483:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8483:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8542:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8542:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8549:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8549:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8489:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "8489:52:8"
																							},
																							"nativeSrc": "8489:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8489:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8476:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8476:6:8"
																					},
																					"nativeSrc": "8476:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8476:81:8"
																				},
																				"nativeSrc": "8476:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8476:81:8"
																			}
																		]
																	},
																	"nativeSrc": "8337:230:8",
																	"nodeType": "YulCase",
																	"src": "8337:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7690:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7690:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7698:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7698:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7687:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7687:2:8"
																},
																"nativeSrc": "7687:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7687:14:8"
															},
															"nativeSrc": "7680:887:8",
															"nodeType": "YulSwitch",
															"src": "7680:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7178:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7259:4:8",
														"nodeType": "YulTypedName",
														"src": "7259:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7265:3:8",
														"nodeType": "YulTypedName",
														"src": "7265:3:8",
														"type": ""
													}
												],
												"src": "7178:1395:8"
											},
											{
												"body": {
													"nativeSrc": "8624:81:8",
													"nodeType": "YulBlock",
													"src": "8624:81:8",
													"statements": [
														{
															"nativeSrc": "8634:65:8",
															"nodeType": "YulAssignment",
															"src": "8634:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8649:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8649:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8656:42:8",
																		"nodeType": "YulLiteral",
																		"src": "8656:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8645:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8645:3:8"
																},
																"nativeSrc": "8645:54:8",
																"nodeType": "YulFunctionCall",
																"src": "8645:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8634:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "8634:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8579:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8606:5:8",
														"nodeType": "YulTypedName",
														"src": "8606:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8616:7:8",
														"nodeType": "YulTypedName",
														"src": "8616:7:8",
														"type": ""
													}
												],
												"src": "8579:126:8"
											},
											{
												"body": {
													"nativeSrc": "8756:51:8",
													"nodeType": "YulBlock",
													"src": "8756:51:8",
													"statements": [
														{
															"nativeSrc": "8766:35:8",
															"nodeType": "YulAssignment",
															"src": "8766:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8795:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8795:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8777:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8777:17:8"
																},
																"nativeSrc": "8777:24:8",
																"nodeType": "YulFunctionCall",
																"src": "8777:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8766:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "8766:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8711:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8738:5:8",
														"nodeType": "YulTypedName",
														"src": "8738:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8748:7:8",
														"nodeType": "YulTypedName",
														"src": "8748:7:8",
														"type": ""
													}
												],
												"src": "8711:96:8"
											},
											{
												"body": {
													"nativeSrc": "8878:53:8",
													"nodeType": "YulBlock",
													"src": "8878:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8895:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8895:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8918:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8918:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8900:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "8900:17:8"
																		},
																		"nativeSrc": "8900:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8900:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8888:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8888:6:8"
																},
																"nativeSrc": "8888:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8888:37:8"
															},
															"nativeSrc": "8888:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8888:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8813:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8866:5:8",
														"nodeType": "YulTypedName",
														"src": "8866:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8873:3:8",
														"nodeType": "YulTypedName",
														"src": "8873:3:8",
														"type": ""
													}
												],
												"src": "8813:118:8"
											},
											{
												"body": {
													"nativeSrc": "9035:124:8",
													"nodeType": "YulBlock",
													"src": "9035:124:8",
													"statements": [
														{
															"nativeSrc": "9045:26:8",
															"nodeType": "YulAssignment",
															"src": "9045:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9057:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9057:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9068:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9068:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9053:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9053:3:8"
																},
																"nativeSrc": "9053:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9053:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9045:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9045:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9125:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9125:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9138:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9138:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9149:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9149:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9134:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9134:3:8"
																		},
																		"nativeSrc": "9134:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9134:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9081:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9081:43:8"
																},
																"nativeSrc": "9081:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9081:71:8"
															},
															"nativeSrc": "9081:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9081:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8937:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9007:9:8",
														"nodeType": "YulTypedName",
														"src": "9007:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9019:6:8",
														"nodeType": "YulTypedName",
														"src": "9019:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9030:4:8",
														"nodeType": "YulTypedName",
														"src": "9030:4:8",
														"type": ""
													}
												],
												"src": "8937:222:8"
											},
											{
												"body": {
													"nativeSrc": "9193:152:8",
													"nodeType": "YulBlock",
													"src": "9193:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9210:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9210:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9213:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9213:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9203:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9203:6:8"
																},
																"nativeSrc": "9203:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9203:88:8"
															},
															"nativeSrc": "9203:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9203:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9307:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9307:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9310:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9310:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9300:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9300:6:8"
																},
																"nativeSrc": "9300:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9300:15:8"
															},
															"nativeSrc": "9300:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9300:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9331:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9331:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9334:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9334:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9324:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9324:6:8"
																},
																"nativeSrc": "9324:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9324:15:8"
															},
															"nativeSrc": "9324:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9324:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9165:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9165:180:8"
											},
											{
												"body": {
													"nativeSrc": "9395:147:8",
													"nodeType": "YulBlock",
													"src": "9395:147:8",
													"statements": [
														{
															"nativeSrc": "9405:25:8",
															"nodeType": "YulAssignment",
															"src": "9405:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9428:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9428:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9410:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9410:17:8"
																},
																"nativeSrc": "9410:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9410:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9405:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9405:1:8"
																}
															]
														},
														{
															"nativeSrc": "9439:25:8",
															"nodeType": "YulAssignment",
															"src": "9439:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9462:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9462:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9444:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9444:17:8"
																},
																"nativeSrc": "9444:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9444:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9439:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9439:1:8"
																}
															]
														},
														{
															"nativeSrc": "9473:16:8",
															"nodeType": "YulAssignment",
															"src": "9473:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9484:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9484:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9487:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9487:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9480:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9480:3:8"
																},
																"nativeSrc": "9480:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9480:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9473:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9473:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9513:22:8",
																"nodeType": "YulBlock",
																"src": "9513:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9515:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9515:16:8"
																			},
																			"nativeSrc": "9515:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9515:18:8"
																		},
																		"nativeSrc": "9515:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9515:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9505:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9505:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9508:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9508:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9502:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9502:2:8"
																},
																"nativeSrc": "9502:10:8",
																"nodeType": "YulFunctionCall",
																"src": "9502:10:8"
															},
															"nativeSrc": "9499:36:8",
															"nodeType": "YulIf",
															"src": "9499:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9351:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9382:1:8",
														"nodeType": "YulTypedName",
														"src": "9382:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9385:1:8",
														"nodeType": "YulTypedName",
														"src": "9385:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9391:3:8",
														"nodeType": "YulTypedName",
														"src": "9391:3:8",
														"type": ""
													}
												],
												"src": "9351:191:8"
											},
											{
												"body": {
													"nativeSrc": "9613:53:8",
													"nodeType": "YulBlock",
													"src": "9613:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9630:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9630:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9653:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9653:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9635:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "9635:17:8"
																		},
																		"nativeSrc": "9635:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9635:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9623:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9623:6:8"
																},
																"nativeSrc": "9623:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9623:37:8"
															},
															"nativeSrc": "9623:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "9623:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9548:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9601:5:8",
														"nodeType": "YulTypedName",
														"src": "9601:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9608:3:8",
														"nodeType": "YulTypedName",
														"src": "9608:3:8",
														"type": ""
													}
												],
												"src": "9548:118:8"
											},
											{
												"body": {
													"nativeSrc": "9826:288:8",
													"nodeType": "YulBlock",
													"src": "9826:288:8",
													"statements": [
														{
															"nativeSrc": "9836:26:8",
															"nodeType": "YulAssignment",
															"src": "9836:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9848:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9848:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9859:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9859:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9844:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9844:3:8"
																},
																"nativeSrc": "9844:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9844:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9836:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9836:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9916:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9916:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9929:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9929:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9940:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9940:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9925:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9925:3:8"
																		},
																		"nativeSrc": "9925:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9925:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9872:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9872:43:8"
																},
																"nativeSrc": "9872:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9872:71:8"
															},
															"nativeSrc": "9872:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9872:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9997:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9997:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10010:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10010:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10021:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10021:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10006:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10006:3:8"
																		},
																		"nativeSrc": "10006:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10006:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9953:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9953:43:8"
																},
																"nativeSrc": "9953:72:8",
																"nodeType": "YulFunctionCall",
																"src": "9953:72:8"
															},
															"nativeSrc": "9953:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "9953:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10079:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10079:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10092:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10092:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10103:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10103:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10088:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10088:3:8"
																		},
																		"nativeSrc": "10088:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10088:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10035:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10035:43:8"
																},
																"nativeSrc": "10035:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10035:72:8"
															},
															"nativeSrc": "10035:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10035:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9672:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9782:9:8",
														"nodeType": "YulTypedName",
														"src": "9782:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9794:6:8",
														"nodeType": "YulTypedName",
														"src": "9794:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9802:6:8",
														"nodeType": "YulTypedName",
														"src": "9802:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9810:6:8",
														"nodeType": "YulTypedName",
														"src": "9810:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9821:4:8",
														"nodeType": "YulTypedName",
														"src": "9821:4:8",
														"type": ""
													}
												],
												"src": "9672:442:8"
											},
											{
												"body": {
													"nativeSrc": "10218:124:8",
													"nodeType": "YulBlock",
													"src": "10218:124:8",
													"statements": [
														{
															"nativeSrc": "10228:26:8",
															"nodeType": "YulAssignment",
															"src": "10228:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10240:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10240:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10251:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10251:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10236:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10236:3:8"
																},
																"nativeSrc": "10236:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10236:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10228:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10228:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10308:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10308:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10321:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10321:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10332:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10332:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10317:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10317:3:8"
																		},
																		"nativeSrc": "10317:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10317:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10264:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10264:43:8"
																},
																"nativeSrc": "10264:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10264:71:8"
															},
															"nativeSrc": "10264:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10264:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10120:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10190:9:8",
														"nodeType": "YulTypedName",
														"src": "10190:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10202:6:8",
														"nodeType": "YulTypedName",
														"src": "10202:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10213:4:8",
														"nodeType": "YulTypedName",
														"src": "10213:4:8",
														"type": ""
													}
												],
												"src": "10120:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405269d3c21bcecceda100000060075534801561001e57600080fd5b50604051612d76380380612d7683398181016040528101906100409190610603565b3382828160039081610052919061089c565b508060049081610062919061089c565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100d75760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100ce91906109af565b60405180910390fd5b6100e68161011b60201b60201c565b506000600560146101000a81548160ff021916908315150217905550610114336007546101e160201b60201c565b5050610a8e565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102535760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161024a91906109af565b60405180910390fd5b6102656000838361026960201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102bb5780600260008282546102af91906109f9565b9250508190555061038e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610347578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161033e93929190610a3c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103d75780600260008282540392505081905550610424565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104819190610a73565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104f5826104ac565b810181811067ffffffffffffffff82111715610514576105136104bd565b5b80604052505050565b600061052761048e565b905061053382826104ec565b919050565b600067ffffffffffffffff821115610553576105526104bd565b5b61055c826104ac565b9050602081019050919050565b60005b8381101561058757808201518184015260208101905061056c565b60008484015250505050565b60006105a66105a184610538565b61051d565b9050828152602081018484840111156105c2576105c16104a7565b5b6105cd848285610569565b509392505050565b600082601f8301126105ea576105e96104a2565b5b81516105fa848260208601610593565b91505092915050565b6000806040838503121561061a57610619610498565b5b600083015167ffffffffffffffff8111156106385761063761049d565b5b610644858286016105d5565b925050602083015167ffffffffffffffff8111156106655761066461049d565b5b610671858286016105d5565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106cd57607f821691505b6020821081036106e0576106df610686565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261070b565b610752868361070b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061079961079461078f8461076a565b610774565b61076a565b9050919050565b6000819050919050565b6107b38361077e565b6107c76107bf826107a0565b848454610718565b825550505050565b600090565b6107dc6107cf565b6107e78184846107aa565b505050565b5b8181101561080b576108006000826107d4565b6001810190506107ed565b5050565b601f82111561085057610821816106e6565b61082a846106fb565b81016020851015610839578190505b61084d610845856106fb565b8301826107ec565b50505b505050565b600082821c905092915050565b600061087360001984600802610855565b1980831691505092915050565b600061088c8383610862565b9150826002028217905092915050565b6108a58261067b565b67ffffffffffffffff8111156108be576108bd6104bd565b5b6108c882546106b5565b6108d382828561080f565b600060209050601f83116001811461090657600084156108f4578287015190505b6108fe8582610880565b865550610966565b601f198416610914866106e6565b60005b8281101561093c57848901518255600182019150602085019450602081019050610917565b868310156109595784890151610955601f891682610862565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109998261096e565b9050919050565b6109a98161098e565b82525050565b60006020820190506109c460008301846109a0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a048261076a565b9150610a0f8361076a565b9250828201905080821115610a2757610a266109ca565b5b92915050565b610a368161076a565b82525050565b6000606082019050610a5160008301866109a0565b610a5e6020830185610a2d565b610a6b6040830184610a2d565b949350505050565b6000602082019050610a886000830184610a2d565b92915050565b6122d980610a9d6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a9059cbb1161007c578063a9059cbb14610354578063c66e409514610384578063dbac26e9146103a2578063dd62ed3e146103d2578063f2fde38b14610402578063fe575a871461041e5761014d565b8063715018a6146102b85780638456cb59146102c257806388d695b2146102cc5780638da5cb5b146102e857806395d89b41146103065780639bc289f1146103245761014d565b80632e0d2a00116101155780632e0d2a001461020a578063313ce567146102265780633e579307146102445780633f4ba83a146102605780635c975abb1461026a57806370a08231146102885761014d565b806306fdde0314610152578063095ea7b314610170578063153b0d1e146101a057806318160ddd146101bc57806323b872dd146101da575b600080fd5b61015a61044e565b6040516101679190611933565b60405180910390f35b61018a600480360381019061018591906119f3565b6104e0565b6040516101979190611a4e565b60405180910390f35b6101ba60048036038101906101b59190611a95565b610503565b005b6101c46105b4565b6040516101d19190611ae4565b60405180910390f35b6101f460048036038101906101ef9190611aff565b6105be565b6040516102019190611a4e565b60405180910390f35b610224600480360381019061021f9190611b52565b6107c2565b005b61022e610851565b60405161023b9190611b9b565b60405180910390f35b61025e600480360381019061025991906119f3565b61085a565b005b610268610980565b005b610272610992565b60405161027f9190611a4e565b60405180910390f35b6102a2600480360381019061029d9190611b52565b6109a9565b6040516102af9190611ae4565b60405180910390f35b6102c06109f1565b005b6102ca610a05565b005b6102e660048036038101906102e19190611c71565b610a17565b005b6102f0610b8e565b6040516102fd9190611d01565b60405180910390f35b61030e610bb8565b60405161031b9190611933565b60405180910390f35b61033e60048036038101906103399190611b52565b610c4a565b60405161034b9190611ae4565b60405180910390f35b61036e600480360381019061036991906119f3565b610c62565b60405161037b9190611a4e565b60405180910390f35b61038c610e64565b6040516103999190611d01565b60405180910390f35b6103bc60048036038101906103b79190611b52565b610e8a565b6040516103c99190611a4e565b60405180910390f35b6103ec60048036038101906103e79190611d1c565b610eaa565b6040516103f99190611ae4565b60405180910390f35b61041c60048036038101906104179190611b52565b610f31565b005b61043860048036038101906104339190611b52565b610fb7565b6040516104459190611a4e565b60405180910390f35b60606003805461045d90611d8b565b80601f016020809104026020016040519081016040528092919081815260200182805461048990611d8b565b80156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b6000806104eb61100d565b90506104f8818585611015565b600191505092915050565b61050b611027565b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8826040516105a89190611a4e565b60405180910390a25050565b6000600254905090565b60006105c86110ae565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90611e2e565b60405180910390fd5b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156106e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d990611ec0565b60405180910390fd5b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544210158061076f57506000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b6107ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a590611f52565b60405180910390fd5b6107b98484846110f8565b90509392505050565b6107ca611027565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad860405160405180910390a250565b60006012905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e190611fbe565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f826040516109749190611ae4565b60405180910390a25050565b610988611027565b610990611127565b565b6000600560149054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109f9611027565b610a03600061118a565b565b610a0d611027565b610a15611250565b565b610a1f6110ae565b818190508484905014610a67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5e90612050565b60405180910390fd5b600084849050905060005b81811015610b865760096000878784818110610a9157610a90612070565b5b9050602002016020810190610aa69190611b52565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2590612111565b60405180910390fd5b610b7933878784818110610b4557610b44612070565b5b9050602002016020810190610b5a9190611b52565b868685818110610b6d57610b6c612070565b5b905060200201356112b3565b8080600101915050610a72565b505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610bc790611d8b565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf390611d8b565b8015610c405780601f10610c1557610100808354040283529160200191610c40565b820191906000526020600020905b815481529060010190602001808311610c2357829003601f168201915b5050505050905090565b60086020528060005260406000206000915090505481565b6000610c6c6110ae565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610cf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf090611e2e565b60405180910390fd5b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7d90611ec0565b60405180910390fd5b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442101580610e1357506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b610e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4990611f52565b60405180910390fd5b610e5c83836113a7565b905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900460ff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f39611027565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fab5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fa29190611d01565b60405180910390fd5b610fb48161118a565b50565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600033905090565b61102283838360016113ca565b505050565b61102f61100d565b73ffffffffffffffffffffffffffffffffffffffff1661104d610b8e565b73ffffffffffffffffffffffffffffffffffffffff16146110ac5761107061100d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110a39190611d01565b60405180910390fd5b565b6110b6610992565b156110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed9061217d565b60405180910390fd5b565b60008061110361100d565b90506111108582856115a1565b61111b8585856112b3565b60019150509392505050565b61112f611635565b6000600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61117361100d565b6040516111809190611d01565b60405180910390a1565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6112586110ae565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861129c61100d565b6040516112a99190611d01565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113255760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161131c9190611d01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113975760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161138e9190611d01565b60405180910390fd5b6113a283838361167e565b505050565b6000806113b261100d565b90506113bf8185856112b3565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361143c5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114339190611d01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114ae5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114a59190611d01565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561159b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115929190611ae4565b60405180910390a35b50505050565b60006115ad8484610eaa565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461162f578181101561161f578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016116169392919061219d565b60405180910390fd5b61162e848484840360006113ca565b5b50505050565b61163d610992565b61167c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167390612220565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116d05780600260008282546116c4919061226f565b925050819055506117a3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561175c578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016117539392919061219d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117ec5780600260008282540392505081905550611839565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118969190611ae4565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118dd5780820151818401526020810190506118c2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611905826118a3565b61190f81856118ae565b935061191f8185602086016118bf565b611928816118e9565b840191505092915050565b6000602082019050818103600083015261194d81846118fa565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061198a8261195f565b9050919050565b61199a8161197f565b81146119a557600080fd5b50565b6000813590506119b781611991565b92915050565b6000819050919050565b6119d0816119bd565b81146119db57600080fd5b50565b6000813590506119ed816119c7565b92915050565b60008060408385031215611a0a57611a09611955565b5b6000611a18858286016119a8565b9250506020611a29858286016119de565b9150509250929050565b60008115159050919050565b611a4881611a33565b82525050565b6000602082019050611a636000830184611a3f565b92915050565b611a7281611a33565b8114611a7d57600080fd5b50565b600081359050611a8f81611a69565b92915050565b60008060408385031215611aac57611aab611955565b5b6000611aba858286016119a8565b9250506020611acb85828601611a80565b9150509250929050565b611ade816119bd565b82525050565b6000602082019050611af96000830184611ad5565b92915050565b600080600060608486031215611b1857611b17611955565b5b6000611b26868287016119a8565b9350506020611b37868287016119a8565b9250506040611b48868287016119de565b9150509250925092565b600060208284031215611b6857611b67611955565b5b6000611b76848285016119a8565b91505092915050565b600060ff82169050919050565b611b9581611b7f565b82525050565b6000602082019050611bb06000830184611b8c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611bdb57611bda611bb6565b5b8235905067ffffffffffffffff811115611bf857611bf7611bbb565b5b602083019150836020820283011115611c1457611c13611bc0565b5b9250929050565b60008083601f840112611c3157611c30611bb6565b5b8235905067ffffffffffffffff811115611c4e57611c4d611bbb565b5b602083019150836020820283011115611c6a57611c69611bc0565b5b9250929050565b60008060008060408587031215611c8b57611c8a611955565b5b600085013567ffffffffffffffff811115611ca957611ca861195a565b5b611cb587828801611bc5565b9450945050602085013567ffffffffffffffff811115611cd857611cd761195a565b5b611ce487828801611c1b565b925092505092959194509250565b611cfb8161197f565b82525050565b6000602082019050611d166000830184611cf2565b92915050565b60008060408385031215611d3357611d32611955565b5b6000611d41858286016119a8565b9250506020611d52858286016119a8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611da357607f821691505b602082108103611db657611db5611d5c565b5b50919050565b7f5472616e73666572206661696c65643a2053656e64657220697320626c61636b60008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b6000611e186026836118ae565b9150611e2382611dbc565b604082019050919050565b60006020820190508181036000830152611e4781611e0b565b9050919050565b7f5472616e73666572206661696c65643a20526563697069656e7420697320626c60008201527f61636b6c69737465640000000000000000000000000000000000000000000000602082015250565b6000611eaa6029836118ae565b9150611eb582611e4e565b604082019050919050565b60006020820190508181036000830152611ed981611e9d565b9050919050565b7f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f3c6022836118ae565b9150611f4782611ee0565b604082019050919050565b60006020820190508181036000830152611f6b81611f2f565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611fa8600e836118ae565b9150611fb382611f72565b602082019050919050565b60006020820190508181036000830152611fd781611f9b565b9050919050565b7f42617463685472616e73666572206661696c65643a204d69736d61746368656460008201527f2061727261797300000000000000000000000000000000000000000000000000602082015250565b600061203a6027836118ae565b915061204582611fde565b604082019050919050565b600060208201905081810360008301526120698161202d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f42617463685472616e73666572206661696c65643a20526563697069656e742060008201527f697320626c61636b6c6973746564000000000000000000000000000000000000602082015250565b60006120fb602e836118ae565b91506121068261209f565b604082019050919050565b6000602082019050818103600083015261212a816120ee565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006121676010836118ae565b915061217282612131565b602082019050919050565b600060208201905081810360008301526121968161215a565b9050919050565b60006060820190506121b26000830186611cf2565b6121bf6020830185611ad5565b6121cc6040830184611ad5565b949350505050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b600061220a6014836118ae565b9150612215826121d4565b602082019050919050565b60006020820190508181036000830152612239816121fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061227a826119bd565b9150612285836119bd565b925082820190508082111561229d5761229c612240565b5b9291505056fea2646970667358221220dff3612085fad06aae850ba16757fa5114b99f91355d7bcd994cb6e0b282843064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2D76 CODESIZE SUB DUP1 PUSH2 0x2D76 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x40 SWAP2 SWAP1 PUSH2 0x603 JUMP JUMPDEST CALLER DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE6 DUP2 PUSH2 0x11B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x114 CALLER PUSH1 0x7 SLOAD PUSH2 0x1E1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x253 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 PUSH1 0x0 DUP4 DUP4 PUSH2 0x269 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x38E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x347 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x424 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4F5 DUP3 PUSH2 0x4AC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4BD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x527 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP PUSH2 0x533 DUP3 DUP3 PUSH2 0x4EC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x553 JUMPI PUSH2 0x552 PUSH2 0x4BD JUMP JUMPDEST JUMPDEST PUSH2 0x55C DUP3 PUSH2 0x4AC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x587 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x56C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A6 PUSH2 0x5A1 DUP5 PUSH2 0x538 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5C2 JUMPI PUSH2 0x5C1 PUSH2 0x4A7 JUMP JUMPDEST JUMPDEST PUSH2 0x5CD DUP5 DUP3 DUP6 PUSH2 0x569 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5FA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x593 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x61A JUMPI PUSH2 0x619 PUSH2 0x498 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x638 JUMPI PUSH2 0x637 PUSH2 0x49D JUMP JUMPDEST JUMPDEST PUSH2 0x644 DUP6 DUP3 DUP7 ADD PUSH2 0x5D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x665 JUMPI PUSH2 0x664 PUSH2 0x49D JUMP JUMPDEST JUMPDEST PUSH2 0x671 DUP6 DUP3 DUP7 ADD PUSH2 0x5D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6E0 JUMPI PUSH2 0x6DF PUSH2 0x686 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x748 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x752 DUP7 DUP4 PUSH2 0x70B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x799 PUSH2 0x794 PUSH2 0x78F DUP5 PUSH2 0x76A JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B3 DUP4 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x7C7 PUSH2 0x7BF DUP3 PUSH2 0x7A0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x718 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x7DC PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x7E7 DUP2 DUP5 DUP5 PUSH2 0x7AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80B JUMPI PUSH2 0x800 PUSH1 0x0 DUP3 PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7ED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x850 JUMPI PUSH2 0x821 DUP2 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x82A DUP5 PUSH2 0x6FB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x839 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x84D PUSH2 0x845 DUP6 PUSH2 0x6FB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x7EC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x873 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x855 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88C DUP4 DUP4 PUSH2 0x862 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8A5 DUP3 PUSH2 0x67B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8BE JUMPI PUSH2 0x8BD PUSH2 0x4BD JUMP JUMPDEST JUMPDEST PUSH2 0x8C8 DUP3 SLOAD PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x8D3 DUP3 DUP3 DUP6 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x906 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x8F4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x8FE DUP6 DUP3 PUSH2 0x880 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x966 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x914 DUP7 PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x93C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x917 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x959 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x955 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x862 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x999 DUP3 PUSH2 0x96E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A9 DUP2 PUSH2 0x98E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA04 DUP3 PUSH2 0x76A JUMP JUMPDEST SWAP2 POP PUSH2 0xA0F DUP4 PUSH2 0x76A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA27 JUMPI PUSH2 0xA26 PUSH2 0x9CA JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA36 DUP2 PUSH2 0x76A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA51 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0xA5E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0xA6B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA2D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22D9 DUP1 PUSH2 0xA9D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x41E JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x324 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x2E0D2A00 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x3E579307 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x288 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x268 PUSH2 0x980 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH2 0x9F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH2 0xA05 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0xA17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F0 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH2 0xE64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0xF31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x45D SWAP1 PUSH2 0x1D8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4EB PUSH2 0x100D JUMP JUMPDEST SWAP1 POP PUSH2 0x4F8 DUP2 DUP6 DUP6 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x50B PUSH2 0x1027 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1EC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x76F JUMPI POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A5 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B9 DUP5 DUP5 DUP5 PUSH2 0x10F8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x1027 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F DUP3 PUSH1 0x40 MLOAD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x988 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x990 PUSH2 0x1127 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F9 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0xA03 PUSH1 0x0 PUSH2 0x118A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA0D PUSH2 0x1027 JUMP JUMPDEST PUSH2 0xA15 PUSH2 0x1250 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA1F PUSH2 0x10AE JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5E SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB86 JUMPI PUSH1 0x9 PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0x2070 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAA6 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB25 SWAP1 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB79 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0x2070 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB5A SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xB6D JUMPI PUSH2 0xB6C PUSH2 0x2070 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x12B3 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA72 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBC7 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF3 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC40 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC15 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC40 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC23 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6C PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF0 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7D SWAP1 PUSH2 0x1EC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0xE13 JUMPI POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0xE52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE49 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5C DUP4 DUP4 PUSH2 0x13A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF39 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFAB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFB4 DUP2 PUSH2 0x118A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1022 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x102F PUSH2 0x100D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x104D PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10AC JUMPI PUSH2 0x1070 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A3 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x10B6 PUSH2 0x992 JUMP JUMPDEST ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1103 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP PUSH2 0x1110 DUP6 DUP3 DUP6 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x111B DUP6 DUP6 DUP6 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x112F PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1173 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1258 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x129C PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A9 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1325 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1397 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138E SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13A2 DUP4 DUP4 DUP4 PUSH2 0x167E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13B2 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP PUSH2 0x13BF DUP2 DUP6 DUP6 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x143C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1433 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14AE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A5 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x159B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1592 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD DUP5 DUP5 PUSH2 0xEAA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x162F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x161F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1616 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x162E DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x163D PUSH2 0x992 JUMP JUMPDEST PUSH2 0x167C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1673 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16D0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16C4 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x175C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1753 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17EC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1839 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1896 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18DD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 DUP3 PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x190F DUP2 DUP6 PUSH2 0x18AE JUMP JUMPDEST SWAP4 POP PUSH2 0x191F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18BF JUMP JUMPDEST PUSH2 0x1928 DUP2 PUSH2 0x18E9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x194D DUP2 DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198A DUP3 PUSH2 0x195F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x199A DUP2 PUSH2 0x197F JUMP JUMPDEST DUP2 EQ PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B7 DUP2 PUSH2 0x1991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D0 DUP2 PUSH2 0x19BD JUMP JUMPDEST DUP2 EQ PUSH2 0x19DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19ED DUP2 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A18 DUP6 DUP3 DUP7 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A29 DUP6 DUP3 DUP7 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A48 DUP2 PUSH2 0x1A33 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A63 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A72 DUP2 PUSH2 0x1A33 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8F DUP2 PUSH2 0x1A69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AAC JUMPI PUSH2 0x1AAB PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ABA DUP6 DUP3 DUP7 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ACB DUP6 DUP3 DUP7 ADD PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADE DUP2 PUSH2 0x19BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B18 JUMPI PUSH2 0x1B17 PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B26 DUP7 DUP3 DUP8 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B37 DUP7 DUP3 DUP8 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B48 DUP7 DUP3 DUP8 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B68 JUMPI PUSH2 0x1B67 PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B76 DUP5 DUP3 DUP6 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B95 DUP2 PUSH2 0x1B7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1BDB JUMPI PUSH2 0x1BDA PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF8 JUMPI PUSH2 0x1BF7 PUSH2 0x1BBB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C14 JUMPI PUSH2 0x1C13 PUSH2 0x1BC0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C31 JUMPI PUSH2 0x1C30 PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C4E JUMPI PUSH2 0x1C4D PUSH2 0x1BBB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0x1BC0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C8B JUMPI PUSH2 0x1C8A PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CA9 JUMPI PUSH2 0x1CA8 PUSH2 0x195A JUMP JUMPDEST JUMPDEST PUSH2 0x1CB5 DUP8 DUP3 DUP9 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CD8 JUMPI PUSH2 0x1CD7 PUSH2 0x195A JUMP JUMPDEST JUMPDEST PUSH2 0x1CE4 DUP8 DUP3 DUP9 ADD PUSH2 0x1C1B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1CFB DUP2 PUSH2 0x197F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D33 JUMPI PUSH2 0x1D32 PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D41 DUP6 DUP3 DUP7 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D52 DUP6 DUP3 DUP7 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DA3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DB6 JUMPI PUSH2 0x1DB5 PUSH2 0x1D5C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C69737465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E18 PUSH1 0x26 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1E23 DUP3 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E47 DUP2 PUSH2 0x1E0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61636B6C69737465640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAA PUSH1 0x29 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB5 DUP3 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED9 DUP2 PUSH2 0x1E9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3C PUSH1 0x22 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F47 DUP3 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6B DUP2 PUSH2 0x1F2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA8 PUSH1 0xE DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB3 DUP3 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD7 DUP2 PUSH2 0x1F9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061727261797300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203A PUSH1 0x27 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2045 DUP3 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2069 DUP2 PUSH2 0x202D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697320626C61636B6C6973746564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FB PUSH1 0x2E DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2106 DUP3 PUSH2 0x209F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x212A DUP2 PUSH2 0x20EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2167 PUSH1 0x10 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2172 DUP3 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2196 DUP2 PUSH2 0x215A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x21BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x21CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AD5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x220A PUSH1 0x14 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2215 DUP3 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2239 DUP2 PUSH2 0x21FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x227A DUP3 PUSH2 0x19BD JUMP JUMPDEST SWAP2 POP PUSH2 0x2285 DUP4 PUSH2 0x19BD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x229D JUMPI PUSH2 0x229C PUSH2 0x2240 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF RETURN PUSH2 0x2085 STATICCALL 0xD0 PUSH11 0xAE850BA16757FA5114B99F SWAP2 CALLDATALOAD TSTORE PUSH28 0xCD994CB6E0B282843064736F6C634300081A00330000000000000000 ",
							"sourceMap": "225:3078:7:-:0;;;343:18;312:49;;749:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;831:10;809:4;815:6;1675:5:3;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;853:31:7::2;859:10;871:12;;853:5;;;:31;;:::i;:::-;749:143:::0;;225:3078;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:248::-;1692:1;1702:113;1716:6;1713:1;1710:13;1702:113;;;1801:1;1796:3;1792:11;1786:18;1782:1;1777:3;1773:11;1766:39;1738:2;1735:1;1731:10;1726:15;;1702:113;;;1849:1;1840:6;1835:3;1831:16;1824:27;1672:186;1610:248;;;:::o;1864:434::-;1953:5;1978:66;1994:49;2036:6;1994:49;:::i;:::-;1978:66;:::i;:::-;1969:75;;2067:6;2060:5;2053:21;2105:4;2098:5;2094:16;2143:3;2134:6;2129:3;2125:16;2122:25;2119:112;;;2150:79;;:::i;:::-;2119:112;2240:52;2285:6;2280:3;2275;2240:52;:::i;:::-;1959:339;1864:434;;;;;:::o;2318:355::-;2385:5;2434:3;2427:4;2419:6;2415:17;2411:27;2401:122;;2442:79;;:::i;:::-;2401:122;2552:6;2546:13;2577:90;2663:3;2655:6;2648:4;2640:6;2636:17;2577:90;:::i;:::-;2568:99;;2391:282;2318:355;;;;:::o;2679:853::-;2778:6;2786;2835:2;2823:9;2814:7;2810:23;2806:32;2803:119;;;2841:79;;:::i;:::-;2803:119;2982:1;2971:9;2967:17;2961:24;3012:18;3004:6;3001:30;2998:117;;;3034:79;;:::i;:::-;2998:117;3139:74;3205:7;3196:6;3185:9;3181:22;3139:74;:::i;:::-;3129:84;;2932:291;3283:2;3272:9;3268:18;3262:25;3314:18;3306:6;3303:30;3300:117;;;3336:79;;:::i;:::-;3300:117;3441:74;3507:7;3498:6;3487:9;3483:22;3441:74;:::i;:::-;3431:84;;3233:292;2679:853;;;;;:::o;3538:99::-;3590:6;3624:5;3618:12;3608:22;;3538:99;;;:::o;3643:180::-;3691:77;3688:1;3681:88;3788:4;3785:1;3778:15;3812:4;3809:1;3802:15;3829:320;3873:6;3910:1;3904:4;3900:12;3890:22;;3957:1;3951:4;3947:12;3978:18;3968:81;;4034:4;4026:6;4022:17;4012:27;;3968:81;4096:2;4088:6;4085:14;4065:18;4062:38;4059:84;;4115:18;;:::i;:::-;4059:84;3880:269;3829:320;;;:::o;4155:141::-;4204:4;4227:3;4219:11;;4250:3;4247:1;4240:14;4284:4;4281:1;4271:18;4263:26;;4155:141;;;:::o;4302:93::-;4339:6;4386:2;4381;4374:5;4370:14;4366:23;4356:33;;4302:93;;;:::o;4401:107::-;4445:8;4495:5;4489:4;4485:16;4464:37;;4401:107;;;;:::o;4514:393::-;4583:6;4633:1;4621:10;4617:18;4656:97;4686:66;4675:9;4656:97;:::i;:::-;4774:39;4804:8;4793:9;4774:39;:::i;:::-;4762:51;;4846:4;4842:9;4835:5;4831:21;4822:30;;4895:4;4885:8;4881:19;4874:5;4871:30;4861:40;;4590:317;;4514:393;;;;;:::o;4913:77::-;4950:7;4979:5;4968:16;;4913:77;;;:::o;4996:60::-;5024:3;5045:5;5038:12;;4996:60;;;:::o;5062:142::-;5112:9;5145:53;5163:34;5172:24;5190:5;5172:24;:::i;:::-;5163:34;:::i;:::-;5145:53;:::i;:::-;5132:66;;5062:142;;;:::o;5210:75::-;5253:3;5274:5;5267:12;;5210:75;;;:::o;5291:269::-;5401:39;5432:7;5401:39;:::i;:::-;5462:91;5511:41;5535:16;5511:41;:::i;:::-;5503:6;5496:4;5490:11;5462:91;:::i;:::-;5456:4;5449:105;5367:193;5291:269;;;:::o;5566:73::-;5611:3;5566:73;:::o;5645:189::-;5722:32;;:::i;:::-;5763:65;5821:6;5813;5807:4;5763:65;:::i;:::-;5698:136;5645:189;;:::o;5840:186::-;5900:120;5917:3;5910:5;5907:14;5900:120;;;5971:39;6008:1;6001:5;5971:39;:::i;:::-;5944:1;5937:5;5933:13;5924:22;;5900:120;;;5840:186;;:::o;6032:543::-;6133:2;6128:3;6125:11;6122:446;;;6167:38;6199:5;6167:38;:::i;:::-;6251:29;6269:10;6251:29;:::i;:::-;6241:8;6237:44;6434:2;6422:10;6419:18;6416:49;;;6455:8;6440:23;;6416:49;6478:80;6534:22;6552:3;6534:22;:::i;:::-;6524:8;6520:37;6507:11;6478:80;:::i;:::-;6137:431;;6122:446;6032:543;;;:::o;6581:117::-;6635:8;6685:5;6679:4;6675:16;6654:37;;6581:117;;;;:::o;6704:169::-;6748:6;6781:51;6829:1;6825:6;6817:5;6814:1;6810:13;6781:51;:::i;:::-;6777:56;6862:4;6856;6852:15;6842:25;;6755:118;6704:169;;;;:::o;6878:295::-;6954:4;7100:29;7125:3;7119:4;7100:29;:::i;:::-;7092:37;;7162:3;7159:1;7155:11;7149:4;7146:21;7138:29;;6878:295;;;;:::o;7178:1395::-;7295:37;7328:3;7295:37;:::i;:::-;7397:18;7389:6;7386:30;7383:56;;;7419:18;;:::i;:::-;7383:56;7463:38;7495:4;7489:11;7463:38;:::i;:::-;7548:67;7608:6;7600;7594:4;7548:67;:::i;:::-;7642:1;7666:4;7653:17;;7698:2;7690:6;7687:14;7715:1;7710:618;;;;8372:1;8389:6;8386:77;;;8438:9;8433:3;8429:19;8423:26;8414:35;;8386:77;8489:67;8549:6;8542:5;8489:67;:::i;:::-;8483:4;8476:81;8345:222;7680:887;;7710:618;7762:4;7758:9;7750:6;7746:22;7796:37;7828:4;7796:37;:::i;:::-;7855:1;7869:208;7883:7;7880:1;7877:14;7869:208;;;7962:9;7957:3;7953:19;7947:26;7939:6;7932:42;8013:1;8005:6;8001:14;7991:24;;8060:2;8049:9;8045:18;8032:31;;7906:4;7903:1;7899:12;7894:17;;7869:208;;;8105:6;8096:7;8093:19;8090:179;;;8163:9;8158:3;8154:19;8148:26;8206:48;8248:4;8240:6;8236:17;8225:9;8206:48;:::i;:::-;8198:6;8191:64;8113:156;8090:179;8315:1;8311;8303:6;8299:14;8295:22;8289:4;8282:36;7717:611;;;7680:887;;7270:1303;;;7178:1395;;:::o;8579:126::-;8616:7;8656:42;8649:5;8645:54;8634:65;;8579:126;;;:::o;8711:96::-;8748:7;8777:24;8795:5;8777:24;:::i;:::-;8766:35;;8711:96;;;:::o;8813:118::-;8900:24;8918:5;8900:24;:::i;:::-;8895:3;8888:37;8813:118;;:::o;8937:222::-;9030:4;9068:2;9057:9;9053:18;9045:26;;9081:71;9149:1;9138:9;9134:17;9125:6;9081:71;:::i;:::-;8937:222;;;;:::o;9165:180::-;9213:77;9210:1;9203:88;9310:4;9307:1;9300:15;9334:4;9331:1;9324:15;9351:191;9391:3;9410:20;9428:1;9410:20;:::i;:::-;9405:25;;9444:20;9462:1;9444:20;:::i;:::-;9439:25;;9487:1;9484;9480:9;9473:16;;9508:3;9505:1;9502:10;9499:36;;;9515:18;;:::i;:::-;9499:36;9351:191;;;;:::o;9548:118::-;9635:24;9653:5;9635:24;:::i;:::-;9630:3;9623:37;9548:118;;:::o;9672:442::-;9821:4;9859:2;9848:9;9844:18;9836:26;;9872:71;9940:1;9929:9;9925:17;9916:6;9872:71;:::i;:::-;9953:72;10021:2;10010:9;10006:18;9997:6;9953:72;:::i;:::-;10035;10103:2;10092:9;10088:18;10079:6;10035:72;:::i;:::-;9672:442;;;;;;:::o;10120:222::-;10213:4;10251:2;10240:9;10236:18;10228:26;;10264:71;10332:1;10321:9;10317:17;10308:6;10264:71;:::i;:::-;10120:222;;;;:::o;225:3078:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_798": {
									"entryPoint": 4117,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_858": {
									"entryPoint": 5066,
									"id": 858,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4135,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1023": {
									"entryPoint": 4109,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_375": {
									"entryPoint": 4688,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 4270,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 5685,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_906": {
									"entryPoint": 5537,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4490,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_637": {
									"entryPoint": 4787,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 4391,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 5758,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_534": {
									"entryPoint": 3754,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_558": {
									"entryPoint": 1248,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_493": {
									"entryPoint": 2473,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchTransfer_1389": {
									"entryPoint": 2583,
									"id": 1389,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@blacklisted_1069": {
									"entryPoint": 3722,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1152": {
									"entryPoint": 2129,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@icoContract_1054": {
									"entryPoint": 3684,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isBlacklisted_1206": {
									"entryPoint": 4023,
									"id": 1206,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockedUntil_1065": {
									"entryPoint": 3146,
									"id": 1065,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_453": {
									"entryPoint": 1102,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2958,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1134": {
									"entryPoint": 2565,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": 2450,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2545,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlacklist_1194": {
									"entryPoint": 1283,
									"id": 1194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setICOContract_1330": {
									"entryPoint": 1986,
									"id": 1330,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockup_1173": {
									"entryPoint": 2138,
									"id": 1173,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_462": {
									"entryPoint": 3000,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_480": {
									"entryPoint": 1460,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1314": {
									"entryPoint": 1470,
									"id": 1314,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_590": {
									"entryPoint": 4344,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3889,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1260": {
									"entryPoint": 3170,
									"id": 1260,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_517": {
									"entryPoint": 5031,
									"id": 517,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1143": {
									"entryPoint": 2432,
									"id": 1143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 7195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 6784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8605,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6335,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 8660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc": {
									"entryPoint": 8351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e": {
									"entryPoint": 7904,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940": {
									"entryPoint": 7758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4": {
									"entryPoint": 7612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 8050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18831:8",
										"nodeType": "YulBlock",
										"src": "0:18831:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:186:8",
													"nodeType": "YulBlock",
													"src": "349:186:8",
													"statements": [
														{
															"nativeSrc": "360:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:8",
																"nodeType": "YulLiteral",
																"src": "369:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:8",
																	"nodeType": "YulTypedName",
																	"src": "364:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:8",
																"nodeType": "YulBlock",
																"src": "429:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:8"
																					},
																					"nativeSrc": "450:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:8"
																							},
																							"nativeSrc": "469:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:8"
																					},
																					"nativeSrc": "463:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:8"
																			},
																			"nativeSrc": "443:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:8"
																		},
																		"nativeSrc": "443:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:8"
																},
																"nativeSrc": "387:13:8",
																"nodeType": "YulFunctionCall",
																"src": "387:13:8"
															},
															"nativeSrc": "379:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:8",
																"nodeType": "YulBlock",
																"src": "401:19:8",
																"statements": [
																	{
																		"nativeSrc": "403:15:8",
																		"nodeType": "YulAssignment",
																		"src": "403:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:8",
																					"nodeType": "YulLiteral",
																					"src": "415:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:8"
																			},
																			"nativeSrc": "408:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:8",
																"nodeType": "YulBlock",
																"src": "383:3:8",
																"statements": []
															},
															"src": "379:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:8"
																		},
																		"nativeSrc": "508:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:8",
																		"nodeType": "YulLiteral",
																		"src": "526:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:8"
																},
																"nativeSrc": "501:27:8",
																"nodeType": "YulFunctionCall",
																"src": "501:27:8"
															},
															"nativeSrc": "501:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:248:8"
											},
											{
												"body": {
													"nativeSrc": "589:54:8",
													"nodeType": "YulBlock",
													"src": "589:54:8",
													"statements": [
														{
															"nativeSrc": "599:38:8",
															"nodeType": "YulAssignment",
															"src": "599:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:8",
																				"nodeType": "YulLiteral",
																				"src": "624:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:8"
																		},
																		"nativeSrc": "613:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:8",
																				"nodeType": "YulLiteral",
																				"src": "633:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:8"
																		},
																		"nativeSrc": "629:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:8"
																},
																"nativeSrc": "609:28:8",
																"nodeType": "YulFunctionCall",
																"src": "609:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:8",
														"nodeType": "YulTypedName",
														"src": "572:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:8",
														"nodeType": "YulTypedName",
														"src": "582:6:8",
														"type": ""
													}
												],
												"src": "541:102:8"
											},
											{
												"body": {
													"nativeSrc": "741:285:8",
													"nodeType": "YulBlock",
													"src": "741:285:8",
													"statements": [
														{
															"nativeSrc": "751:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:8"
																},
																"nativeSrc": "765:39:8",
																"nodeType": "YulFunctionCall",
																"src": "765:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:8",
																	"nodeType": "YulTypedName",
																	"src": "755:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:8",
															"nodeType": "YulAssignment",
															"src": "813:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:8"
																},
																"nativeSrc": "820:71:8",
																"nodeType": "YulFunctionCall",
																"src": "820:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:8",
																				"nodeType": "YulLiteral",
																				"src": "946:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:8"
																		},
																		"nativeSrc": "935:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:8"
																},
																"nativeSrc": "900:65:8",
																"nodeType": "YulFunctionCall",
																"src": "900:65:8"
															},
															"nativeSrc": "900:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:8"
														},
														{
															"nativeSrc": "974:46:8",
															"nodeType": "YulAssignment",
															"src": "974:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:8"
																		},
																		"nativeSrc": "990:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:8"
																},
																"nativeSrc": "981:39:8",
																"nodeType": "YulFunctionCall",
																"src": "981:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:8",
														"nodeType": "YulTypedName",
														"src": "722:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:8",
														"nodeType": "YulTypedName",
														"src": "729:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:8",
														"nodeType": "YulTypedName",
														"src": "737:3:8",
														"type": ""
													}
												],
												"src": "649:377:8"
											},
											{
												"body": {
													"nativeSrc": "1150:195:8",
													"nodeType": "YulBlock",
													"src": "1150:195:8",
													"statements": [
														{
															"nativeSrc": "1160:26:8",
															"nodeType": "YulAssignment",
															"src": "1160:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:8"
																},
																"nativeSrc": "1168:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:8"
																		},
																		"nativeSrc": "1203:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:8"
																		},
																		"nativeSrc": "1222:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:8"
																},
																"nativeSrc": "1196:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:8"
															},
															"nativeSrc": "1196:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:8"
														},
														{
															"nativeSrc": "1252:86:8",
															"nodeType": "YulAssignment",
															"src": "1252:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:8"
																},
																"nativeSrc": "1260:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:8",
														"nodeType": "YulTypedName",
														"src": "1122:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:8",
														"nodeType": "YulTypedName",
														"src": "1134:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:8",
														"nodeType": "YulTypedName",
														"src": "1145:4:8",
														"type": ""
													}
												],
												"src": "1032:313:8"
											},
											{
												"body": {
													"nativeSrc": "1391:35:8",
													"nodeType": "YulBlock",
													"src": "1391:35:8",
													"statements": [
														{
															"nativeSrc": "1401:19:8",
															"nodeType": "YulAssignment",
															"src": "1401:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1411:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:8"
																},
																"nativeSrc": "1411:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1411:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1401:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1351:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1384:6:8",
														"nodeType": "YulTypedName",
														"src": "1384:6:8",
														"type": ""
													}
												],
												"src": "1351:75:8"
											},
											{
												"body": {
													"nativeSrc": "1521:28:8",
													"nodeType": "YulBlock",
													"src": "1521:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1531:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:8"
																},
																"nativeSrc": "1531:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1531:12:8"
															},
															"nativeSrc": "1531:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1531:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1432:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1432:117:8"
											},
											{
												"body": {
													"nativeSrc": "1644:28:8",
													"nodeType": "YulBlock",
													"src": "1644:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:8"
																},
																"nativeSrc": "1654:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:8"
															},
															"nativeSrc": "1654:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1555:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:8"
											},
											{
												"body": {
													"nativeSrc": "1723:81:8",
													"nodeType": "YulBlock",
													"src": "1723:81:8",
													"statements": [
														{
															"nativeSrc": "1733:65:8",
															"nodeType": "YulAssignment",
															"src": "1733:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1748:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1748:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1755:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1755:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1744:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:8"
																},
																"nativeSrc": "1744:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1744:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1733:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1733:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1678:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:8",
														"nodeType": "YulTypedName",
														"src": "1705:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1715:7:8",
														"nodeType": "YulTypedName",
														"src": "1715:7:8",
														"type": ""
													}
												],
												"src": "1678:126:8"
											},
											{
												"body": {
													"nativeSrc": "1855:51:8",
													"nodeType": "YulBlock",
													"src": "1855:51:8",
													"statements": [
														{
															"nativeSrc": "1865:35:8",
															"nodeType": "YulAssignment",
															"src": "1865:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1894:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1894:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1876:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1876:17:8"
																},
																"nativeSrc": "1876:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1876:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1865:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1865:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1810:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1837:5:8",
														"nodeType": "YulTypedName",
														"src": "1837:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1847:7:8",
														"nodeType": "YulTypedName",
														"src": "1847:7:8",
														"type": ""
													}
												],
												"src": "1810:96:8"
											},
											{
												"body": {
													"nativeSrc": "1955:79:8",
													"nodeType": "YulBlock",
													"src": "1955:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2012:16:8",
																"nodeType": "YulBlock",
																"src": "2012:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:8"
																			},
																			"nativeSrc": "2014:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:8"
																		},
																		"nativeSrc": "2014:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1978:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1978:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2003:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2003:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1985:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1985:17:8"
																				},
																				"nativeSrc": "1985:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1975:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1975:2:8"
																		},
																		"nativeSrc": "1975:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1975:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1968:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:8"
																},
																"nativeSrc": "1968:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1968:43:8"
															},
															"nativeSrc": "1965:63:8",
															"nodeType": "YulIf",
															"src": "1965:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1912:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:8",
														"nodeType": "YulTypedName",
														"src": "1948:5:8",
														"type": ""
													}
												],
												"src": "1912:122:8"
											},
											{
												"body": {
													"nativeSrc": "2092:87:8",
													"nodeType": "YulBlock",
													"src": "2092:87:8",
													"statements": [
														{
															"nativeSrc": "2102:29:8",
															"nodeType": "YulAssignment",
															"src": "2102:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2124:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2111:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2111:12:8"
																},
																"nativeSrc": "2111:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2111:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2102:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2167:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2140:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2140:26:8"
																},
																"nativeSrc": "2140:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2140:33:8"
															},
															"nativeSrc": "2140:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2140:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2040:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2070:6:8",
														"nodeType": "YulTypedName",
														"src": "2070:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2078:3:8",
														"nodeType": "YulTypedName",
														"src": "2078:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2086:5:8",
														"nodeType": "YulTypedName",
														"src": "2086:5:8",
														"type": ""
													}
												],
												"src": "2040:139:8"
											},
											{
												"body": {
													"nativeSrc": "2230:32:8",
													"nodeType": "YulBlock",
													"src": "2230:32:8",
													"statements": [
														{
															"nativeSrc": "2240:16:8",
															"nodeType": "YulAssignment",
															"src": "2240:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:8",
																"nodeType": "YulIdentifier",
																"src": "2251:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2240:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2185:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2212:5:8",
														"nodeType": "YulTypedName",
														"src": "2212:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2222:7:8",
														"nodeType": "YulTypedName",
														"src": "2222:7:8",
														"type": ""
													}
												],
												"src": "2185:77:8"
											},
											{
												"body": {
													"nativeSrc": "2311:79:8",
													"nodeType": "YulBlock",
													"src": "2311:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:8",
																"nodeType": "YulBlock",
																"src": "2368:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:8"
																			},
																			"nativeSrc": "2370:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:8"
																		},
																		"nativeSrc": "2370:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2341:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:8"
																				},
																				"nativeSrc": "2341:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:8"
																		},
																		"nativeSrc": "2331:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:8"
																},
																"nativeSrc": "2324:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:8"
															},
															"nativeSrc": "2321:63:8",
															"nodeType": "YulIf",
															"src": "2321:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2268:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:8",
														"nodeType": "YulTypedName",
														"src": "2304:5:8",
														"type": ""
													}
												],
												"src": "2268:122:8"
											},
											{
												"body": {
													"nativeSrc": "2448:87:8",
													"nodeType": "YulBlock",
													"src": "2448:87:8",
													"statements": [
														{
															"nativeSrc": "2458:29:8",
															"nodeType": "YulAssignment",
															"src": "2458:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:8"
																},
																"nativeSrc": "2467:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2496:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:8"
																},
																"nativeSrc": "2496:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:8"
															},
															"nativeSrc": "2496:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2396:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:8",
														"nodeType": "YulTypedName",
														"src": "2426:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:8",
														"nodeType": "YulTypedName",
														"src": "2434:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:8",
														"nodeType": "YulTypedName",
														"src": "2442:5:8",
														"type": ""
													}
												],
												"src": "2396:139:8"
											},
											{
												"body": {
													"nativeSrc": "2624:391:8",
													"nodeType": "YulBlock",
													"src": "2624:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:8",
																"nodeType": "YulBlock",
																"src": "2670:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:8"
																			},
																			"nativeSrc": "2672:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:8"
																		},
																		"nativeSrc": "2672:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:8"
																		},
																		"nativeSrc": "2641:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:8"
																},
																"nativeSrc": "2637:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:8"
															},
															"nativeSrc": "2634:119:8",
															"nodeType": "YulIf",
															"src": "2634:119:8"
														},
														{
															"nativeSrc": "2763:117:8",
															"nodeType": "YulBlock",
															"src": "2763:117:8",
															"statements": [
																{
																	"nativeSrc": "2778:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2792:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2807:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2807:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2853:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:8"
																				},
																				"nativeSrc": "2838:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2862:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2817:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:8"
																		},
																		"nativeSrc": "2817:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2807:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2890:118:8",
															"nodeType": "YulBlock",
															"src": "2890:118:8",
															"statements": [
																{
																	"nativeSrc": "2905:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2919:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2909:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2935:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2935:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2970:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2981:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2966:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:8"
																				},
																				"nativeSrc": "2966:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2990:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2945:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:8"
																		},
																		"nativeSrc": "2945:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2935:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2541:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:8",
														"nodeType": "YulTypedName",
														"src": "2586:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:8",
														"nodeType": "YulTypedName",
														"src": "2597:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:8",
														"nodeType": "YulTypedName",
														"src": "2609:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2617:6:8",
														"nodeType": "YulTypedName",
														"src": "2617:6:8",
														"type": ""
													}
												],
												"src": "2541:474:8"
											},
											{
												"body": {
													"nativeSrc": "3063:48:8",
													"nodeType": "YulBlock",
													"src": "3063:48:8",
													"statements": [
														{
															"nativeSrc": "3073:32:8",
															"nodeType": "YulAssignment",
															"src": "3073:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3098:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3098:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3091:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3091:6:8"
																		},
																		"nativeSrc": "3091:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3084:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:8"
																},
																"nativeSrc": "3084:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3084:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3073:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3021:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:8",
														"nodeType": "YulTypedName",
														"src": "3045:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3055:7:8",
														"nodeType": "YulTypedName",
														"src": "3055:7:8",
														"type": ""
													}
												],
												"src": "3021:90:8"
											},
											{
												"body": {
													"nativeSrc": "3176:50:8",
													"nodeType": "YulBlock",
													"src": "3176:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3193:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3213:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3213:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3198:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3198:14:8"
																		},
																		"nativeSrc": "3198:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:8"
																},
																"nativeSrc": "3186:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3186:34:8"
															},
															"nativeSrc": "3186:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3117:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3164:5:8",
														"nodeType": "YulTypedName",
														"src": "3164:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3171:3:8",
														"nodeType": "YulTypedName",
														"src": "3171:3:8",
														"type": ""
													}
												],
												"src": "3117:109:8"
											},
											{
												"body": {
													"nativeSrc": "3324:118:8",
													"nodeType": "YulBlock",
													"src": "3324:118:8",
													"statements": [
														{
															"nativeSrc": "3334:26:8",
															"nodeType": "YulAssignment",
															"src": "3334:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3346:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3342:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:8"
																},
																"nativeSrc": "3342:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3342:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:8"
																		},
																		"nativeSrc": "3417:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3370:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3370:37:8"
																},
																"nativeSrc": "3370:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3370:65:8"
															},
															"nativeSrc": "3370:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3370:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3232:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:8",
														"nodeType": "YulTypedName",
														"src": "3296:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:8",
														"nodeType": "YulTypedName",
														"src": "3308:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3319:4:8",
														"nodeType": "YulTypedName",
														"src": "3319:4:8",
														"type": ""
													}
												],
												"src": "3232:210:8"
											},
											{
												"body": {
													"nativeSrc": "3488:76:8",
													"nodeType": "YulBlock",
													"src": "3488:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3542:16:8",
																"nodeType": "YulBlock",
																"src": "3542:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3551:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3551:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3554:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3544:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3544:6:8"
																			},
																			"nativeSrc": "3544:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3544:12:8"
																		},
																		"nativeSrc": "3544:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3544:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3511:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3511:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3533:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3533:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3518:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "3518:14:8"
																				},
																				"nativeSrc": "3518:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3518:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3508:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3508:2:8"
																		},
																		"nativeSrc": "3508:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3508:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3501:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:8"
																},
																"nativeSrc": "3501:40:8",
																"nodeType": "YulFunctionCall",
																"src": "3501:40:8"
															},
															"nativeSrc": "3498:60:8",
															"nodeType": "YulIf",
															"src": "3498:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3448:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3481:5:8",
														"nodeType": "YulTypedName",
														"src": "3481:5:8",
														"type": ""
													}
												],
												"src": "3448:116:8"
											},
											{
												"body": {
													"nativeSrc": "3619:84:8",
													"nodeType": "YulBlock",
													"src": "3619:84:8",
													"statements": [
														{
															"nativeSrc": "3629:29:8",
															"nodeType": "YulAssignment",
															"src": "3629:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3638:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3638:12:8"
																},
																"nativeSrc": "3638:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3638:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3629:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3629:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3691:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3691:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3667:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "3667:23:8"
																},
																"nativeSrc": "3667:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3667:30:8"
															},
															"nativeSrc": "3667:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3667:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3570:133:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3597:6:8",
														"nodeType": "YulTypedName",
														"src": "3597:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3605:3:8",
														"nodeType": "YulTypedName",
														"src": "3605:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3613:5:8",
														"nodeType": "YulTypedName",
														"src": "3613:5:8",
														"type": ""
													}
												],
												"src": "3570:133:8"
											},
											{
												"body": {
													"nativeSrc": "3789:388:8",
													"nodeType": "YulBlock",
													"src": "3789:388:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3835:83:8",
																"nodeType": "YulBlock",
																"src": "3835:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3837:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3837:77:8"
																			},
																			"nativeSrc": "3837:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3837:79:8"
																		},
																		"nativeSrc": "3837:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3837:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3810:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3810:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3819:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3806:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3806:3:8"
																		},
																		"nativeSrc": "3806:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3806:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3831:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3831:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3802:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:8"
																},
																"nativeSrc": "3802:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3802:32:8"
															},
															"nativeSrc": "3799:119:8",
															"nodeType": "YulIf",
															"src": "3799:119:8"
														},
														{
															"nativeSrc": "3928:117:8",
															"nodeType": "YulBlock",
															"src": "3928:117:8",
															"statements": [
																{
																	"nativeSrc": "3943:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3943:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3957:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3957:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3947:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3947:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3972:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3972:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4007:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4007:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4018:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4018:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4003:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:8"
																				},
																				"nativeSrc": "4003:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4003:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4027:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4027:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3982:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3982:20:8"
																		},
																		"nativeSrc": "3982:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3982:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3972:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3972:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4055:115:8",
															"nodeType": "YulBlock",
															"src": "4055:115:8",
															"statements": [
																{
																	"nativeSrc": "4070:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4070:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4084:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4084:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4074:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4074:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4100:60:8",
																	"nodeType": "YulAssignment",
																	"src": "4100:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4132:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4132:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4143:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4143:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4128:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4128:3:8"
																				},
																				"nativeSrc": "4128:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4128:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4152:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4152:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4110:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4110:17:8"
																		},
																		"nativeSrc": "4110:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4100:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4100:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3709:468:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3751:9:8",
														"nodeType": "YulTypedName",
														"src": "3751:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3762:7:8",
														"nodeType": "YulTypedName",
														"src": "3762:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3774:6:8",
														"nodeType": "YulTypedName",
														"src": "3774:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3782:6:8",
														"nodeType": "YulTypedName",
														"src": "3782:6:8",
														"type": ""
													}
												],
												"src": "3709:468:8"
											},
											{
												"body": {
													"nativeSrc": "4248:53:8",
													"nodeType": "YulBlock",
													"src": "4248:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4265:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4288:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4288:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4270:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "4270:17:8"
																		},
																		"nativeSrc": "4270:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4270:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4258:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:8"
																},
																"nativeSrc": "4258:37:8",
																"nodeType": "YulFunctionCall",
																"src": "4258:37:8"
															},
															"nativeSrc": "4258:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "4258:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4183:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4236:5:8",
														"nodeType": "YulTypedName",
														"src": "4236:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4243:3:8",
														"nodeType": "YulTypedName",
														"src": "4243:3:8",
														"type": ""
													}
												],
												"src": "4183:118:8"
											},
											{
												"body": {
													"nativeSrc": "4405:124:8",
													"nodeType": "YulBlock",
													"src": "4405:124:8",
													"statements": [
														{
															"nativeSrc": "4415:26:8",
															"nodeType": "YulAssignment",
															"src": "4415:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4427:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4427:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4438:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4438:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4423:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4423:3:8"
																},
																"nativeSrc": "4423:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4423:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4415:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4415:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4495:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4495:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4508:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4519:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4519:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4504:3:8"
																		},
																		"nativeSrc": "4504:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4504:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4451:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4451:43:8"
																},
																"nativeSrc": "4451:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4451:71:8"
															},
															"nativeSrc": "4451:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "4451:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4307:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4377:9:8",
														"nodeType": "YulTypedName",
														"src": "4377:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4389:6:8",
														"nodeType": "YulTypedName",
														"src": "4389:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4400:4:8",
														"nodeType": "YulTypedName",
														"src": "4400:4:8",
														"type": ""
													}
												],
												"src": "4307:222:8"
											},
											{
												"body": {
													"nativeSrc": "4635:519:8",
													"nodeType": "YulBlock",
													"src": "4635:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4681:83:8",
																"nodeType": "YulBlock",
																"src": "4681:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4683:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4683:77:8"
																			},
																			"nativeSrc": "4683:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4683:79:8"
																		},
																		"nativeSrc": "4683:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4683:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4656:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4656:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4665:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4665:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4652:3:8"
																		},
																		"nativeSrc": "4652:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4652:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4677:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4677:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4648:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4648:3:8"
																},
																"nativeSrc": "4648:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4648:32:8"
															},
															"nativeSrc": "4645:119:8",
															"nodeType": "YulIf",
															"src": "4645:119:8"
														},
														{
															"nativeSrc": "4774:117:8",
															"nodeType": "YulBlock",
															"src": "4774:117:8",
															"statements": [
																{
																	"nativeSrc": "4789:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4789:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4803:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4803:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4793:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4793:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4818:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4818:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4853:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4853:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4864:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4864:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4849:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4849:3:8"
																				},
																				"nativeSrc": "4849:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4849:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4873:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4873:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4828:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4828:20:8"
																		},
																		"nativeSrc": "4828:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4828:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4818:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4818:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4901:118:8",
															"nodeType": "YulBlock",
															"src": "4901:118:8",
															"statements": [
																{
																	"nativeSrc": "4916:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4916:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4930:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4930:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4920:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4920:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4946:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4946:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4981:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4981:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4992:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4992:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4977:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4977:3:8"
																				},
																				"nativeSrc": "4977:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4977:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5001:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5001:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4956:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4956:20:8"
																		},
																		"nativeSrc": "4956:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4956:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4946:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4946:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5029:118:8",
															"nodeType": "YulBlock",
															"src": "5029:118:8",
															"statements": [
																{
																	"nativeSrc": "5044:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5044:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5058:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5058:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5048:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5048:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5074:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5074:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5109:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5109:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5120:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5120:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5105:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5105:3:8"
																				},
																				"nativeSrc": "5105:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5105:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5129:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5129:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5084:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5084:20:8"
																		},
																		"nativeSrc": "5084:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5084:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5074:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5074:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4535:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4589:9:8",
														"nodeType": "YulTypedName",
														"src": "4589:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4600:7:8",
														"nodeType": "YulTypedName",
														"src": "4600:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4612:6:8",
														"nodeType": "YulTypedName",
														"src": "4612:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4620:6:8",
														"nodeType": "YulTypedName",
														"src": "4620:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4628:6:8",
														"nodeType": "YulTypedName",
														"src": "4628:6:8",
														"type": ""
													}
												],
												"src": "4535:619:8"
											},
											{
												"body": {
													"nativeSrc": "5226:263:8",
													"nodeType": "YulBlock",
													"src": "5226:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5272:83:8",
																"nodeType": "YulBlock",
																"src": "5272:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5274:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5274:77:8"
																			},
																			"nativeSrc": "5274:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5274:79:8"
																		},
																		"nativeSrc": "5274:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5274:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5247:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5247:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5256:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5256:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5243:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5243:3:8"
																		},
																		"nativeSrc": "5243:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5243:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5268:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5239:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5239:3:8"
																},
																"nativeSrc": "5239:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5239:32:8"
															},
															"nativeSrc": "5236:119:8",
															"nodeType": "YulIf",
															"src": "5236:119:8"
														},
														{
															"nativeSrc": "5365:117:8",
															"nodeType": "YulBlock",
															"src": "5365:117:8",
															"statements": [
																{
																	"nativeSrc": "5380:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5380:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5394:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5394:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5384:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5384:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5409:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5409:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5444:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5444:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5455:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5455:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5440:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5440:3:8"
																				},
																				"nativeSrc": "5440:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5440:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5464:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5464:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5419:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5419:20:8"
																		},
																		"nativeSrc": "5419:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5419:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5409:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5409:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5160:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5196:9:8",
														"nodeType": "YulTypedName",
														"src": "5196:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5207:7:8",
														"nodeType": "YulTypedName",
														"src": "5207:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5219:6:8",
														"nodeType": "YulTypedName",
														"src": "5219:6:8",
														"type": ""
													}
												],
												"src": "5160:329:8"
											},
											{
												"body": {
													"nativeSrc": "5538:43:8",
													"nodeType": "YulBlock",
													"src": "5538:43:8",
													"statements": [
														{
															"nativeSrc": "5548:27:8",
															"nodeType": "YulAssignment",
															"src": "5548:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5563:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5563:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5570:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5570:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5559:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5559:3:8"
																},
																"nativeSrc": "5559:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5559:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5548:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5548:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5495:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5520:5:8",
														"nodeType": "YulTypedName",
														"src": "5520:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5530:7:8",
														"nodeType": "YulTypedName",
														"src": "5530:7:8",
														"type": ""
													}
												],
												"src": "5495:86:8"
											},
											{
												"body": {
													"nativeSrc": "5648:51:8",
													"nodeType": "YulBlock",
													"src": "5648:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5665:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5665:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5686:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5686:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5670:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "5670:15:8"
																		},
																		"nativeSrc": "5670:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5670:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5658:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:8"
																},
																"nativeSrc": "5658:35:8",
																"nodeType": "YulFunctionCall",
																"src": "5658:35:8"
															},
															"nativeSrc": "5658:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "5658:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5587:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5636:5:8",
														"nodeType": "YulTypedName",
														"src": "5636:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5643:3:8",
														"nodeType": "YulTypedName",
														"src": "5643:3:8",
														"type": ""
													}
												],
												"src": "5587:112:8"
											},
											{
												"body": {
													"nativeSrc": "5799:120:8",
													"nodeType": "YulBlock",
													"src": "5799:120:8",
													"statements": [
														{
															"nativeSrc": "5809:26:8",
															"nodeType": "YulAssignment",
															"src": "5809:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5821:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5821:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5832:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5832:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5817:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5817:3:8"
																},
																"nativeSrc": "5817:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5817:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5809:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5809:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5885:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5885:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5898:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5909:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5909:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5894:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:8"
																		},
																		"nativeSrc": "5894:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5845:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5845:39:8"
																},
																"nativeSrc": "5845:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5845:67:8"
															},
															"nativeSrc": "5845:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5845:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5705:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5771:9:8",
														"nodeType": "YulTypedName",
														"src": "5771:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5783:6:8",
														"nodeType": "YulTypedName",
														"src": "5783:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5794:4:8",
														"nodeType": "YulTypedName",
														"src": "5794:4:8",
														"type": ""
													}
												],
												"src": "5705:214:8"
											},
											{
												"body": {
													"nativeSrc": "6014:28:8",
													"nodeType": "YulBlock",
													"src": "6014:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6031:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6031:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6034:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6034:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6024:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6024:6:8"
																},
																"nativeSrc": "6024:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6024:12:8"
															},
															"nativeSrc": "6024:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "6024:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5925:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "5925:117:8"
											},
											{
												"body": {
													"nativeSrc": "6137:28:8",
													"nodeType": "YulBlock",
													"src": "6137:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6154:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6154:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6157:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6157:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6147:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6147:6:8"
																},
																"nativeSrc": "6147:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6147:12:8"
															},
															"nativeSrc": "6147:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "6147:12:8"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "6048:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6048:117:8"
											},
											{
												"body": {
													"nativeSrc": "6260:28:8",
													"nodeType": "YulBlock",
													"src": "6260:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6277:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6277:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6280:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6280:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6270:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6270:6:8"
																},
																"nativeSrc": "6270:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6270:12:8"
															},
															"nativeSrc": "6270:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "6270:12:8"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6171:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6171:117:8"
											},
											{
												"body": {
													"nativeSrc": "6401:478:8",
													"nodeType": "YulBlock",
													"src": "6401:478:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6450:83:8",
																"nodeType": "YulBlock",
																"src": "6450:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6452:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6452:77:8"
																			},
																			"nativeSrc": "6452:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6452:79:8"
																		},
																		"nativeSrc": "6452:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6452:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6429:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6429:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6437:4:8",
																						"nodeType": "YulLiteral",
																						"src": "6437:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6425:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6425:3:8"
																				},
																				"nativeSrc": "6425:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6425:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6444:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6444:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6421:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6421:3:8"
																		},
																		"nativeSrc": "6421:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6421:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:8"
																},
																"nativeSrc": "6414:35:8",
																"nodeType": "YulFunctionCall",
																"src": "6414:35:8"
															},
															"nativeSrc": "6411:122:8",
															"nodeType": "YulIf",
															"src": "6411:122:8"
														},
														{
															"nativeSrc": "6542:30:8",
															"nodeType": "YulAssignment",
															"src": "6542:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6565:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6565:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6552:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6552:12:8"
																},
																"nativeSrc": "6552:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6552:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6542:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6542:6:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6615:83:8",
																"nodeType": "YulBlock",
																"src": "6615:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "6617:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6617:77:8"
																			},
																			"nativeSrc": "6617:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6617:79:8"
																		},
																		"nativeSrc": "6617:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6617:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6587:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6587:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6595:18:8",
																		"nodeType": "YulLiteral",
																		"src": "6595:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6584:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6584:2:8"
																},
																"nativeSrc": "6584:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6584:30:8"
															},
															"nativeSrc": "6581:117:8",
															"nodeType": "YulIf",
															"src": "6581:117:8"
														},
														{
															"nativeSrc": "6707:29:8",
															"nodeType": "YulAssignment",
															"src": "6707:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6723:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6723:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6731:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6731:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6719:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6719:3:8"
																},
																"nativeSrc": "6719:17:8",
																"nodeType": "YulFunctionCall",
																"src": "6719:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "6707:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "6707:8:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6790:83:8",
																"nodeType": "YulBlock",
																"src": "6790:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6792:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6792:77:8"
																			},
																			"nativeSrc": "6792:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6792:79:8"
																		},
																		"nativeSrc": "6792:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6792:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "6755:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "6755:8:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "6769:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6769:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6777:4:8",
																						"nodeType": "YulLiteral",
																						"src": "6777:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6765:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6765:3:8"
																				},
																				"nativeSrc": "6765:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6765:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6751:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6751:3:8"
																		},
																		"nativeSrc": "6751:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6751:32:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6785:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6785:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6748:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6748:2:8"
																},
																"nativeSrc": "6748:41:8",
																"nodeType": "YulFunctionCall",
																"src": "6748:41:8"
															},
															"nativeSrc": "6745:128:8",
															"nodeType": "YulIf",
															"src": "6745:128:8"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "6311:568:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6368:6:8",
														"nodeType": "YulTypedName",
														"src": "6368:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6376:3:8",
														"nodeType": "YulTypedName",
														"src": "6376:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "6384:8:8",
														"nodeType": "YulTypedName",
														"src": "6384:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6394:6:8",
														"nodeType": "YulTypedName",
														"src": "6394:6:8",
														"type": ""
													}
												],
												"src": "6311:568:8"
											},
											{
												"body": {
													"nativeSrc": "6992:478:8",
													"nodeType": "YulBlock",
													"src": "6992:478:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7041:83:8",
																"nodeType": "YulBlock",
																"src": "7041:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7043:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7043:77:8"
																			},
																			"nativeSrc": "7043:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7043:79:8"
																		},
																		"nativeSrc": "7043:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7043:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7020:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7028:4:8",
																						"nodeType": "YulLiteral",
																						"src": "7028:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7016:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7016:3:8"
																				},
																				"nativeSrc": "7016:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7016:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7035:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7035:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7012:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7012:3:8"
																		},
																		"nativeSrc": "7012:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7012:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7005:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7005:6:8"
																},
																"nativeSrc": "7005:35:8",
																"nodeType": "YulFunctionCall",
																"src": "7005:35:8"
															},
															"nativeSrc": "7002:122:8",
															"nodeType": "YulIf",
															"src": "7002:122:8"
														},
														{
															"nativeSrc": "7133:30:8",
															"nodeType": "YulAssignment",
															"src": "7133:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7156:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7156:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7143:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "7143:12:8"
																},
																"nativeSrc": "7143:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7143:20:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7133:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7133:6:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7206:83:8",
																"nodeType": "YulBlock",
																"src": "7206:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "7208:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7208:77:8"
																			},
																			"nativeSrc": "7208:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7208:79:8"
																		},
																		"nativeSrc": "7208:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7208:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7178:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7178:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7186:18:8",
																		"nodeType": "YulLiteral",
																		"src": "7186:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7175:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7175:2:8"
																},
																"nativeSrc": "7175:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7175:30:8"
															},
															"nativeSrc": "7172:117:8",
															"nodeType": "YulIf",
															"src": "7172:117:8"
														},
														{
															"nativeSrc": "7298:29:8",
															"nodeType": "YulAssignment",
															"src": "7298:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7314:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7314:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7322:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7322:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7310:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7310:3:8"
																},
																"nativeSrc": "7310:17:8",
																"nodeType": "YulFunctionCall",
																"src": "7310:17:8"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "7298:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "7298:8:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7381:83:8",
																"nodeType": "YulBlock",
																"src": "7381:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7383:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7383:77:8"
																			},
																			"nativeSrc": "7383:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7383:79:8"
																		},
																		"nativeSrc": "7383:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7383:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "7346:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "7346:8:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "7360:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7360:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7368:4:8",
																						"nodeType": "YulLiteral",
																						"src": "7368:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7356:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7356:3:8"
																				},
																				"nativeSrc": "7356:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7356:17:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7342:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7342:3:8"
																		},
																		"nativeSrc": "7342:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7342:32:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7376:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7376:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7339:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7339:2:8"
																},
																"nativeSrc": "7339:41:8",
																"nodeType": "YulFunctionCall",
																"src": "7339:41:8"
															},
															"nativeSrc": "7336:128:8",
															"nodeType": "YulIf",
															"src": "7336:128:8"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "6902:568:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6959:6:8",
														"nodeType": "YulTypedName",
														"src": "6959:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6967:3:8",
														"nodeType": "YulTypedName",
														"src": "6967:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "6975:8:8",
														"nodeType": "YulTypedName",
														"src": "6975:8:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6985:6:8",
														"nodeType": "YulTypedName",
														"src": "6985:6:8",
														"type": ""
													}
												],
												"src": "6902:568:8"
											},
											{
												"body": {
													"nativeSrc": "7629:781:8",
													"nodeType": "YulBlock",
													"src": "7629:781:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7675:83:8",
																"nodeType": "YulBlock",
																"src": "7675:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7677:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7677:77:8"
																			},
																			"nativeSrc": "7677:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7677:79:8"
																		},
																		"nativeSrc": "7677:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7677:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7650:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7650:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7659:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7659:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7646:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7646:3:8"
																		},
																		"nativeSrc": "7646:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7646:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7671:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7671:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7642:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7642:3:8"
																},
																"nativeSrc": "7642:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7642:32:8"
															},
															"nativeSrc": "7639:119:8",
															"nodeType": "YulIf",
															"src": "7639:119:8"
														},
														{
															"nativeSrc": "7768:312:8",
															"nodeType": "YulBlock",
															"src": "7768:312:8",
															"statements": [
																{
																	"nativeSrc": "7783:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7783:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7814:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7814:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7825:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7825:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7810:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7810:3:8"
																				},
																				"nativeSrc": "7810:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7810:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7797:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "7797:12:8"
																		},
																		"nativeSrc": "7797:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7797:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7787:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7787:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7875:83:8",
																		"nodeType": "YulBlock",
																		"src": "7875:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7877:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "7877:77:8"
																					},
																					"nativeSrc": "7877:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7877:79:8"
																				},
																				"nativeSrc": "7877:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "7877:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7847:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7847:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7855:18:8",
																				"nodeType": "YulLiteral",
																				"src": "7855:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7844:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7844:2:8"
																		},
																		"nativeSrc": "7844:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7844:30:8"
																	},
																	"nativeSrc": "7841:117:8",
																	"nodeType": "YulIf",
																	"src": "7841:117:8"
																},
																{
																	"nativeSrc": "7972:98:8",
																	"nodeType": "YulAssignment",
																	"src": "7972:98:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8042:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8042:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8053:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8053:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8038:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8038:3:8"
																				},
																				"nativeSrc": "8038:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8038:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8062:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8062:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "7990:47:8",
																			"nodeType": "YulIdentifier",
																			"src": "7990:47:8"
																		},
																		"nativeSrc": "7990:80:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7990:80:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7972:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7972:6:8"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "7980:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7980:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8090:313:8",
															"nodeType": "YulBlock",
															"src": "8090:313:8",
															"statements": [
																{
																	"nativeSrc": "8105:46:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8105:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8136:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8136:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8147:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8147:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8132:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8132:3:8"
																				},
																				"nativeSrc": "8132:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8132:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8119:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "8119:12:8"
																		},
																		"nativeSrc": "8119:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8119:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8109:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8109:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8198:83:8",
																		"nodeType": "YulBlock",
																		"src": "8198:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8200:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "8200:77:8"
																					},
																					"nativeSrc": "8200:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8200:79:8"
																				},
																				"nativeSrc": "8200:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8200:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8170:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8170:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8178:18:8",
																				"nodeType": "YulLiteral",
																				"src": "8178:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8167:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8167:2:8"
																		},
																		"nativeSrc": "8167:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8167:30:8"
																	},
																	"nativeSrc": "8164:117:8",
																	"nodeType": "YulIf",
																	"src": "8164:117:8"
																},
																{
																	"nativeSrc": "8295:98:8",
																	"nodeType": "YulAssignment",
																	"src": "8295:98:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8365:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8365:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8376:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8376:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8361:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8361:3:8"
																				},
																				"nativeSrc": "8361:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8361:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8385:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8385:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "8313:47:8",
																			"nodeType": "YulIdentifier",
																			"src": "8313:47:8"
																		},
																		"nativeSrc": "8313:80:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8313:80:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8295:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8295:6:8"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "8303:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8303:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "7476:934:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7575:9:8",
														"nodeType": "YulTypedName",
														"src": "7575:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7586:7:8",
														"nodeType": "YulTypedName",
														"src": "7586:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7598:6:8",
														"nodeType": "YulTypedName",
														"src": "7598:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7606:6:8",
														"nodeType": "YulTypedName",
														"src": "7606:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7614:6:8",
														"nodeType": "YulTypedName",
														"src": "7614:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7622:6:8",
														"nodeType": "YulTypedName",
														"src": "7622:6:8",
														"type": ""
													}
												],
												"src": "7476:934:8"
											},
											{
												"body": {
													"nativeSrc": "8481:53:8",
													"nodeType": "YulBlock",
													"src": "8481:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8498:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8498:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8521:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8521:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8503:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "8503:17:8"
																		},
																		"nativeSrc": "8503:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8503:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8491:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8491:6:8"
																},
																"nativeSrc": "8491:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8491:37:8"
															},
															"nativeSrc": "8491:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8491:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8416:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8469:5:8",
														"nodeType": "YulTypedName",
														"src": "8469:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8476:3:8",
														"nodeType": "YulTypedName",
														"src": "8476:3:8",
														"type": ""
													}
												],
												"src": "8416:118:8"
											},
											{
												"body": {
													"nativeSrc": "8638:124:8",
													"nodeType": "YulBlock",
													"src": "8638:124:8",
													"statements": [
														{
															"nativeSrc": "8648:26:8",
															"nodeType": "YulAssignment",
															"src": "8648:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8660:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8660:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8671:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8671:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8656:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8656:3:8"
																},
																"nativeSrc": "8656:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8656:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8648:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8648:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8728:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8728:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8741:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8752:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8752:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8737:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8737:3:8"
																		},
																		"nativeSrc": "8737:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8737:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8684:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8684:43:8"
																},
																"nativeSrc": "8684:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8684:71:8"
															},
															"nativeSrc": "8684:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8684:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8540:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8610:9:8",
														"nodeType": "YulTypedName",
														"src": "8610:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8622:6:8",
														"nodeType": "YulTypedName",
														"src": "8622:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8633:4:8",
														"nodeType": "YulTypedName",
														"src": "8633:4:8",
														"type": ""
													}
												],
												"src": "8540:222:8"
											},
											{
												"body": {
													"nativeSrc": "8851:391:8",
													"nodeType": "YulBlock",
													"src": "8851:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8897:83:8",
																"nodeType": "YulBlock",
																"src": "8897:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8899:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8899:77:8"
																			},
																			"nativeSrc": "8899:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8899:79:8"
																		},
																		"nativeSrc": "8899:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8899:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8872:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8872:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8881:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8881:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8868:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8868:3:8"
																		},
																		"nativeSrc": "8868:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8868:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8893:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8893:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8864:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8864:3:8"
																},
																"nativeSrc": "8864:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8864:32:8"
															},
															"nativeSrc": "8861:119:8",
															"nodeType": "YulIf",
															"src": "8861:119:8"
														},
														{
															"nativeSrc": "8990:117:8",
															"nodeType": "YulBlock",
															"src": "8990:117:8",
															"statements": [
																{
																	"nativeSrc": "9005:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9005:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9019:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9019:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9009:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9009:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9034:63:8",
																	"nodeType": "YulAssignment",
																	"src": "9034:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9069:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9069:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9080:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9080:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9065:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9065:3:8"
																				},
																				"nativeSrc": "9065:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9065:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9089:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9089:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9044:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "9044:20:8"
																		},
																		"nativeSrc": "9044:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9044:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9034:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9034:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9117:118:8",
															"nodeType": "YulBlock",
															"src": "9117:118:8",
															"statements": [
																{
																	"nativeSrc": "9132:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9132:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9146:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9146:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9136:6:8",
																			"nodeType": "YulTypedName",
																			"src": "9136:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9162:63:8",
																	"nodeType": "YulAssignment",
																	"src": "9162:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9197:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "9197:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9208:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "9208:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9193:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9193:3:8"
																				},
																				"nativeSrc": "9193:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9193:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9217:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9217:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9172:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "9172:20:8"
																		},
																		"nativeSrc": "9172:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9172:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "9162:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8768:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8813:9:8",
														"nodeType": "YulTypedName",
														"src": "8813:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8824:7:8",
														"nodeType": "YulTypedName",
														"src": "8824:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8836:6:8",
														"nodeType": "YulTypedName",
														"src": "8836:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8844:6:8",
														"nodeType": "YulTypedName",
														"src": "8844:6:8",
														"type": ""
													}
												],
												"src": "8768:474:8"
											},
											{
												"body": {
													"nativeSrc": "9276:152:8",
													"nodeType": "YulBlock",
													"src": "9276:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9293:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9293:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9296:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9296:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9286:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9286:6:8"
																},
																"nativeSrc": "9286:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9286:88:8"
															},
															"nativeSrc": "9286:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9286:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9390:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9390:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9393:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9393:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9383:6:8"
																},
																"nativeSrc": "9383:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9383:15:8"
															},
															"nativeSrc": "9383:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9383:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9414:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9417:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9417:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9407:6:8"
																},
																"nativeSrc": "9407:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9407:15:8"
															},
															"nativeSrc": "9407:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9407:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9248:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9248:180:8"
											},
											{
												"body": {
													"nativeSrc": "9485:269:8",
													"nodeType": "YulBlock",
													"src": "9485:269:8",
													"statements": [
														{
															"nativeSrc": "9495:22:8",
															"nodeType": "YulAssignment",
															"src": "9495:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9509:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9509:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9515:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9515:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9505:3:8"
																},
																"nativeSrc": "9505:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9505:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9495:6:8"
																}
															]
														},
														{
															"nativeSrc": "9526:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9526:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9556:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9556:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9562:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9562:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9552:3:8"
																},
																"nativeSrc": "9552:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9552:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9530:18:8",
																	"nodeType": "YulTypedName",
																	"src": "9530:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9603:51:8",
																"nodeType": "YulBlock",
																"src": "9603:51:8",
																"statements": [
																	{
																		"nativeSrc": "9617:27:8",
																		"nodeType": "YulAssignment",
																		"src": "9617:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9631:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9631:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9639:4:8",
																					"nodeType": "YulLiteral",
																					"src": "9639:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9627:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9627:3:8"
																			},
																			"nativeSrc": "9627:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9627:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9617:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9617:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9583:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9583:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9576:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9576:6:8"
																},
																"nativeSrc": "9576:26:8",
																"nodeType": "YulFunctionCall",
																"src": "9576:26:8"
															},
															"nativeSrc": "9573:81:8",
															"nodeType": "YulIf",
															"src": "9573:81:8"
														},
														{
															"body": {
																"nativeSrc": "9706:42:8",
																"nodeType": "YulBlock",
																"src": "9706:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9720:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9720:16:8"
																			},
																			"nativeSrc": "9720:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9720:18:8"
																		},
																		"nativeSrc": "9720:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9720:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9670:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9670:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9693:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9693:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9701:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9701:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9690:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9690:2:8"
																		},
																		"nativeSrc": "9690:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9690:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9667:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9667:2:8"
																},
																"nativeSrc": "9667:38:8",
																"nodeType": "YulFunctionCall",
																"src": "9667:38:8"
															},
															"nativeSrc": "9664:84:8",
															"nodeType": "YulIf",
															"src": "9664:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9434:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9469:4:8",
														"nodeType": "YulTypedName",
														"src": "9469:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9478:6:8",
														"nodeType": "YulTypedName",
														"src": "9478:6:8",
														"type": ""
													}
												],
												"src": "9434:320:8"
											},
											{
												"body": {
													"nativeSrc": "9866:119:8",
													"nodeType": "YulBlock",
													"src": "9866:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9888:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9888:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9896:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9896:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9884:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9884:3:8"
																		},
																		"nativeSrc": "9884:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9884:14:8"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b",
																		"kind": "string",
																		"nativeSrc": "9900:34:8",
																		"nodeType": "YulLiteral",
																		"src": "9900:34:8",
																		"type": "",
																		"value": "Transfer failed: Sender is black"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9877:6:8"
																},
																"nativeSrc": "9877:58:8",
																"nodeType": "YulFunctionCall",
																"src": "9877:58:8"
															},
															"nativeSrc": "9877:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "9877:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9956:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9956:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9964:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9964:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9952:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9952:3:8"
																		},
																		"nativeSrc": "9952:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9952:15:8"
																	},
																	{
																		"hexValue": "6c6973746564",
																		"kind": "string",
																		"nativeSrc": "9969:8:8",
																		"nodeType": "YulLiteral",
																		"src": "9969:8:8",
																		"type": "",
																		"value": "listed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9945:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9945:6:8"
																},
																"nativeSrc": "9945:33:8",
																"nodeType": "YulFunctionCall",
																"src": "9945:33:8"
															},
															"nativeSrc": "9945:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "9945:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
												"nativeSrc": "9760:225:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9858:6:8",
														"nodeType": "YulTypedName",
														"src": "9858:6:8",
														"type": ""
													}
												],
												"src": "9760:225:8"
											},
											{
												"body": {
													"nativeSrc": "10137:220:8",
													"nodeType": "YulBlock",
													"src": "10137:220:8",
													"statements": [
														{
															"nativeSrc": "10147:74:8",
															"nodeType": "YulAssignment",
															"src": "10147:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10213:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10213:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10218:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10218:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10154:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10154:58:8"
																},
																"nativeSrc": "10154:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10154:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10147:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10147:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10319:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10319:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																	"nativeSrc": "10230:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10230:88:8"
																},
																"nativeSrc": "10230:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10230:93:8"
															},
															"nativeSrc": "10230:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10230:93:8"
														},
														{
															"nativeSrc": "10332:19:8",
															"nodeType": "YulAssignment",
															"src": "10332:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10343:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10343:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10348:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10348:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10339:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10339:3:8"
																},
																"nativeSrc": "10339:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10339:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10332:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10332:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9991:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10125:3:8",
														"nodeType": "YulTypedName",
														"src": "10125:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10133:3:8",
														"nodeType": "YulTypedName",
														"src": "10133:3:8",
														"type": ""
													}
												],
												"src": "9991:366:8"
											},
											{
												"body": {
													"nativeSrc": "10534:248:8",
													"nodeType": "YulBlock",
													"src": "10534:248:8",
													"statements": [
														{
															"nativeSrc": "10544:26:8",
															"nodeType": "YulAssignment",
															"src": "10544:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10556:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10556:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10567:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10567:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10552:3:8"
																},
																"nativeSrc": "10552:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10552:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10544:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10544:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10591:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10591:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10602:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10602:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10587:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10587:3:8"
																		},
																		"nativeSrc": "10587:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10587:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10610:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10610:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10616:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10616:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10606:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10606:3:8"
																		},
																		"nativeSrc": "10606:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10606:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10580:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10580:6:8"
																},
																"nativeSrc": "10580:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10580:47:8"
															},
															"nativeSrc": "10580:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10580:47:8"
														},
														{
															"nativeSrc": "10636:139:8",
															"nodeType": "YulAssignment",
															"src": "10636:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10770:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10770:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10644:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10644:124:8"
																},
																"nativeSrc": "10644:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10644:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10636:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10636:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10363:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10514:9:8",
														"nodeType": "YulTypedName",
														"src": "10514:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10529:4:8",
														"nodeType": "YulTypedName",
														"src": "10529:4:8",
														"type": ""
													}
												],
												"src": "10363:419:8"
											},
											{
												"body": {
													"nativeSrc": "10894:122:8",
													"nodeType": "YulBlock",
													"src": "10894:122:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10916:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10924:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10924:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10912:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10912:3:8"
																		},
																		"nativeSrc": "10912:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10912:14:8"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c",
																		"kind": "string",
																		"nativeSrc": "10928:34:8",
																		"nodeType": "YulLiteral",
																		"src": "10928:34:8",
																		"type": "",
																		"value": "Transfer failed: Recipient is bl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10905:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10905:6:8"
																},
																"nativeSrc": "10905:58:8",
																"nodeType": "YulFunctionCall",
																"src": "10905:58:8"
															},
															"nativeSrc": "10905:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "10905:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10984:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10984:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10992:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10992:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10980:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10980:3:8"
																		},
																		"nativeSrc": "10980:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10980:15:8"
																	},
																	{
																		"hexValue": "61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "10997:11:8",
																		"nodeType": "YulLiteral",
																		"src": "10997:11:8",
																		"type": "",
																		"value": "acklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10973:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10973:6:8"
																},
																"nativeSrc": "10973:36:8",
																"nodeType": "YulFunctionCall",
																"src": "10973:36:8"
															},
															"nativeSrc": "10973:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "10973:36:8"
														}
													]
												},
												"name": "store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
												"nativeSrc": "10788:228:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10886:6:8",
														"nodeType": "YulTypedName",
														"src": "10886:6:8",
														"type": ""
													}
												],
												"src": "10788:228:8"
											},
											{
												"body": {
													"nativeSrc": "11168:220:8",
													"nodeType": "YulBlock",
													"src": "11168:220:8",
													"statements": [
														{
															"nativeSrc": "11178:74:8",
															"nodeType": "YulAssignment",
															"src": "11178:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11244:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11244:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11249:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11249:2:8",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11185:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11185:58:8"
																},
																"nativeSrc": "11185:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11185:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11178:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11178:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11350:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11350:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																	"nativeSrc": "11261:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11261:88:8"
																},
																"nativeSrc": "11261:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11261:93:8"
															},
															"nativeSrc": "11261:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11261:93:8"
														},
														{
															"nativeSrc": "11363:19:8",
															"nodeType": "YulAssignment",
															"src": "11363:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11374:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11374:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11379:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11379:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11370:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11370:3:8"
																},
																"nativeSrc": "11370:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11370:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11363:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11363:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11022:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11156:3:8",
														"nodeType": "YulTypedName",
														"src": "11156:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11164:3:8",
														"nodeType": "YulTypedName",
														"src": "11164:3:8",
														"type": ""
													}
												],
												"src": "11022:366:8"
											},
											{
												"body": {
													"nativeSrc": "11565:248:8",
													"nodeType": "YulBlock",
													"src": "11565:248:8",
													"statements": [
														{
															"nativeSrc": "11575:26:8",
															"nodeType": "YulAssignment",
															"src": "11575:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11587:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11587:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11598:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11598:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11583:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11583:3:8"
																},
																"nativeSrc": "11583:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11583:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11575:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11575:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11622:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11622:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11633:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11633:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11618:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11618:3:8"
																		},
																		"nativeSrc": "11618:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11618:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11641:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11641:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11647:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11647:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11637:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11637:3:8"
																		},
																		"nativeSrc": "11637:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11637:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11611:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11611:6:8"
																},
																"nativeSrc": "11611:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11611:47:8"
															},
															"nativeSrc": "11611:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11611:47:8"
														},
														{
															"nativeSrc": "11667:139:8",
															"nodeType": "YulAssignment",
															"src": "11667:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11801:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11801:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11675:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11675:124:8"
																},
																"nativeSrc": "11675:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11675:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11667:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11667:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11394:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11545:9:8",
														"nodeType": "YulTypedName",
														"src": "11545:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11560:4:8",
														"nodeType": "YulTypedName",
														"src": "11560:4:8",
														"type": ""
													}
												],
												"src": "11394:419:8"
											},
											{
												"body": {
													"nativeSrc": "11925:115:8",
													"nodeType": "YulBlock",
													"src": "11925:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11947:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11947:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11955:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11955:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11943:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11943:3:8"
																		},
																		"nativeSrc": "11943:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11943:14:8"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b",
																		"kind": "string",
																		"nativeSrc": "11959:34:8",
																		"nodeType": "YulLiteral",
																		"src": "11959:34:8",
																		"type": "",
																		"value": "Transfer failed: Tokens are lock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11936:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11936:6:8"
																},
																"nativeSrc": "11936:58:8",
																"nodeType": "YulFunctionCall",
																"src": "11936:58:8"
															},
															"nativeSrc": "11936:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "11936:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12015:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12015:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12023:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12023:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12011:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12011:3:8"
																		},
																		"nativeSrc": "12011:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12011:15:8"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "12028:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12028:4:8",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12004:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12004:6:8"
																},
																"nativeSrc": "12004:29:8",
																"nodeType": "YulFunctionCall",
																"src": "12004:29:8"
															},
															"nativeSrc": "12004:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "12004:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
												"nativeSrc": "11819:221:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11917:6:8",
														"nodeType": "YulTypedName",
														"src": "11917:6:8",
														"type": ""
													}
												],
												"src": "11819:221:8"
											},
											{
												"body": {
													"nativeSrc": "12192:220:8",
													"nodeType": "YulBlock",
													"src": "12192:220:8",
													"statements": [
														{
															"nativeSrc": "12202:74:8",
															"nodeType": "YulAssignment",
															"src": "12202:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12268:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12268:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12273:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12273:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12209:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12209:58:8"
																},
																"nativeSrc": "12209:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12209:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12202:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12202:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12374:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12374:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																	"nativeSrc": "12285:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12285:88:8"
																},
																"nativeSrc": "12285:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12285:93:8"
															},
															"nativeSrc": "12285:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12285:93:8"
														},
														{
															"nativeSrc": "12387:19:8",
															"nodeType": "YulAssignment",
															"src": "12387:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12398:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12398:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12403:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12403:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12394:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12394:3:8"
																},
																"nativeSrc": "12394:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12394:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12387:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12387:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12046:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12180:3:8",
														"nodeType": "YulTypedName",
														"src": "12180:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12188:3:8",
														"nodeType": "YulTypedName",
														"src": "12188:3:8",
														"type": ""
													}
												],
												"src": "12046:366:8"
											},
											{
												"body": {
													"nativeSrc": "12589:248:8",
													"nodeType": "YulBlock",
													"src": "12589:248:8",
													"statements": [
														{
															"nativeSrc": "12599:26:8",
															"nodeType": "YulAssignment",
															"src": "12599:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12611:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12611:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12622:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12622:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12607:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12607:3:8"
																},
																"nativeSrc": "12607:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12607:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12599:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12599:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12646:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12646:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12657:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12657:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12642:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12642:3:8"
																		},
																		"nativeSrc": "12642:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12642:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12665:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12665:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12671:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12671:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12661:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12661:3:8"
																		},
																		"nativeSrc": "12661:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12661:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12635:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12635:6:8"
																},
																"nativeSrc": "12635:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12635:47:8"
															},
															"nativeSrc": "12635:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12635:47:8"
														},
														{
															"nativeSrc": "12691:139:8",
															"nodeType": "YulAssignment",
															"src": "12691:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12825:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12825:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12699:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12699:124:8"
																},
																"nativeSrc": "12699:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12699:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12691:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12691:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12418:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12569:9:8",
														"nodeType": "YulTypedName",
														"src": "12569:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12584:4:8",
														"nodeType": "YulTypedName",
														"src": "12584:4:8",
														"type": ""
													}
												],
												"src": "12418:419:8"
											},
											{
												"body": {
													"nativeSrc": "12949:58:8",
													"nodeType": "YulBlock",
													"src": "12949:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12971:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12971:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12979:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12979:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12967:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12967:3:8"
																		},
																		"nativeSrc": "12967:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12967:14:8"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "12983:16:8",
																		"nodeType": "YulLiteral",
																		"src": "12983:16:8",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12960:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12960:6:8"
																},
																"nativeSrc": "12960:40:8",
																"nodeType": "YulFunctionCall",
																"src": "12960:40:8"
															},
															"nativeSrc": "12960:40:8",
															"nodeType": "YulExpressionStatement",
															"src": "12960:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nativeSrc": "12843:164:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12941:6:8",
														"nodeType": "YulTypedName",
														"src": "12941:6:8",
														"type": ""
													}
												],
												"src": "12843:164:8"
											},
											{
												"body": {
													"nativeSrc": "13159:220:8",
													"nodeType": "YulBlock",
													"src": "13159:220:8",
													"statements": [
														{
															"nativeSrc": "13169:74:8",
															"nodeType": "YulAssignment",
															"src": "13169:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13235:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13235:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13240:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13240:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13176:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13176:58:8"
																},
																"nativeSrc": "13176:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13176:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13169:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13169:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13341:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13341:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nativeSrc": "13252:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13252:88:8"
																},
																"nativeSrc": "13252:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13252:93:8"
															},
															"nativeSrc": "13252:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13252:93:8"
														},
														{
															"nativeSrc": "13354:19:8",
															"nodeType": "YulAssignment",
															"src": "13354:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13365:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13365:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13370:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13370:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13361:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13361:3:8"
																},
																"nativeSrc": "13361:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13361:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13354:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13354:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13013:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13147:3:8",
														"nodeType": "YulTypedName",
														"src": "13147:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13155:3:8",
														"nodeType": "YulTypedName",
														"src": "13155:3:8",
														"type": ""
													}
												],
												"src": "13013:366:8"
											},
											{
												"body": {
													"nativeSrc": "13556:248:8",
													"nodeType": "YulBlock",
													"src": "13556:248:8",
													"statements": [
														{
															"nativeSrc": "13566:26:8",
															"nodeType": "YulAssignment",
															"src": "13566:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13578:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13578:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13589:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13589:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13574:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13574:3:8"
																},
																"nativeSrc": "13574:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13574:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13566:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13566:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13613:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13613:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13624:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13624:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13609:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13609:3:8"
																		},
																		"nativeSrc": "13609:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13609:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13632:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13632:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13638:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13638:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13628:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13628:3:8"
																		},
																		"nativeSrc": "13628:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13628:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13602:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13602:6:8"
																},
																"nativeSrc": "13602:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13602:47:8"
															},
															"nativeSrc": "13602:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13602:47:8"
														},
														{
															"nativeSrc": "13658:139:8",
															"nodeType": "YulAssignment",
															"src": "13658:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13792:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13792:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13666:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13666:124:8"
																},
																"nativeSrc": "13666:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13666:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13658:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13658:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13385:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13536:9:8",
														"nodeType": "YulTypedName",
														"src": "13536:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13551:4:8",
														"nodeType": "YulTypedName",
														"src": "13551:4:8",
														"type": ""
													}
												],
												"src": "13385:419:8"
											},
											{
												"body": {
													"nativeSrc": "13916:120:8",
													"nodeType": "YulBlock",
													"src": "13916:120:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13938:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13938:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13946:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13946:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13934:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13934:3:8"
																		},
																		"nativeSrc": "13934:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13934:14:8"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a204d69736d617463686564",
																		"kind": "string",
																		"nativeSrc": "13950:34:8",
																		"nodeType": "YulLiteral",
																		"src": "13950:34:8",
																		"type": "",
																		"value": "BatchTransfer failed: Mismatched"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13927:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13927:6:8"
																},
																"nativeSrc": "13927:58:8",
																"nodeType": "YulFunctionCall",
																"src": "13927:58:8"
															},
															"nativeSrc": "13927:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "13927:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14006:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14006:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14014:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14014:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14002:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14002:3:8"
																		},
																		"nativeSrc": "14002:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14002:15:8"
																	},
																	{
																		"hexValue": "20617272617973",
																		"kind": "string",
																		"nativeSrc": "14019:9:8",
																		"nodeType": "YulLiteral",
																		"src": "14019:9:8",
																		"type": "",
																		"value": " arrays"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13995:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13995:6:8"
																},
																"nativeSrc": "13995:34:8",
																"nodeType": "YulFunctionCall",
																"src": "13995:34:8"
															},
															"nativeSrc": "13995:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "13995:34:8"
														}
													]
												},
												"name": "store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
												"nativeSrc": "13810:226:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13908:6:8",
														"nodeType": "YulTypedName",
														"src": "13908:6:8",
														"type": ""
													}
												],
												"src": "13810:226:8"
											},
											{
												"body": {
													"nativeSrc": "14188:220:8",
													"nodeType": "YulBlock",
													"src": "14188:220:8",
													"statements": [
														{
															"nativeSrc": "14198:74:8",
															"nodeType": "YulAssignment",
															"src": "14198:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14264:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14264:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14269:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14269:2:8",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14205:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14205:58:8"
																},
																"nativeSrc": "14205:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14205:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14198:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14198:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14370:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14370:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																	"nativeSrc": "14281:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "14281:88:8"
																},
																"nativeSrc": "14281:93:8",
																"nodeType": "YulFunctionCall",
																"src": "14281:93:8"
															},
															"nativeSrc": "14281:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "14281:93:8"
														},
														{
															"nativeSrc": "14383:19:8",
															"nodeType": "YulAssignment",
															"src": "14383:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14394:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14394:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14399:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14399:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14390:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14390:3:8"
																},
																"nativeSrc": "14390:12:8",
																"nodeType": "YulFunctionCall",
																"src": "14390:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14383:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14383:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14042:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14176:3:8",
														"nodeType": "YulTypedName",
														"src": "14176:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14184:3:8",
														"nodeType": "YulTypedName",
														"src": "14184:3:8",
														"type": ""
													}
												],
												"src": "14042:366:8"
											},
											{
												"body": {
													"nativeSrc": "14585:248:8",
													"nodeType": "YulBlock",
													"src": "14585:248:8",
													"statements": [
														{
															"nativeSrc": "14595:26:8",
															"nodeType": "YulAssignment",
															"src": "14595:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14607:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14607:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14618:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14618:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14603:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14603:3:8"
																},
																"nativeSrc": "14603:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14603:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14595:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14595:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14642:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14642:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14653:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14653:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14638:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14638:3:8"
																		},
																		"nativeSrc": "14638:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14638:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14661:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14661:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14667:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14667:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14657:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14657:3:8"
																		},
																		"nativeSrc": "14657:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14657:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14631:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14631:6:8"
																},
																"nativeSrc": "14631:47:8",
																"nodeType": "YulFunctionCall",
																"src": "14631:47:8"
															},
															"nativeSrc": "14631:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "14631:47:8"
														},
														{
															"nativeSrc": "14687:139:8",
															"nodeType": "YulAssignment",
															"src": "14687:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14821:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14821:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14695:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "14695:124:8"
																},
																"nativeSrc": "14695:131:8",
																"nodeType": "YulFunctionCall",
																"src": "14695:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14687:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14687:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14414:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14565:9:8",
														"nodeType": "YulTypedName",
														"src": "14565:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14580:4:8",
														"nodeType": "YulTypedName",
														"src": "14580:4:8",
														"type": ""
													}
												],
												"src": "14414:419:8"
											},
											{
												"body": {
													"nativeSrc": "14867:152:8",
													"nodeType": "YulBlock",
													"src": "14867:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14884:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14884:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14887:77:8",
																		"nodeType": "YulLiteral",
																		"src": "14887:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14877:6:8"
																},
																"nativeSrc": "14877:88:8",
																"nodeType": "YulFunctionCall",
																"src": "14877:88:8"
															},
															"nativeSrc": "14877:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "14877:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14981:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14981:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14984:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14984:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14974:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14974:6:8"
																},
																"nativeSrc": "14974:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14974:15:8"
															},
															"nativeSrc": "14974:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14974:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15005:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15005:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15008:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15008:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14998:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14998:6:8"
																},
																"nativeSrc": "14998:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14998:15:8"
															},
															"nativeSrc": "14998:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14998:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14839:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14839:180:8"
											},
											{
												"body": {
													"nativeSrc": "15131:127:8",
													"nodeType": "YulBlock",
													"src": "15131:127:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15153:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15153:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15161:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15161:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15149:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15149:3:8"
																		},
																		"nativeSrc": "15149:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15149:14:8"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420",
																		"kind": "string",
																		"nativeSrc": "15165:34:8",
																		"nodeType": "YulLiteral",
																		"src": "15165:34:8",
																		"type": "",
																		"value": "BatchTransfer failed: Recipient "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15142:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15142:6:8"
																},
																"nativeSrc": "15142:58:8",
																"nodeType": "YulFunctionCall",
																"src": "15142:58:8"
															},
															"nativeSrc": "15142:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "15142:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15221:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15221:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15229:2:8",
																				"nodeType": "YulLiteral",
																				"src": "15229:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15217:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15217:3:8"
																		},
																		"nativeSrc": "15217:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15217:15:8"
																	},
																	{
																		"hexValue": "697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "15234:16:8",
																		"nodeType": "YulLiteral",
																		"src": "15234:16:8",
																		"type": "",
																		"value": "is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15210:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15210:6:8"
																},
																"nativeSrc": "15210:41:8",
																"nodeType": "YulFunctionCall",
																"src": "15210:41:8"
															},
															"nativeSrc": "15210:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "15210:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
												"nativeSrc": "15025:233:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15123:6:8",
														"nodeType": "YulTypedName",
														"src": "15123:6:8",
														"type": ""
													}
												],
												"src": "15025:233:8"
											},
											{
												"body": {
													"nativeSrc": "15410:220:8",
													"nodeType": "YulBlock",
													"src": "15410:220:8",
													"statements": [
														{
															"nativeSrc": "15420:74:8",
															"nodeType": "YulAssignment",
															"src": "15420:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15486:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15491:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15491:2:8",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15427:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "15427:58:8"
																},
																"nativeSrc": "15427:67:8",
																"nodeType": "YulFunctionCall",
																"src": "15427:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15420:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15420:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15592:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15592:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																	"nativeSrc": "15503:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "15503:88:8"
																},
																"nativeSrc": "15503:93:8",
																"nodeType": "YulFunctionCall",
																"src": "15503:93:8"
															},
															"nativeSrc": "15503:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "15503:93:8"
														},
														{
															"nativeSrc": "15605:19:8",
															"nodeType": "YulAssignment",
															"src": "15605:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15616:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15616:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15621:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15621:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15612:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15612:3:8"
																},
																"nativeSrc": "15612:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15612:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15605:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15605:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15264:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15398:3:8",
														"nodeType": "YulTypedName",
														"src": "15398:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15406:3:8",
														"nodeType": "YulTypedName",
														"src": "15406:3:8",
														"type": ""
													}
												],
												"src": "15264:366:8"
											},
											{
												"body": {
													"nativeSrc": "15807:248:8",
													"nodeType": "YulBlock",
													"src": "15807:248:8",
													"statements": [
														{
															"nativeSrc": "15817:26:8",
															"nodeType": "YulAssignment",
															"src": "15817:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15829:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15829:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15840:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15840:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15825:3:8"
																},
																"nativeSrc": "15825:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15825:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15817:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15817:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15864:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15864:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15875:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15875:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15860:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15860:3:8"
																		},
																		"nativeSrc": "15860:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15860:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15883:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15883:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15889:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15889:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15879:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15879:3:8"
																		},
																		"nativeSrc": "15879:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15879:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15853:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15853:6:8"
																},
																"nativeSrc": "15853:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15853:47:8"
															},
															"nativeSrc": "15853:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15853:47:8"
														},
														{
															"nativeSrc": "15909:139:8",
															"nodeType": "YulAssignment",
															"src": "15909:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16043:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "16043:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15917:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15917:124:8"
																},
																"nativeSrc": "15917:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15917:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15909:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15909:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15636:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15787:9:8",
														"nodeType": "YulTypedName",
														"src": "15787:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15802:4:8",
														"nodeType": "YulTypedName",
														"src": "15802:4:8",
														"type": ""
													}
												],
												"src": "15636:419:8"
											},
											{
												"body": {
													"nativeSrc": "16167:60:8",
													"nodeType": "YulBlock",
													"src": "16167:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16189:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16189:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16197:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16197:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16185:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16185:3:8"
																		},
																		"nativeSrc": "16185:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16185:14:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "16201:18:8",
																		"nodeType": "YulLiteral",
																		"src": "16201:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16178:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16178:6:8"
																},
																"nativeSrc": "16178:42:8",
																"nodeType": "YulFunctionCall",
																"src": "16178:42:8"
															},
															"nativeSrc": "16178:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "16178:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "16061:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16159:6:8",
														"nodeType": "YulTypedName",
														"src": "16159:6:8",
														"type": ""
													}
												],
												"src": "16061:166:8"
											},
											{
												"body": {
													"nativeSrc": "16379:220:8",
													"nodeType": "YulBlock",
													"src": "16379:220:8",
													"statements": [
														{
															"nativeSrc": "16389:74:8",
															"nodeType": "YulAssignment",
															"src": "16389:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16455:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16455:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16460:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16460:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16396:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "16396:58:8"
																},
																"nativeSrc": "16396:67:8",
																"nodeType": "YulFunctionCall",
																"src": "16396:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16389:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16389:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16561:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16561:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "16472:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "16472:88:8"
																},
																"nativeSrc": "16472:93:8",
																"nodeType": "YulFunctionCall",
																"src": "16472:93:8"
															},
															"nativeSrc": "16472:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "16472:93:8"
														},
														{
															"nativeSrc": "16574:19:8",
															"nodeType": "YulAssignment",
															"src": "16574:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16585:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16585:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16590:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16590:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16581:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16581:3:8"
																},
																"nativeSrc": "16581:12:8",
																"nodeType": "YulFunctionCall",
																"src": "16581:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16574:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16574:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16233:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16367:3:8",
														"nodeType": "YulTypedName",
														"src": "16367:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16375:3:8",
														"nodeType": "YulTypedName",
														"src": "16375:3:8",
														"type": ""
													}
												],
												"src": "16233:366:8"
											},
											{
												"body": {
													"nativeSrc": "16776:248:8",
													"nodeType": "YulBlock",
													"src": "16776:248:8",
													"statements": [
														{
															"nativeSrc": "16786:26:8",
															"nodeType": "YulAssignment",
															"src": "16786:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16798:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16798:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16809:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16809:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16794:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16794:3:8"
																},
																"nativeSrc": "16794:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16794:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16786:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16786:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16833:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16833:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16844:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16844:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16829:3:8"
																		},
																		"nativeSrc": "16829:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16829:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16852:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "16852:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16858:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16858:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16848:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16848:3:8"
																		},
																		"nativeSrc": "16848:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16848:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16822:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16822:6:8"
																},
																"nativeSrc": "16822:47:8",
																"nodeType": "YulFunctionCall",
																"src": "16822:47:8"
															},
															"nativeSrc": "16822:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "16822:47:8"
														},
														{
															"nativeSrc": "16878:139:8",
															"nodeType": "YulAssignment",
															"src": "16878:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17012:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17012:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16886:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "16886:124:8"
																},
																"nativeSrc": "16886:131:8",
																"nodeType": "YulFunctionCall",
																"src": "16886:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16878:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16878:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16605:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16756:9:8",
														"nodeType": "YulTypedName",
														"src": "16756:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16771:4:8",
														"nodeType": "YulTypedName",
														"src": "16771:4:8",
														"type": ""
													}
												],
												"src": "16605:419:8"
											},
											{
												"body": {
													"nativeSrc": "17184:288:8",
													"nodeType": "YulBlock",
													"src": "17184:288:8",
													"statements": [
														{
															"nativeSrc": "17194:26:8",
															"nodeType": "YulAssignment",
															"src": "17194:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17206:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17206:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17217:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17217:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17202:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17202:3:8"
																},
																"nativeSrc": "17202:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17202:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17194:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17194:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17274:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17274:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17287:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17287:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17298:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17298:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17283:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17283:3:8"
																		},
																		"nativeSrc": "17283:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17283:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17230:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17230:43:8"
																},
																"nativeSrc": "17230:71:8",
																"nodeType": "YulFunctionCall",
																"src": "17230:71:8"
															},
															"nativeSrc": "17230:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "17230:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17355:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17355:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17368:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17368:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17379:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17379:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17364:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17364:3:8"
																		},
																		"nativeSrc": "17364:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17364:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17311:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17311:43:8"
																},
																"nativeSrc": "17311:72:8",
																"nodeType": "YulFunctionCall",
																"src": "17311:72:8"
															},
															"nativeSrc": "17311:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "17311:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17437:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17437:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17450:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17450:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17461:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17461:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17446:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17446:3:8"
																		},
																		"nativeSrc": "17446:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17446:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17393:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "17393:43:8"
																},
																"nativeSrc": "17393:72:8",
																"nodeType": "YulFunctionCall",
																"src": "17393:72:8"
															},
															"nativeSrc": "17393:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "17393:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17030:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17140:9:8",
														"nodeType": "YulTypedName",
														"src": "17140:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17152:6:8",
														"nodeType": "YulTypedName",
														"src": "17152:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17160:6:8",
														"nodeType": "YulTypedName",
														"src": "17160:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17168:6:8",
														"nodeType": "YulTypedName",
														"src": "17168:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17179:4:8",
														"nodeType": "YulTypedName",
														"src": "17179:4:8",
														"type": ""
													}
												],
												"src": "17030:442:8"
											},
											{
												"body": {
													"nativeSrc": "17584:64:8",
													"nodeType": "YulBlock",
													"src": "17584:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17606:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "17606:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17614:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17614:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17602:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17602:3:8"
																		},
																		"nativeSrc": "17602:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17602:14:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "17618:22:8",
																		"nodeType": "YulLiteral",
																		"src": "17618:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17595:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17595:6:8"
																},
																"nativeSrc": "17595:46:8",
																"nodeType": "YulFunctionCall",
																"src": "17595:46:8"
															},
															"nativeSrc": "17595:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "17595:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "17478:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17576:6:8",
														"nodeType": "YulTypedName",
														"src": "17576:6:8",
														"type": ""
													}
												],
												"src": "17478:170:8"
											},
											{
												"body": {
													"nativeSrc": "17800:220:8",
													"nodeType": "YulBlock",
													"src": "17800:220:8",
													"statements": [
														{
															"nativeSrc": "17810:74:8",
															"nodeType": "YulAssignment",
															"src": "17810:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17876:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17881:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17881:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17817:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "17817:58:8"
																},
																"nativeSrc": "17817:67:8",
																"nodeType": "YulFunctionCall",
																"src": "17817:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17810:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17810:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17982:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17982:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "17893:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "17893:88:8"
																},
																"nativeSrc": "17893:93:8",
																"nodeType": "YulFunctionCall",
																"src": "17893:93:8"
															},
															"nativeSrc": "17893:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "17893:93:8"
														},
														{
															"nativeSrc": "17995:19:8",
															"nodeType": "YulAssignment",
															"src": "17995:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18006:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18006:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18011:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18011:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18002:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18002:3:8"
																},
																"nativeSrc": "18002:12:8",
																"nodeType": "YulFunctionCall",
																"src": "18002:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17995:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17995:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17654:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17788:3:8",
														"nodeType": "YulTypedName",
														"src": "17788:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17796:3:8",
														"nodeType": "YulTypedName",
														"src": "17796:3:8",
														"type": ""
													}
												],
												"src": "17654:366:8"
											},
											{
												"body": {
													"nativeSrc": "18197:248:8",
													"nodeType": "YulBlock",
													"src": "18197:248:8",
													"statements": [
														{
															"nativeSrc": "18207:26:8",
															"nodeType": "YulAssignment",
															"src": "18207:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18219:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "18219:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18230:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18230:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18215:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18215:3:8"
																},
																"nativeSrc": "18215:18:8",
																"nodeType": "YulFunctionCall",
																"src": "18215:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18207:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18207:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18254:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18254:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18265:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18265:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18250:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18250:3:8"
																		},
																		"nativeSrc": "18250:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18250:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18273:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "18273:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18279:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18279:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18269:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18269:3:8"
																		},
																		"nativeSrc": "18269:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18269:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18243:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18243:6:8"
																},
																"nativeSrc": "18243:47:8",
																"nodeType": "YulFunctionCall",
																"src": "18243:47:8"
															},
															"nativeSrc": "18243:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "18243:47:8"
														},
														{
															"nativeSrc": "18299:139:8",
															"nodeType": "YulAssignment",
															"src": "18299:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18433:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18433:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18307:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "18307:124:8"
																},
																"nativeSrc": "18307:131:8",
																"nodeType": "YulFunctionCall",
																"src": "18307:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18299:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18299:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18026:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18177:9:8",
														"nodeType": "YulTypedName",
														"src": "18177:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18192:4:8",
														"nodeType": "YulTypedName",
														"src": "18192:4:8",
														"type": ""
													}
												],
												"src": "18026:419:8"
											},
											{
												"body": {
													"nativeSrc": "18479:152:8",
													"nodeType": "YulBlock",
													"src": "18479:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18496:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18496:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18499:77:8",
																		"nodeType": "YulLiteral",
																		"src": "18499:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18489:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18489:6:8"
																},
																"nativeSrc": "18489:88:8",
																"nodeType": "YulFunctionCall",
																"src": "18489:88:8"
															},
															"nativeSrc": "18489:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "18489:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18593:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18593:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18596:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18596:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18586:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18586:6:8"
																},
																"nativeSrc": "18586:15:8",
																"nodeType": "YulFunctionCall",
																"src": "18586:15:8"
															},
															"nativeSrc": "18586:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "18586:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18617:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18617:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18620:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18620:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18610:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18610:6:8"
																},
																"nativeSrc": "18610:15:8",
																"nodeType": "YulFunctionCall",
																"src": "18610:15:8"
															},
															"nativeSrc": "18610:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "18610:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "18451:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "18451:180:8"
											},
											{
												"body": {
													"nativeSrc": "18681:147:8",
													"nodeType": "YulBlock",
													"src": "18681:147:8",
													"statements": [
														{
															"nativeSrc": "18691:25:8",
															"nodeType": "YulAssignment",
															"src": "18691:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18714:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18714:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18696:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "18696:17:8"
																},
																"nativeSrc": "18696:20:8",
																"nodeType": "YulFunctionCall",
																"src": "18696:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18691:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "18691:1:8"
																}
															]
														},
														{
															"nativeSrc": "18725:25:8",
															"nodeType": "YulAssignment",
															"src": "18725:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18748:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18748:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18730:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "18730:17:8"
																},
																"nativeSrc": "18730:20:8",
																"nodeType": "YulFunctionCall",
																"src": "18730:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18725:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "18725:1:8"
																}
															]
														},
														{
															"nativeSrc": "18759:16:8",
															"nodeType": "YulAssignment",
															"src": "18759:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18770:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18770:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18773:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18773:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18766:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18766:3:8"
																},
																"nativeSrc": "18766:9:8",
																"nodeType": "YulFunctionCall",
																"src": "18766:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "18759:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18759:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18799:22:8",
																"nodeType": "YulBlock",
																"src": "18799:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18801:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "18801:16:8"
																			},
																			"nativeSrc": "18801:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18801:18:8"
																		},
																		"nativeSrc": "18801:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "18801:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18791:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18791:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "18794:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18794:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18788:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "18788:2:8"
																},
																"nativeSrc": "18788:10:8",
																"nodeType": "YulFunctionCall",
																"src": "18788:10:8"
															},
															"nativeSrc": "18785:36:8",
															"nodeType": "YulIf",
															"src": "18785:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "18637:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18668:1:8",
														"nodeType": "YulTypedName",
														"src": "18668:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18671:1:8",
														"nodeType": "YulTypedName",
														"src": "18671:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "18677:3:8",
														"nodeType": "YulTypedName",
														"src": "18677:3:8",
														"type": ""
													}
												],
												"src": "18637:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Sender is black\")\n\n        mstore(add(memPtr, 32), \"listed\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Recipient is bl\")\n\n        mstore(add(memPtr, 32), \"acklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Tokens are lock\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f(memPtr) {\n\n        mstore(add(memPtr, 0), \"BatchTransfer failed: Mismatched\")\n\n        mstore(add(memPtr, 32), \" arrays\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc(memPtr) {\n\n        mstore(add(memPtr, 0), \"BatchTransfer failed: Recipient \")\n\n        mstore(add(memPtr, 32), \"is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a9059cbb1161007c578063a9059cbb14610354578063c66e409514610384578063dbac26e9146103a2578063dd62ed3e146103d2578063f2fde38b14610402578063fe575a871461041e5761014d565b8063715018a6146102b85780638456cb59146102c257806388d695b2146102cc5780638da5cb5b146102e857806395d89b41146103065780639bc289f1146103245761014d565b80632e0d2a00116101155780632e0d2a001461020a578063313ce567146102265780633e579307146102445780633f4ba83a146102605780635c975abb1461026a57806370a08231146102885761014d565b806306fdde0314610152578063095ea7b314610170578063153b0d1e146101a057806318160ddd146101bc57806323b872dd146101da575b600080fd5b61015a61044e565b6040516101679190611933565b60405180910390f35b61018a600480360381019061018591906119f3565b6104e0565b6040516101979190611a4e565b60405180910390f35b6101ba60048036038101906101b59190611a95565b610503565b005b6101c46105b4565b6040516101d19190611ae4565b60405180910390f35b6101f460048036038101906101ef9190611aff565b6105be565b6040516102019190611a4e565b60405180910390f35b610224600480360381019061021f9190611b52565b6107c2565b005b61022e610851565b60405161023b9190611b9b565b60405180910390f35b61025e600480360381019061025991906119f3565b61085a565b005b610268610980565b005b610272610992565b60405161027f9190611a4e565b60405180910390f35b6102a2600480360381019061029d9190611b52565b6109a9565b6040516102af9190611ae4565b60405180910390f35b6102c06109f1565b005b6102ca610a05565b005b6102e660048036038101906102e19190611c71565b610a17565b005b6102f0610b8e565b6040516102fd9190611d01565b60405180910390f35b61030e610bb8565b60405161031b9190611933565b60405180910390f35b61033e60048036038101906103399190611b52565b610c4a565b60405161034b9190611ae4565b60405180910390f35b61036e600480360381019061036991906119f3565b610c62565b60405161037b9190611a4e565b60405180910390f35b61038c610e64565b6040516103999190611d01565b60405180910390f35b6103bc60048036038101906103b79190611b52565b610e8a565b6040516103c99190611a4e565b60405180910390f35b6103ec60048036038101906103e79190611d1c565b610eaa565b6040516103f99190611ae4565b60405180910390f35b61041c60048036038101906104179190611b52565b610f31565b005b61043860048036038101906104339190611b52565b610fb7565b6040516104459190611a4e565b60405180910390f35b60606003805461045d90611d8b565b80601f016020809104026020016040519081016040528092919081815260200182805461048990611d8b565b80156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b6000806104eb61100d565b90506104f8818585611015565b600191505092915050565b61050b611027565b80600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8826040516105a89190611a4e565b60405180910390a25050565b6000600254905090565b60006105c86110ae565b600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90611e2e565b60405180910390fd5b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156106e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d990611ec0565b60405180910390fd5b600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544210158061076f57506000600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b6107ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a590611f52565b60405180910390fd5b6107b98484846110f8565b90509392505050565b6107ca611027565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad860405160405180910390a250565b60006012905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e190611fbe565b60405180910390fd5b80600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f826040516109749190611ae4565b60405180910390a25050565b610988611027565b610990611127565b565b6000600560149054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109f9611027565b610a03600061118a565b565b610a0d611027565b610a15611250565b565b610a1f6110ae565b818190508484905014610a67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5e90612050565b60405180910390fd5b600084849050905060005b81811015610b865760096000878784818110610a9157610a90612070565b5b9050602002016020810190610aa69190611b52565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2590612111565b60405180910390fd5b610b7933878784818110610b4557610b44612070565b5b9050602002016020810190610b5a9190611b52565b868685818110610b6d57610b6c612070565b5b905060200201356112b3565b8080600101915050610a72565b505050505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610bc790611d8b565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf390611d8b565b8015610c405780601f10610c1557610100808354040283529160200191610c40565b820191906000526020600020905b815481529060010190602001808311610c2357829003601f168201915b5050505050905090565b60086020528060005260406000206000915090505481565b6000610c6c6110ae565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610cf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf090611e2e565b60405180910390fd5b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7d90611ec0565b60405180910390fd5b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442101580610e1357506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b610e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4990611f52565b60405180910390fd5b610e5c83836113a7565b905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900460ff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f39611027565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fab5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fa29190611d01565b60405180910390fd5b610fb48161118a565b50565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600033905090565b61102283838360016113ca565b505050565b61102f61100d565b73ffffffffffffffffffffffffffffffffffffffff1661104d610b8e565b73ffffffffffffffffffffffffffffffffffffffff16146110ac5761107061100d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016110a39190611d01565b60405180910390fd5b565b6110b6610992565b156110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed9061217d565b60405180910390fd5b565b60008061110361100d565b90506111108582856115a1565b61111b8585856112b3565b60019150509392505050565b61112f611635565b6000600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61117361100d565b6040516111809190611d01565b60405180910390a1565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6112586110ae565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861129c61100d565b6040516112a99190611d01565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113255760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161131c9190611d01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113975760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161138e9190611d01565b60405180910390fd5b6113a283838361167e565b505050565b6000806113b261100d565b90506113bf8185856112b3565b600191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361143c5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016114339190611d01565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114ae5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114a59190611d01565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561159b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115929190611ae4565b60405180910390a35b50505050565b60006115ad8484610eaa565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461162f578181101561161f578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016116169392919061219d565b60405180910390fd5b61162e848484840360006113ca565b5b50505050565b61163d610992565b61167c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167390612220565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116d05780600260008282546116c4919061226f565b925050819055506117a3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561175c578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016117539392919061219d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117ec5780600260008282540392505081905550611839565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118969190611ae4565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118dd5780820151818401526020810190506118c2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611905826118a3565b61190f81856118ae565b935061191f8185602086016118bf565b611928816118e9565b840191505092915050565b6000602082019050818103600083015261194d81846118fa565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061198a8261195f565b9050919050565b61199a8161197f565b81146119a557600080fd5b50565b6000813590506119b781611991565b92915050565b6000819050919050565b6119d0816119bd565b81146119db57600080fd5b50565b6000813590506119ed816119c7565b92915050565b60008060408385031215611a0a57611a09611955565b5b6000611a18858286016119a8565b9250506020611a29858286016119de565b9150509250929050565b60008115159050919050565b611a4881611a33565b82525050565b6000602082019050611a636000830184611a3f565b92915050565b611a7281611a33565b8114611a7d57600080fd5b50565b600081359050611a8f81611a69565b92915050565b60008060408385031215611aac57611aab611955565b5b6000611aba858286016119a8565b9250506020611acb85828601611a80565b9150509250929050565b611ade816119bd565b82525050565b6000602082019050611af96000830184611ad5565b92915050565b600080600060608486031215611b1857611b17611955565b5b6000611b26868287016119a8565b9350506020611b37868287016119a8565b9250506040611b48868287016119de565b9150509250925092565b600060208284031215611b6857611b67611955565b5b6000611b76848285016119a8565b91505092915050565b600060ff82169050919050565b611b9581611b7f565b82525050565b6000602082019050611bb06000830184611b8c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611bdb57611bda611bb6565b5b8235905067ffffffffffffffff811115611bf857611bf7611bbb565b5b602083019150836020820283011115611c1457611c13611bc0565b5b9250929050565b60008083601f840112611c3157611c30611bb6565b5b8235905067ffffffffffffffff811115611c4e57611c4d611bbb565b5b602083019150836020820283011115611c6a57611c69611bc0565b5b9250929050565b60008060008060408587031215611c8b57611c8a611955565b5b600085013567ffffffffffffffff811115611ca957611ca861195a565b5b611cb587828801611bc5565b9450945050602085013567ffffffffffffffff811115611cd857611cd761195a565b5b611ce487828801611c1b565b925092505092959194509250565b611cfb8161197f565b82525050565b6000602082019050611d166000830184611cf2565b92915050565b60008060408385031215611d3357611d32611955565b5b6000611d41858286016119a8565b9250506020611d52858286016119a8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611da357607f821691505b602082108103611db657611db5611d5c565b5b50919050565b7f5472616e73666572206661696c65643a2053656e64657220697320626c61636b60008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b6000611e186026836118ae565b9150611e2382611dbc565b604082019050919050565b60006020820190508181036000830152611e4781611e0b565b9050919050565b7f5472616e73666572206661696c65643a20526563697069656e7420697320626c60008201527f61636b6c69737465640000000000000000000000000000000000000000000000602082015250565b6000611eaa6029836118ae565b9150611eb582611e4e565b604082019050919050565b60006020820190508181036000830152611ed981611e9d565b9050919050565b7f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f3c6022836118ae565b9150611f4782611ee0565b604082019050919050565b60006020820190508181036000830152611f6b81611f2f565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611fa8600e836118ae565b9150611fb382611f72565b602082019050919050565b60006020820190508181036000830152611fd781611f9b565b9050919050565b7f42617463685472616e73666572206661696c65643a204d69736d61746368656460008201527f2061727261797300000000000000000000000000000000000000000000000000602082015250565b600061203a6027836118ae565b915061204582611fde565b604082019050919050565b600060208201905081810360008301526120698161202d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f42617463685472616e73666572206661696c65643a20526563697069656e742060008201527f697320626c61636b6c6973746564000000000000000000000000000000000000602082015250565b60006120fb602e836118ae565b91506121068261209f565b604082019050919050565b6000602082019050818103600083015261212a816120ee565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006121676010836118ae565b915061217282612131565b602082019050919050565b600060208201905081810360008301526121968161215a565b9050919050565b60006060820190506121b26000830186611cf2565b6121bf6020830185611ad5565b6121cc6040830184611ad5565b949350505050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b600061220a6014836118ae565b9150612215826121d4565b602082019050919050565b60006020820190508181036000830152612239816121fd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061227a826119bd565b9150612285836119bd565b925082820190508082111561229d5761229c612240565b5b9291505056fea2646970667358221220dff3612085fad06aae850ba16757fa5114b99f91355d7bcd994cb6e0b282843064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x41E JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x324 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x2E0D2A00 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x3E579307 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x288 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH2 0x851 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1B9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x85A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x268 PUSH2 0x980 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x992 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH2 0x9F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CA PUSH2 0xA05 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0xA17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F0 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH2 0xE64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E7 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0xF31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x45D SWAP1 PUSH2 0x1D8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4EB PUSH2 0x100D JUMP JUMPDEST SWAP1 POP PUSH2 0x4F8 DUP2 DUP6 DUP6 PUSH2 0x1015 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x50B PUSH2 0x1027 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5A8 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C8 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D9 SWAP1 PUSH2 0x1EC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x76F JUMPI POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x7AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A5 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B9 DUP5 DUP5 DUP5 PUSH2 0x10F8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7CA PUSH2 0x1027 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F DUP3 PUSH1 0x40 MLOAD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x988 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0x990 PUSH2 0x1127 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F9 PUSH2 0x1027 JUMP JUMPDEST PUSH2 0xA03 PUSH1 0x0 PUSH2 0x118A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA0D PUSH2 0x1027 JUMP JUMPDEST PUSH2 0xA15 PUSH2 0x1250 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA1F PUSH2 0x10AE JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5E SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB86 JUMPI PUSH1 0x9 PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xA91 JUMPI PUSH2 0xA90 PUSH2 0x2070 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAA6 SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB25 SWAP1 PUSH2 0x2111 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB79 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xB45 JUMPI PUSH2 0xB44 PUSH2 0x2070 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB5A SWAP2 SWAP1 PUSH2 0x1B52 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xB6D JUMPI PUSH2 0xB6C PUSH2 0x2070 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x12B3 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA72 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBC7 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBF3 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC40 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC15 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC40 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC23 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6C PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF0 SWAP1 PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7D SWAP1 PUSH2 0x1EC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0xE13 JUMPI POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0xE52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE49 SWAP1 PUSH2 0x1F52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5C DUP4 DUP4 PUSH2 0x13A7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF39 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFAB JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFB4 DUP2 PUSH2 0x118A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1022 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x13CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x102F PUSH2 0x100D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x104D PUSH2 0xB8E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10AC JUMPI PUSH2 0x1070 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A3 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x10B6 PUSH2 0x992 JUMP JUMPDEST ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP1 PUSH2 0x217D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1103 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP PUSH2 0x1110 DUP6 DUP3 DUP6 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x111B DUP6 DUP6 DUP6 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x112F PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1173 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1258 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x129C PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A9 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1325 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131C SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1397 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138E SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13A2 DUP4 DUP4 DUP4 PUSH2 0x167E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13B2 PUSH2 0x100D JUMP JUMPDEST SWAP1 POP PUSH2 0x13BF DUP2 DUP6 DUP6 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x143C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1433 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14AE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A5 SWAP2 SWAP1 PUSH2 0x1D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x159B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1592 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD DUP5 DUP5 PUSH2 0xEAA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x162F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x161F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1616 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x162E DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x163D PUSH2 0x992 JUMP JUMPDEST PUSH2 0x167C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1673 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16D0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16C4 SWAP2 SWAP1 PUSH2 0x226F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x175C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1753 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17EC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1839 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1896 SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18DD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 DUP3 PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x190F DUP2 DUP6 PUSH2 0x18AE JUMP JUMPDEST SWAP4 POP PUSH2 0x191F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18BF JUMP JUMPDEST PUSH2 0x1928 DUP2 PUSH2 0x18E9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x194D DUP2 DUP5 PUSH2 0x18FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198A DUP3 PUSH2 0x195F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x199A DUP2 PUSH2 0x197F JUMP JUMPDEST DUP2 EQ PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B7 DUP2 PUSH2 0x1991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D0 DUP2 PUSH2 0x19BD JUMP JUMPDEST DUP2 EQ PUSH2 0x19DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19ED DUP2 PUSH2 0x19C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A18 DUP6 DUP3 DUP7 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A29 DUP6 DUP3 DUP7 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A48 DUP2 PUSH2 0x1A33 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A63 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A72 DUP2 PUSH2 0x1A33 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A8F DUP2 PUSH2 0x1A69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AAC JUMPI PUSH2 0x1AAB PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ABA DUP6 DUP3 DUP7 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ACB DUP6 DUP3 DUP7 ADD PUSH2 0x1A80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADE DUP2 PUSH2 0x19BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B18 JUMPI PUSH2 0x1B17 PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B26 DUP7 DUP3 DUP8 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B37 DUP7 DUP3 DUP8 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1B48 DUP7 DUP3 DUP8 ADD PUSH2 0x19DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B68 JUMPI PUSH2 0x1B67 PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B76 DUP5 DUP3 DUP6 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B95 DUP2 PUSH2 0x1B7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1BDB JUMPI PUSH2 0x1BDA PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF8 JUMPI PUSH2 0x1BF7 PUSH2 0x1BBB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C14 JUMPI PUSH2 0x1C13 PUSH2 0x1BC0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1C31 JUMPI PUSH2 0x1C30 PUSH2 0x1BB6 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C4E JUMPI PUSH2 0x1C4D PUSH2 0x1BBB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0x1BC0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1C8B JUMPI PUSH2 0x1C8A PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CA9 JUMPI PUSH2 0x1CA8 PUSH2 0x195A JUMP JUMPDEST JUMPDEST PUSH2 0x1CB5 DUP8 DUP3 DUP9 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CD8 JUMPI PUSH2 0x1CD7 PUSH2 0x195A JUMP JUMPDEST JUMPDEST PUSH2 0x1CE4 DUP8 DUP3 DUP9 ADD PUSH2 0x1C1B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1CFB DUP2 PUSH2 0x197F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D16 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D33 JUMPI PUSH2 0x1D32 PUSH2 0x1955 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D41 DUP6 DUP3 DUP7 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D52 DUP6 DUP3 DUP7 ADD PUSH2 0x19A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DA3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DB6 JUMPI PUSH2 0x1DB5 PUSH2 0x1D5C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C69737465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E18 PUSH1 0x26 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1E23 DUP3 PUSH2 0x1DBC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E47 DUP2 PUSH2 0x1E0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61636B6C69737465640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAA PUSH1 0x29 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB5 DUP3 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED9 DUP2 PUSH2 0x1E9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3C PUSH1 0x22 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F47 DUP3 PUSH2 0x1EE0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6B DUP2 PUSH2 0x1F2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA8 PUSH1 0xE DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB3 DUP3 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD7 DUP2 PUSH2 0x1F9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061727261797300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203A PUSH1 0x27 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2045 DUP3 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2069 DUP2 PUSH2 0x202D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697320626C61636B6C6973746564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FB PUSH1 0x2E DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2106 DUP3 PUSH2 0x209F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x212A DUP2 PUSH2 0x20EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2167 PUSH1 0x10 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2172 DUP3 PUSH2 0x2131 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2196 DUP2 PUSH2 0x215A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x21BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AD5 JUMP JUMPDEST PUSH2 0x21CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AD5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x220A PUSH1 0x14 DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0x2215 DUP3 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2239 DUP2 PUSH2 0x21FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x227A DUP3 PUSH2 0x19BD JUMP JUMPDEST SWAP2 POP PUSH2 0x2285 DUP4 PUSH2 0x19BD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x229D JUMPI PUSH2 0x229C PUSH2 0x2240 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF RETURN PUSH2 0x2085 STATICCALL 0xD0 PUSH11 0xAE850BA16757FA5114B99F SWAP2 CALLDATALOAD TSTORE PUSH28 0xCD994CB6E0B282843064736F6C634300081A00330000000000000000 ",
							"sourceMap": "225:3078:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1422:160:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2849:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2169:478:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2653:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1149:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1238:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1078:65;;;:::i;:::-;;1615:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1011:61:7;;;:::i;:::-;;2810:490;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;369:46:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1705:458;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;280:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;422:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1588:111:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;1422:160:7:-;1531:13:0;:11;:13::i;:::-;1526:6:7::1;1503:11;:20;1515:7;1503:20;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1559:7;1547:28;;;1568:6;1547:28;;;;;;:::i;:::-;;;;;;;;1422:160:::0;;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;2169:478:7:-;2281:4;1239:19:2;:17;:19::i;:::-;2306:11:7::1;:19;2318:6;2306:19;;;;;;;;;;;;;;;;;;;;;;;;;2305:20;2297:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2387:11;:22;2399:9;2387:22;;;;;;;;;;;;;;;;;;;;;;;;;2386:23;2378:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2492:11;:19;2504:6;2492:19;;;;;;;;;;;;;;;;2473:15;:38;;:66;;;;2538:1;2515:11;:19;2527:6;2515:19;;;;;;;;;;;;;;;;:24;2473:66;2465:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;2595:45;2614:6;2622:9;2633:6;2595:18;:45::i;:::-;2588:52;;2169:478:::0;;;;;:::o;2653:151::-;1531:13:0;:11;:13::i;:::-;2742:12:7::1;2728:11;;:26;;;;;;;;;;;;;;;;;;2784:12;2769:28;;;;;;;;;;;;2653:151:::0;:::o;1149:83::-;1199:5;1223:2;1216:9;;1149:83;:::o;1238:173::-;957:11;;;;;;;;;;;943:25;;:10;:25;;;935:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1351:9:::1;1328:11;:20;1340:7;1328:20;;;;;;;;;;;;;;;:32;;;;1385:7;1375:29;;;1394:9;1375:29;;;;;;:::i;:::-;;;;;;;;1238:173:::0;;:::o;1078:65::-;1531:13:0;:11;:13::i;:::-;1126:10:7::1;:8;:10::i;:::-;1078:65::o:0;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1011:61:7:-;1531:13:0;:11;:13::i;:::-;1057:8:7::1;:6;:8::i;:::-;1011:61::o:0;2810:490::-;1239:19:2;:17;:19::i;:::-;2954:7:7::1;;:14;;2933:10;;:17;;:35;2925:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3022:23;3048:10;;:17;;3022:43;;3080:9;3075:219;3099:15;3095:1;:19;3075:219;;;3144:11;:26;3156:10;;3167:1;3156:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3144:26;;;;;;;;;;;;;;;;;;;;;;;;;3143:27;3135:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;3235:48;3245:10;3257;;3268:1;3257:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3272:7;;3280:1;3272:10;;;;;;;:::i;:::-;;;;;;;;3235:9;:48::i;:::-;3116:3;;;;;;;3075:219;;;;2915:385;2810:490:::0;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;369:46:7:-;;;;;;;;;;;;;;;;;:::o;1705:458::-;1797:4;1239:19:2;:17;:19::i;:::-;1822:11:7::1;:23;1834:10;1822:23;;;;;;;;;;;;;;;;;;;;;;;;;1821:24;1813:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1907:11;:22;1919:9;1907:22;;;;;;;;;;;;;;;;;;;;;;;;;1906:23;1898:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2012:11;:23;2024:10;2012:23;;;;;;;;;;;;;;;;1993:15;:42;;:74;;;;2066:1;2039:11;:23;2051:10;2039:23;;;;;;;;;;;;;;;;:28;1993:74;1985:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2123:33;2138:9;2149:6;2123:14;:33::i;:::-;2116:40;;1705:458:::0;;;;:::o;280:26::-;;;;;;;;;;;;;:::o;422:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1588:111:7:-;1649:4;1672:11;:20;1684:7;1672:20;;;;;;;;;;;;;;;;;;;;;;;;;1665:27;;1588:111;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1767:106:2:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;4776:244:3:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;5393:300:3:-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;1945:106:2:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;6008:1107:3:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1555:117;1664:1;1661;1654:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:116::-;3518:21;3533:5;3518:21;:::i;:::-;3511:5;3508:32;3498:60;;3554:1;3551;3544:12;3498:60;3448:116;:::o;3570:133::-;3613:5;3651:6;3638:20;3629:29;;3667:30;3691:5;3667:30;:::i;:::-;3570:133;;;;:::o;3709:468::-;3774:6;3782;3831:2;3819:9;3810:7;3806:23;3802:32;3799:119;;;3837:79;;:::i;:::-;3799:119;3957:1;3982:53;4027:7;4018:6;4007:9;4003:22;3982:53;:::i;:::-;3972:63;;3928:117;4084:2;4110:50;4152:7;4143:6;4132:9;4128:22;4110:50;:::i;:::-;4100:60;;4055:115;3709:468;;;;;:::o;4183:118::-;4270:24;4288:5;4270:24;:::i;:::-;4265:3;4258:37;4183:118;;:::o;4307:222::-;4400:4;4438:2;4427:9;4423:18;4415:26;;4451:71;4519:1;4508:9;4504:17;4495:6;4451:71;:::i;:::-;4307:222;;;;:::o;4535:619::-;4612:6;4620;4628;4677:2;4665:9;4656:7;4652:23;4648:32;4645:119;;;4683:79;;:::i;:::-;4645:119;4803:1;4828:53;4873:7;4864:6;4853:9;4849:22;4828:53;:::i;:::-;4818:63;;4774:117;4930:2;4956:53;5001:7;4992:6;4981:9;4977:22;4956:53;:::i;:::-;4946:63;;4901:118;5058:2;5084:53;5129:7;5120:6;5109:9;5105:22;5084:53;:::i;:::-;5074:63;;5029:118;4535:619;;;;;:::o;5160:329::-;5219:6;5268:2;5256:9;5247:7;5243:23;5239:32;5236:119;;;5274:79;;:::i;:::-;5236:119;5394:1;5419:53;5464:7;5455:6;5444:9;5440:22;5419:53;:::i;:::-;5409:63;;5365:117;5160:329;;;;:::o;5495:86::-;5530:7;5570:4;5563:5;5559:16;5548:27;;5495:86;;;:::o;5587:112::-;5670:22;5686:5;5670:22;:::i;:::-;5665:3;5658:35;5587:112;;:::o;5705:214::-;5794:4;5832:2;5821:9;5817:18;5809:26;;5845:67;5909:1;5898:9;5894:17;5885:6;5845:67;:::i;:::-;5705:214;;;;:::o;5925:117::-;6034:1;6031;6024:12;6048:117;6157:1;6154;6147:12;6171:117;6280:1;6277;6270:12;6311:568;6384:8;6394:6;6444:3;6437:4;6429:6;6425:17;6421:27;6411:122;;6452:79;;:::i;:::-;6411:122;6565:6;6552:20;6542:30;;6595:18;6587:6;6584:30;6581:117;;;6617:79;;:::i;:::-;6581:117;6731:4;6723:6;6719:17;6707:29;;6785:3;6777:4;6769:6;6765:17;6755:8;6751:32;6748:41;6745:128;;;6792:79;;:::i;:::-;6745:128;6311:568;;;;;:::o;6902:::-;6975:8;6985:6;7035:3;7028:4;7020:6;7016:17;7012:27;7002:122;;7043:79;;:::i;:::-;7002:122;7156:6;7143:20;7133:30;;7186:18;7178:6;7175:30;7172:117;;;7208:79;;:::i;:::-;7172:117;7322:4;7314:6;7310:17;7298:29;;7376:3;7368:4;7360:6;7356:17;7346:8;7342:32;7339:41;7336:128;;;7383:79;;:::i;:::-;7336:128;6902:568;;;;;:::o;7476:934::-;7598:6;7606;7614;7622;7671:2;7659:9;7650:7;7646:23;7642:32;7639:119;;;7677:79;;:::i;:::-;7639:119;7825:1;7814:9;7810:17;7797:31;7855:18;7847:6;7844:30;7841:117;;;7877:79;;:::i;:::-;7841:117;7990:80;8062:7;8053:6;8042:9;8038:22;7990:80;:::i;:::-;7972:98;;;;7768:312;8147:2;8136:9;8132:18;8119:32;8178:18;8170:6;8167:30;8164:117;;;8200:79;;:::i;:::-;8164:117;8313:80;8385:7;8376:6;8365:9;8361:22;8313:80;:::i;:::-;8295:98;;;;8090:313;7476:934;;;;;;;:::o;8416:118::-;8503:24;8521:5;8503:24;:::i;:::-;8498:3;8491:37;8416:118;;:::o;8540:222::-;8633:4;8671:2;8660:9;8656:18;8648:26;;8684:71;8752:1;8741:9;8737:17;8728:6;8684:71;:::i;:::-;8540:222;;;;:::o;8768:474::-;8836:6;8844;8893:2;8881:9;8872:7;8868:23;8864:32;8861:119;;;8899:79;;:::i;:::-;8861:119;9019:1;9044:53;9089:7;9080:6;9069:9;9065:22;9044:53;:::i;:::-;9034:63;;8990:117;9146:2;9172:53;9217:7;9208:6;9197:9;9193:22;9172:53;:::i;:::-;9162:63;;9117:118;8768:474;;;;;:::o;9248:180::-;9296:77;9293:1;9286:88;9393:4;9390:1;9383:15;9417:4;9414:1;9407:15;9434:320;9478:6;9515:1;9509:4;9505:12;9495:22;;9562:1;9556:4;9552:12;9583:18;9573:81;;9639:4;9631:6;9627:17;9617:27;;9573:81;9701:2;9693:6;9690:14;9670:18;9667:38;9664:84;;9720:18;;:::i;:::-;9664:84;9485:269;9434:320;;;:::o;9760:225::-;9900:34;9896:1;9888:6;9884:14;9877:58;9969:8;9964:2;9956:6;9952:15;9945:33;9760:225;:::o;9991:366::-;10133:3;10154:67;10218:2;10213:3;10154:67;:::i;:::-;10147:74;;10230:93;10319:3;10230:93;:::i;:::-;10348:2;10343:3;10339:12;10332:19;;9991:366;;;:::o;10363:419::-;10529:4;10567:2;10556:9;10552:18;10544:26;;10616:9;10610:4;10606:20;10602:1;10591:9;10587:17;10580:47;10644:131;10770:4;10644:131;:::i;:::-;10636:139;;10363:419;;;:::o;10788:228::-;10928:34;10924:1;10916:6;10912:14;10905:58;10997:11;10992:2;10984:6;10980:15;10973:36;10788:228;:::o;11022:366::-;11164:3;11185:67;11249:2;11244:3;11185:67;:::i;:::-;11178:74;;11261:93;11350:3;11261:93;:::i;:::-;11379:2;11374:3;11370:12;11363:19;;11022:366;;;:::o;11394:419::-;11560:4;11598:2;11587:9;11583:18;11575:26;;11647:9;11641:4;11637:20;11633:1;11622:9;11618:17;11611:47;11675:131;11801:4;11675:131;:::i;:::-;11667:139;;11394:419;;;:::o;11819:221::-;11959:34;11955:1;11947:6;11943:14;11936:58;12028:4;12023:2;12015:6;12011:15;12004:29;11819:221;:::o;12046:366::-;12188:3;12209:67;12273:2;12268:3;12209:67;:::i;:::-;12202:74;;12285:93;12374:3;12285:93;:::i;:::-;12403:2;12398:3;12394:12;12387:19;;12046:366;;;:::o;12418:419::-;12584:4;12622:2;12611:9;12607:18;12599:26;;12671:9;12665:4;12661:20;12657:1;12646:9;12642:17;12635:47;12699:131;12825:4;12699:131;:::i;:::-;12691:139;;12418:419;;;:::o;12843:164::-;12983:16;12979:1;12971:6;12967:14;12960:40;12843:164;:::o;13013:366::-;13155:3;13176:67;13240:2;13235:3;13176:67;:::i;:::-;13169:74;;13252:93;13341:3;13252:93;:::i;:::-;13370:2;13365:3;13361:12;13354:19;;13013:366;;;:::o;13385:419::-;13551:4;13589:2;13578:9;13574:18;13566:26;;13638:9;13632:4;13628:20;13624:1;13613:9;13609:17;13602:47;13666:131;13792:4;13666:131;:::i;:::-;13658:139;;13385:419;;;:::o;13810:226::-;13950:34;13946:1;13938:6;13934:14;13927:58;14019:9;14014:2;14006:6;14002:15;13995:34;13810:226;:::o;14042:366::-;14184:3;14205:67;14269:2;14264:3;14205:67;:::i;:::-;14198:74;;14281:93;14370:3;14281:93;:::i;:::-;14399:2;14394:3;14390:12;14383:19;;14042:366;;;:::o;14414:419::-;14580:4;14618:2;14607:9;14603:18;14595:26;;14667:9;14661:4;14657:20;14653:1;14642:9;14638:17;14631:47;14695:131;14821:4;14695:131;:::i;:::-;14687:139;;14414:419;;;:::o;14839:180::-;14887:77;14884:1;14877:88;14984:4;14981:1;14974:15;15008:4;15005:1;14998:15;15025:233;15165:34;15161:1;15153:6;15149:14;15142:58;15234:16;15229:2;15221:6;15217:15;15210:41;15025:233;:::o;15264:366::-;15406:3;15427:67;15491:2;15486:3;15427:67;:::i;:::-;15420:74;;15503:93;15592:3;15503:93;:::i;:::-;15621:2;15616:3;15612:12;15605:19;;15264:366;;;:::o;15636:419::-;15802:4;15840:2;15829:9;15825:18;15817:26;;15889:9;15883:4;15879:20;15875:1;15864:9;15860:17;15853:47;15917:131;16043:4;15917:131;:::i;:::-;15909:139;;15636:419;;;:::o;16061:166::-;16201:18;16197:1;16189:6;16185:14;16178:42;16061:166;:::o;16233:366::-;16375:3;16396:67;16460:2;16455:3;16396:67;:::i;:::-;16389:74;;16472:93;16561:3;16472:93;:::i;:::-;16590:2;16585:3;16581:12;16574:19;;16233:366;;;:::o;16605:419::-;16771:4;16809:2;16798:9;16794:18;16786:26;;16858:9;16852:4;16848:20;16844:1;16833:9;16829:17;16822:47;16886:131;17012:4;16886:131;:::i;:::-;16878:139;;16605:419;;;:::o;17030:442::-;17179:4;17217:2;17206:9;17202:18;17194:26;;17230:71;17298:1;17287:9;17283:17;17274:6;17230:71;:::i;:::-;17311:72;17379:2;17368:9;17364:18;17355:6;17311:72;:::i;:::-;17393;17461:2;17450:9;17446:18;17437:6;17393:72;:::i;:::-;17030:442;;;;;;:::o;17478:170::-;17618:22;17614:1;17606:6;17602:14;17595:46;17478:170;:::o;17654:366::-;17796:3;17817:67;17881:2;17876:3;17817:67;:::i;:::-;17810:74;;17893:93;17982:3;17893:93;:::i;:::-;18011:2;18006:3;18002:12;17995:19;;17654:366;;;:::o;18026:419::-;18192:4;18230:2;18219:9;18215:18;18207:26;;18279:9;18273:4;18269:20;18265:1;18254:9;18250:17;18243:47;18307:131;18433:4;18307:131;:::i;:::-;18299:139;;18026:419;;;:::o;18451:180::-;18499:77;18496:1;18489:88;18596:4;18593:1;18586:15;18620:4;18617:1;18610:15;18637:191;18677:3;18696:20;18714:1;18696:20;:::i;:::-;18691:25;;18730:20;18748:1;18730:20;:::i;:::-;18725:25;;18773:1;18770;18766:9;18759:16;;18794:3;18791:1;18788:10;18785:36;;;18801:18;;:::i;:::-;18785:36;18637:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1784200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2974",
								"batchTransfer(address[],uint256[])": "infinite",
								"blacklisted(address)": "2911",
								"decimals()": "388",
								"icoContract()": "2558",
								"isBlacklisted(address)": "3015",
								"lockedUntil(address)": "2947",
								"name()": "infinite",
								"owner()": "2611",
								"pause()": "infinite",
								"paused()": "2640",
								"renounceOwnership()": "infinite",
								"setBlacklist(address,bool)": "infinite",
								"setICOContract(address)": "infinite",
								"setLockup(address,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2527",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 343,
									"end": 361,
									"name": "PUSH",
									"source": 7,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 312,
									"end": 361,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 312,
									"end": 361,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 749,
									"end": 892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 749,
									"end": 892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 831,
									"end": 841,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 809,
									"end": 813,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 815,
									"end": 821,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 853,
									"end": 884,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 859,
									"end": 869,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 871,
									"end": 883,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 871,
									"end": 883,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 853,
									"end": 858,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 853,
									"end": 858,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 858,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 853,
									"end": 884,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 884,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 853,
									"end": 884,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 853,
									"end": 884,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 884,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 749,
									"end": 892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 8,
									"value": "89"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1858,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1610,
									"end": 1858,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1716,
									"end": 1722,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1710,
									"end": 1723,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1801,
									"end": 1802,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 1799,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1792,
									"end": 1803,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1786,
									"end": 1804,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1782,
									"end": 1783,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1780,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1766,
									"end": 1805,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1735,
									"end": 1736,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1731,
									"end": 1741,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1741,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1741,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1702,
									"end": 1815,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1849,
									"end": 1850,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1840,
									"end": 1846,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1835,
									"end": 1838,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1831,
									"end": 1847,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1824,
									"end": 1851,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1672,
									"end": 1858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1953,
									"end": 1958,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 1994,
									"end": 2043,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 2036,
									"end": 2042,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2043,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1994,
									"end": 2043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2043,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1994,
									"end": 2043,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1978,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1978,
									"end": 2044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1978,
									"end": 2044,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 1978,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1969,
									"end": 2044,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1969,
									"end": 2044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2073,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2060,
									"end": 2065,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2053,
									"end": 2074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2105,
									"end": 2109,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2098,
									"end": 2103,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2094,
									"end": 2110,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2143,
									"end": 2146,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2134,
									"end": 2140,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2129,
									"end": 2132,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2125,
									"end": 2141,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2122,
									"end": 2147,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2231,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2231,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2119,
									"end": 2231,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2150,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 2150,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2150,
									"end": 2229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2150,
									"end": 2229,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 2150,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2231,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 2119,
									"end": 2231,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2240,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 2285,
									"end": 2291,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2280,
									"end": 2283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2275,
									"end": 2278,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2240,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2240,
									"end": 2292,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2240,
									"end": 2292,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 2240,
									"end": 2292,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1959,
									"end": 2298,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1864,
									"end": 2298,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1864,
									"end": 2298,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2385,
									"end": 2390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2434,
									"end": 2437,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2431,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2419,
									"end": 2425,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2415,
									"end": 2432,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2411,
									"end": 2438,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2401,
									"end": 2523,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 2401,
									"end": 2523,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2442,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 2442,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2442,
									"end": 2521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2442,
									"end": 2521,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 2442,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2401,
									"end": 2523,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 2401,
									"end": 2523,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2552,
									"end": 2558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2546,
									"end": 2559,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2577,
									"end": 2667,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2663,
									"end": 2666,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2655,
									"end": 2661,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2648,
									"end": 2652,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2640,
									"end": 2646,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2636,
									"end": 2653,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2577,
									"end": 2667,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2577,
									"end": 2667,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2577,
									"end": 2667,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2577,
									"end": 2667,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2568,
									"end": 2667,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2568,
									"end": 2667,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2391,
									"end": 2673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2673,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2778,
									"end": 2784,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2786,
									"end": 2792,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2835,
									"end": 2837,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2823,
									"end": 2832,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2814,
									"end": 2821,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2810,
									"end": 2833,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2806,
									"end": 2838,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2803,
									"end": 2922,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2803,
									"end": 2922,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 2803,
									"end": 2922,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2841,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 2841,
									"end": 2920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2841,
									"end": 2920,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2841,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2803,
									"end": 2922,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 2803,
									"end": 2922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 2983,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2971,
									"end": 2980,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2967,
									"end": 2984,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2961,
									"end": 2985,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3012,
									"end": 3030,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3001,
									"end": 3031,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2998,
									"end": 3115,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2998,
									"end": 3115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2998,
									"end": 3115,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3034,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 3034,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3034,
									"end": 3113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3034,
									"end": 3113,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 3034,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2998,
									"end": 3115,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2998,
									"end": 3115,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3139,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3205,
									"end": 3212,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3196,
									"end": 3202,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3185,
									"end": 3194,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3181,
									"end": 3203,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3139,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3139,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3139,
									"end": 3213,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3139,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3129,
									"end": 3213,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3129,
									"end": 3213,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2932,
									"end": 3223,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3283,
									"end": 3285,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3272,
									"end": 3281,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3268,
									"end": 3286,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3262,
									"end": 3287,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3306,
									"end": 3312,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3303,
									"end": 3333,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3417,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3300,
									"end": 3417,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3336,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3336,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 3336,
									"end": 3415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3336,
									"end": 3415,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 3336,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3300,
									"end": 3417,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 3300,
									"end": 3417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3441,
									"end": 3515,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 3507,
									"end": 3514,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3498,
									"end": 3504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3487,
									"end": 3496,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3483,
									"end": 3505,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3441,
									"end": 3515,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3441,
									"end": 3515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3441,
									"end": 3515,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 3441,
									"end": 3515,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3431,
									"end": 3515,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3431,
									"end": 3515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3233,
									"end": 3525,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3532,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2679,
									"end": 3532,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3538,
									"end": 3637,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3538,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3590,
									"end": 3596,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3624,
									"end": 3629,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3618,
									"end": 3630,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3608,
									"end": 3630,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3608,
									"end": 3630,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3538,
									"end": 3637,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3538,
									"end": 3637,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3538,
									"end": 3637,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3538,
									"end": 3637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3643,
									"end": 3823,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3643,
									"end": 3823,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3691,
									"end": 3768,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3688,
									"end": 3689,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3681,
									"end": 3769,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3788,
									"end": 3792,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 3785,
									"end": 3786,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3778,
									"end": 3793,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3812,
									"end": 3816,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3809,
									"end": 3810,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3802,
									"end": 3817,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3829,
									"end": 4149,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3829,
									"end": 4149,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3873,
									"end": 3879,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3910,
									"end": 3911,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 3904,
									"end": 3908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3900,
									"end": 3912,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3890,
									"end": 3912,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3890,
									"end": 3912,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3957,
									"end": 3958,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3951,
									"end": 3955,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3947,
									"end": 3959,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3978,
									"end": 3996,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3968,
									"end": 4049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3968,
									"end": 4049,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4034,
									"end": 4038,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 4026,
									"end": 4032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4022,
									"end": 4039,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4012,
									"end": 4039,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4012,
									"end": 4039,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3968,
									"end": 4049,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3968,
									"end": 4049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4096,
									"end": 4098,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4088,
									"end": 4094,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4085,
									"end": 4099,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4065,
									"end": 4083,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4062,
									"end": 4100,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4059,
									"end": 4143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4059,
									"end": 4143,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4115,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4115,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 4115,
									"end": 4133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4115,
									"end": 4133,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4115,
									"end": 4133,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4059,
									"end": 4143,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4059,
									"end": 4143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3880,
									"end": 4149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3829,
									"end": 4149,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3829,
									"end": 4149,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3829,
									"end": 4149,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3829,
									"end": 4149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4155,
									"end": 4296,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 4155,
									"end": 4296,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4204,
									"end": 4208,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4227,
									"end": 4230,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4219,
									"end": 4230,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4219,
									"end": 4230,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4250,
									"end": 4253,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4247,
									"end": 4248,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4240,
									"end": 4254,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4284,
									"end": 4288,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4281,
									"end": 4282,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4271,
									"end": 4289,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 4263,
									"end": 4289,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4263,
									"end": 4289,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4155,
									"end": 4296,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4155,
									"end": 4296,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4155,
									"end": 4296,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4155,
									"end": 4296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4302,
									"end": 4395,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 4302,
									"end": 4395,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4345,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4388,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4381,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4374,
									"end": 4379,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4370,
									"end": 4384,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4366,
									"end": 4389,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4356,
									"end": 4389,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4356,
									"end": 4389,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4302,
									"end": 4395,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4302,
									"end": 4395,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4302,
									"end": 4395,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4302,
									"end": 4395,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4445,
									"end": 4453,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4495,
									"end": 4500,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4489,
									"end": 4493,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4485,
									"end": 4501,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4464,
									"end": 4501,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4464,
									"end": 4501,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4508,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4401,
									"end": 4508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4583,
									"end": 4589,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4633,
									"end": 4634,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4621,
									"end": 4631,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4635,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4656,
									"end": 4753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 4686,
									"end": 4752,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4675,
									"end": 4684,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4656,
									"end": 4753,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 4656,
									"end": 4753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4656,
									"end": 4753,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 4656,
									"end": 4753,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4774,
									"end": 4813,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 4804,
									"end": 4812,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 4802,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4774,
									"end": 4813,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 4774,
									"end": 4813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4774,
									"end": 4813,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 4774,
									"end": 4813,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4762,
									"end": 4813,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 4762,
									"end": 4813,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4846,
									"end": 4850,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4842,
									"end": 4851,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4835,
									"end": 4840,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4831,
									"end": 4852,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4822,
									"end": 4852,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4822,
									"end": 4852,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4895,
									"end": 4899,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4885,
									"end": 4893,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 4881,
									"end": 4900,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4874,
									"end": 4879,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4871,
									"end": 4901,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4901,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4861,
									"end": 4901,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4590,
									"end": 4907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4590,
									"end": 4907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4514,
									"end": 4907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4514,
									"end": 4907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4913,
									"end": 4990,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4913,
									"end": 4990,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 4957,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4979,
									"end": 4984,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4968,
									"end": 4984,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4968,
									"end": 4984,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4913,
									"end": 4990,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4913,
									"end": 4990,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4913,
									"end": 4990,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4913,
									"end": 4990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5056,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4996,
									"end": 5056,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5024,
									"end": 5027,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5045,
									"end": 5050,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5038,
									"end": 5050,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5038,
									"end": 5050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5056,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5056,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5056,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4996,
									"end": 5056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5062,
									"end": 5204,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 5062,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5112,
									"end": 5121,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5145,
									"end": 5198,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 5163,
									"end": 5197,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 5172,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 5190,
									"end": 5195,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 5172,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5172,
									"end": 5196,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 5172,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5197,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 5163,
									"end": 5197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5163,
									"end": 5197,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 5163,
									"end": 5197,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5198,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 5145,
									"end": 5198,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5198,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 5145,
									"end": 5198,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5132,
									"end": 5198,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5132,
									"end": 5198,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5062,
									"end": 5204,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5062,
									"end": 5204,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5062,
									"end": 5204,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5062,
									"end": 5204,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5210,
									"end": 5285,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5210,
									"end": 5285,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5253,
									"end": 5256,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5274,
									"end": 5279,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5267,
									"end": 5279,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5267,
									"end": 5279,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5210,
									"end": 5285,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5210,
									"end": 5285,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5210,
									"end": 5285,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5210,
									"end": 5285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5291,
									"end": 5560,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5291,
									"end": 5560,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5401,
									"end": 5440,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5432,
									"end": 5439,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5401,
									"end": 5440,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 5401,
									"end": 5440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5401,
									"end": 5440,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5401,
									"end": 5440,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5462,
									"end": 5553,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 5511,
									"end": 5552,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 5535,
									"end": 5551,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5511,
									"end": 5552,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5511,
									"end": 5552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5511,
									"end": 5552,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 5511,
									"end": 5552,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5503,
									"end": 5509,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5496,
									"end": 5500,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5490,
									"end": 5501,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5462,
									"end": 5553,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5462,
									"end": 5553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5462,
									"end": 5553,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 5462,
									"end": 5553,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5456,
									"end": 5460,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5449,
									"end": 5554,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5367,
									"end": 5560,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5291,
									"end": 5560,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5291,
									"end": 5560,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5291,
									"end": 5560,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5291,
									"end": 5560,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5566,
									"end": 5639,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 5566,
									"end": 5639,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5611,
									"end": 5614,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5566,
									"end": 5639,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5566,
									"end": 5639,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5645,
									"end": 5834,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 5645,
									"end": 5834,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5722,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5722,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 5722,
									"end": 5754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5722,
									"end": 5754,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5722,
									"end": 5754,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5763,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 5821,
									"end": 5827,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5813,
									"end": 5819,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5807,
									"end": 5811,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5763,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5763,
									"end": 5828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5763,
									"end": 5828,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 5763,
									"end": 5828,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5698,
									"end": 5834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5645,
									"end": 5834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5645,
									"end": 5834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5645,
									"end": 5834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5840,
									"end": 6026,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 5840,
									"end": 6026,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5917,
									"end": 5920,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5910,
									"end": 5915,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5907,
									"end": 5921,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5971,
									"end": 6010,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 6008,
									"end": 6009,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6001,
									"end": 6006,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5971,
									"end": 6010,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 5971,
									"end": 6010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5971,
									"end": 6010,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5971,
									"end": 6010,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5944,
									"end": 5945,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5937,
									"end": 5942,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5933,
									"end": 5946,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5924,
									"end": 5946,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5924,
									"end": 5946,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 5900,
									"end": 6020,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5840,
									"end": 6026,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5840,
									"end": 6026,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5840,
									"end": 6026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6032,
									"end": 6575,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 6032,
									"end": 6575,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6133,
									"end": 6135,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6128,
									"end": 6131,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6125,
									"end": 6136,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6122,
									"end": 6568,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6122,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6122,
									"end": 6568,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6167,
									"end": 6205,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 6199,
									"end": 6204,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6167,
									"end": 6205,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 6167,
									"end": 6205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6167,
									"end": 6205,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 6167,
									"end": 6205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6251,
									"end": 6280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6269,
									"end": 6279,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6251,
									"end": 6280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 6251,
									"end": 6280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6251,
									"end": 6280,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6251,
									"end": 6280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6241,
									"end": 6249,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6237,
									"end": 6281,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6434,
									"end": 6436,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6422,
									"end": 6432,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6419,
									"end": 6437,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6416,
									"end": 6465,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6416,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 6416,
									"end": 6465,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6455,
									"end": 6463,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6440,
									"end": 6463,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6440,
									"end": 6463,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6416,
									"end": 6465,
									"name": "tag",
									"source": 8,
									"value": "156"
								},
								{
									"begin": 6416,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6478,
									"end": 6558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6534,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6552,
									"end": 6555,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6534,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 6534,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6534,
									"end": 6556,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6534,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6524,
									"end": 6532,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6520,
									"end": 6557,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6507,
									"end": 6518,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6478,
									"end": 6558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 6478,
									"end": 6558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6478,
									"end": 6558,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6478,
									"end": 6558,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6137,
									"end": 6568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6137,
									"end": 6568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6122,
									"end": 6568,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6122,
									"end": 6568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6032,
									"end": 6575,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6032,
									"end": 6575,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6032,
									"end": 6575,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6032,
									"end": 6575,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6635,
									"end": 6643,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6685,
									"end": 6690,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6679,
									"end": 6683,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6675,
									"end": 6691,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 6654,
									"end": 6691,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6654,
									"end": 6691,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6581,
									"end": 6698,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6581,
									"end": 6698,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6748,
									"end": 6754,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6781,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6829,
									"end": 6830,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6825,
									"end": 6831,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6817,
									"end": 6822,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6814,
									"end": 6815,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 6810,
									"end": 6823,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 6781,
									"end": 6832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6781,
									"end": 6832,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 6781,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6777,
									"end": 6833,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6866,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6856,
									"end": 6860,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6852,
									"end": 6867,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6842,
									"end": 6867,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6842,
									"end": 6867,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6755,
									"end": 6873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6704,
									"end": 6873,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6704,
									"end": 6873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6954,
									"end": 6958,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7125,
									"end": 7128,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7119,
									"end": 7123,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 7100,
									"end": 7129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7100,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7129,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7092,
									"end": 7129,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7162,
									"end": 7165,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7159,
									"end": 7160,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 7155,
									"end": 7166,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7149,
									"end": 7153,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7146,
									"end": 7167,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 7138,
									"end": 7167,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7138,
									"end": 7167,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6878,
									"end": 7173,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6878,
									"end": 7173,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7178,
									"end": 8573,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 7178,
									"end": 8573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7295,
									"end": 7332,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 7328,
									"end": 7331,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7295,
									"end": 7332,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 7295,
									"end": 7332,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7295,
									"end": 7332,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 7295,
									"end": 7332,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7397,
									"end": 7415,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7389,
									"end": 7395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7386,
									"end": 7416,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7383,
									"end": 7439,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7383,
									"end": 7439,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 7383,
									"end": 7439,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7419,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7419,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 7419,
									"end": 7437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7419,
									"end": 7437,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7419,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7383,
									"end": 7439,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 7383,
									"end": 7439,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7463,
									"end": 7501,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 7495,
									"end": 7499,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7489,
									"end": 7500,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 7463,
									"end": 7501,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 7463,
									"end": 7501,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7463,
									"end": 7501,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 7463,
									"end": 7501,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7608,
									"end": 7614,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7600,
									"end": 7606,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7594,
									"end": 7598,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7548,
									"end": 7615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7615,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7548,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7642,
									"end": 7643,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7666,
									"end": 7670,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7653,
									"end": 7670,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7653,
									"end": 7670,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7698,
									"end": 7700,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7690,
									"end": 7696,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7687,
									"end": 7701,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7715,
									"end": 7716,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8372,
									"end": 8373,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8389,
									"end": 8395,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8386,
									"end": 8463,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8386,
									"end": 8463,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 8386,
									"end": 8463,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8438,
									"end": 8447,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8433,
									"end": 8436,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 8429,
									"end": 8448,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8423,
									"end": 8449,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8414,
									"end": 8449,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8414,
									"end": 8449,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8386,
									"end": 8463,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 8386,
									"end": 8463,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8489,
									"end": 8556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 8549,
									"end": 8555,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8542,
									"end": 8547,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8489,
									"end": 8556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 8489,
									"end": 8556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8489,
									"end": 8556,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 8489,
									"end": 8556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8483,
									"end": 8487,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8476,
									"end": 8557,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8345,
									"end": 8567,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7680,
									"end": 8567,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7680,
									"end": 8567,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 7710,
									"end": 8328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7762,
									"end": 7766,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 7758,
									"end": 7767,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7750,
									"end": 7756,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7746,
									"end": 7768,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7796,
									"end": 7833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7828,
									"end": 7832,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7796,
									"end": 7833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 7796,
									"end": 7833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7796,
									"end": 7833,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7796,
									"end": 7833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7855,
									"end": 7856,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7883,
									"end": 7890,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7880,
									"end": 7881,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7877,
									"end": 7891,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7962,
									"end": 7971,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7957,
									"end": 7960,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 7953,
									"end": 7972,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7947,
									"end": 7973,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 7939,
									"end": 7945,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7932,
									"end": 7974,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8013,
									"end": 8014,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8005,
									"end": 8011,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8001,
									"end": 8015,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7991,
									"end": 8015,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7991,
									"end": 8015,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8060,
									"end": 8062,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8049,
									"end": 8058,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8045,
									"end": 8063,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8032,
									"end": 8063,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 8032,
									"end": 8063,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7906,
									"end": 7910,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7899,
									"end": 7911,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7894,
									"end": 7911,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7894,
									"end": 7911,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 7869,
									"end": 8077,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8105,
									"end": 8111,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8096,
									"end": 8103,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8093,
									"end": 8112,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8090,
									"end": 8269,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8090,
									"end": 8269,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8090,
									"end": 8269,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8163,
									"end": 8172,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8158,
									"end": 8161,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8154,
									"end": 8173,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8148,
									"end": 8174,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8206,
									"end": 8254,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 8248,
									"end": 8252,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8240,
									"end": 8246,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8236,
									"end": 8253,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8225,
									"end": 8234,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8206,
									"end": 8254,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 8206,
									"end": 8254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8206,
									"end": 8254,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 8206,
									"end": 8254,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8198,
									"end": 8204,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8191,
									"end": 8255,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8113,
									"end": 8269,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8090,
									"end": 8269,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8090,
									"end": 8269,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8315,
									"end": 8316,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8311,
									"end": 8312,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8303,
									"end": 8309,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8299,
									"end": 8313,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8295,
									"end": 8317,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8289,
									"end": 8293,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8282,
									"end": 8318,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 7717,
									"end": 8328,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7717,
									"end": 8328,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7717,
									"end": 8328,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7680,
									"end": 8567,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7680,
									"end": 8567,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7680,
									"end": 8567,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7270,
									"end": 8573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7270,
									"end": 8573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7270,
									"end": 8573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7178,
									"end": 8573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7178,
									"end": 8573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7178,
									"end": 8573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8579,
									"end": 8705,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 8579,
									"end": 8705,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8616,
									"end": 8623,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8656,
									"end": 8698,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8649,
									"end": 8654,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8645,
									"end": 8699,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8634,
									"end": 8699,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8634,
									"end": 8699,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8579,
									"end": 8705,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8579,
									"end": 8705,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8579,
									"end": 8705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8579,
									"end": 8705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8711,
									"end": 8807,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 8711,
									"end": 8807,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8748,
									"end": 8755,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8777,
									"end": 8801,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8795,
									"end": 8800,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8777,
									"end": 8801,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 8777,
									"end": 8801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8777,
									"end": 8801,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8777,
									"end": 8801,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8766,
									"end": 8801,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8766,
									"end": 8801,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8711,
									"end": 8807,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8711,
									"end": 8807,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8711,
									"end": 8807,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8711,
									"end": 8807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8813,
									"end": 8931,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 8813,
									"end": 8931,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8900,
									"end": 8924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8918,
									"end": 8923,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8900,
									"end": 8924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 8900,
									"end": 8924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8900,
									"end": 8924,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8900,
									"end": 8924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8895,
									"end": 8898,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8888,
									"end": 8925,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 8813,
									"end": 8931,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8813,
									"end": 8931,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8813,
									"end": 8931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8937,
									"end": 9159,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 8937,
									"end": 9159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9030,
									"end": 9034,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9068,
									"end": 9070,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9057,
									"end": 9066,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9053,
									"end": 9071,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9045,
									"end": 9071,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9045,
									"end": 9071,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9081,
									"end": 9152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 9149,
									"end": 9150,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9138,
									"end": 9147,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9134,
									"end": 9151,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9125,
									"end": 9131,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9081,
									"end": 9152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 9081,
									"end": 9152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9081,
									"end": 9152,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 9081,
									"end": 9152,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8937,
									"end": 9159,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8937,
									"end": 9159,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8937,
									"end": 9159,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8937,
									"end": 9159,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8937,
									"end": 9159,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9165,
									"end": 9345,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 9165,
									"end": 9345,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9213,
									"end": 9290,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9210,
									"end": 9211,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9203,
									"end": 9291,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9310,
									"end": 9314,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 9307,
									"end": 9308,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 9300,
									"end": 9315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9334,
									"end": 9338,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 9331,
									"end": 9332,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9324,
									"end": 9339,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 9351,
									"end": 9542,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 9351,
									"end": 9542,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9391,
									"end": 9394,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9410,
									"end": 9430,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 9428,
									"end": 9429,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9410,
									"end": 9430,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 9410,
									"end": 9430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9410,
									"end": 9430,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 9410,
									"end": 9430,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9405,
									"end": 9430,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9405,
									"end": 9430,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9444,
									"end": 9464,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 9462,
									"end": 9463,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9444,
									"end": 9464,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 9444,
									"end": 9464,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9444,
									"end": 9464,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 9444,
									"end": 9464,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9439,
									"end": 9464,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9439,
									"end": 9464,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9487,
									"end": 9488,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9484,
									"end": 9485,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9480,
									"end": 9489,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9473,
									"end": 9489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9473,
									"end": 9489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9508,
									"end": 9511,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 9505,
									"end": 9506,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9502,
									"end": 9512,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9499,
									"end": 9535,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9499,
									"end": 9535,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9499,
									"end": 9535,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9515,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 9515,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 9515,
									"end": 9533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9515,
									"end": 9533,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 9515,
									"end": 9533,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9499,
									"end": 9535,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9499,
									"end": 9535,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9351,
									"end": 9542,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9351,
									"end": 9542,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9351,
									"end": 9542,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9351,
									"end": 9542,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9351,
									"end": 9542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9548,
									"end": 9666,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 9548,
									"end": 9666,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9635,
									"end": 9659,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 9653,
									"end": 9658,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9635,
									"end": 9659,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 9635,
									"end": 9659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9635,
									"end": 9659,
									"name": "tag",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 9635,
									"end": 9659,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9630,
									"end": 9633,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9623,
									"end": 9660,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9548,
									"end": 9666,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9548,
									"end": 9666,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9548,
									"end": 9666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10114,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 9672,
									"end": 10114,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9821,
									"end": 9825,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9859,
									"end": 9861,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 9848,
									"end": 9857,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9844,
									"end": 9862,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9836,
									"end": 9862,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9836,
									"end": 9862,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9872,
									"end": 9943,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 9940,
									"end": 9941,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9929,
									"end": 9938,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9925,
									"end": 9942,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9916,
									"end": 9922,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 9872,
									"end": 9943,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 9872,
									"end": 9943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9872,
									"end": 9943,
									"name": "tag",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 9872,
									"end": 9943,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9953,
									"end": 10025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 10021,
									"end": 10023,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10010,
									"end": 10019,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10006,
									"end": 10024,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9997,
									"end": 10003,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9953,
									"end": 10025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 9953,
									"end": 10025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9953,
									"end": 10025,
									"name": "tag",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 9953,
									"end": 10025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10035,
									"end": 10107,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 10103,
									"end": 10105,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 10092,
									"end": 10101,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10088,
									"end": 10106,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10079,
									"end": 10085,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10035,
									"end": 10107,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 10035,
									"end": 10107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10035,
									"end": 10107,
									"name": "tag",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 10035,
									"end": 10107,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10114,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10114,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10114,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10114,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10114,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10114,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9672,
									"end": 10114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10120,
									"end": 10342,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 10120,
									"end": 10342,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10213,
									"end": 10217,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10251,
									"end": 10253,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10240,
									"end": 10249,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10236,
									"end": 10254,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10228,
									"end": 10254,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10228,
									"end": 10254,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10264,
									"end": 10335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 10332,
									"end": 10333,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10321,
									"end": 10330,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10317,
									"end": 10334,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10308,
									"end": 10314,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10264,
									"end": 10335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 10264,
									"end": 10335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10264,
									"end": 10335,
									"name": "tag",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 10264,
									"end": 10335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10120,
									"end": 10342,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10120,
									"end": 10342,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10120,
									"end": 10342,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10120,
									"end": 10342,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10120,
									"end": 10342,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 3303,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dff3612085fad06aae850ba16757fa5114b99f91355d7bcd994cb6e0b282843064736f6c634300081a0033",
									".code": [
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "C66E4095"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "DBAC26E9"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "FE575A87"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "88D695B2"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "9BC289F1"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "2E0D2A00"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "2E0D2A00"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "3E579307"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "153B0D1E"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 225,
											"end": 3303,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1422,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1422,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2169,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2169,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2169,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2653,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2653,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1149,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1149,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1238,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1238,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1078,
											"end": 1143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1011,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2810,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2810,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 369,
											"end": 415,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 369,
											"end": 415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 369,
											"end": 415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 369,
											"end": 415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1705,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1705,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1705,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 280,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 280,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 422,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 422,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 422,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 1588,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1588,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1588,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1526,
											"end": 1532,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1522,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1503,
											"end": 1532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1559,
											"end": 1566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "CF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8"
										},
										{
											"begin": 1568,
											"end": 1574,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1547,
											"end": 1575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1575,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2324,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2325,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2297,
											"end": 2368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2297,
											"end": 2368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2408,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2387,
											"end": 2409,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2386,
											"end": 2409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2378,
											"end": 2455,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2378,
											"end": 2455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2510,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2511,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2488,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2511,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2511,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2473,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2539,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2527,
											"end": 2533,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2534,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2515,
											"end": 2539,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2473,
											"end": 2539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2473,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2465,
											"end": 2578,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2465,
											"end": 2578,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2640,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2614,
											"end": 2620,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2622,
											"end": 2631,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2633,
											"end": 2639,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2595,
											"end": 2640,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2640,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2595,
											"end": 2640,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2169,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2742,
											"end": 2754,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2728,
											"end": 2739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2728,
											"end": 2754,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2796,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8"
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2797,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2653,
											"end": 2804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1225,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1216,
											"end": 1225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1216,
											"end": 1225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 957,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 957,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 957,
											"end": 968,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 957,
											"end": 968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 957,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 968,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 957,
											"end": 968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 957,
											"end": 968,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 957,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 968,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 943,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 943,
											"end": 968,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 943,
											"end": 953,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 943,
											"end": 968,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 943,
											"end": 968,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 943,
											"end": 968,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 935,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 935,
											"end": 987,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 935,
											"end": 987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1351,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1348,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1360,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1360,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F"
										},
										{
											"begin": 1394,
											"end": 1403,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1375,
											"end": 1404,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1404,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1238,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1078,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1136,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1126,
											"end": 1134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1126,
											"end": 1136,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1136,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1126,
											"end": 1136,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1011,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1057,
											"end": 1063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1057,
											"end": 1065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1057,
											"end": 1065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1057,
											"end": 1065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1011,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 2961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2950,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2968,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2925,
											"end": 3012,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2925,
											"end": 3012,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3058,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3058,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3065,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3065,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3080,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3099,
											"end": 3114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3114,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3166,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3167,
											"end": 3168,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3156,
											"end": 3169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3156,
											"end": 3169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3156,
											"end": 3169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3144,
											"end": 3170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3170,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3135,
											"end": 3221,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 3135,
											"end": 3221,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3245,
											"end": 3255,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3267,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3267,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3268,
											"end": 3269,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3257,
											"end": 3270,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3257,
											"end": 3270,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3257,
											"end": 3270,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3279,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3279,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3281,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3272,
											"end": 3282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3282,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3235,
											"end": 3283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3235,
											"end": 3283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3119,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3119,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3116,
											"end": 3119,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3119,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3119,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3119,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3075,
											"end": 3294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 3300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 369,
											"end": 415,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 369,
											"end": 415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1844,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1822,
											"end": 1845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1821,
											"end": 1845,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 1813,
											"end": 1888,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1813,
											"end": 1888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1928,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1907,
											"end": 1929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1906,
											"end": 1929,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1898,
											"end": 1975,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1898,
											"end": 1975,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2034,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2035,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2008,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2035,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2035,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2067,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1993,
											"end": 2067,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2061,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2062,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2067,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1993,
											"end": 2067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 1985,
											"end": 2106,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1985,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2138,
											"end": 2147,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2155,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2123,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2123,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2156,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 280,
											"end": 306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 422,
											"end": 465,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 422,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1683,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1672,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 1555,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1797,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1798,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1810,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1985,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2010,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 2140,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2040,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2185,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2763,
											"end": 2880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2945,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2541,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3021,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3198,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3117,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3370,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3232,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3564,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 3448,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3533,
											"end": 3538,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3518,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3516,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3508,
											"end": 3540,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3448,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3658,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3658,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 3667,
											"end": 3697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3774,
											"end": 3780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3806,
											"end": 3829,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 3834,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3837,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4027,
											"end": 4034,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4016,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4003,
											"end": 4025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 3982,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4035,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3972,
											"end": 4035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3928,
											"end": 4045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4110,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3709,
											"end": 4177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 4288,
											"end": 4293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4270,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4400,
											"end": 4404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4427,
											"end": 4436,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4423,
											"end": 4441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4415,
											"end": 4441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 4519,
											"end": 4520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4517,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4451,
											"end": 4522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4665,
											"end": 4674,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4652,
											"end": 4675,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4683,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 4873,
											"end": 4880,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4849,
											"end": 4871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4828,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 4891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5001,
											"end": 5008,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 4998,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 4990,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 4956,
											"end": 5009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4946,
											"end": 5009,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4946,
											"end": 5009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4901,
											"end": 5019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 5129,
											"end": 5136,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5120,
											"end": 5126,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5118,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5105,
											"end": 5127,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5084,
											"end": 5137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5137,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4535,
											"end": 5154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5254,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5243,
											"end": 5266,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5239,
											"end": 5271,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5274,
											"end": 5353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5394,
											"end": 5395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 5464,
											"end": 5471,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5455,
											"end": 5461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5444,
											"end": 5453,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 5419,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5409,
											"end": 5472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5409,
											"end": 5472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5482,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5574,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5563,
											"end": 5568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 5575,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5495,
											"end": 5581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 5686,
											"end": 5691,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5670,
											"end": 5692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 5668,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5587,
											"end": 5699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5794,
											"end": 5798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5834,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5809,
											"end": 5835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 5909,
											"end": 5910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5907,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 5911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5885,
											"end": 5891,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 5845,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5705,
											"end": 5919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5925,
											"end": 6042,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 5925,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6035,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6024,
											"end": 6036,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6048,
											"end": 6165,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 6048,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6155,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6159,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6288,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6171,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6280,
											"end": 6281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6278,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6879,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6311,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6384,
											"end": 6392,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6400,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6444,
											"end": 6447,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6441,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6425,
											"end": 6442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6421,
											"end": 6448,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 6411,
											"end": 6533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 6452,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 6452,
											"end": 6531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6452,
											"end": 6531,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 6452,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6411,
											"end": 6533,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 6411,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6565,
											"end": 6571,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6552,
											"end": 6572,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6542,
											"end": 6572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6595,
											"end": 6613,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6587,
											"end": 6593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6584,
											"end": 6614,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 6617,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 6617,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 6581,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6723,
											"end": 6729,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6719,
											"end": 6736,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6736,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6707,
											"end": 6736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6785,
											"end": 6788,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6777,
											"end": 6781,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6769,
											"end": 6775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6755,
											"end": 6763,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6751,
											"end": 6783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6748,
											"end": 6789,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6873,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 6745,
											"end": 6873,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 6792,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6792,
											"end": 6871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6792,
											"end": 6871,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 6792,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6745,
											"end": 6873,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 6745,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6879,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6879,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 7470,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 6902,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 6983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7035,
											"end": 7038,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7032,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7020,
											"end": 7026,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7016,
											"end": 7033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7039,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7002,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7002,
											"end": 7124,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 7043,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 7043,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7002,
											"end": 7124,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 7002,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7156,
											"end": 7162,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7143,
											"end": 7163,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7133,
											"end": 7163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7133,
											"end": 7163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7178,
											"end": 7184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7175,
											"end": 7205,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7289,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7172,
											"end": 7289,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7208,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 7208,
											"end": 7287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7208,
											"end": 7287,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7208,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7289,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7172,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7322,
											"end": 7326,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7314,
											"end": 7320,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7310,
											"end": 7327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7298,
											"end": 7327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7298,
											"end": 7327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7376,
											"end": 7379,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7368,
											"end": 7372,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7360,
											"end": 7366,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7356,
											"end": 7373,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7354,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7342,
											"end": 7374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7339,
											"end": 7380,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7464,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 7336,
											"end": 7464,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7383,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 7383,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 7383,
											"end": 7462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7383,
											"end": 7462,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 7383,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7336,
											"end": 7464,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 7336,
											"end": 7464,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 7470,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 7470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 7470,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 7470,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 7470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 7470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 8410,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 7476,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7598,
											"end": 7604,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7606,
											"end": 7612,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7614,
											"end": 7620,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7622,
											"end": 7628,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7671,
											"end": 7673,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7659,
											"end": 7668,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7650,
											"end": 7657,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7669,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7642,
											"end": 7674,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7639,
											"end": 7758,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7639,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7639,
											"end": 7758,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7677,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 7677,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 7677,
											"end": 7756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7677,
											"end": 7756,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 7677,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7639,
											"end": 7758,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 7639,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7825,
											"end": 7826,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7810,
											"end": 7827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7797,
											"end": 7828,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7873,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7847,
											"end": 7853,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7844,
											"end": 7874,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7841,
											"end": 7958,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7841,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 7841,
											"end": 7958,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7877,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 7877,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 7877,
											"end": 7956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7877,
											"end": 7956,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 7877,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7841,
											"end": 7958,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 7841,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7990,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 8062,
											"end": 8069,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8053,
											"end": 8059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8042,
											"end": 8051,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8038,
											"end": 8060,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7990,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 7990,
											"end": 8070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7990,
											"end": 8070,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 7990,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7972,
											"end": 8070,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7972,
											"end": 8070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7972,
											"end": 8070,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7972,
											"end": 8070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 8080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8149,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8136,
											"end": 8145,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8119,
											"end": 8151,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8196,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8170,
											"end": 8176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8167,
											"end": 8197,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 8200,
											"end": 8279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 8200,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 8164,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 8385,
											"end": 8392,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8376,
											"end": 8382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8365,
											"end": 8374,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 8313,
											"end": 8393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8393,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 8313,
											"end": 8393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8393,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8393,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8295,
											"end": 8393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8090,
											"end": 8403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 8410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 8410,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 8410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 8410,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 8410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 8410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 8410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 8410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8534,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 8416,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 8521,
											"end": 8526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 8503,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8503,
											"end": 8527,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 8503,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8498,
											"end": 8501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8491,
											"end": 8528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8762,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 8540,
											"end": 8762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8633,
											"end": 8637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8671,
											"end": 8673,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8656,
											"end": 8674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8648,
											"end": 8674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8648,
											"end": 8674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8741,
											"end": 8750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8737,
											"end": 8754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8728,
											"end": 8734,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 8684,
											"end": 8755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8755,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 8684,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8540,
											"end": 8762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8768,
											"end": 9242,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 8768,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8836,
											"end": 8842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8844,
											"end": 8850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8893,
											"end": 8895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8881,
											"end": 8890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8872,
											"end": 8879,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8868,
											"end": 8891,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8864,
											"end": 8896,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8861,
											"end": 8980,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8861,
											"end": 8980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 8861,
											"end": 8980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 8899,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 8899,
											"end": 8978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8978,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 8899,
											"end": 8978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8861,
											"end": 8980,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 8861,
											"end": 8980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9019,
											"end": 9020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9080,
											"end": 9086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9069,
											"end": 9078,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9065,
											"end": 9087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9044,
											"end": 9097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9044,
											"end": 9097,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 9044,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9034,
											"end": 9097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8990,
											"end": 9107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9146,
											"end": 9148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9172,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 9217,
											"end": 9224,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9208,
											"end": 9214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9197,
											"end": 9206,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9193,
											"end": 9215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9172,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 9172,
											"end": 9225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9172,
											"end": 9225,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 9172,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9117,
											"end": 9235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8768,
											"end": 9242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8768,
											"end": 9242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8768,
											"end": 9242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8768,
											"end": 9242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8768,
											"end": 9242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8768,
											"end": 9242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9248,
											"end": 9428,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 9248,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9373,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9293,
											"end": 9294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9286,
											"end": 9374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9393,
											"end": 9397,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9390,
											"end": 9391,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9383,
											"end": 9398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9421,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9414,
											"end": 9415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9407,
											"end": 9422,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9754,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 9434,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9478,
											"end": 9484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9516,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9509,
											"end": 9513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9505,
											"end": 9517,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9495,
											"end": 9517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9495,
											"end": 9517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9562,
											"end": 9563,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9556,
											"end": 9560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9552,
											"end": 9564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9583,
											"end": 9601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9573,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 9573,
											"end": 9654,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9639,
											"end": 9643,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 9631,
											"end": 9637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9627,
											"end": 9644,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9573,
											"end": 9654,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 9573,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9701,
											"end": 9703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9693,
											"end": 9699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9690,
											"end": 9704,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9670,
											"end": 9688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9667,
											"end": 9705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 9664,
											"end": 9748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9720,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 9720,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 9720,
											"end": 9738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9720,
											"end": 9738,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 9720,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9664,
											"end": 9748,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 9664,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9485,
											"end": 9754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9434,
											"end": 9754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9760,
											"end": 9985,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 9760,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 9934,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E73666572206661696C65643A2053656E64657220697320626C61636B"
										},
										{
											"begin": 9896,
											"end": 9897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9884,
											"end": 9898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9877,
											"end": 9935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9969,
											"end": 9977,
											"name": "PUSH",
											"source": 8,
											"value": "6C69737465640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9964,
											"end": 9966,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9956,
											"end": 9962,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9952,
											"end": 9967,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9945,
											"end": 9978,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9760,
											"end": 9985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9760,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9991,
											"end": 10357,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 9991,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10133,
											"end": 10136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10154,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 10218,
											"end": 10220,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 10213,
											"end": 10216,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10154,
											"end": 10221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 10154,
											"end": 10221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10154,
											"end": 10221,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 10154,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10147,
											"end": 10221,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10147,
											"end": 10221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 10319,
											"end": 10322,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 10230,
											"end": 10323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10230,
											"end": 10323,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 10230,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10348,
											"end": 10350,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10343,
											"end": 10346,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10351,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10351,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9991,
											"end": 10357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9991,
											"end": 10357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9991,
											"end": 10357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9991,
											"end": 10357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10782,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 10363,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10529,
											"end": 10533,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10569,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10556,
											"end": 10565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10552,
											"end": 10570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10544,
											"end": 10570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10544,
											"end": 10570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10616,
											"end": 10625,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10610,
											"end": 10614,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10606,
											"end": 10626,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10602,
											"end": 10603,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10591,
											"end": 10600,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10587,
											"end": 10604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10627,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10644,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 10770,
											"end": 10774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10644,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 10644,
											"end": 10775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10644,
											"end": 10775,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 10644,
											"end": 10775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10636,
											"end": 10775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10636,
											"end": 10775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10782,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11016,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 10788,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10928,
											"end": 10962,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E73666572206661696C65643A20526563697069656E7420697320626C"
										},
										{
											"begin": 10924,
											"end": 10925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10912,
											"end": 10926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10905,
											"end": 10963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10997,
											"end": 11008,
											"name": "PUSH",
											"source": 8,
											"value": "61636B6C69737465640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10992,
											"end": 10994,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10984,
											"end": 10990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10980,
											"end": 10995,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10973,
											"end": 11009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11016,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 11016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11022,
											"end": 11388,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 11022,
											"end": 11388,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11164,
											"end": 11167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11185,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 11249,
											"end": 11251,
											"name": "PUSH",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 11244,
											"end": 11247,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11185,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 11185,
											"end": 11252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11185,
											"end": 11252,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 11185,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11178,
											"end": 11252,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11178,
											"end": 11252,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11261,
											"end": 11354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 11350,
											"end": 11353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11261,
											"end": 11354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 11261,
											"end": 11354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11261,
											"end": 11354,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 11261,
											"end": 11354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11379,
											"end": 11381,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11374,
											"end": 11377,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11370,
											"end": 11382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11363,
											"end": 11382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11363,
											"end": 11382,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11022,
											"end": 11388,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11022,
											"end": 11388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11022,
											"end": 11388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11022,
											"end": 11388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11394,
											"end": 11813,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 11394,
											"end": 11813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11560,
											"end": 11564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11598,
											"end": 11600,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11587,
											"end": 11596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11575,
											"end": 11601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11575,
											"end": 11601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11647,
											"end": 11656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11641,
											"end": 11645,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11637,
											"end": 11657,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11633,
											"end": 11634,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11631,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11618,
											"end": 11635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11611,
											"end": 11658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11675,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 11801,
											"end": 11805,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11675,
											"end": 11806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 11675,
											"end": 11806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11675,
											"end": 11806,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 11675,
											"end": 11806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 11806,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11667,
											"end": 11806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11394,
											"end": 11813,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11394,
											"end": 11813,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11394,
											"end": 11813,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11394,
											"end": 11813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11819,
											"end": 12040,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 11819,
											"end": 12040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11959,
											"end": 11993,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B"
										},
										{
											"begin": 11955,
											"end": 11956,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11947,
											"end": 11953,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11943,
											"end": 11957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11936,
											"end": 11994,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12028,
											"end": 12032,
											"name": "PUSH",
											"source": 8,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12023,
											"end": 12025,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12015,
											"end": 12021,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12011,
											"end": 12026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12004,
											"end": 12033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11819,
											"end": 12040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11819,
											"end": 12040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12412,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12046,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12188,
											"end": 12191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12209,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 12273,
											"end": 12275,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 12268,
											"end": 12271,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12209,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 12209,
											"end": 12276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12209,
											"end": 12276,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 12209,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12202,
											"end": 12276,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12202,
											"end": 12276,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 12374,
											"end": 12377,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 12285,
											"end": 12378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12378,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 12285,
											"end": 12378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12403,
											"end": 12405,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12398,
											"end": 12401,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12394,
											"end": 12406,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12387,
											"end": 12406,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12387,
											"end": 12406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12412,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12046,
											"end": 12412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12837,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 12418,
											"end": 12837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12584,
											"end": 12588,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12622,
											"end": 12624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12611,
											"end": 12620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12607,
											"end": 12625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12599,
											"end": 12625,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12599,
											"end": 12625,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12671,
											"end": 12680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12669,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12661,
											"end": 12681,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12657,
											"end": 12658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12646,
											"end": 12655,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12642,
											"end": 12659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12635,
											"end": 12682,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12699,
											"end": 12830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 12825,
											"end": 12829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12699,
											"end": 12830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 12699,
											"end": 12830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12699,
											"end": 12830,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 12699,
											"end": 12830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12691,
											"end": 12830,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12691,
											"end": 12830,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12837,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12837,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12837,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12843,
											"end": 13007,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 12843,
											"end": 13007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12983,
											"end": 12999,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 12979,
											"end": 12980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12971,
											"end": 12977,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12967,
											"end": 12981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12960,
											"end": 13000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12843,
											"end": 13007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12843,
											"end": 13007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13379,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 13013,
											"end": 13379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13155,
											"end": 13158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13176,
											"end": 13243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 13240,
											"end": 13242,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 13235,
											"end": 13238,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13176,
											"end": 13243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 13176,
											"end": 13243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13176,
											"end": 13243,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 13176,
											"end": 13243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13169,
											"end": 13243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13169,
											"end": 13243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13252,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 13341,
											"end": 13344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13252,
											"end": 13345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 13252,
											"end": 13345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13252,
											"end": 13345,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 13252,
											"end": 13345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13370,
											"end": 13372,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13365,
											"end": 13368,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13361,
											"end": 13373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13354,
											"end": 13373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13354,
											"end": 13373,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13804,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 13385,
											"end": 13804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13551,
											"end": 13555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13589,
											"end": 13591,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13578,
											"end": 13587,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 13592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 13592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13638,
											"end": 13647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13632,
											"end": 13636,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13628,
											"end": 13648,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13624,
											"end": 13625,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13613,
											"end": 13622,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13609,
											"end": 13626,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13649,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13666,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 13792,
											"end": 13796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13666,
											"end": 13797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 13666,
											"end": 13797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13666,
											"end": 13797,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 13666,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 13797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13658,
											"end": 13797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13385,
											"end": 13804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13810,
											"end": 14036,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 13810,
											"end": 14036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13950,
											"end": 13984,
											"name": "PUSH",
											"source": 8,
											"value": "42617463685472616E73666572206661696C65643A204D69736D617463686564"
										},
										{
											"begin": 13946,
											"end": 13947,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13938,
											"end": 13944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13934,
											"end": 13948,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13927,
											"end": 13985,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14019,
											"end": 14028,
											"name": "PUSH",
											"source": 8,
											"value": "2061727261797300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14014,
											"end": 14016,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14006,
											"end": 14012,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14002,
											"end": 14017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13995,
											"end": 14029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13810,
											"end": 14036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13810,
											"end": 14036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14184,
											"end": 14187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 14269,
											"end": 14271,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 14264,
											"end": 14267,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 14205,
											"end": 14272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 14205,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14198,
											"end": 14272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14198,
											"end": 14272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 14370,
											"end": 14373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 14281,
											"end": 14374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 14281,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14399,
											"end": 14401,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14394,
											"end": 14397,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14390,
											"end": 14402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14383,
											"end": 14402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14383,
											"end": 14402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14408,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14042,
											"end": 14408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14580,
											"end": 14584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14618,
											"end": 14620,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14607,
											"end": 14616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14603,
											"end": 14621,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14595,
											"end": 14621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14595,
											"end": 14621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14667,
											"end": 14676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14661,
											"end": 14665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14657,
											"end": 14677,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14653,
											"end": 14654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14642,
											"end": 14651,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14638,
											"end": 14655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14631,
											"end": 14678,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 14821,
											"end": 14825,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 14695,
											"end": 14826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 14695,
											"end": 14826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14687,
											"end": 14826,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14687,
											"end": 14826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14414,
											"end": 14833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14414,
											"end": 14833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14839,
											"end": 15019,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 14839,
											"end": 15019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14887,
											"end": 14964,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14884,
											"end": 14885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14984,
											"end": 14988,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 14981,
											"end": 14982,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14974,
											"end": 14989,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15008,
											"end": 15012,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15005,
											"end": 15006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14998,
											"end": 15013,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15025,
											"end": 15258,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 15025,
											"end": 15258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15165,
											"end": 15199,
											"name": "PUSH",
											"source": 8,
											"value": "42617463685472616E73666572206661696C65643A20526563697069656E7420"
										},
										{
											"begin": 15161,
											"end": 15162,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15153,
											"end": 15159,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15149,
											"end": 15163,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15142,
											"end": 15200,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15234,
											"end": 15250,
											"name": "PUSH",
											"source": 8,
											"value": "697320626C61636B6C6973746564000000000000000000000000000000000000"
										},
										{
											"begin": 15229,
											"end": 15231,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15221,
											"end": 15227,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15232,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15210,
											"end": 15251,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15025,
											"end": 15258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15025,
											"end": 15258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15264,
											"end": 15630,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 15264,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15406,
											"end": 15409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15427,
											"end": 15494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 15491,
											"end": 15493,
											"name": "PUSH",
											"source": 8,
											"value": "2E"
										},
										{
											"begin": 15486,
											"end": 15489,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 15427,
											"end": 15494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15427,
											"end": 15494,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 15427,
											"end": 15494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15420,
											"end": 15494,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15420,
											"end": 15494,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15503,
											"end": 15596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 15592,
											"end": 15595,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15503,
											"end": 15596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 15503,
											"end": 15596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15503,
											"end": 15596,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 15503,
											"end": 15596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15621,
											"end": 15623,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15616,
											"end": 15619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15612,
											"end": 15624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15605,
											"end": 15624,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15605,
											"end": 15624,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15264,
											"end": 15630,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15264,
											"end": 15630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15264,
											"end": 15630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15264,
											"end": 15630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15802,
											"end": 15806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15840,
											"end": 15842,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15829,
											"end": 15838,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15825,
											"end": 15843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15817,
											"end": 15843,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15817,
											"end": 15843,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15889,
											"end": 15898,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15883,
											"end": 15887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15879,
											"end": 15899,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15875,
											"end": 15876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15864,
											"end": 15873,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15860,
											"end": 15877,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15853,
											"end": 15900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15917,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 16043,
											"end": 16047,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15917,
											"end": 16048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 15917,
											"end": 16048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15917,
											"end": 16048,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 15917,
											"end": 16048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15909,
											"end": 16048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15909,
											"end": 16048,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15636,
											"end": 16055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16227,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 16061,
											"end": 16227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16201,
											"end": 16219,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 16197,
											"end": 16198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16189,
											"end": 16195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16185,
											"end": 16199,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16178,
											"end": 16220,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16233,
											"end": 16599,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 16233,
											"end": 16599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16375,
											"end": 16378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16396,
											"end": 16463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 16460,
											"end": 16462,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 16455,
											"end": 16458,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16396,
											"end": 16463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 16396,
											"end": 16463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16396,
											"end": 16463,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 16396,
											"end": 16463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16463,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16389,
											"end": 16463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16472,
											"end": 16565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 16561,
											"end": 16564,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16472,
											"end": 16565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 16472,
											"end": 16565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16472,
											"end": 16565,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 16472,
											"end": 16565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16590,
											"end": 16592,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16585,
											"end": 16588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16581,
											"end": 16593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16574,
											"end": 16593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16574,
											"end": 16593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16233,
											"end": 16599,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16233,
											"end": 16599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16233,
											"end": 16599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16233,
											"end": 16599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16605,
											"end": 17024,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 16605,
											"end": 17024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16809,
											"end": 16811,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16798,
											"end": 16807,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16794,
											"end": 16812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16786,
											"end": 16812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16858,
											"end": 16867,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16852,
											"end": 16856,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16848,
											"end": 16868,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16844,
											"end": 16845,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16833,
											"end": 16842,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16829,
											"end": 16846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16822,
											"end": 16869,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16886,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 17012,
											"end": 17016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16886,
											"end": 17017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 16886,
											"end": 17017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16886,
											"end": 17017,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 16886,
											"end": 17017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16878,
											"end": 17017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16878,
											"end": 17017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16605,
											"end": 17024,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16605,
											"end": 17024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16605,
											"end": 17024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16605,
											"end": 17024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17472,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 17030,
											"end": 17472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17179,
											"end": 17183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17217,
											"end": 17219,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 17206,
											"end": 17215,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17202,
											"end": 17220,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17194,
											"end": 17220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17194,
											"end": 17220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17230,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 17298,
											"end": 17299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17287,
											"end": 17296,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17283,
											"end": 17300,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17274,
											"end": 17280,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 17230,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 17230,
											"end": 17301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17230,
											"end": 17301,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 17230,
											"end": 17301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17311,
											"end": 17383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 17379,
											"end": 17381,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17368,
											"end": 17377,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17364,
											"end": 17382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17355,
											"end": 17361,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17311,
											"end": 17383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 17311,
											"end": 17383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17311,
											"end": 17383,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 17311,
											"end": 17383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17393,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 17461,
											"end": 17463,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 17450,
											"end": 17459,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17446,
											"end": 17464,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17437,
											"end": 17443,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17393,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 17393,
											"end": 17465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17393,
											"end": 17465,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 17393,
											"end": 17465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17472,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17472,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17030,
											"end": 17472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17478,
											"end": 17648,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 17478,
											"end": 17648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17618,
											"end": 17640,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 17614,
											"end": 17615,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17606,
											"end": 17612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17602,
											"end": 17616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17595,
											"end": 17641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17478,
											"end": 17648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17478,
											"end": 17648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 18020,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 17654,
											"end": 18020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17796,
											"end": 17799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17817,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 17881,
											"end": 17883,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 17876,
											"end": 17879,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17817,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 17817,
											"end": 17884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17817,
											"end": 17884,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 17817,
											"end": 17884,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17810,
											"end": 17884,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17810,
											"end": 17884,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17893,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 17982,
											"end": 17985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17893,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 17893,
											"end": 17986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17893,
											"end": 17986,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 17893,
											"end": 17986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18011,
											"end": 18013,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18006,
											"end": 18009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18002,
											"end": 18014,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17995,
											"end": 18014,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17995,
											"end": 18014,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 18020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 18020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 18020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17654,
											"end": 18020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18026,
											"end": 18445,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 18026,
											"end": 18445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18192,
											"end": 18196,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18230,
											"end": 18232,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18219,
											"end": 18228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18215,
											"end": 18233,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18207,
											"end": 18233,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18207,
											"end": 18233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18279,
											"end": 18288,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18273,
											"end": 18277,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18269,
											"end": 18289,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18265,
											"end": 18266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18254,
											"end": 18263,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18250,
											"end": 18267,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18243,
											"end": 18290,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18307,
											"end": 18438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 18433,
											"end": 18437,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18307,
											"end": 18438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 18307,
											"end": 18438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18307,
											"end": 18438,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 18307,
											"end": 18438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18299,
											"end": 18438,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18299,
											"end": 18438,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18026,
											"end": 18445,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18026,
											"end": 18445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18026,
											"end": 18445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18026,
											"end": 18445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18451,
											"end": 18631,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 18451,
											"end": 18631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18499,
											"end": 18576,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18496,
											"end": 18497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18489,
											"end": 18577,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18596,
											"end": 18600,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 18593,
											"end": 18594,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 18586,
											"end": 18601,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18620,
											"end": 18624,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 18617,
											"end": 18618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18610,
											"end": 18625,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 18637,
											"end": 18828,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 18637,
											"end": 18828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18677,
											"end": 18680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18696,
											"end": 18716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 18714,
											"end": 18715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18696,
											"end": 18716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 18696,
											"end": 18716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18696,
											"end": 18716,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 18696,
											"end": 18716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18691,
											"end": 18716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18691,
											"end": 18716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18730,
											"end": 18750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 18748,
											"end": 18749,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18730,
											"end": 18750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 18730,
											"end": 18750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18730,
											"end": 18750,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 18730,
											"end": 18750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18725,
											"end": 18750,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18725,
											"end": 18750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18773,
											"end": 18774,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18770,
											"end": 18771,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18766,
											"end": 18775,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18759,
											"end": 18775,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18759,
											"end": 18775,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18794,
											"end": 18797,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18791,
											"end": 18792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18788,
											"end": 18798,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18785,
											"end": 18821,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18785,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 18785,
											"end": 18821,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18801,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 18801,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 18801,
											"end": 18819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18801,
											"end": 18819,
											"name": "tag",
											"source": 8,
											"value": "511"
										},
										{
											"begin": 18801,
											"end": 18819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18785,
											"end": 18821,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 18785,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18637,
											"end": 18828,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18637,
											"end": 18828,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18637,
											"end": 18828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18637,
											"end": 18828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18637,
											"end": 18828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"RVA/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchTransfer(address[],uint256[])": "88d695b2",
							"blacklisted(address)": "dbac26e9",
							"decimals()": "313ce567",
							"icoContract()": "c66e4095",
							"isBlacklisted(address)": "fe575a87",
							"lockedUntil(address)": "9bc289f1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setBlacklist(address,bool)": "153b0d1e",
							"setICOContract(address)": "2e0d2a00",
							"setLockup(address,uint256)": "3e579307",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyTokenRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"icoContract\",\"type\":\"address\"}],\"name\":\"ICOContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedUntilTimestamp\",\"type\":\"uint256\"}],\"name\":\"LockupSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_icoContract\",\"type\":\"address\"}],\"name\":\"setICOContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"setLockup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RVA/Token.sol\":\"erc20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"RVA/Token.sol\":{\"keccak256\":\"0x5ac4290968c9020a9ccd3c68dce3795ea8e6858fe46aee1d5604fd69e3209841\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec51e1d389f7eaf02d7c064ae7a514fe33bf479c56b64ff068184b2127d6bf8c\",\"dweb:/ipfs/QmcD9GujL4PZLLuCtDKNMsMAzB2mqfKSKPbY6NARdSWwLU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 302,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 1054,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "icoContract",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1061,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1065,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "lockedUntil",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1069,
								"contract": "RVA/Token.sol:erc20Token",
								"label": "blacklisted",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1042,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1041
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1042,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1041
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1011
						]
					},
					"id": 908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 986,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 395,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1012,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 397,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1011,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1042,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 399,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 404,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "1133:7:3"
									},
									"id": 405,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 406,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "1142:6:3"
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 408,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1011,
										"src": "1150:14:3"
									},
									"id": 409,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 410,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 907,
							"linearizedBaseContracts": [
								907,
								189,
								1011,
								985,
								1041
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 414,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 412,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 413,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 420,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 416,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 419,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 417,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 424,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 435,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 436,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 444,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 907,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										998
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 450,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 449,
												"id": 451,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 907,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1004
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 459,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 458,
												"id": 460,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 907,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1010
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 467,
												"id": 469,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 465,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 907,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 477,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 478,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 907,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 488,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 490,
													"indexExpression": {
														"id": 489,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 487,
												"id": 491,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 907,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										952
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 503,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 502,
												"id": 515,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 907,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 527,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 529,
														"indexExpression": {
															"id": 528,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 531,
													"indexExpression": {
														"id": 530,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 532,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 907,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										972
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 544,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 546,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 798,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 543,
												"id": 556,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 907,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										984
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 570,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 572,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 582,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 569,
												"id": 588,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 907,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 612,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 907,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																659
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 659,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 684,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 663,
															"initialValue": {
																"baseExpression": {
																	"id": 660,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 662,
																"indexExpression": {
																	"id": 661,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 664,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 668,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 669,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 670,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 667,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 672,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 683,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 675,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 677,
																			"indexExpression": {
																				"id": 676,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 640,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 678,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 679,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 682,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 685,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 657,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 653,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 654,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 656,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 686,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 687,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 704,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 698,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 700,
																			"indexExpression": {
																				"id": 699,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 703,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 696,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 692,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 693,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 695,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 708,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 907,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 722,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 723,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 735,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 729,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 728,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 734,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 907,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 756,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 762,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 761,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 767,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 770,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 907,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 790,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 858,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 907,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 817,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 816,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 826,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 832,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 831,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 837,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 840,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 843,
															"indexExpression": {
																"id": 841,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 844,
														"indexExpression": {
															"id": 842,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 845,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 848,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 807,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 850,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 851,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 852,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 849,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 907,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "10504:388:3",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 868,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"arguments": [
														{
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 870,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 877,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 876,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10576:310:3",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10619:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "10637:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "10656:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 892,
															"nodeType": "IfStatement",
															"src": "10633:130:3",
															"trueBody": {
																"id": 891,
																"nodeType": "Block",
																"src": "10663:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 886,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "10715:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 887,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "10724:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 888,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "10742:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 885,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 890,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:3"
																	}
																]
															}
														},
														{
															"id": 902,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 894,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "10813:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 895,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "10820:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 896,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "10829:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 897,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "10848:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 893,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				798,
																				858
																			],
																			"referencedDeclaration": 858,
																			"src": "10804:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 907,
									"src": "10415:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "1106:9788:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "105:10790:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 910,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 919,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 928,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 985,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 985,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 985,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 985,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 985,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 985,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 986,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						],
						"IERC20Metadata": [
							1011
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 986,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 988,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 991,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "306:6:5"
									},
									"id": 992,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 990,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1011,
							"linearizedBaseContracts": [
								1011,
								985
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 998,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 995,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1011,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1011,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1007,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1011,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1012,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1041,
							"linearizedBaseContracts": [
								1041
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1019,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1021,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1041,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1028,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1030,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1041,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1036,
												"id": 1038,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1041,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1042,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"RVA/Token.sol": {
				"ast": {
					"absolutePath": "RVA/Token.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1011
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"erc20Token": [
							1390
						]
					},
					"id": 1391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 148,
							"src": "58:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 908,
							"src": "111:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1391,
							"sourceUnit": 393,
							"src": "167:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "ERC20",
										"nameLocations": [
											"248:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 907,
										"src": "248:5:7"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "248:5:7"
								},
								{
									"baseName": {
										"id": 1049,
										"name": "Ownable",
										"nameLocations": [
											"255:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "255:7:7"
									},
									"id": 1050,
									"nodeType": "InheritanceSpecifier",
									"src": "255:7:7"
								},
								{
									"baseName": {
										"id": 1051,
										"name": "Pausable",
										"nameLocations": [
											"264:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "264:8:7"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "264:8:7"
								}
							],
							"canonicalName": "erc20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1390,
							"linearizedBaseContracts": [
								1390,
								392,
								147,
								907,
								189,
								1011,
								985,
								1041
							],
							"name": "erc20Token",
							"nameLocation": "234:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c66e4095",
									"id": 1054,
									"mutability": "mutable",
									"name": "icoContract",
									"nameLocation": "295:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "280:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1053,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "280:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1061,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "328:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "312:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1055,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "312:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1060,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 1056,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "343:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1059,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1057,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "353:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1058,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "359:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "353:8:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "343:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9bc289f1",
									"id": 1065,
									"mutability": "mutable",
									"name": "lockedUntil",
									"nameLocation": "404:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "369:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1064,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1062,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "377:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "369:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1063,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "388:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dbac26e9",
									"id": 1069,
									"mutability": "mutable",
									"name": "blacklisted",
									"nameLocation": "454:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1390,
									"src": "422:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1068,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1066,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "430:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "422:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1067,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "441:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8",
									"id": 1073,
									"name": "ICOContractSet",
									"nameLocation": "481:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "icoContract",
												"nameLocation": "512:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "496:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:29:7"
									},
									"src": "475:50:7"
								},
								{
									"anonymous": false,
									"eventSelector": "611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f",
									"id": 1079,
									"name": "LockupSet",
									"nameLocation": "536:9:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "562:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "546:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedUntilTimestamp",
												"nameLocation": "579:20:7",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "571:28:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:55:7"
									},
									"src": "530:71:7"
								},
								{
									"anonymous": false,
									"eventSelector": "cf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8",
									"id": 1085,
									"name": "Blacklisted",
									"nameLocation": "612:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "640:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "624:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "isBlacklisted",
												"nameLocation": "654:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "649:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "649:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:45:7"
									},
									"src": "606:63:7"
								},
								{
									"anonymous": false,
									"eventSelector": "96352ad7a9be4c45ad1b71ff4390921022216946b3b7348fd652f133a6ee5453",
									"id": 1091,
									"name": "EmergencyTokenRecovered",
									"nameLocation": "680:23:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "720:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "704:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:39:7"
									},
									"src": "674:69:7"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "843:49:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1107,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "859:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "863:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "859:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "871:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1106,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "853:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "853:31:7"
											}
										]
									},
									"id": 1113,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1098,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1093,
													"src": "809:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1099,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1095,
													"src": "815:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1100,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1097,
												"name": "ERC20",
												"nameLocations": [
													"803:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "803:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "803:19:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1102,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "831:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "835:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "831:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1104,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1101,
												"name": "Ownable",
												"nameLocations": [
													"823:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "823:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "823:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "775:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "761:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1092,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "761:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "795:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "781:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1094,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "781:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:42:7"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:0:7"
									},
									"scope": 1390,
									"src": "749:143:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "925:80:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1116,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "943:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "947:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "943:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1118,
																"name": "icoContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "957:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "943:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "970:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 1115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "935:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "935:52:7"
											},
											{
												"id": 1123,
												"nodeType": "PlaceholderStatement",
												"src": "997:1:7"
											}
										]
									},
									"id": 1125,
									"name": "onlyICOContract",
									"nameLocation": "907:15:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:2:7"
									},
									"src": "898:107:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "1047:25:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1130,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "1057:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1057:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "1057:8:7"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1128,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1127,
												"name": "onlyOwner",
												"nameLocations": [
													"1037:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1037:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1037:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "1020:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:7"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:0:7"
									},
									"scope": 1390,
									"src": "1011:61:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "1116:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1139,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "1126:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "1126:10:7"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1137,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1136,
												"name": "onlyOwner",
												"nameLocations": [
													"1106:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1106:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1106:9:7"
										}
									],
									"name": "unpause",
									"nameLocation": "1087:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1094:2:7"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1116:0:7"
									},
									"scope": 1390,
									"src": "1078:65:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										471
									],
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "1206:26:7",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1223:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1148,
												"id": 1150,
												"nodeType": "Return",
												"src": "1216:9:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1158:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1181:8:7"
									},
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:2:7"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1199:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1146,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:7:7"
									},
									"scope": 1390,
									"src": "1149:83:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "1318:93:7",
										"statements": [
											{
												"expression": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1161,
															"name": "lockedUntil",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "1328:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1163,
														"indexExpression": {
															"id": 1162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "1340:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1328:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1164,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "1351:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1328:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "1328:32:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1168,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "1385:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "1394:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1167,
														"name": "LockupSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "1375:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "EmitStatement",
												"src": "1370:34:7"
											}
										]
									},
									"functionSelector": "3e579307",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1158,
												"name": "onlyICOContract",
												"nameLocations": [
													"1302:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1125,
												"src": "1302:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1302:15:7"
										}
									],
									"name": "setLockup",
									"nameLocation": "1247:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1265:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1257:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1282:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1274:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:36:7"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1318:0:7"
									},
									"scope": 1390,
									"src": "1238:173:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "1493:89:7",
										"statements": [
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1182,
															"name": "blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "1503:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1184,
														"indexExpression": {
															"id": 1183,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "1515:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1503:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1185,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "1526:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1503:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "1503:29:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1189,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "1559:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "1568:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1188,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "1547:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1547:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "EmitStatement",
												"src": "1542:33:7"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1179,
												"name": "onlyOwner",
												"nameLocations": [
													"1483:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1483:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1483:9:7"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "1431:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1452:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1444:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1461:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1461:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:30:7"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:0:7"
									},
									"scope": 1390,
									"src": "1422:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "1655:44:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1201,
														"name": "blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "1672:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1203,
													"indexExpression": {
														"id": 1202,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "1684:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1672:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1204,
												"nodeType": "Return",
												"src": "1665:27:7"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "1597:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1619:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1611:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:17:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "1649:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1649:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:6:7"
									},
									"scope": 1390,
									"src": "1588:111:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										517
									],
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "1803:360:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1821:24:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1219,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "1822:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1222,
																"indexExpression": {
																	"expression": {
																		"id": 1220,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1834:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1838:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1834:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1822:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 1218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1813:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1813:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "1813:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1906:23:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1228,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "1907:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1230,
																"indexExpression": {
																	"id": 1229,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "1919:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1907:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1931:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 1227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1898:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1898:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "1898:77:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1236,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1993:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1999:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1993:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1238,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "2012:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1241,
																	"indexExpression": {
																		"expression": {
																			"id": 1239,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2024:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2028:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2024:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2012:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1993:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1243,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "2039:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1246,
																	"indexExpression": {
																		"expression": {
																			"id": 1244,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2051:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2055:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2051:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2039:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2066:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2039:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1993:74:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2069:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1985:121:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "1985:121:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1255,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "2138:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1256,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "2149:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1253,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2123:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_erc20Token_$1390_$",
																"typeString": "type(contract super erc20Token)"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2129:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 517,
														"src": "2123:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1217,
												"id": 1258,
												"nodeType": "Return",
												"src": "2116:40:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1214,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1213,
												"name": "whenNotPaused",
												"nameLocations": [
													"1774:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "1774:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1774:13:7"
										}
									],
									"name": "transfer",
									"nameLocation": "1714:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1212,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1765:8:7"
									},
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1731:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1723:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1723:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1750:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1742:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:35:7"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "1797:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1797:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1796:6:7"
									},
									"scope": 1390,
									"src": "1705:458:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										590
									],
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "2287:360:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2305:20:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1275,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "2306:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1277,
																"indexExpression": {
																	"id": 1276,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "2318:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2306:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2327:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 1274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2297:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "2297:71:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2386:23:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1283,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "2387:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1285,
																"indexExpression": {
																	"id": 1284,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1264,
																	"src": "2399:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2387:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2411:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 1282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2378:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "2378:77:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1291,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2473:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2479:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2473:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1293,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "2492:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1295,
																	"indexExpression": {
																		"id": 1294,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "2504:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2492:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2473:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1297,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "2515:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1299,
																	"indexExpression": {
																		"id": 1298,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "2527:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2515:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2538:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2515:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2473:66:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2541:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 1290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2465:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2465:113:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "2465:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1308,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "2614:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "2622:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "2633:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1306,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2595:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_erc20Token_$1390_$",
																"typeString": "type(contract super erc20Token)"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2601:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "2595:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1273,
												"id": 1312,
												"nodeType": "Return",
												"src": "2588:52:7"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1270,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1269,
												"name": "whenNotPaused",
												"nameLocations": [
													"2258:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2258:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2258:13:7"
										}
									],
									"name": "transferFrom",
									"nameLocation": "2178:12:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2249:8:7"
									},
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2199:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2191:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2215:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2207:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2234:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2226:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:51:7"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2281:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2281:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:6:7"
									},
									"scope": 1390,
									"src": "2169:478:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "2718:86:7",
										"statements": [
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1321,
														"name": "icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "2728:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1322,
														"name": "_icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "2742:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2728:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "2728:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1326,
															"name": "_icoContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "2784:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1325,
														"name": "ICOContractSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "2769:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2769:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "EmitStatement",
												"src": "2764:33:7"
											}
										]
									},
									"functionSelector": "2e0d2a00",
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "onlyOwner",
												"nameLocations": [
													"2708:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2708:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2708:9:7"
										}
									],
									"name": "setICOContract",
									"nameLocation": "2662:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "_icoContract",
												"nameLocation": "2685:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "2677:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:22:7"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:7"
									},
									"scope": 1390,
									"src": "2653:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "2915:385:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1342,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "2933:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2944:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2933:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1344,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "2954:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2962:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2954:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2933:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42617463685472616e73666572206661696c65643a204d69736d61746368656420617272617973",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2970:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															},
															"value": "BatchTransfer failed: Mismatched arrays"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															}
														],
														"id": 1341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2925:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2925:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "2925:87:7"
											},
											{
												"assignments": [
													1351
												],
												"declarations": [
													{
														"constant": false,
														"id": 1351,
														"mutability": "mutable",
														"name": "recipientLength",
														"nameLocation": "3030:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1388,
														"src": "3022:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1350,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3022:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1354,
												"initialValue": {
													"expression": {
														"id": 1352,
														"name": "recipients",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "3048:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3059:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3048:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3022:43:7"
											},
											{
												"body": {
													"id": 1386,
													"nodeType": "Block",
													"src": "3121:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "3143:27:7",
																		"subExpression": {
																			"baseExpression": {
																				"id": 1366,
																				"name": "blacklisted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1069,
																				"src": "3144:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1370,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1367,
																					"name": "recipients",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "3156:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 1369,
																				"indexExpression": {
																					"id": 1368,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1356,
																					"src": "3167:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3156:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3144:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3172:48:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																			"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																		},
																		"value": "BatchTransfer failed: Recipient is blacklisted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																			"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																		}
																	],
																	"id": 1365,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3135:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3135:86:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1374,
															"nodeType": "ExpressionStatement",
															"src": "3135:86:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1376,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3245:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3249:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3245:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1378,
																			"name": "recipients",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1333,
																			"src": "3257:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1380,
																		"indexExpression": {
																			"id": 1379,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1356,
																			"src": "3268:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3257:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1381,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1336,
																			"src": "3272:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1383,
																		"indexExpression": {
																			"id": 1382,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1356,
																			"src": "3280:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3272:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1375,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "3235:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3235:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1385,
															"nodeType": "ExpressionStatement",
															"src": "3235:48:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1359,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "3095:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1360,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "3099:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3095:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1387,
												"initializationExpression": {
													"assignments": [
														1356
													],
													"declarations": [
														{
															"constant": false,
															"id": 1356,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3088:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1387,
															"src": "3080:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1355,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3080:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1358,
													"initialValue": {
														"hexValue": "30",
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3092:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3080:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3116:3:7",
														"subExpression": {
															"id": 1362,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "3116:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ExpressionStatement",
													"src": "3116:3:7"
												},
												"nodeType": "ForStatement",
												"src": "3075:219:7"
											}
										]
									},
									"functionSelector": "88d695b2",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1339,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1338,
												"name": "whenNotPaused",
												"nameLocations": [
													"2901:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2901:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2901:13:7"
										}
									],
									"name": "batchTransfer",
									"nameLocation": "2819:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "2852:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2833:29:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1331,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2833:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1332,
													"nodeType": "ArrayTypeName",
													"src": "2833:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2883:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "2864:26:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1334,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2864:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1335,
													"nodeType": "ArrayTypeName",
													"src": "2864:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2832:59:7"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:0:7"
									},
									"scope": 1390,
									"src": "2810:490:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1391,
							"src": "225:3078:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								295,
								300,
								919,
								928,
								1073,
								1079,
								1085,
								1091
							]
						}
					],
					"src": "32:3271:7"
				},
				"id": 7
			}
		}
	}
}