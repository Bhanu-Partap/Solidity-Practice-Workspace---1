{
	"id": "213b89fe4f38c3a4bec96be13854972a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"RVA/UpgradableToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\";\n\ncontract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {\n    address public icoContract;\n    uint256 private _totalSupply;\n    using AddressUpgradeable for address;\n\n    mapping(address => uint256) public lockedUntil;\n    mapping(address => bool) public blacklisted;\n\n    event ICOContractSet(address indexed icoContract);\n    event LockupSet(address indexed account, uint256 lockedUntilTimestamp);\n    event Blacklisted(address indexed account, bool isBlacklisted);\n    event EmergencyTokenRecovered(address indexed token, uint256 amount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers(); // Disables constructors for upgradeable contracts.\n    }\n\n    function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {\n        __ERC20_init(name, symbol);\n        __Ownable_init(msg.sender);\n        __Pausable_init();\n        __UUPSUpgradeable_init();\n\n        _totalSupply = totalSupply_;\n        _mint(msg.sender, _totalSupply); // Mint initial supply to the deployer\n    }\n\n    modifier onlyICOContract() {\n        require(msg.sender == icoContract, \"Not authorized\");\n        _;\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function setLockup(address account, uint256 timestamp) external onlyICOContract {\n        require(account !=address(0),\"Null Address\");\n        if (lockedUntil[account] != timestamp) {\n            lockedUntil[account] = timestamp;\n            emit LockupSet(account, timestamp);\n        }\n    }\n\n    function setBlacklist(address account, bool status) external onlyOwner {\n        require(account !=address(0),\"Null Address\");\n        blacklisted[account] = status;\n        emit Blacklisted(account, status);\n    }\n\n    function isBlacklisted(address account) public view returns (bool) {\n        return blacklisted[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(amount >0,\"Amount shouldn't be zero\");\n        require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transfer(recipient, amount);\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {\n        require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\");\n        require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\");\n        require(amount >0,\"Amount shouldn't be zero\");\n        require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\");\n        return super.transferFrom(sender, recipient, amount);\n    }\n\n    function setICOContract(address _icoContract) external onlyOwner {\n        require(_icoContract != address(0), \"Null Address\");\n        require(_icoContract.isContract(), \"Address is not a contract\");\n        icoContract = _icoContract;\n        emit ICOContractSet(_icoContract);\n    }\n\n    function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {\n        require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\");\n        uint256 recipientLength = recipients.length;\n        for (uint256 i = 0; i < recipientLength; i++) {\n            unchecked{\n                if (blacklisted[recipients[i]]) {\n                    revert(\"BatchTransfer failed: Recipient is blacklisted\");\n                }\n            _transfer(msg.sender, recipients[i], amounts[i]);\n            }\n        }\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 757,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a9b1ce579dd9b0bee0d805531f4a823f0d05ad9423e7301493a34cd4bfd217cf64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a9b1ce579dd9b0bee0d805531f4a823f0d05ad9423e7301493a34cd4bfd217cf64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xB1 0xCE JUMPI SWAP14 0xD9 0xB0 0xBE 0xE0 0xD8 SDIV MSTORE8 0x1F BLOBBASEFEE DUP3 EXTCODEHASH 0xD SDIV 0xAD SWAP5 0x23 0xE7 ADDRESS EQ SWAP4 LOG3 0x4C 0xD4 0xBF 0xD2 OR 0xCF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a9b1ce579dd9b0bee0d805531f4a823f0d05ad9423e7301493a34cd4bfd217cf64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xB1 0xCE JUMPI SWAP14 0xD9 0xB0 0xBE 0xE0 0xD8 SDIV MSTORE8 0x1F BLOBBASEFEE DUP3 EXTCODEHASH 0xD SDIV 0xAD SWAP5 0x23 0xE7 ADDRESS EQ SWAP4 LOG3 0x4C 0xD4 0xBF 0xD2 OR 0xCF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "194:9180:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9b1ce579dd9b0bee0d805531f4a823f0d05ad9423e7301493a34cd4bfd217cf64736f6c634300081a0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a375b1079c8c42586b0a3b4087be2e3288f2b2597fe27097dfef1ba384cc61e564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a375b1079c8c42586b0a3b4087be2e3288f2b2597fe27097dfef1ba384cc61e564736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH22 0xB1079C8C42586B0A3B4087BE2E3288F2B2597FE27097 0xDF 0xEF SHL LOG3 DUP5 0xCC PUSH2 0xE564 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "496:5741:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a375b1079c8c42586b0a3b4087be2e3288f2b2597fe27097dfef1ba384cc61e564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH22 0xB1079C8C42586B0A3B4087BE2E3288F2B2597FE27097 0xDF 0xEF SHL LOG3 DUP5 0xCC PUSH2 0xE564 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "496:5741:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a375b1079c8c42586b0a3b4087be2e3288f2b2597fe27097dfef1ba384cc61e564736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a63df8270013bf13c7062cbe489c23601f2b5495ac1bb1ea594a091e39929af64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a63df8270013bf13c7062cbe489c23601f2b5495ac1bb1ea594a091e39929af64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE PUSH4 0xDF827001 EXTCODESIZE CALL EXTCODECOPY PUSH17 0x62CBE489C23601F2B5495AC1BB1EA594A0 SWAP2 0xE3 SWAP10 0x29 0xAF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204a63df8270013bf13c7062cbe489c23601f2b5495ac1bb1ea594a091e39929af64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE PUSH4 0xDF827001 EXTCODESIZE CALL EXTCODECOPY PUSH17 0x62CBE489C23601F2B5495AC1BB1EA594A0 SWAP2 0xE3 SWAP10 0x29 0xAF PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a63df8270013bf13c7062cbe489c23601f2b5495ac1bb1ea594a091e39929af64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122028da85bcb2770a0134e1d1112b1c2c4debee6a043f07851b43a81abd8a00eef464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122028da85bcb2770a0134e1d1112b1c2c4debee6a043f07851b43a81abd8a00eef464736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xDA DUP6 0xBC 0xB2 PUSH24 0xA0134E1D1112B1C2C4DEBEE6A043F07851B43A81ABD8A00 0xEE DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "411:484:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122028da85bcb2770a0134e1d1112b1c2c4debee6a043f07851b43a81abd8a00eef464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xDA DUP6 0xBC 0xB2 PUSH24 0xA0134E1D1112B1C2C4DEBEE6A043F07851B43A81ABD8A00 0xEE DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "411:484:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122028da85bcb2770a0134e1d1112b1c2c4debee6a043f07851b43a81abd8a00eef464736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ccc1c85ee2349d08c293e1d69700bba4db7862761647ddbb83cdc6765e06a84b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ccc1c85ee2349d08c293e1d69700bba4db7862761647ddbb83cdc6765e06a84b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xC1 0xC8 MCOPY 0xE2 CALLVALUE SWAP14 ADDMOD 0xC2 SWAP4 0xE1 0xD6 SWAP8 STOP 0xBB LOG4 0xDB PUSH25 0x62761647DDBB83CDC6765E06A84B64736F6C634300081A0033 ",
							"sourceMap": "1407:2774:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ccc1c85ee2349d08c293e1d69700bba4db7862761647ddbb83cdc6765e06a84b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xC1 0xC8 MCOPY 0xE2 CALLVALUE SWAP14 ADDMOD 0xC2 SWAP4 0xE1 0xD6 SWAP8 STOP 0xBB LOG4 0xDB PUSH25 0x62761647DDBB83CDC6765E06A84B64736F6C634300081A0033 ",
							"sourceMap": "1407:2774:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ccc1c85ee2349d08c293e1d69700bba4db7862761647ddbb83cdc6765e06a84b64736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"RVA/UpgradableToken.sol": {
				"ERC20Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isBlacklisted",
									"type": "bool"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyTokenRecovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "icoContract",
									"type": "address"
								}
							],
							"name": "ICOContractSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedUntilTimestamp",
									"type": "uint256"
								}
							],
							"name": "LockupSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "icoContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedUntil",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_icoContract",
									"type": "address"
								}
							],
							"name": "setICOContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "setLockup",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RVA/UpgradableToken.sol\":445:4469  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"RVA/UpgradableToken.sol\":1087:1192  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"RVA/UpgradableToken.sol\":1111:1133  _disableInitializers() */\n  tag_4\n    /* \"RVA/UpgradableToken.sol\":1111:1131  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"RVA/UpgradableToken.sol\":1111:1133  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"RVA/UpgradableToken.sol\":445:4469  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7856  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7883  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7885  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7901  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8003:8019  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7986  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8052:8068  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8036  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8049  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8099:8115  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"RVA/UpgradableToken.sol\":445:4469  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"RVA/UpgradableToken.sol\":445:4469  contract ERC20Token is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xad3cb1cc\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdbac26e9\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdbac26e9\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_28\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0xad3cb1cc\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb119490e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc66e4095\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9bc289f1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x88d695b2\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x313ce567\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x4f1ef286\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3e579307\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e0d2a00\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":2118:2332  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":2974:3507  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":3513:3798  function setICOContract(address _icoContract) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":1818:2112  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"RVA/UpgradableToken.sol\":1747:1812  function unpause() external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_11:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      stop\n        /* \"RVA/UpgradableToken.sol\":1680:1741  function pause() external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"RVA/UpgradableToken.sol\":3804:4377  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      tag_108\n      jump\t// in\n    tag_105:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":658:704  mapping(address => uint256) public lockedUntil */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":2455:2968  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":1198:1561  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      tag_136\n      jump\t// in\n    tag_133:\n      stop\n        /* \"RVA/UpgradableToken.sol\":549:575  address public icoContract */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RVA/UpgradableToken.sol\":710:753  mapping(address => bool) public blacklisted */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      tag_150\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_151\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n    tag_153:\n      stop\n        /* \"RVA/UpgradableToken.sol\":2338:2449  function isBlacklisted(address account) public view returns (bool) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2761:2774  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2808  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2827  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2829  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2847  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2853  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2839:2853  return $._name */\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_166\n      swap1\n      tag_165\n      jump\t// in\n    tag_166:\n      dup1\n      iszero\n      tag_167\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_168\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_167)\n    tag_168:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_169:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_169\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5283:5287  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5312  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5325  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5327  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5346:5351  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5353:5360  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5362:5367  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5345  _approve */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5385:5389  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5378:5389  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":2118:2332  function setBlacklist(address account, bool status) external onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"RVA/UpgradableToken.sol\":2225:2226  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2207:2227  account !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":2207:2214  account */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":2207:2227  account !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"RVA/UpgradableToken.sol\":2199:2243  require(account !=address(0),\"Null Address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"RVA/UpgradableToken.sol\":2276:2282  status */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":2253:2264  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2253:2273  blacklisted[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2265:2272  account */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":2253:2273  blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2253:2282  blacklisted[account] = status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":2309:2316  account */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":2297:2325  Blacklisted(account, status) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8\n        /* \"RVA/UpgradableToken.sol\":2318:2324  status */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":2297:2325  Blacklisted(account, status) */\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":2118:2332  function setBlacklist(address account, bool status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3955  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:3989  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4008  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:4010  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4028  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4041  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4020:4041  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":2974:3507  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_61:\n        /* \"RVA/UpgradableToken.sol\":3086:3090  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_186:\n        /* \"RVA/UpgradableToken.sol\":3111:3122  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3111:3130  blacklisted[sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3123:3129  sender */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":3111:3130  blacklisted[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":3110:3130  !blacklisted[sender] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3102:3173  require(!blacklisted[sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"RVA/UpgradableToken.sol\":3192:3203  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":3192:3214  blacklisted[recipient] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3204:3213  recipient */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3192:3214  blacklisted[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":3191:3214  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3183:3260  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"RVA/UpgradableToken.sol\":3286:3287  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3278:3284  amount */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":3278:3287  amount >0 */\n      gt\n        /* \"RVA/UpgradableToken.sol\":3270:3315  require(amount >0,\"Amount shouldn't be zero\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"RVA/UpgradableToken.sol\":3352:3363  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":3352:3371  lockedUntil[sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3364:3370  sender */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":3352:3371  lockedUntil[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3333:3348  block.timestamp */\n      timestamp\n        /* \"RVA/UpgradableToken.sol\":3333:3371  block.timestamp >= lockedUntil[sender] */\n      lt\n      iszero\n        /* \"RVA/UpgradableToken.sol\":3333:3399  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n      dup1\n      tag_198\n      jumpi\n      pop\n        /* \"RVA/UpgradableToken.sol\":3398:3399  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3375:3386  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":3375:3394  lockedUntil[sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3387:3393  sender */\n      dup7\n        /* \"RVA/UpgradableToken.sol\":3375:3394  lockedUntil[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":3375:3399  lockedUntil[sender] == 0 */\n      eq\n        /* \"RVA/UpgradableToken.sol\":3333:3399  block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0 */\n    tag_198:\n        /* \"RVA/UpgradableToken.sol\":3325:3438  require(block.timestamp >= lockedUntil[sender] || lockedUntil[sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"RVA/UpgradableToken.sol\":3455:3500  super.transferFrom(sender, recipient, amount) */\n      tag_202\n        /* \"RVA/UpgradableToken.sol\":3474:3480  sender */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3482:3491  recipient */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3493:3499  amount */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3455:3473  super.transferFrom */\n      tag_203\n        /* \"RVA/UpgradableToken.sol\":3455:3500  super.transferFrom(sender, recipient, amount) */\n      jump\t// in\n    tag_202:\n        /* \"RVA/UpgradableToken.sol\":3448:3500  return super.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":2974:3507  function transferFrom(address sender, address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":3513:3798  function setICOContract(address _icoContract) external onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"RVA/UpgradableToken.sol\":3620:3621  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3596:3622  _icoContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":3596:3608  _icoContract */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":3596:3622  _icoContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"RVA/UpgradableToken.sol\":3588:3639  require(_icoContract != address(0), \"Null Address\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_181\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"RVA/UpgradableToken.sol\":3657:3682  _icoContract.isContract() */\n      tag_209\n        /* \"RVA/UpgradableToken.sol\":3657:3669  _icoContract */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":3657:3680  _icoContract.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n        /* \"RVA/UpgradableToken.sol\":3657:3682  _icoContract.isContract() */\n      jump\t// in\n    tag_209:\n        /* \"RVA/UpgradableToken.sol\":3649:3712  require(_icoContract.isContract(), \"Address is not a contract\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"RVA/UpgradableToken.sol\":3736:3748  _icoContract */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":3722:3733  icoContract */\n      0x32\n      0x00\n        /* \"RVA/UpgradableToken.sol\":3722:3748  icoContract = _icoContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":3778:3790  _icoContract */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":3763:3791  ICOContractSet(_icoContract) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":3513:3798  function setICOContract(address _icoContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3803:3808  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3827:3829  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3820:3829  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1818:2112  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n    tag_76:\n        /* \"RVA/UpgradableToken.sol\":1626:1637  icoContract */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":1612:1637  msg.sender == icoContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":1612:1622  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1612:1637  msg.sender == icoContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"RVA/UpgradableToken.sol\":1604:1656  require(msg.sender == icoContract, \"Not authorized\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"RVA/UpgradableToken.sol\":1934:1935  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":1916:1936  account !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"RVA/UpgradableToken.sol\":1916:1923  account */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":1916:1936  account !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"RVA/UpgradableToken.sol\":1908:1952  require(account !=address(0),\"Null Address\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_181\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"RVA/UpgradableToken.sol\":1990:1999  timestamp */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":1966:1977  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":1966:1986  lockedUntil[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":1978:1985  account */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":1966:1986  lockedUntil[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":1966:1999  lockedUntil[account] != timestamp */\n      eq\n        /* \"RVA/UpgradableToken.sol\":1962:2106  if (lockedUntil[account] != timestamp) {... */\n      tag_222\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":2038:2047  timestamp */\n      dup1\n        /* \"RVA/UpgradableToken.sol\":2015:2026  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2015:2035  lockedUntil[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2027:2034  account */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":2015:2035  lockedUntil[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"RVA/UpgradableToken.sol\":2015:2047  lockedUntil[account] = timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":2076:2083  account */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":2066:2095  LockupSet(account, timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f\n        /* \"RVA/UpgradableToken.sol\":2085:2094  timestamp */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":2066:2095  LockupSet(account, timestamp) */\n      mload(0x40)\n      tag_223\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"RVA/UpgradableToken.sol\":1962:2106  if (lockedUntil[account] != timestamp) {... */\n    tag_222:\n        /* \"RVA/UpgradableToken.sol\":1818:2112  function setLockup(address account, uint256 timestamp) external onlyICOContract {... */\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1747:1812  function unpause() external onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_225:\n        /* \"RVA/UpgradableToken.sol\":1795:1805  _unpause() */\n      tag_227\n        /* \"RVA/UpgradableToken.sol\":1795:1803  _unpause */\n      tag_228\n        /* \"RVA/UpgradableToken.sol\":1795:1805  _unpause() */\n      jump\t// in\n    tag_227:\n        /* \"RVA/UpgradableToken.sol\":1747:1812  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1942:1956  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4178  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4212  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4231  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4233  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4251  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4261  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4269  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4270  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_247\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1680:1741  function pause() external onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_250:\n        /* \"RVA/UpgradableToken.sol\":1726:1734  _pause() */\n      tag_252\n        /* \"RVA/UpgradableToken.sol\":1726:1732  _pause */\n      tag_253\n        /* \"RVA/UpgradableToken.sol\":1726:1734  _pause() */\n      jump\t// in\n    tag_252:\n        /* \"RVA/UpgradableToken.sol\":1680:1741  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":3804:4377  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_255:\n        /* \"RVA/UpgradableToken.sol\":3948:3955  amounts */\n      dup2\n      dup2\n        /* \"RVA/UpgradableToken.sol\":3948:3962  amounts.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":3927:3937  recipients */\n      dup5\n      dup5\n        /* \"RVA/UpgradableToken.sol\":3927:3944  recipients.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":3927:3962  recipients.length == amounts.length */\n      eq\n        /* \"RVA/UpgradableToken.sol\":3919:4006  require(recipients.length == amounts.length, \"BatchTransfer failed: Mismatched arrays\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"RVA/UpgradableToken.sol\":4016:4039  uint256 recipientLength */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":4042:4052  recipients */\n      dup5\n      dup5\n        /* \"RVA/UpgradableToken.sol\":4042:4059  recipients.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":4016:4059  uint256 recipientLength = recipients.length */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":4074:4083  uint256 i */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":4069:4371  for (uint256 i = 0; i < recipientLength; i++) {... */\n    tag_260:\n        /* \"RVA/UpgradableToken.sol\":4093:4108  recipientLength */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":4089:4090  i */\n      dup2\n        /* \"RVA/UpgradableToken.sol\":4089:4108  i < recipientLength */\n      lt\n        /* \"RVA/UpgradableToken.sol\":4069:4371  for (uint256 i = 0; i < recipientLength; i++) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":4160:4171  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":4160:4186  blacklisted[recipients[i]] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":4172:4182  recipients */\n      dup8\n      dup8\n        /* \"RVA/UpgradableToken.sol\":4183:4184  i */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":4172:4185  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_264\n      tag_265\n      jump\t// in\n    tag_264:\n    tag_263:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_266:\n        /* \"RVA/UpgradableToken.sol\":4160:4186  blacklisted[recipients[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":4156:4285  if (blacklisted[recipients[i]]) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"RVA/UpgradableToken.sol\":4210:4266  revert(\"BatchTransfer failed: Recipient is blacklisted\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"RVA/UpgradableToken.sol\":4156:4285  if (blacklisted[recipients[i]]) {... */\n    tag_267:\n        /* \"RVA/UpgradableToken.sol\":4298:4346  _transfer(msg.sender, recipients[i], amounts[i]) */\n      tag_270\n        /* \"RVA/UpgradableToken.sol\":4308:4318  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":4320:4330  recipients */\n      dup8\n      dup8\n        /* \"RVA/UpgradableToken.sol\":4331:4332  i */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":4320:4333  recipients[i] */\n      dup2\n      dup2\n      lt\n      tag_271\n      jumpi\n      tag_272\n      tag_265\n      jump\t// in\n    tag_272:\n    tag_271:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_273:\n        /* \"RVA/UpgradableToken.sol\":4335:4342  amounts */\n      dup7\n      dup7\n        /* \"RVA/UpgradableToken.sol\":4343:4344  i */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":4335:4345  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_274\n      jumpi\n      tag_275\n      tag_265\n      jump\t// in\n    tag_275:\n    tag_274:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"RVA/UpgradableToken.sol\":4298:4307  _transfer */\n      tag_276\n        /* \"RVA/UpgradableToken.sol\":4298:4346  _transfer(msg.sender, recipients[i], amounts[i]) */\n      jump\t// in\n    tag_270:\n        /* \"RVA/UpgradableToken.sol\":4110:4113  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"RVA/UpgradableToken.sol\":4069:4371  for (uint256 i = 0; i < recipientLength; i++) {... */\n      jump(tag_260)\n    tag_261:\n      pop\n        /* \"RVA/UpgradableToken.sol\":3909:4377  {... */\n      pop\n        /* \"RVA/UpgradableToken.sol\":3804:4377  function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3020:3033  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3067  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      tag_281\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3086  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3088  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3106  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3114  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3098:3114  return $._symbol */\n      dup1\n      sload\n      tag_282\n      swap1\n      tag_165\n      jump\t// in\n    tag_282:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_283\n      swap1\n      tag_165\n      jump\t// in\n    tag_283:\n      dup1\n      iszero\n      tag_284\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_285\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_284)\n    tag_285:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_286:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_286\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_284:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":658:704  mapping(address => uint256) public lockedUntil */\n    tag_121:\n      mstore(0x20, 0x34)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":2455:2968  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n    tag_126:\n        /* \"RVA/UpgradableToken.sol\":2547:2551  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_288\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_288:\n        /* \"RVA/UpgradableToken.sol\":2572:2583  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2572:2595  blacklisted[msg.sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2584:2594  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":2572:2595  blacklisted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2571:2595  !blacklisted[msg.sender] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2563:2638  require(!blacklisted[msg.sender], \"Transfer failed: Sender is blacklisted\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap1\n      tag_191\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"RVA/UpgradableToken.sol\":2657:2668  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2657:2679  blacklisted[recipient] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2669:2678  recipient */\n      dup5\n        /* \"RVA/UpgradableToken.sol\":2657:2679  blacklisted[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2656:2679  !blacklisted[recipient] */\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2648:2725  require(!blacklisted[recipient], \"Transfer failed: Recipient is blacklisted\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap1\n      tag_194\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n        /* \"RVA/UpgradableToken.sol\":2751:2752  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2743:2749  amount */\n      dup3\n        /* \"RVA/UpgradableToken.sol\":2743:2752  amount >0 */\n      gt\n        /* \"RVA/UpgradableToken.sol\":2735:2780  require(amount >0,\"Amount shouldn't be zero\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_197\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"RVA/UpgradableToken.sol\":2817:2828  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2817:2840  lockedUntil[msg.sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2829:2839  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":2817:2840  lockedUntil[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":2798:2813  block.timestamp */\n      timestamp\n        /* \"RVA/UpgradableToken.sol\":2798:2840  block.timestamp >= lockedUntil[msg.sender] */\n      lt\n      iszero\n        /* \"RVA/UpgradableToken.sol\":2798:2872  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n      dup1\n      tag_296\n      jumpi\n      pop\n        /* \"RVA/UpgradableToken.sol\":2871:2872  0 */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2844:2855  lockedUntil */\n      0x34\n        /* \"RVA/UpgradableToken.sol\":2844:2867  lockedUntil[msg.sender] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2856:2866  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":2844:2867  lockedUntil[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"RVA/UpgradableToken.sol\":2844:2872  lockedUntil[msg.sender] == 0 */\n      eq\n        /* \"RVA/UpgradableToken.sol\":2798:2872  block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0 */\n    tag_296:\n        /* \"RVA/UpgradableToken.sol\":2790:2911  require(block.timestamp >= lockedUntil[msg.sender] || lockedUntil[msg.sender] == 0, \"Transfer failed: Tokens are locked\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_201\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"RVA/UpgradableToken.sol\":2928:2961  super.transfer(recipient, amount) */\n      tag_299\n        /* \"RVA/UpgradableToken.sol\":2943:2952  recipient */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":2954:2960  amount */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":2928:2942  super.transfer */\n      tag_300\n        /* \"RVA/UpgradableToken.sol\":2928:2961  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_299:\n        /* \"RVA/UpgradableToken.sol\":2921:2961  return super.transfer(recipient, amount) */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":2455:2968  function transfer(address recipient, uint256 amount) public override whenNotPaused returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_130:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":1198:1561  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_303\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_304\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_305\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_305:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_306\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_306:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_308:\n        /* \"RVA/UpgradableToken.sol\":1313:1339  __ERC20_init(name, symbol) */\n      tag_310\n        /* \"RVA/UpgradableToken.sol\":1326:1330  name */\n      dup9\n        /* \"RVA/UpgradableToken.sol\":1332:1338  symbol */\n      dup9\n        /* \"RVA/UpgradableToken.sol\":1313:1325  __ERC20_init */\n      tag_311\n        /* \"RVA/UpgradableToken.sol\":1313:1339  __ERC20_init(name, symbol) */\n      jump\t// in\n    tag_310:\n        /* \"RVA/UpgradableToken.sol\":1349:1375  __Ownable_init(msg.sender) */\n      tag_312\n        /* \"RVA/UpgradableToken.sol\":1364:1374  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1349:1363  __Ownable_init */\n      tag_313\n        /* \"RVA/UpgradableToken.sol\":1349:1375  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_312:\n        /* \"RVA/UpgradableToken.sol\":1385:1402  __Pausable_init() */\n      tag_314\n        /* \"RVA/UpgradableToken.sol\":1385:1400  __Pausable_init */\n      tag_315\n        /* \"RVA/UpgradableToken.sol\":1385:1402  __Pausable_init() */\n      jump\t// in\n    tag_314:\n        /* \"RVA/UpgradableToken.sol\":1412:1436  __UUPSUpgradeable_init() */\n      tag_316\n        /* \"RVA/UpgradableToken.sol\":1412:1434  __UUPSUpgradeable_init */\n      tag_317\n        /* \"RVA/UpgradableToken.sol\":1412:1436  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_316:\n        /* \"RVA/UpgradableToken.sol\":1462:1474  totalSupply_ */\n      dup6\n        /* \"RVA/UpgradableToken.sol\":1447:1459  _totalSupply */\n      0x33\n        /* \"RVA/UpgradableToken.sol\":1447:1474  _totalSupply = totalSupply_ */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RVA/UpgradableToken.sol\":1484:1515  _mint(msg.sender, _totalSupply) */\n      tag_318\n        /* \"RVA/UpgradableToken.sol\":1490:1500  msg.sender */\n      caller\n        /* \"RVA/UpgradableToken.sol\":1502:1514  _totalSupply */\n      sload(0x33)\n        /* \"RVA/UpgradableToken.sol\":1484:1489  _mint */\n      tag_319\n        /* \"RVA/UpgradableToken.sol\":1484:1515  _mint(msg.sender, _totalSupply) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_321\n      swap2\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"RVA/UpgradableToken.sol\":1198:1561  function initialize(string memory name, string memory symbol, uint256 totalSupply_) external initializer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":549:575  address public icoContract */\n    tag_139:\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":710:753  mapping(address => bool) public blacklisted */\n    tag_144:\n      mstore(0x20, 0x35)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4795  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4829  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4848  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4850  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4868  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4880  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4881:4886  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4888:4895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4860:4896  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_328\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":2338:2449  function isBlacklisted(address account) public view returns (bool) {... */\n    tag_159:\n        /* \"RVA/UpgradableToken.sol\":2399:2403  bool */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2422:2433  blacklisted */\n      0x35\n        /* \"RVA/UpgradableToken.sol\":2422:2442  blacklisted[account] */\n      0x00\n        /* \"RVA/UpgradableToken.sol\":2434:2441  account */\n      dup4\n        /* \"RVA/UpgradableToken.sol\":2422:2442  blacklisted[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"RVA/UpgradableToken.sol\":2415:2442  return blacklisted[account] */\n      swap1\n      pop\n        /* \"RVA/UpgradableToken.sol\":2338:2449  function isBlacklisted(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10094:10099  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10101:10108  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10110:10115  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10117:10121  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10093  _approve */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_339\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      tag_344\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2107  paused */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap1\n      tag_347\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_345:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6075:6079  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6106  address spender */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6119  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6121  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      tag_350\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6147:6151  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6153:6160  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6162:6167  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6146  _spendAllowance */\n      tag_351\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      tag_352\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6188:6192  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6194:6196  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6198:6203  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6187  _transfer */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6221:6225  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6214:6225  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1483:1487  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1735:1736  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1720  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1706:1736  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1423:1743  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      tag_355\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1764  _requirePaused */\n      tag_356\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2765:2770  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2762  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2770  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      tag_358\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2804  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_359\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_359:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_361\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_362\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4783  ERC1967Utils.getImplementation */\n      tag_363\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_361:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"RVA/UpgradableToken.sol\":4383:4467  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {} */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_366\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_366:\n        /* \"RVA/UpgradableToken.sol\":4383:4467  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {} */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_369\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_370\n      swap2\n      swap1\n      tag_371\n      jump\t// in\n    tag_370:\n      0x01\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_372\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6560:6577  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_376\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_376:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_372:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6258:6290  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6254  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6346:6350  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_381\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6209:6444  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_383\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2519:2523  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2516  _paused */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      tag_389\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2555  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      mload(0x40)\n      tag_390\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6704:6705  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6692  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n      tag_392\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6756:6757  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6729:6759  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_393\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_393:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n    tag_392:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6797:6798  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6785  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6851:6852  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6822:6854  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_395\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      tag_396\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6886  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6888:6890  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6892:6897  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6881  _update */\n      tag_397\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4545  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4570  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      tag_400\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4583  _msgSender */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4585  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      tag_401\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4605:4610  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4614  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4616:4621  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4604  _transfer */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      jump\t// in\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4639:4643  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4632:4643  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_404\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_404:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      tag_407\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2407:2412  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2414:2421  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2406  __ERC20_init_unchained */\n      tag_408\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_410\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_410:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_412\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_413\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_315:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_415\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_417\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_418\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_420\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_420:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8822:8823  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8810  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n      tag_423\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8876:8877  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8847:8879  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_424\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n    tag_423:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      tag_425\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8916  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8919:8926  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8928:8933  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8906  _update */\n      tag_397\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      jump\t// in\n    tag_425:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11106  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11125  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      jump\t// in\n    tag_427:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11127  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11158:11159  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11146  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n      tag_428\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11212:11213  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11183:11215  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_429\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_429:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11258:11259  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11246  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n      tag_430\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11311:11312  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11283:11314  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_431\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_431:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n    tag_430:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11366:11371  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11335  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11347  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11348:11353  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11362  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11371  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11394  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n      iszero\n      tag_432\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11438  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11424:11429  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11440:11445  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_433\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_433:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n    tag_432:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11074:11463  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11868  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      tag_435\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11881:11886  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11888:11895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11880  allowance */\n      tag_150\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      jump\t// in\n    tag_435:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11896  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11930:11947  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11926  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11947  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n      tag_436\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11986:11991  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11983  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11967:11991  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n      iszero\n      tag_437\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12045:12052  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12054:12070  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12072:12077  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12018:12078  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_438\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_439\n      jump\t// in\n    tag_438:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11963:12093  if (currentAllowance < value) {... */\n    tag_437:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      tag_440\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12143:12148  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12150:12157  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12178:12183  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12175  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12159:12183  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12185:12190  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12142  _approve */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12134:12191  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_440:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12216  if (currentAllowance != type(uint256).max) {... */\n    tag_436:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11834:12222  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12222  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      tag_442\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2281  paused */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      jump\t// in\n    tag_442:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_443\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_444\n      swap1\n      tag_445\n      jump\t// in\n    tag_444:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_443:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_447\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_448\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_447:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_450\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_451\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_450:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_452\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_453\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_454\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_453:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_455)\n    tag_452:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_456\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_457\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_456:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_455:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_397:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7327  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      tag_459\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7346  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      jump\t// in\n    tag_459:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7348  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7378:7379  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7366  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      tag_460\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7516:7521  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7499  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7512  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7521  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_461\n      swap2\n      swap1\n      tag_462\n      jump\t// in\n    tag_461:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      jump(tag_463)\n    tag_460:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7571  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7575  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7585  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7590  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7591  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7623:7628  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7620  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7628  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n      iszero\n      tag_464\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7680:7684  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7686:7697  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7699:7704  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7655:7705  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_465\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_439\n      jump\t// in\n    tag_465:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n    tag_464:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7874:7879  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7871  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7879  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7841  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7851  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7852:7856  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7879  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7538:7904  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n    tag_463:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7932:7933  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7920  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      tag_466\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8099:8104  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8082  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8095  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8104  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      jump(tag_467)\n    tag_466:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8313:8318  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8295  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8305  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8306:8308  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8318  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n    tag_467:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8373:8375  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8367:8371  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8377:8382  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      mload(0x40)\n      tag_468\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_468:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7295:8390  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_470\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_471\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_470:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_472\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_472:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_408:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_474\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_474:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2569  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      tag_476\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2588  _getERC20Storage */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      jump\t// in\n    tag_476:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2590  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2610:2615  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2601  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2607  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2615  $._name = name_ */\n      swap1\n      dup2\n      tag_477\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_477:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2637:2644  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2626  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2634  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2644  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_479\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_479:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2537:2651  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_413:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_481\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_481:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_483\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_484\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_484:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_483:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_485\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_485:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_418:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_487\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_487:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1267  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_448:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_451:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_491\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_492\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_492:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_491:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_493\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_448\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_493:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_454:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3983:3995  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4008:4020  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4022:4045  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4055  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4068  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4069:4073  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4049:4074  target.delegatecall(data) */\n      mload(0x40)\n      tag_495\n      swap2\n      swap1\n      tag_496\n      jump\t// in\n    tag_495:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_499\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_498)\n    tag_499:\n      0x60\n      swap2\n      pop\n    tag_498:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4007:4074  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      tag_500\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4118:4124  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4126:4133  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4135:4145  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4117  verifyCallResultFromTarget */\n      tag_501\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4091:4146  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_500:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4084:4146  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3900:4153  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_457:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_503\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_503:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_471:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_505\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_303\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_505:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_501:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4565:4577  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4594:4601  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      tag_507\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      tag_508\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:4635  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4624  _revert */\n      tag_509\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4617:4636  _revert(returndata) */\n      jump\t// in\n    tag_508:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n      jump(tag_510)\n    tag_507:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4862:4863  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4851  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4858  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4863  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_511\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4889:4890  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4873  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4885  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4867:4890  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4841:4890  returndata.length == 0 && target.code.length == 0 */\n    tag_511:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_512\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4934:4940  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4917:4941  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_513\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_513:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4956  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_512:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4986  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4986  return returndata */\n      swap1\n      pop\n      jump(tag_506)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4589:4997  if (!success) {... */\n    tag_510:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4421:5003  function verifyCallResultFromTarget(... */\n    tag_506:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5543:6030  function _revert(bytes memory returndata) private pure {... */\n    tag_509:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5694:5695  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5684  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5691  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5674:5695  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n      iszero\n      tag_515\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5871:5881  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5865:5882  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5927:5942  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5914:5924  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5910:5912  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5906:5925  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5899:5943  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5670:6024  if (returndata.length > 0) {... */\n    tag_515:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5994:6013  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:106   */\n    tag_517:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_518:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_519:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_610:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_610)\n    tag_612:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_520:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_521:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_615\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_517\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":820:891   */\n      tag_616\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_518\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_617\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_519\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":990:1019   */\n      tag_618\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_520\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_39:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_620\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_521\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:1426   */\n    tag_522:\n        /* \"#utility.yul\":1384:1390   */\n      0x00\n        /* \"#utility.yul\":1417:1419   */\n      0x40\n        /* \"#utility.yul\":1411:1420   */\n      mload\n        /* \"#utility.yul\":1401:1420   */\n      swap1\n      pop\n        /* \"#utility.yul\":1351:1426   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1432:1549   */\n    tag_523:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1538:1539   */\n      dup1\n        /* \"#utility.yul\":1531:1543   */\n      revert\n        /* \"#utility.yul\":1555:1672   */\n    tag_524:\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1678:1804   */\n    tag_525:\n        /* \"#utility.yul\":1715:1722   */\n      0x00\n        /* \"#utility.yul\":1755:1797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1748:1753   */\n      dup3\n        /* \"#utility.yul\":1744:1798   */\n      and\n        /* \"#utility.yul\":1733:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1906   */\n    tag_526:\n        /* \"#utility.yul\":1847:1854   */\n      0x00\n        /* \"#utility.yul\":1876:1900   */\n      tag_626\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1876:1900   */\n      tag_525\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":1865:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1810:1906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1912:2034   */\n    tag_527:\n        /* \"#utility.yul\":1985:2009   */\n      tag_628\n        /* \"#utility.yul\":2003:2008   */\n      dup2\n        /* \"#utility.yul\":1985:2009   */\n      tag_526\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1975:2010   */\n      eq\n        /* \"#utility.yul\":1965:2028   */\n      tag_629\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      dup1\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1965:2028   */\n    tag_629:\n        /* \"#utility.yul\":1912:2034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2179   */\n    tag_528:\n        /* \"#utility.yul\":2086:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2111:2131   */\n      calldataload\n        /* \"#utility.yul\":2102:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2173   */\n      tag_631\n        /* \"#utility.yul\":2167:2172   */\n      dup2\n        /* \"#utility.yul\":2140:2173   */\n      tag_527\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":2040:2179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2262   */\n    tag_529:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2390   */\n    tag_530:\n        /* \"#utility.yul\":2341:2365   */\n      tag_634\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_529\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_635\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_635:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_531:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_637\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_530\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:3015   */\n    tag_43:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2617:2623   */\n      dup1\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2645:2652   */\n      dup6\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_640\n      tag_523\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":2634:2753   */\n    tag_639:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2870   */\n      tag_641\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_528\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":2807:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2763:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_642\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_531\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2541:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3111   */\n    tag_532:\n        /* \"#utility.yul\":3055:3062   */\n      0x00\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3073:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3226   */\n    tag_533:\n        /* \"#utility.yul\":3198:3219   */\n      tag_645\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3198:3219   */\n      tag_532\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3117:3226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3442   */\n    tag_46:\n        /* \"#utility.yul\":3319:3323   */\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3334:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3435   */\n      tag_647\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3370:3435   */\n      tag_533\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":3232:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3564   */\n    tag_534:\n        /* \"#utility.yul\":3518:3539   */\n      tag_649\n        /* \"#utility.yul\":3533:3538   */\n      dup2\n        /* \"#utility.yul\":3518:3539   */\n      tag_532\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":3511:3516   */\n      dup2\n        /* \"#utility.yul\":3508:3540   */\n      eq\n        /* \"#utility.yul\":3498:3558   */\n      tag_650\n      jumpi\n        /* \"#utility.yul\":3554:3555   */\n      0x00\n        /* \"#utility.yul\":3551:3552   */\n      dup1\n        /* \"#utility.yul\":3544:3556   */\n      revert\n        /* \"#utility.yul\":3498:3558   */\n    tag_650:\n        /* \"#utility.yul\":3448:3564   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3703   */\n    tag_535:\n        /* \"#utility.yul\":3613:3618   */\n      0x00\n        /* \"#utility.yul\":3651:3657   */\n      dup2\n        /* \"#utility.yul\":3638:3658   */\n      calldataload\n        /* \"#utility.yul\":3629:3658   */\n      swap1\n      pop\n        /* \"#utility.yul\":3667:3697   */\n      tag_652\n        /* \"#utility.yul\":3691:3696   */\n      dup2\n        /* \"#utility.yul\":3667:3697   */\n      tag_534\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":3570:3703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3709:4177   */\n    tag_50:\n        /* \"#utility.yul\":3774:3780   */\n      0x00\n        /* \"#utility.yul\":3782:3788   */\n      dup1\n        /* \"#utility.yul\":3831:3833   */\n      0x40\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3810:3817   */\n      dup6\n        /* \"#utility.yul\":3806:3829   */\n      sub\n        /* \"#utility.yul\":3802:3834   */\n      slt\n        /* \"#utility.yul\":3799:3918   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":3837:3916   */\n      tag_655\n      tag_523\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":3799:3918   */\n    tag_654:\n        /* \"#utility.yul\":3957:3958   */\n      0x00\n        /* \"#utility.yul\":3982:4035   */\n      tag_656\n        /* \"#utility.yul\":4027:4034   */\n      dup6\n        /* \"#utility.yul\":4018:4024   */\n      dup3\n        /* \"#utility.yul\":4007:4016   */\n      dup7\n        /* \"#utility.yul\":4003:4025   */\n      add\n        /* \"#utility.yul\":3982:4035   */\n      tag_528\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":3972:4035   */\n      swap3\n      pop\n        /* \"#utility.yul\":3928:4045   */\n      pop\n        /* \"#utility.yul\":4084:4086   */\n      0x20\n        /* \"#utility.yul\":4110:4160   */\n      tag_657\n        /* \"#utility.yul\":4152:4159   */\n      dup6\n        /* \"#utility.yul\":4143:4149   */\n      dup3\n        /* \"#utility.yul\":4132:4141   */\n      dup7\n        /* \"#utility.yul\":4128:4150   */\n      add\n        /* \"#utility.yul\":4110:4160   */\n      tag_535\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":4100:4160   */\n      swap2\n      pop\n        /* \"#utility.yul\":4055:4170   */\n      pop\n        /* \"#utility.yul\":3709:4177   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4183:4301   */\n    tag_536:\n        /* \"#utility.yul\":4270:4294   */\n      tag_659\n        /* \"#utility.yul\":4288:4293   */\n      dup2\n        /* \"#utility.yul\":4270:4294   */\n      tag_529\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":4265:4268   */\n      dup3\n        /* \"#utility.yul\":4258:4295   */\n      mstore\n        /* \"#utility.yul\":4183:4301   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4307:4529   */\n    tag_56:\n        /* \"#utility.yul\":4400:4404   */\n      0x00\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4427:4436   */\n      dup3\n        /* \"#utility.yul\":4423:4441   */\n      add\n        /* \"#utility.yul\":4415:4441   */\n      swap1\n      pop\n        /* \"#utility.yul\":4451:4522   */\n      tag_661\n        /* \"#utility.yul\":4519:4520   */\n      0x00\n        /* \"#utility.yul\":4508:4517   */\n      dup4\n        /* \"#utility.yul\":4504:4521   */\n      add\n        /* \"#utility.yul\":4495:4501   */\n      dup5\n        /* \"#utility.yul\":4451:4522   */\n      tag_536\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":4307:4529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4535:5154   */\n    tag_60:\n        /* \"#utility.yul\":4612:4618   */\n      0x00\n        /* \"#utility.yul\":4620:4626   */\n      dup1\n        /* \"#utility.yul\":4628:4634   */\n      0x00\n        /* \"#utility.yul\":4677:4679   */\n      0x60\n        /* \"#utility.yul\":4665:4674   */\n      dup5\n        /* \"#utility.yul\":4656:4663   */\n      dup7\n        /* \"#utility.yul\":4652:4675   */\n      sub\n        /* \"#utility.yul\":4648:4680   */\n      slt\n        /* \"#utility.yul\":4645:4764   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":4683:4762   */\n      tag_664\n      tag_523\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":4645:4764   */\n    tag_663:\n        /* \"#utility.yul\":4803:4804   */\n      0x00\n        /* \"#utility.yul\":4828:4881   */\n      tag_665\n        /* \"#utility.yul\":4873:4880   */\n      dup7\n        /* \"#utility.yul\":4864:4870   */\n      dup3\n        /* \"#utility.yul\":4853:4862   */\n      dup8\n        /* \"#utility.yul\":4849:4871   */\n      add\n        /* \"#utility.yul\":4828:4881   */\n      tag_528\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":4818:4881   */\n      swap4\n      pop\n        /* \"#utility.yul\":4774:4891   */\n      pop\n        /* \"#utility.yul\":4930:4932   */\n      0x20\n        /* \"#utility.yul\":4956:5009   */\n      tag_666\n        /* \"#utility.yul\":5001:5008   */\n      dup7\n        /* \"#utility.yul\":4992:4998   */\n      dup3\n        /* \"#utility.yul\":4981:4990   */\n      dup8\n        /* \"#utility.yul\":4977:4999   */\n      add\n        /* \"#utility.yul\":4956:5009   */\n      tag_528\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":4946:5009   */\n      swap3\n      pop\n        /* \"#utility.yul\":4901:5019   */\n      pop\n        /* \"#utility.yul\":5058:5060   */\n      0x40\n        /* \"#utility.yul\":5084:5137   */\n      tag_667\n        /* \"#utility.yul\":5129:5136   */\n      dup7\n        /* \"#utility.yul\":5120:5126   */\n      dup3\n        /* \"#utility.yul\":5109:5118   */\n      dup8\n        /* \"#utility.yul\":5105:5127   */\n      add\n        /* \"#utility.yul\":5084:5137   */\n      tag_531\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":5074:5137   */\n      swap2\n      pop\n        /* \"#utility.yul\":5029:5147   */\n      pop\n        /* \"#utility.yul\":4535:5154   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5160:5489   */\n    tag_66:\n        /* \"#utility.yul\":5219:5225   */\n      0x00\n        /* \"#utility.yul\":5268:5270   */\n      0x20\n        /* \"#utility.yul\":5256:5265   */\n      dup3\n        /* \"#utility.yul\":5247:5254   */\n      dup5\n        /* \"#utility.yul\":5243:5266   */\n      sub\n        /* \"#utility.yul\":5239:5271   */\n      slt\n        /* \"#utility.yul\":5236:5355   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":5274:5353   */\n      tag_670\n      tag_523\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":5236:5355   */\n    tag_669:\n        /* \"#utility.yul\":5394:5395   */\n      0x00\n        /* \"#utility.yul\":5419:5472   */\n      tag_671\n        /* \"#utility.yul\":5464:5471   */\n      dup5\n        /* \"#utility.yul\":5455:5461   */\n      dup3\n        /* \"#utility.yul\":5444:5453   */\n      dup6\n        /* \"#utility.yul\":5440:5462   */\n      add\n        /* \"#utility.yul\":5419:5472   */\n      tag_528\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":5409:5472   */\n      swap2\n      pop\n        /* \"#utility.yul\":5365:5482   */\n      pop\n        /* \"#utility.yul\":5160:5489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5495:5581   */\n    tag_537:\n        /* \"#utility.yul\":5530:5537   */\n      0x00\n        /* \"#utility.yul\":5570:5574   */\n      0xff\n        /* \"#utility.yul\":5563:5568   */\n      dup3\n        /* \"#utility.yul\":5559:5575   */\n      and\n        /* \"#utility.yul\":5548:5575   */\n      swap1\n      pop\n        /* \"#utility.yul\":5495:5581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5587:5699   */\n    tag_538:\n        /* \"#utility.yul\":5670:5692   */\n      tag_674\n        /* \"#utility.yul\":5686:5691   */\n      dup2\n        /* \"#utility.yul\":5670:5692   */\n      tag_537\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":5665:5668   */\n      dup3\n        /* \"#utility.yul\":5658:5693   */\n      mstore\n        /* \"#utility.yul\":5587:5699   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5705:5919   */\n    tag_72:\n        /* \"#utility.yul\":5794:5798   */\n      0x00\n        /* \"#utility.yul\":5832:5834   */\n      0x20\n        /* \"#utility.yul\":5821:5830   */\n      dup3\n        /* \"#utility.yul\":5817:5835   */\n      add\n        /* \"#utility.yul\":5809:5835   */\n      swap1\n      pop\n        /* \"#utility.yul\":5845:5912   */\n      tag_676\n        /* \"#utility.yul\":5909:5910   */\n      0x00\n        /* \"#utility.yul\":5898:5907   */\n      dup4\n        /* \"#utility.yul\":5894:5911   */\n      add\n        /* \"#utility.yul\":5885:5891   */\n      dup5\n        /* \"#utility.yul\":5845:5912   */\n      tag_538\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":5705:5919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5925:6042   */\n    tag_539:\n        /* \"#utility.yul\":6034:6035   */\n      0x00\n        /* \"#utility.yul\":6031:6032   */\n      dup1\n        /* \"#utility.yul\":6024:6036   */\n      revert\n        /* \"#utility.yul\":6048:6165   */\n    tag_540:\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6154:6155   */\n      dup1\n        /* \"#utility.yul\":6147:6159   */\n      revert\n        /* \"#utility.yul\":6171:6351   */\n    tag_541:\n        /* \"#utility.yul\":6219:6296   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6216:6217   */\n      0x00\n        /* \"#utility.yul\":6209:6297   */\n      mstore\n        /* \"#utility.yul\":6316:6320   */\n      0x41\n        /* \"#utility.yul\":6313:6314   */\n      0x04\n        /* \"#utility.yul\":6306:6321   */\n      mstore\n        /* \"#utility.yul\":6340:6344   */\n      0x24\n        /* \"#utility.yul\":6337:6338   */\n      0x00\n        /* \"#utility.yul\":6330:6345   */\n      revert\n        /* \"#utility.yul\":6357:6638   */\n    tag_542:\n        /* \"#utility.yul\":6440:6467   */\n      tag_681\n        /* \"#utility.yul\":6462:6466   */\n      dup3\n        /* \"#utility.yul\":6440:6467   */\n      tag_520\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":6432:6438   */\n      dup2\n        /* \"#utility.yul\":6428:6468   */\n      add\n        /* \"#utility.yul\":6570:6576   */\n      dup2\n        /* \"#utility.yul\":6558:6568   */\n      dup2\n        /* \"#utility.yul\":6555:6577   */\n      lt\n        /* \"#utility.yul\":6534:6552   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6522:6532   */\n      dup3\n        /* \"#utility.yul\":6519:6553   */\n      gt\n        /* \"#utility.yul\":6516:6578   */\n      or\n        /* \"#utility.yul\":6513:6601   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":6581:6599   */\n      tag_683\n      tag_541\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":6513:6601   */\n    tag_682:\n        /* \"#utility.yul\":6621:6631   */\n      dup1\n        /* \"#utility.yul\":6617:6619   */\n      0x40\n        /* \"#utility.yul\":6610:6632   */\n      mstore\n        /* \"#utility.yul\":6400:6638   */\n      pop\n        /* \"#utility.yul\":6357:6638   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6644:6773   */\n    tag_543:\n        /* \"#utility.yul\":6678:6684   */\n      0x00\n        /* \"#utility.yul\":6705:6725   */\n      tag_685\n      tag_522\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":6695:6725   */\n      swap1\n      pop\n        /* \"#utility.yul\":6734:6767   */\n      tag_686\n        /* \"#utility.yul\":6762:6766   */\n      dup3\n        /* \"#utility.yul\":6754:6760   */\n      dup3\n        /* \"#utility.yul\":6734:6767   */\n      tag_542\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":6644:6773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6779:7086   */\n    tag_544:\n        /* \"#utility.yul\":6840:6844   */\n      0x00\n        /* \"#utility.yul\":6930:6948   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6919:6949   */\n      gt\n        /* \"#utility.yul\":6916:6972   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":6952:6970   */\n      tag_689\n      tag_541\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":6916:6972   */\n    tag_688:\n        /* \"#utility.yul\":6990:7019   */\n      tag_690\n        /* \"#utility.yul\":7012:7018   */\n      dup3\n        /* \"#utility.yul\":6990:7019   */\n      tag_520\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":6982:7019   */\n      swap1\n      pop\n        /* \"#utility.yul\":7074:7078   */\n      0x20\n        /* \"#utility.yul\":7068:7072   */\n      dup2\n        /* \"#utility.yul\":7064:7079   */\n      add\n        /* \"#utility.yul\":7056:7079   */\n      swap1\n      pop\n        /* \"#utility.yul\":6779:7086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7092:7240   */\n    tag_545:\n        /* \"#utility.yul\":7190:7196   */\n      dup3\n        /* \"#utility.yul\":7185:7188   */\n      dup2\n        /* \"#utility.yul\":7180:7183   */\n      dup4\n        /* \"#utility.yul\":7167:7197   */\n      calldatacopy\n        /* \"#utility.yul\":7231:7232   */\n      0x00\n        /* \"#utility.yul\":7222:7228   */\n      dup4\n        /* \"#utility.yul\":7217:7220   */\n      dup4\n        /* \"#utility.yul\":7213:7229   */\n      add\n        /* \"#utility.yul\":7206:7233   */\n      mstore\n        /* \"#utility.yul\":7092:7240   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7246:7669   */\n    tag_546:\n        /* \"#utility.yul\":7323:7328   */\n      0x00\n        /* \"#utility.yul\":7348:7413   */\n      tag_693\n        /* \"#utility.yul\":7364:7412   */\n      tag_694\n        /* \"#utility.yul\":7405:7411   */\n      dup5\n        /* \"#utility.yul\":7364:7412   */\n      tag_544\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":7348:7413   */\n      tag_543\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":7339:7413   */\n      swap1\n      pop\n        /* \"#utility.yul\":7436:7442   */\n      dup3\n        /* \"#utility.yul\":7429:7434   */\n      dup2\n        /* \"#utility.yul\":7422:7443   */\n      mstore\n        /* \"#utility.yul\":7474:7478   */\n      0x20\n        /* \"#utility.yul\":7467:7472   */\n      dup2\n        /* \"#utility.yul\":7463:7479   */\n      add\n        /* \"#utility.yul\":7512:7515   */\n      dup5\n        /* \"#utility.yul\":7503:7509   */\n      dup5\n        /* \"#utility.yul\":7498:7501   */\n      dup5\n        /* \"#utility.yul\":7494:7510   */\n      add\n        /* \"#utility.yul\":7491:7516   */\n      gt\n        /* \"#utility.yul\":7488:7600   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":7519:7598   */\n      tag_696\n      tag_540\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":7488:7600   */\n    tag_695:\n        /* \"#utility.yul\":7609:7663   */\n      tag_697\n        /* \"#utility.yul\":7656:7662   */\n      dup5\n        /* \"#utility.yul\":7651:7654   */\n      dup3\n        /* \"#utility.yul\":7646:7649   */\n      dup6\n        /* \"#utility.yul\":7609:7663   */\n      tag_545\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":7329:7669   */\n      pop\n        /* \"#utility.yul\":7246:7669   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7688:8026   */\n    tag_547:\n        /* \"#utility.yul\":7743:7748   */\n      0x00\n        /* \"#utility.yul\":7792:7795   */\n      dup3\n        /* \"#utility.yul\":7785:7789   */\n      0x1f\n        /* \"#utility.yul\":7777:7783   */\n      dup4\n        /* \"#utility.yul\":7773:7790   */\n      add\n        /* \"#utility.yul\":7769:7796   */\n      slt\n        /* \"#utility.yul\":7759:7881   */\n      tag_699\n      jumpi\n        /* \"#utility.yul\":7800:7879   */\n      tag_700\n      tag_539\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":7759:7881   */\n    tag_699:\n        /* \"#utility.yul\":7917:7923   */\n      dup2\n        /* \"#utility.yul\":7904:7924   */\n      calldataload\n        /* \"#utility.yul\":7942:8020   */\n      tag_701\n        /* \"#utility.yul\":8016:8019   */\n      dup5\n        /* \"#utility.yul\":8008:8014   */\n      dup3\n        /* \"#utility.yul\":8001:8005   */\n      0x20\n        /* \"#utility.yul\":7993:7999   */\n      dup7\n        /* \"#utility.yul\":7989:8006   */\n      add\n        /* \"#utility.yul\":7942:8020   */\n      tag_546\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":7933:8020   */\n      swap2\n      pop\n        /* \"#utility.yul\":7749:8026   */\n      pop\n        /* \"#utility.yul\":7688:8026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8032:8684   */\n    tag_82:\n        /* \"#utility.yul\":8109:8115   */\n      0x00\n        /* \"#utility.yul\":8117:8123   */\n      dup1\n        /* \"#utility.yul\":8166:8168   */\n      0x40\n        /* \"#utility.yul\":8154:8163   */\n      dup4\n        /* \"#utility.yul\":8145:8152   */\n      dup6\n        /* \"#utility.yul\":8141:8164   */\n      sub\n        /* \"#utility.yul\":8137:8169   */\n      slt\n        /* \"#utility.yul\":8134:8253   */\n      iszero\n      tag_703\n      jumpi\n        /* \"#utility.yul\":8172:8251   */\n      tag_704\n      tag_523\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":8134:8253   */\n    tag_703:\n        /* \"#utility.yul\":8292:8293   */\n      0x00\n        /* \"#utility.yul\":8317:8370   */\n      tag_705\n        /* \"#utility.yul\":8362:8369   */\n      dup6\n        /* \"#utility.yul\":8353:8359   */\n      dup3\n        /* \"#utility.yul\":8342:8351   */\n      dup7\n        /* \"#utility.yul\":8338:8360   */\n      add\n        /* \"#utility.yul\":8317:8370   */\n      tag_528\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":8307:8370   */\n      swap3\n      pop\n        /* \"#utility.yul\":8263:8380   */\n      pop\n        /* \"#utility.yul\":8447:8449   */\n      0x20\n        /* \"#utility.yul\":8436:8445   */\n      dup4\n        /* \"#utility.yul\":8432:8450   */\n      add\n        /* \"#utility.yul\":8419:8451   */\n      calldataload\n        /* \"#utility.yul\":8478:8496   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8470:8476   */\n      dup2\n        /* \"#utility.yul\":8467:8497   */\n      gt\n        /* \"#utility.yul\":8464:8581   */\n      iszero\n      tag_706\n      jumpi\n        /* \"#utility.yul\":8500:8579   */\n      tag_707\n      tag_524\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":8464:8581   */\n    tag_706:\n        /* \"#utility.yul\":8605:8667   */\n      tag_708\n        /* \"#utility.yul\":8659:8666   */\n      dup6\n        /* \"#utility.yul\":8650:8656   */\n      dup3\n        /* \"#utility.yul\":8639:8648   */\n      dup7\n        /* \"#utility.yul\":8635:8657   */\n      add\n        /* \"#utility.yul\":8605:8667   */\n      tag_547\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":8595:8667   */\n      swap2\n      pop\n        /* \"#utility.yul\":8390:8677   */\n      pop\n        /* \"#utility.yul\":8032:8684   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8690:8767   */\n    tag_548:\n        /* \"#utility.yul\":8727:8734   */\n      0x00\n        /* \"#utility.yul\":8756:8761   */\n      dup2\n        /* \"#utility.yul\":8745:8761   */\n      swap1\n      pop\n        /* \"#utility.yul\":8690:8767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8773:8891   */\n    tag_549:\n        /* \"#utility.yul\":8860:8884   */\n      tag_711\n        /* \"#utility.yul\":8878:8883   */\n      dup2\n        /* \"#utility.yul\":8860:8884   */\n      tag_548\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":8855:8858   */\n      dup3\n        /* \"#utility.yul\":8848:8885   */\n      mstore\n        /* \"#utility.yul\":8773:8891   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8897:9119   */\n    tag_88:\n        /* \"#utility.yul\":8990:8994   */\n      0x00\n        /* \"#utility.yul\":9028:9030   */\n      0x20\n        /* \"#utility.yul\":9017:9026   */\n      dup3\n        /* \"#utility.yul\":9013:9031   */\n      add\n        /* \"#utility.yul\":9005:9031   */\n      swap1\n      pop\n        /* \"#utility.yul\":9041:9112   */\n      tag_713\n        /* \"#utility.yul\":9109:9110   */\n      0x00\n        /* \"#utility.yul\":9098:9107   */\n      dup4\n        /* \"#utility.yul\":9094:9111   */\n      add\n        /* \"#utility.yul\":9085:9091   */\n      dup5\n        /* \"#utility.yul\":9041:9112   */\n      tag_549\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":8897:9119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9125:9242   */\n    tag_550:\n        /* \"#utility.yul\":9234:9235   */\n      0x00\n        /* \"#utility.yul\":9231:9232   */\n      dup1\n        /* \"#utility.yul\":9224:9236   */\n      revert\n        /* \"#utility.yul\":9248:9365   */\n    tag_551:\n        /* \"#utility.yul\":9357:9358   */\n      0x00\n        /* \"#utility.yul\":9354:9355   */\n      dup1\n        /* \"#utility.yul\":9347:9359   */\n      revert\n        /* \"#utility.yul\":9388:9956   */\n    tag_552:\n        /* \"#utility.yul\":9461:9469   */\n      0x00\n        /* \"#utility.yul\":9471:9477   */\n      dup1\n        /* \"#utility.yul\":9521:9524   */\n      dup4\n        /* \"#utility.yul\":9514:9518   */\n      0x1f\n        /* \"#utility.yul\":9506:9512   */\n      dup5\n        /* \"#utility.yul\":9502:9519   */\n      add\n        /* \"#utility.yul\":9498:9525   */\n      slt\n        /* \"#utility.yul\":9488:9610   */\n      tag_717\n      jumpi\n        /* \"#utility.yul\":9529:9608   */\n      tag_718\n      tag_539\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":9488:9610   */\n    tag_717:\n        /* \"#utility.yul\":9642:9648   */\n      dup3\n        /* \"#utility.yul\":9629:9649   */\n      calldataload\n        /* \"#utility.yul\":9619:9649   */\n      swap1\n      pop\n        /* \"#utility.yul\":9672:9690   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9664:9670   */\n      dup2\n        /* \"#utility.yul\":9661:9691   */\n      gt\n        /* \"#utility.yul\":9658:9775   */\n      iszero\n      tag_719\n      jumpi\n        /* \"#utility.yul\":9694:9773   */\n      tag_720\n      tag_550\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":9658:9775   */\n    tag_719:\n        /* \"#utility.yul\":9808:9812   */\n      0x20\n        /* \"#utility.yul\":9800:9806   */\n      dup4\n        /* \"#utility.yul\":9796:9813   */\n      add\n        /* \"#utility.yul\":9784:9813   */\n      swap2\n      pop\n        /* \"#utility.yul\":9862:9865   */\n      dup4\n        /* \"#utility.yul\":9854:9858   */\n      0x20\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9842:9859   */\n      mul\n        /* \"#utility.yul\":9832:9840   */\n      dup4\n        /* \"#utility.yul\":9828:9860   */\n      add\n        /* \"#utility.yul\":9825:9866   */\n      gt\n        /* \"#utility.yul\":9822:9950   */\n      iszero\n      tag_721\n      jumpi\n        /* \"#utility.yul\":9869:9948   */\n      tag_722\n      tag_551\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":9822:9950   */\n    tag_721:\n        /* \"#utility.yul\":9388:9956   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9979:10547   */\n    tag_553:\n        /* \"#utility.yul\":10052:10060   */\n      0x00\n        /* \"#utility.yul\":10062:10068   */\n      dup1\n        /* \"#utility.yul\":10112:10115   */\n      dup4\n        /* \"#utility.yul\":10105:10109   */\n      0x1f\n        /* \"#utility.yul\":10097:10103   */\n      dup5\n        /* \"#utility.yul\":10093:10110   */\n      add\n        /* \"#utility.yul\":10089:10116   */\n      slt\n        /* \"#utility.yul\":10079:10201   */\n      tag_724\n      jumpi\n        /* \"#utility.yul\":10120:10199   */\n      tag_725\n      tag_539\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":10079:10201   */\n    tag_724:\n        /* \"#utility.yul\":10233:10239   */\n      dup3\n        /* \"#utility.yul\":10220:10240   */\n      calldataload\n        /* \"#utility.yul\":10210:10240   */\n      swap1\n      pop\n        /* \"#utility.yul\":10263:10281   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10255:10261   */\n      dup2\n        /* \"#utility.yul\":10252:10282   */\n      gt\n        /* \"#utility.yul\":10249:10366   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":10285:10364   */\n      tag_727\n      tag_550\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":10249:10366   */\n    tag_726:\n        /* \"#utility.yul\":10399:10403   */\n      0x20\n        /* \"#utility.yul\":10391:10397   */\n      dup4\n        /* \"#utility.yul\":10387:10404   */\n      add\n        /* \"#utility.yul\":10375:10404   */\n      swap2\n      pop\n        /* \"#utility.yul\":10453:10456   */\n      dup4\n        /* \"#utility.yul\":10445:10449   */\n      0x20\n        /* \"#utility.yul\":10437:10443   */\n      dup3\n        /* \"#utility.yul\":10433:10450   */\n      mul\n        /* \"#utility.yul\":10423:10431   */\n      dup4\n        /* \"#utility.yul\":10419:10451   */\n      add\n        /* \"#utility.yul\":10416:10457   */\n      gt\n        /* \"#utility.yul\":10413:10541   */\n      iszero\n      tag_728\n      jumpi\n        /* \"#utility.yul\":10460:10539   */\n      tag_729\n      tag_551\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":10413:10541   */\n    tag_728:\n        /* \"#utility.yul\":9979:10547   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10553:11487   */\n    tag_107:\n        /* \"#utility.yul\":10675:10681   */\n      0x00\n        /* \"#utility.yul\":10683:10689   */\n      dup1\n        /* \"#utility.yul\":10691:10697   */\n      0x00\n        /* \"#utility.yul\":10699:10705   */\n      dup1\n        /* \"#utility.yul\":10748:10750   */\n      0x40\n        /* \"#utility.yul\":10736:10745   */\n      dup6\n        /* \"#utility.yul\":10727:10734   */\n      dup8\n        /* \"#utility.yul\":10723:10746   */\n      sub\n        /* \"#utility.yul\":10719:10751   */\n      slt\n        /* \"#utility.yul\":10716:10835   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":10754:10833   */\n      tag_732\n      tag_523\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":10716:10835   */\n    tag_731:\n        /* \"#utility.yul\":10902:10903   */\n      0x00\n        /* \"#utility.yul\":10891:10900   */\n      dup6\n        /* \"#utility.yul\":10887:10904   */\n      add\n        /* \"#utility.yul\":10874:10905   */\n      calldataload\n        /* \"#utility.yul\":10932:10950   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10924:10930   */\n      dup2\n        /* \"#utility.yul\":10921:10951   */\n      gt\n        /* \"#utility.yul\":10918:11035   */\n      iszero\n      tag_733\n      jumpi\n        /* \"#utility.yul\":10954:11033   */\n      tag_734\n      tag_524\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":10918:11035   */\n    tag_733:\n        /* \"#utility.yul\":11067:11147   */\n      tag_735\n        /* \"#utility.yul\":11139:11146   */\n      dup8\n        /* \"#utility.yul\":11130:11136   */\n      dup3\n        /* \"#utility.yul\":11119:11128   */\n      dup9\n        /* \"#utility.yul\":11115:11137   */\n      add\n        /* \"#utility.yul\":11067:11147   */\n      tag_552\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":11049:11147   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":10845:11157   */\n      pop\n        /* \"#utility.yul\":11224:11226   */\n      0x20\n        /* \"#utility.yul\":11213:11222   */\n      dup6\n        /* \"#utility.yul\":11209:11227   */\n      add\n        /* \"#utility.yul\":11196:11228   */\n      calldataload\n        /* \"#utility.yul\":11255:11273   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11247:11253   */\n      dup2\n        /* \"#utility.yul\":11244:11274   */\n      gt\n        /* \"#utility.yul\":11241:11358   */\n      iszero\n      tag_736\n      jumpi\n        /* \"#utility.yul\":11277:11356   */\n      tag_737\n      tag_524\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":11241:11358   */\n    tag_736:\n        /* \"#utility.yul\":11390:11470   */\n      tag_738\n        /* \"#utility.yul\":11462:11469   */\n      dup8\n        /* \"#utility.yul\":11453:11459   */\n      dup3\n        /* \"#utility.yul\":11442:11451   */\n      dup9\n        /* \"#utility.yul\":11438:11460   */\n      add\n        /* \"#utility.yul\":11390:11470   */\n      tag_553\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":11372:11470   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":11167:11480   */\n      pop\n        /* \"#utility.yul\":10553:11487   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11493:11611   */\n    tag_554:\n        /* \"#utility.yul\":11580:11604   */\n      tag_740\n        /* \"#utility.yul\":11598:11603   */\n      dup2\n        /* \"#utility.yul\":11580:11604   */\n      tag_526\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":11575:11578   */\n      dup3\n        /* \"#utility.yul\":11568:11605   */\n      mstore\n        /* \"#utility.yul\":11493:11611   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11617:11839   */\n    tag_113:\n        /* \"#utility.yul\":11710:11714   */\n      0x00\n        /* \"#utility.yul\":11748:11750   */\n      0x20\n        /* \"#utility.yul\":11737:11746   */\n      dup3\n        /* \"#utility.yul\":11733:11751   */\n      add\n        /* \"#utility.yul\":11725:11751   */\n      swap1\n      pop\n        /* \"#utility.yul\":11761:11832   */\n      tag_742\n        /* \"#utility.yul\":11829:11830   */\n      0x00\n        /* \"#utility.yul\":11818:11827   */\n      dup4\n        /* \"#utility.yul\":11814:11831   */\n      add\n        /* \"#utility.yul\":11805:11811   */\n      dup5\n        /* \"#utility.yul\":11761:11832   */\n      tag_554\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":11617:11839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11845:12153   */\n    tag_555:\n        /* \"#utility.yul\":11907:11911   */\n      0x00\n        /* \"#utility.yul\":11997:12015   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11989:11995   */\n      dup3\n        /* \"#utility.yul\":11986:12016   */\n      gt\n        /* \"#utility.yul\":11983:12039   */\n      iszero\n      tag_744\n      jumpi\n        /* \"#utility.yul\":12019:12037   */\n      tag_745\n      tag_541\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":11983:12039   */\n    tag_744:\n        /* \"#utility.yul\":12057:12086   */\n      tag_746\n        /* \"#utility.yul\":12079:12085   */\n      dup3\n        /* \"#utility.yul\":12057:12086   */\n      tag_520\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":12049:12086   */\n      swap1\n      pop\n        /* \"#utility.yul\":12141:12145   */\n      0x20\n        /* \"#utility.yul\":12135:12139   */\n      dup2\n        /* \"#utility.yul\":12131:12146   */\n      add\n        /* \"#utility.yul\":12123:12146   */\n      swap1\n      pop\n        /* \"#utility.yul\":11845:12153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12159:12584   */\n    tag_556:\n        /* \"#utility.yul\":12237:12242   */\n      0x00\n        /* \"#utility.yul\":12262:12328   */\n      tag_748\n        /* \"#utility.yul\":12278:12327   */\n      tag_749\n        /* \"#utility.yul\":12320:12326   */\n      dup5\n        /* \"#utility.yul\":12278:12327   */\n      tag_555\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":12262:12328   */\n      tag_543\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":12253:12328   */\n      swap1\n      pop\n        /* \"#utility.yul\":12351:12357   */\n      dup3\n        /* \"#utility.yul\":12344:12349   */\n      dup2\n        /* \"#utility.yul\":12337:12358   */\n      mstore\n        /* \"#utility.yul\":12389:12393   */\n      0x20\n        /* \"#utility.yul\":12382:12387   */\n      dup2\n        /* \"#utility.yul\":12378:12394   */\n      add\n        /* \"#utility.yul\":12427:12430   */\n      dup5\n        /* \"#utility.yul\":12418:12424   */\n      dup5\n        /* \"#utility.yul\":12413:12416   */\n      dup5\n        /* \"#utility.yul\":12409:12425   */\n      add\n        /* \"#utility.yul\":12406:12431   */\n      gt\n        /* \"#utility.yul\":12403:12515   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":12434:12513   */\n      tag_751\n      tag_540\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":12403:12515   */\n    tag_750:\n        /* \"#utility.yul\":12524:12578   */\n      tag_752\n        /* \"#utility.yul\":12571:12577   */\n      dup5\n        /* \"#utility.yul\":12566:12569   */\n      dup3\n        /* \"#utility.yul\":12561:12564   */\n      dup6\n        /* \"#utility.yul\":12524:12578   */\n      tag_545\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":12243:12584   */\n      pop\n        /* \"#utility.yul\":12159:12584   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12604:12944   */\n    tag_557:\n        /* \"#utility.yul\":12660:12665   */\n      0x00\n        /* \"#utility.yul\":12709:12712   */\n      dup3\n        /* \"#utility.yul\":12702:12706   */\n      0x1f\n        /* \"#utility.yul\":12694:12700   */\n      dup4\n        /* \"#utility.yul\":12690:12707   */\n      add\n        /* \"#utility.yul\":12686:12713   */\n      slt\n        /* \"#utility.yul\":12676:12798   */\n      tag_754\n      jumpi\n        /* \"#utility.yul\":12717:12796   */\n      tag_755\n      tag_539\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":12676:12798   */\n    tag_754:\n        /* \"#utility.yul\":12834:12840   */\n      dup2\n        /* \"#utility.yul\":12821:12841   */\n      calldataload\n        /* \"#utility.yul\":12859:12938   */\n      tag_756\n        /* \"#utility.yul\":12934:12937   */\n      dup5\n        /* \"#utility.yul\":12926:12932   */\n      dup3\n        /* \"#utility.yul\":12919:12923   */\n      0x20\n        /* \"#utility.yul\":12911:12917   */\n      dup7\n        /* \"#utility.yul\":12907:12924   */\n      add\n        /* \"#utility.yul\":12859:12938   */\n      tag_556\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":12850:12938   */\n      swap2\n      pop\n        /* \"#utility.yul\":12666:12944   */\n      pop\n        /* \"#utility.yul\":12604:12944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12950:13929   */\n    tag_135:\n        /* \"#utility.yul\":13047:13053   */\n      0x00\n        /* \"#utility.yul\":13055:13061   */\n      dup1\n        /* \"#utility.yul\":13063:13069   */\n      0x00\n        /* \"#utility.yul\":13112:13114   */\n      0x60\n        /* \"#utility.yul\":13100:13109   */\n      dup5\n        /* \"#utility.yul\":13091:13098   */\n      dup7\n        /* \"#utility.yul\":13087:13110   */\n      sub\n        /* \"#utility.yul\":13083:13115   */\n      slt\n        /* \"#utility.yul\":13080:13199   */\n      iszero\n      tag_758\n      jumpi\n        /* \"#utility.yul\":13118:13197   */\n      tag_759\n      tag_523\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":13080:13199   */\n    tag_758:\n        /* \"#utility.yul\":13266:13267   */\n      0x00\n        /* \"#utility.yul\":13255:13264   */\n      dup5\n        /* \"#utility.yul\":13251:13268   */\n      add\n        /* \"#utility.yul\":13238:13269   */\n      calldataload\n        /* \"#utility.yul\":13296:13314   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13288:13294   */\n      dup2\n        /* \"#utility.yul\":13285:13315   */\n      gt\n        /* \"#utility.yul\":13282:13399   */\n      iszero\n      tag_760\n      jumpi\n        /* \"#utility.yul\":13318:13397   */\n      tag_761\n      tag_524\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":13282:13399   */\n    tag_760:\n        /* \"#utility.yul\":13423:13486   */\n      tag_762\n        /* \"#utility.yul\":13478:13485   */\n      dup7\n        /* \"#utility.yul\":13469:13475   */\n      dup3\n        /* \"#utility.yul\":13458:13467   */\n      dup8\n        /* \"#utility.yul\":13454:13476   */\n      add\n        /* \"#utility.yul\":13423:13486   */\n      tag_557\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":13413:13486   */\n      swap4\n      pop\n        /* \"#utility.yul\":13209:13496   */\n      pop\n        /* \"#utility.yul\":13563:13565   */\n      0x20\n        /* \"#utility.yul\":13552:13561   */\n      dup5\n        /* \"#utility.yul\":13548:13566   */\n      add\n        /* \"#utility.yul\":13535:13567   */\n      calldataload\n        /* \"#utility.yul\":13594:13612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13586:13592   */\n      dup2\n        /* \"#utility.yul\":13583:13613   */\n      gt\n        /* \"#utility.yul\":13580:13697   */\n      iszero\n      tag_763\n      jumpi\n        /* \"#utility.yul\":13616:13695   */\n      tag_764\n      tag_524\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":13580:13697   */\n    tag_763:\n        /* \"#utility.yul\":13721:13784   */\n      tag_765\n        /* \"#utility.yul\":13776:13783   */\n      dup7\n        /* \"#utility.yul\":13767:13773   */\n      dup3\n        /* \"#utility.yul\":13756:13765   */\n      dup8\n        /* \"#utility.yul\":13752:13774   */\n      add\n        /* \"#utility.yul\":13721:13784   */\n      tag_557\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":13711:13784   */\n      swap3\n      pop\n        /* \"#utility.yul\":13506:13794   */\n      pop\n        /* \"#utility.yul\":13833:13835   */\n      0x40\n        /* \"#utility.yul\":13859:13912   */\n      tag_766\n        /* \"#utility.yul\":13904:13911   */\n      dup7\n        /* \"#utility.yul\":13895:13901   */\n      dup3\n        /* \"#utility.yul\":13884:13893   */\n      dup8\n        /* \"#utility.yul\":13880:13902   */\n      add\n        /* \"#utility.yul\":13859:13912   */\n      tag_531\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":13849:13912   */\n      swap2\n      pop\n        /* \"#utility.yul\":13804:13922   */\n      pop\n        /* \"#utility.yul\":12950:13929   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":13935:14409   */\n    tag_149:\n        /* \"#utility.yul\":14003:14009   */\n      0x00\n        /* \"#utility.yul\":14011:14017   */\n      dup1\n        /* \"#utility.yul\":14060:14062   */\n      0x40\n        /* \"#utility.yul\":14048:14057   */\n      dup4\n        /* \"#utility.yul\":14039:14046   */\n      dup6\n        /* \"#utility.yul\":14035:14058   */\n      sub\n        /* \"#utility.yul\":14031:14063   */\n      slt\n        /* \"#utility.yul\":14028:14147   */\n      iszero\n      tag_768\n      jumpi\n        /* \"#utility.yul\":14066:14145   */\n      tag_769\n      tag_523\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":14028:14147   */\n    tag_768:\n        /* \"#utility.yul\":14186:14187   */\n      0x00\n        /* \"#utility.yul\":14211:14264   */\n      tag_770\n        /* \"#utility.yul\":14256:14263   */\n      dup6\n        /* \"#utility.yul\":14247:14253   */\n      dup3\n        /* \"#utility.yul\":14236:14245   */\n      dup7\n        /* \"#utility.yul\":14232:14254   */\n      add\n        /* \"#utility.yul\":14211:14264   */\n      tag_528\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":14201:14264   */\n      swap3\n      pop\n        /* \"#utility.yul\":14157:14274   */\n      pop\n        /* \"#utility.yul\":14313:14315   */\n      0x20\n        /* \"#utility.yul\":14339:14392   */\n      tag_771\n        /* \"#utility.yul\":14384:14391   */\n      dup6\n        /* \"#utility.yul\":14375:14381   */\n      dup3\n        /* \"#utility.yul\":14364:14373   */\n      dup7\n        /* \"#utility.yul\":14360:14382   */\n      add\n        /* \"#utility.yul\":14339:14392   */\n      tag_528\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":14329:14392   */\n      swap2\n      pop\n        /* \"#utility.yul\":14284:14402   */\n      pop\n        /* \"#utility.yul\":13935:14409   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14415:14595   */\n    tag_558:\n        /* \"#utility.yul\":14463:14540   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14460:14461   */\n      0x00\n        /* \"#utility.yul\":14453:14541   */\n      mstore\n        /* \"#utility.yul\":14560:14564   */\n      0x22\n        /* \"#utility.yul\":14557:14558   */\n      0x04\n        /* \"#utility.yul\":14550:14565   */\n      mstore\n        /* \"#utility.yul\":14584:14588   */\n      0x24\n        /* \"#utility.yul\":14581:14582   */\n      0x00\n        /* \"#utility.yul\":14574:14589   */\n      revert\n        /* \"#utility.yul\":14601:14921   */\n    tag_165:\n        /* \"#utility.yul\":14645:14651   */\n      0x00\n        /* \"#utility.yul\":14682:14683   */\n      0x02\n        /* \"#utility.yul\":14676:14680   */\n      dup3\n        /* \"#utility.yul\":14672:14684   */\n      div\n        /* \"#utility.yul\":14662:14684   */\n      swap1\n      pop\n        /* \"#utility.yul\":14729:14730   */\n      0x01\n        /* \"#utility.yul\":14723:14727   */\n      dup3\n        /* \"#utility.yul\":14719:14731   */\n      and\n        /* \"#utility.yul\":14750:14768   */\n      dup1\n        /* \"#utility.yul\":14740:14821   */\n      tag_774\n      jumpi\n        /* \"#utility.yul\":14806:14810   */\n      0x7f\n        /* \"#utility.yul\":14798:14804   */\n      dup3\n        /* \"#utility.yul\":14794:14811   */\n      and\n        /* \"#utility.yul\":14784:14811   */\n      swap2\n      pop\n        /* \"#utility.yul\":14740:14821   */\n    tag_774:\n        /* \"#utility.yul\":14868:14870   */\n      0x20\n        /* \"#utility.yul\":14860:14866   */\n      dup3\n        /* \"#utility.yul\":14857:14871   */\n      lt\n        /* \"#utility.yul\":14837:14855   */\n      dup2\n        /* \"#utility.yul\":14834:14872   */\n      sub\n        /* \"#utility.yul\":14831:14915   */\n      tag_775\n      jumpi\n        /* \"#utility.yul\":14887:14905   */\n      tag_776\n      tag_558\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":14831:14915   */\n    tag_775:\n        /* \"#utility.yul\":14652:14921   */\n      pop\n        /* \"#utility.yul\":14601:14921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14927:15089   */\n    tag_559:\n        /* \"#utility.yul\":15067:15081   */\n      0x4e756c6c20416464726573730000000000000000000000000000000000000000\n        /* \"#utility.yul\":15063:15064   */\n      0x00\n        /* \"#utility.yul\":15055:15061   */\n      dup3\n        /* \"#utility.yul\":15051:15065   */\n      add\n        /* \"#utility.yul\":15044:15082   */\n      mstore\n        /* \"#utility.yul\":14927:15089   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15095:15461   */\n    tag_560:\n        /* \"#utility.yul\":15237:15240   */\n      0x00\n        /* \"#utility.yul\":15258:15325   */\n      tag_779\n        /* \"#utility.yul\":15322:15324   */\n      0x0c\n        /* \"#utility.yul\":15317:15320   */\n      dup4\n        /* \"#utility.yul\":15258:15325   */\n      tag_518\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":15251:15325   */\n      swap2\n      pop\n        /* \"#utility.yul\":15334:15427   */\n      tag_780\n        /* \"#utility.yul\":15423:15426   */\n      dup3\n        /* \"#utility.yul\":15334:15427   */\n      tag_559\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":15452:15454   */\n      0x20\n        /* \"#utility.yul\":15447:15450   */\n      dup3\n        /* \"#utility.yul\":15443:15455   */\n      add\n        /* \"#utility.yul\":15436:15455   */\n      swap1\n      pop\n        /* \"#utility.yul\":15095:15461   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15467:15886   */\n    tag_181:\n        /* \"#utility.yul\":15633:15637   */\n      0x00\n        /* \"#utility.yul\":15671:15673   */\n      0x20\n        /* \"#utility.yul\":15660:15669   */\n      dup3\n        /* \"#utility.yul\":15656:15674   */\n      add\n        /* \"#utility.yul\":15648:15674   */\n      swap1\n      pop\n        /* \"#utility.yul\":15720:15729   */\n      dup2\n        /* \"#utility.yul\":15714:15718   */\n      dup2\n        /* \"#utility.yul\":15710:15730   */\n      sub\n        /* \"#utility.yul\":15706:15707   */\n      0x00\n        /* \"#utility.yul\":15695:15704   */\n      dup4\n        /* \"#utility.yul\":15691:15708   */\n      add\n        /* \"#utility.yul\":15684:15731   */\n      mstore\n        /* \"#utility.yul\":15748:15879   */\n      tag_782\n        /* \"#utility.yul\":15874:15878   */\n      dup2\n        /* \"#utility.yul\":15748:15879   */\n      tag_560\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":15740:15879   */\n      swap1\n      pop\n        /* \"#utility.yul\":15467:15886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15892:16117   */\n    tag_561:\n        /* \"#utility.yul\":16032:16066   */\n      0x5472616e73666572206661696c65643a2053656e64657220697320626c61636b\n        /* \"#utility.yul\":16028:16029   */\n      0x00\n        /* \"#utility.yul\":16020:16026   */\n      dup3\n        /* \"#utility.yul\":16016:16030   */\n      add\n        /* \"#utility.yul\":16009:16067   */\n      mstore\n        /* \"#utility.yul\":16101:16109   */\n      0x6c69737465640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16096:16098   */\n      0x20\n        /* \"#utility.yul\":16088:16094   */\n      dup3\n        /* \"#utility.yul\":16084:16099   */\n      add\n        /* \"#utility.yul\":16077:16110   */\n      mstore\n        /* \"#utility.yul\":15892:16117   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16123:16489   */\n    tag_562:\n        /* \"#utility.yul\":16265:16268   */\n      0x00\n        /* \"#utility.yul\":16286:16353   */\n      tag_785\n        /* \"#utility.yul\":16350:16352   */\n      0x26\n        /* \"#utility.yul\":16345:16348   */\n      dup4\n        /* \"#utility.yul\":16286:16353   */\n      tag_518\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":16279:16353   */\n      swap2\n      pop\n        /* \"#utility.yul\":16362:16455   */\n      tag_786\n        /* \"#utility.yul\":16451:16454   */\n      dup3\n        /* \"#utility.yul\":16362:16455   */\n      tag_561\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":16480:16482   */\n      0x40\n        /* \"#utility.yul\":16475:16478   */\n      dup3\n        /* \"#utility.yul\":16471:16483   */\n      add\n        /* \"#utility.yul\":16464:16483   */\n      swap1\n      pop\n        /* \"#utility.yul\":16123:16489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16495:16914   */\n    tag_191:\n        /* \"#utility.yul\":16661:16665   */\n      0x00\n        /* \"#utility.yul\":16699:16701   */\n      0x20\n        /* \"#utility.yul\":16688:16697   */\n      dup3\n        /* \"#utility.yul\":16684:16702   */\n      add\n        /* \"#utility.yul\":16676:16702   */\n      swap1\n      pop\n        /* \"#utility.yul\":16748:16757   */\n      dup2\n        /* \"#utility.yul\":16742:16746   */\n      dup2\n        /* \"#utility.yul\":16738:16758   */\n      sub\n        /* \"#utility.yul\":16734:16735   */\n      0x00\n        /* \"#utility.yul\":16723:16732   */\n      dup4\n        /* \"#utility.yul\":16719:16736   */\n      add\n        /* \"#utility.yul\":16712:16759   */\n      mstore\n        /* \"#utility.yul\":16776:16907   */\n      tag_788\n        /* \"#utility.yul\":16902:16906   */\n      dup2\n        /* \"#utility.yul\":16776:16907   */\n      tag_562\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":16768:16907   */\n      swap1\n      pop\n        /* \"#utility.yul\":16495:16914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16920:17148   */\n    tag_563:\n        /* \"#utility.yul\":17060:17094   */\n      0x5472616e73666572206661696c65643a20526563697069656e7420697320626c\n        /* \"#utility.yul\":17056:17057   */\n      0x00\n        /* \"#utility.yul\":17048:17054   */\n      dup3\n        /* \"#utility.yul\":17044:17058   */\n      add\n        /* \"#utility.yul\":17037:17095   */\n      mstore\n        /* \"#utility.yul\":17129:17140   */\n      0x61636b6c69737465640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17124:17126   */\n      0x20\n        /* \"#utility.yul\":17116:17122   */\n      dup3\n        /* \"#utility.yul\":17112:17127   */\n      add\n        /* \"#utility.yul\":17105:17141   */\n      mstore\n        /* \"#utility.yul\":16920:17148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17154:17520   */\n    tag_564:\n        /* \"#utility.yul\":17296:17299   */\n      0x00\n        /* \"#utility.yul\":17317:17384   */\n      tag_791\n        /* \"#utility.yul\":17381:17383   */\n      0x29\n        /* \"#utility.yul\":17376:17379   */\n      dup4\n        /* \"#utility.yul\":17317:17384   */\n      tag_518\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":17310:17384   */\n      swap2\n      pop\n        /* \"#utility.yul\":17393:17486   */\n      tag_792\n        /* \"#utility.yul\":17482:17485   */\n      dup3\n        /* \"#utility.yul\":17393:17486   */\n      tag_563\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":17511:17513   */\n      0x40\n        /* \"#utility.yul\":17506:17509   */\n      dup3\n        /* \"#utility.yul\":17502:17514   */\n      add\n        /* \"#utility.yul\":17495:17514   */\n      swap1\n      pop\n        /* \"#utility.yul\":17154:17520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17526:17945   */\n    tag_194:\n        /* \"#utility.yul\":17692:17696   */\n      0x00\n        /* \"#utility.yul\":17730:17732   */\n      0x20\n        /* \"#utility.yul\":17719:17728   */\n      dup3\n        /* \"#utility.yul\":17715:17733   */\n      add\n        /* \"#utility.yul\":17707:17733   */\n      swap1\n      pop\n        /* \"#utility.yul\":17779:17788   */\n      dup2\n        /* \"#utility.yul\":17773:17777   */\n      dup2\n        /* \"#utility.yul\":17769:17789   */\n      sub\n        /* \"#utility.yul\":17765:17766   */\n      0x00\n        /* \"#utility.yul\":17754:17763   */\n      dup4\n        /* \"#utility.yul\":17750:17767   */\n      add\n        /* \"#utility.yul\":17743:17790   */\n      mstore\n        /* \"#utility.yul\":17807:17938   */\n      tag_794\n        /* \"#utility.yul\":17933:17937   */\n      dup2\n        /* \"#utility.yul\":17807:17938   */\n      tag_564\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":17799:17938   */\n      swap1\n      pop\n        /* \"#utility.yul\":17526:17945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17951:18125   */\n    tag_565:\n        /* \"#utility.yul\":18091:18117   */\n      0x416d6f756e742073686f756c646e2774206265207a65726f0000000000000000\n        /* \"#utility.yul\":18087:18088   */\n      0x00\n        /* \"#utility.yul\":18079:18085   */\n      dup3\n        /* \"#utility.yul\":18075:18089   */\n      add\n        /* \"#utility.yul\":18068:18118   */\n      mstore\n        /* \"#utility.yul\":17951:18125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18131:18497   */\n    tag_566:\n        /* \"#utility.yul\":18273:18276   */\n      0x00\n        /* \"#utility.yul\":18294:18361   */\n      tag_797\n        /* \"#utility.yul\":18358:18360   */\n      0x18\n        /* \"#utility.yul\":18353:18356   */\n      dup4\n        /* \"#utility.yul\":18294:18361   */\n      tag_518\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":18287:18361   */\n      swap2\n      pop\n        /* \"#utility.yul\":18370:18463   */\n      tag_798\n        /* \"#utility.yul\":18459:18462   */\n      dup3\n        /* \"#utility.yul\":18370:18463   */\n      tag_565\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":18488:18490   */\n      0x20\n        /* \"#utility.yul\":18483:18486   */\n      dup3\n        /* \"#utility.yul\":18479:18491   */\n      add\n        /* \"#utility.yul\":18472:18491   */\n      swap1\n      pop\n        /* \"#utility.yul\":18131:18497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18503:18922   */\n    tag_197:\n        /* \"#utility.yul\":18669:18673   */\n      0x00\n        /* \"#utility.yul\":18707:18709   */\n      0x20\n        /* \"#utility.yul\":18696:18705   */\n      dup3\n        /* \"#utility.yul\":18692:18710   */\n      add\n        /* \"#utility.yul\":18684:18710   */\n      swap1\n      pop\n        /* \"#utility.yul\":18756:18765   */\n      dup2\n        /* \"#utility.yul\":18750:18754   */\n      dup2\n        /* \"#utility.yul\":18746:18766   */\n      sub\n        /* \"#utility.yul\":18742:18743   */\n      0x00\n        /* \"#utility.yul\":18731:18740   */\n      dup4\n        /* \"#utility.yul\":18727:18744   */\n      add\n        /* \"#utility.yul\":18720:18767   */\n      mstore\n        /* \"#utility.yul\":18784:18915   */\n      tag_800\n        /* \"#utility.yul\":18910:18914   */\n      dup2\n        /* \"#utility.yul\":18784:18915   */\n      tag_566\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":18776:18915   */\n      swap1\n      pop\n        /* \"#utility.yul\":18503:18922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18928:19149   */\n    tag_567:\n        /* \"#utility.yul\":19068:19102   */\n      0x5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b\n        /* \"#utility.yul\":19064:19065   */\n      0x00\n        /* \"#utility.yul\":19056:19062   */\n      dup3\n        /* \"#utility.yul\":19052:19066   */\n      add\n        /* \"#utility.yul\":19045:19103   */\n      mstore\n        /* \"#utility.yul\":19137:19141   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19132:19134   */\n      0x20\n        /* \"#utility.yul\":19124:19130   */\n      dup3\n        /* \"#utility.yul\":19120:19135   */\n      add\n        /* \"#utility.yul\":19113:19142   */\n      mstore\n        /* \"#utility.yul\":18928:19149   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19155:19521   */\n    tag_568:\n        /* \"#utility.yul\":19297:19300   */\n      0x00\n        /* \"#utility.yul\":19318:19385   */\n      tag_803\n        /* \"#utility.yul\":19382:19384   */\n      0x22\n        /* \"#utility.yul\":19377:19380   */\n      dup4\n        /* \"#utility.yul\":19318:19385   */\n      tag_518\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":19311:19385   */\n      swap2\n      pop\n        /* \"#utility.yul\":19394:19487   */\n      tag_804\n        /* \"#utility.yul\":19483:19486   */\n      dup3\n        /* \"#utility.yul\":19394:19487   */\n      tag_567\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":19512:19514   */\n      0x40\n        /* \"#utility.yul\":19507:19510   */\n      dup3\n        /* \"#utility.yul\":19503:19515   */\n      add\n        /* \"#utility.yul\":19496:19515   */\n      swap1\n      pop\n        /* \"#utility.yul\":19155:19521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19527:19946   */\n    tag_201:\n        /* \"#utility.yul\":19693:19697   */\n      0x00\n        /* \"#utility.yul\":19731:19733   */\n      0x20\n        /* \"#utility.yul\":19720:19729   */\n      dup3\n        /* \"#utility.yul\":19716:19734   */\n      add\n        /* \"#utility.yul\":19708:19734   */\n      swap1\n      pop\n        /* \"#utility.yul\":19780:19789   */\n      dup2\n        /* \"#utility.yul\":19774:19778   */\n      dup2\n        /* \"#utility.yul\":19770:19790   */\n      sub\n        /* \"#utility.yul\":19766:19767   */\n      0x00\n        /* \"#utility.yul\":19755:19764   */\n      dup4\n        /* \"#utility.yul\":19751:19768   */\n      add\n        /* \"#utility.yul\":19744:19791   */\n      mstore\n        /* \"#utility.yul\":19808:19939   */\n      tag_806\n        /* \"#utility.yul\":19934:19938   */\n      dup2\n        /* \"#utility.yul\":19808:19939   */\n      tag_568\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":19800:19939   */\n      swap1\n      pop\n        /* \"#utility.yul\":19527:19946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19952:20127   */\n    tag_569:\n        /* \"#utility.yul\":20092:20119   */\n      0x41646472657373206973206e6f74206120636f6e747261637400000000000000\n        /* \"#utility.yul\":20088:20089   */\n      0x00\n        /* \"#utility.yul\":20080:20086   */\n      dup3\n        /* \"#utility.yul\":20076:20090   */\n      add\n        /* \"#utility.yul\":20069:20120   */\n      mstore\n        /* \"#utility.yul\":19952:20127   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20133:20499   */\n    tag_570:\n        /* \"#utility.yul\":20275:20278   */\n      0x00\n        /* \"#utility.yul\":20296:20363   */\n      tag_809\n        /* \"#utility.yul\":20360:20362   */\n      0x19\n        /* \"#utility.yul\":20355:20358   */\n      dup4\n        /* \"#utility.yul\":20296:20363   */\n      tag_518\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":20289:20363   */\n      swap2\n      pop\n        /* \"#utility.yul\":20372:20465   */\n      tag_810\n        /* \"#utility.yul\":20461:20464   */\n      dup3\n        /* \"#utility.yul\":20372:20465   */\n      tag_569\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":20490:20492   */\n      0x20\n        /* \"#utility.yul\":20485:20488   */\n      dup3\n        /* \"#utility.yul\":20481:20493   */\n      add\n        /* \"#utility.yul\":20474:20493   */\n      swap1\n      pop\n        /* \"#utility.yul\":20133:20499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20505:20924   */\n    tag_213:\n        /* \"#utility.yul\":20671:20675   */\n      0x00\n        /* \"#utility.yul\":20709:20711   */\n      0x20\n        /* \"#utility.yul\":20698:20707   */\n      dup3\n        /* \"#utility.yul\":20694:20712   */\n      add\n        /* \"#utility.yul\":20686:20712   */\n      swap1\n      pop\n        /* \"#utility.yul\":20758:20767   */\n      dup2\n        /* \"#utility.yul\":20752:20756   */\n      dup2\n        /* \"#utility.yul\":20748:20768   */\n      sub\n        /* \"#utility.yul\":20744:20745   */\n      0x00\n        /* \"#utility.yul\":20733:20742   */\n      dup4\n        /* \"#utility.yul\":20729:20746   */\n      add\n        /* \"#utility.yul\":20722:20769   */\n      mstore\n        /* \"#utility.yul\":20786:20917   */\n      tag_812\n        /* \"#utility.yul\":20912:20916   */\n      dup2\n        /* \"#utility.yul\":20786:20917   */\n      tag_570\n      jump\t// in\n    tag_812:\n        /* \"#utility.yul\":20778:20917   */\n      swap1\n      pop\n        /* \"#utility.yul\":20505:20924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20930:21094   */\n    tag_571:\n        /* \"#utility.yul\":21070:21086   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":21066:21067   */\n      0x00\n        /* \"#utility.yul\":21058:21064   */\n      dup3\n        /* \"#utility.yul\":21054:21068   */\n      add\n        /* \"#utility.yul\":21047:21087   */\n      mstore\n        /* \"#utility.yul\":20930:21094   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21100:21466   */\n    tag_572:\n        /* \"#utility.yul\":21242:21245   */\n      0x00\n        /* \"#utility.yul\":21263:21330   */\n      tag_815\n        /* \"#utility.yul\":21327:21329   */\n      0x0e\n        /* \"#utility.yul\":21322:21325   */\n      dup4\n        /* \"#utility.yul\":21263:21330   */\n      tag_518\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":21256:21330   */\n      swap2\n      pop\n        /* \"#utility.yul\":21339:21432   */\n      tag_816\n        /* \"#utility.yul\":21428:21431   */\n      dup3\n        /* \"#utility.yul\":21339:21432   */\n      tag_571\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":21457:21459   */\n      0x20\n        /* \"#utility.yul\":21452:21455   */\n      dup3\n        /* \"#utility.yul\":21448:21460   */\n      add\n        /* \"#utility.yul\":21441:21460   */\n      swap1\n      pop\n        /* \"#utility.yul\":21100:21466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21472:21891   */\n    tag_218:\n        /* \"#utility.yul\":21638:21642   */\n      0x00\n        /* \"#utility.yul\":21676:21678   */\n      0x20\n        /* \"#utility.yul\":21665:21674   */\n      dup3\n        /* \"#utility.yul\":21661:21679   */\n      add\n        /* \"#utility.yul\":21653:21679   */\n      swap1\n      pop\n        /* \"#utility.yul\":21725:21734   */\n      dup2\n        /* \"#utility.yul\":21719:21723   */\n      dup2\n        /* \"#utility.yul\":21715:21735   */\n      sub\n        /* \"#utility.yul\":21711:21712   */\n      0x00\n        /* \"#utility.yul\":21700:21709   */\n      dup4\n        /* \"#utility.yul\":21696:21713   */\n      add\n        /* \"#utility.yul\":21689:21736   */\n      mstore\n        /* \"#utility.yul\":21753:21884   */\n      tag_818\n        /* \"#utility.yul\":21879:21883   */\n      dup2\n        /* \"#utility.yul\":21753:21884   */\n      tag_572\n      jump\t// in\n    tag_818:\n        /* \"#utility.yul\":21745:21884   */\n      swap1\n      pop\n        /* \"#utility.yul\":21472:21891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21897:22123   */\n    tag_573:\n        /* \"#utility.yul\":22037:22071   */\n      0x42617463685472616e73666572206661696c65643a204d69736d617463686564\n        /* \"#utility.yul\":22033:22034   */\n      0x00\n        /* \"#utility.yul\":22025:22031   */\n      dup3\n        /* \"#utility.yul\":22021:22035   */\n      add\n        /* \"#utility.yul\":22014:22072   */\n      mstore\n        /* \"#utility.yul\":22106:22115   */\n      0x2061727261797300000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22101:22103   */\n      0x20\n        /* \"#utility.yul\":22093:22099   */\n      dup3\n        /* \"#utility.yul\":22089:22104   */\n      add\n        /* \"#utility.yul\":22082:22116   */\n      mstore\n        /* \"#utility.yul\":21897:22123   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22129:22495   */\n    tag_574:\n        /* \"#utility.yul\":22271:22274   */\n      0x00\n        /* \"#utility.yul\":22292:22359   */\n      tag_821\n        /* \"#utility.yul\":22356:22358   */\n      0x27\n        /* \"#utility.yul\":22351:22354   */\n      dup4\n        /* \"#utility.yul\":22292:22359   */\n      tag_518\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":22285:22359   */\n      swap2\n      pop\n        /* \"#utility.yul\":22368:22461   */\n      tag_822\n        /* \"#utility.yul\":22457:22460   */\n      dup3\n        /* \"#utility.yul\":22368:22461   */\n      tag_573\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":22486:22488   */\n      0x40\n        /* \"#utility.yul\":22481:22484   */\n      dup3\n        /* \"#utility.yul\":22477:22489   */\n      add\n        /* \"#utility.yul\":22470:22489   */\n      swap1\n      pop\n        /* \"#utility.yul\":22129:22495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22501:22920   */\n    tag_259:\n        /* \"#utility.yul\":22667:22671   */\n      0x00\n        /* \"#utility.yul\":22705:22707   */\n      0x20\n        /* \"#utility.yul\":22694:22703   */\n      dup3\n        /* \"#utility.yul\":22690:22708   */\n      add\n        /* \"#utility.yul\":22682:22708   */\n      swap1\n      pop\n        /* \"#utility.yul\":22754:22763   */\n      dup2\n        /* \"#utility.yul\":22748:22752   */\n      dup2\n        /* \"#utility.yul\":22744:22764   */\n      sub\n        /* \"#utility.yul\":22740:22741   */\n      0x00\n        /* \"#utility.yul\":22729:22738   */\n      dup4\n        /* \"#utility.yul\":22725:22742   */\n      add\n        /* \"#utility.yul\":22718:22765   */\n      mstore\n        /* \"#utility.yul\":22782:22913   */\n      tag_824\n        /* \"#utility.yul\":22908:22912   */\n      dup2\n        /* \"#utility.yul\":22782:22913   */\n      tag_574\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":22774:22913   */\n      swap1\n      pop\n        /* \"#utility.yul\":22501:22920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22926:23106   */\n    tag_265:\n        /* \"#utility.yul\":22974:23051   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22971:22972   */\n      0x00\n        /* \"#utility.yul\":22964:23052   */\n      mstore\n        /* \"#utility.yul\":23071:23075   */\n      0x32\n        /* \"#utility.yul\":23068:23069   */\n      0x04\n        /* \"#utility.yul\":23061:23076   */\n      mstore\n        /* \"#utility.yul\":23095:23099   */\n      0x24\n        /* \"#utility.yul\":23092:23093   */\n      0x00\n        /* \"#utility.yul\":23085:23100   */\n      revert\n        /* \"#utility.yul\":23112:23345   */\n    tag_575:\n        /* \"#utility.yul\":23252:23286   */\n      0x42617463685472616e73666572206661696c65643a20526563697069656e7420\n        /* \"#utility.yul\":23248:23249   */\n      0x00\n        /* \"#utility.yul\":23240:23246   */\n      dup3\n        /* \"#utility.yul\":23236:23250   */\n      add\n        /* \"#utility.yul\":23229:23287   */\n      mstore\n        /* \"#utility.yul\":23321:23337   */\n      0x697320626c61636b6c6973746564000000000000000000000000000000000000\n        /* \"#utility.yul\":23316:23318   */\n      0x20\n        /* \"#utility.yul\":23308:23314   */\n      dup3\n        /* \"#utility.yul\":23304:23319   */\n      add\n        /* \"#utility.yul\":23297:23338   */\n      mstore\n        /* \"#utility.yul\":23112:23345   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23351:23717   */\n    tag_576:\n        /* \"#utility.yul\":23493:23496   */\n      0x00\n        /* \"#utility.yul\":23514:23581   */\n      tag_828\n        /* \"#utility.yul\":23578:23580   */\n      0x2e\n        /* \"#utility.yul\":23573:23576   */\n      dup4\n        /* \"#utility.yul\":23514:23581   */\n      tag_518\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":23507:23581   */\n      swap2\n      pop\n        /* \"#utility.yul\":23590:23683   */\n      tag_829\n        /* \"#utility.yul\":23679:23682   */\n      dup3\n        /* \"#utility.yul\":23590:23683   */\n      tag_575\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":23708:23710   */\n      0x40\n        /* \"#utility.yul\":23703:23706   */\n      dup3\n        /* \"#utility.yul\":23699:23711   */\n      add\n        /* \"#utility.yul\":23692:23711   */\n      swap1\n      pop\n        /* \"#utility.yul\":23351:23717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23723:24142   */\n    tag_269:\n        /* \"#utility.yul\":23889:23893   */\n      0x00\n        /* \"#utility.yul\":23927:23929   */\n      0x20\n        /* \"#utility.yul\":23916:23925   */\n      dup3\n        /* \"#utility.yul\":23912:23930   */\n      add\n        /* \"#utility.yul\":23904:23930   */\n      swap1\n      pop\n        /* \"#utility.yul\":23976:23985   */\n      dup2\n        /* \"#utility.yul\":23970:23974   */\n      dup2\n        /* \"#utility.yul\":23966:23986   */\n      sub\n        /* \"#utility.yul\":23962:23963   */\n      0x00\n        /* \"#utility.yul\":23951:23960   */\n      dup4\n        /* \"#utility.yul\":23947:23964   */\n      add\n        /* \"#utility.yul\":23940:23987   */\n      mstore\n        /* \"#utility.yul\":24004:24135   */\n      tag_831\n        /* \"#utility.yul\":24130:24134   */\n      dup2\n        /* \"#utility.yul\":24004:24135   */\n      tag_576\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":23996:24135   */\n      swap1\n      pop\n        /* \"#utility.yul\":23723:24142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24148:24233   */\n    tag_577:\n        /* \"#utility.yul\":24193:24200   */\n      0x00\n        /* \"#utility.yul\":24222:24227   */\n      dup2\n        /* \"#utility.yul\":24211:24227   */\n      swap1\n      pop\n        /* \"#utility.yul\":24148:24233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24239:24340   */\n    tag_578:\n        /* \"#utility.yul\":24275:24282   */\n      0x00\n        /* \"#utility.yul\":24315:24333   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24308:24313   */\n      dup3\n        /* \"#utility.yul\":24304:24334   */\n      and\n        /* \"#utility.yul\":24293:24334   */\n      swap1\n      pop\n        /* \"#utility.yul\":24239:24340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24346:24406   */\n    tag_579:\n        /* \"#utility.yul\":24374:24377   */\n      0x00\n        /* \"#utility.yul\":24395:24400   */\n      dup2\n        /* \"#utility.yul\":24388:24400   */\n      swap1\n      pop\n        /* \"#utility.yul\":24346:24406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24412:24568   */\n    tag_580:\n        /* \"#utility.yul\":24469:24478   */\n      0x00\n        /* \"#utility.yul\":24502:24562   */\n      tag_836\n        /* \"#utility.yul\":24519:24561   */\n      tag_837\n        /* \"#utility.yul\":24528:24560   */\n      tag_838\n        /* \"#utility.yul\":24554:24559   */\n      dup5\n        /* \"#utility.yul\":24528:24560   */\n      tag_577\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":24519:24561   */\n      tag_579\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":24502:24562   */\n      tag_578\n      jump\t// in\n    tag_836:\n        /* \"#utility.yul\":24489:24562   */\n      swap1\n      pop\n        /* \"#utility.yul\":24412:24568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24574:24719   */\n    tag_581:\n        /* \"#utility.yul\":24668:24712   */\n      tag_840\n        /* \"#utility.yul\":24706:24711   */\n      dup2\n        /* \"#utility.yul\":24668:24712   */\n      tag_580\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":24663:24666   */\n      dup3\n        /* \"#utility.yul\":24656:24713   */\n      mstore\n        /* \"#utility.yul\":24574:24719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24725:24961   */\n    tag_322:\n        /* \"#utility.yul\":24825:24829   */\n      0x00\n        /* \"#utility.yul\":24863:24865   */\n      0x20\n        /* \"#utility.yul\":24852:24861   */\n      dup3\n        /* \"#utility.yul\":24848:24866   */\n      add\n        /* \"#utility.yul\":24840:24866   */\n      swap1\n      pop\n        /* \"#utility.yul\":24876:24954   */\n      tag_842\n        /* \"#utility.yul\":24951:24952   */\n      0x00\n        /* \"#utility.yul\":24940:24949   */\n      dup4\n        /* \"#utility.yul\":24936:24953   */\n      add\n        /* \"#utility.yul\":24927:24933   */\n      dup5\n        /* \"#utility.yul\":24876:24954   */\n      tag_581\n      jump\t// in\n    tag_842:\n        /* \"#utility.yul\":24725:24961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24967:25133   */\n    tag_582:\n        /* \"#utility.yul\":25107:25125   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":25103:25104   */\n      0x00\n        /* \"#utility.yul\":25095:25101   */\n      dup3\n        /* \"#utility.yul\":25091:25105   */\n      add\n        /* \"#utility.yul\":25084:25126   */\n      mstore\n        /* \"#utility.yul\":24967:25133   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25139:25505   */\n    tag_583:\n        /* \"#utility.yul\":25281:25284   */\n      0x00\n        /* \"#utility.yul\":25302:25369   */\n      tag_845\n        /* \"#utility.yul\":25366:25368   */\n      0x10\n        /* \"#utility.yul\":25361:25364   */\n      dup4\n        /* \"#utility.yul\":25302:25369   */\n      tag_518\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":25295:25369   */\n      swap2\n      pop\n        /* \"#utility.yul\":25378:25471   */\n      tag_846\n        /* \"#utility.yul\":25467:25470   */\n      dup3\n        /* \"#utility.yul\":25378:25471   */\n      tag_582\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":25496:25498   */\n      0x20\n        /* \"#utility.yul\":25491:25494   */\n      dup3\n        /* \"#utility.yul\":25487:25499   */\n      add\n        /* \"#utility.yul\":25480:25499   */\n      swap1\n      pop\n        /* \"#utility.yul\":25139:25505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25511:25930   */\n    tag_347:\n        /* \"#utility.yul\":25677:25681   */\n      0x00\n        /* \"#utility.yul\":25715:25717   */\n      0x20\n        /* \"#utility.yul\":25704:25713   */\n      dup3\n        /* \"#utility.yul\":25700:25718   */\n      add\n        /* \"#utility.yul\":25692:25718   */\n      swap1\n      pop\n        /* \"#utility.yul\":25764:25773   */\n      dup2\n        /* \"#utility.yul\":25758:25762   */\n      dup2\n        /* \"#utility.yul\":25754:25774   */\n      sub\n        /* \"#utility.yul\":25750:25751   */\n      0x00\n        /* \"#utility.yul\":25739:25748   */\n      dup4\n        /* \"#utility.yul\":25735:25752   */\n      add\n        /* \"#utility.yul\":25728:25775   */\n      mstore\n        /* \"#utility.yul\":25792:25923   */\n      tag_848\n        /* \"#utility.yul\":25918:25922   */\n      dup2\n        /* \"#utility.yul\":25792:25923   */\n      tag_583\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":25784:25923   */\n      swap1\n      pop\n        /* \"#utility.yul\":25511:25930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25936:26058   */\n    tag_584:\n        /* \"#utility.yul\":26009:26033   */\n      tag_850\n        /* \"#utility.yul\":26027:26032   */\n      dup2\n        /* \"#utility.yul\":26009:26033   */\n      tag_548\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":26002:26007   */\n      dup2\n        /* \"#utility.yul\":25999:26034   */\n      eq\n        /* \"#utility.yul\":25989:26052   */\n      tag_851\n      jumpi\n        /* \"#utility.yul\":26048:26049   */\n      0x00\n        /* \"#utility.yul\":26045:26046   */\n      dup1\n        /* \"#utility.yul\":26038:26050   */\n      revert\n        /* \"#utility.yul\":25989:26052   */\n    tag_851:\n        /* \"#utility.yul\":25936:26058   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26064:26207   */\n    tag_585:\n        /* \"#utility.yul\":26121:26126   */\n      0x00\n        /* \"#utility.yul\":26152:26158   */\n      dup2\n        /* \"#utility.yul\":26146:26159   */\n      mload\n        /* \"#utility.yul\":26137:26159   */\n      swap1\n      pop\n        /* \"#utility.yul\":26168:26201   */\n      tag_853\n        /* \"#utility.yul\":26195:26200   */\n      dup2\n        /* \"#utility.yul\":26168:26201   */\n      tag_584\n      jump\t// in\n    tag_853:\n        /* \"#utility.yul\":26064:26207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26213:26564   */\n    tag_371:\n        /* \"#utility.yul\":26283:26289   */\n      0x00\n        /* \"#utility.yul\":26332:26334   */\n      0x20\n        /* \"#utility.yul\":26320:26329   */\n      dup3\n        /* \"#utility.yul\":26311:26318   */\n      dup5\n        /* \"#utility.yul\":26307:26330   */\n      sub\n        /* \"#utility.yul\":26303:26335   */\n      slt\n        /* \"#utility.yul\":26300:26419   */\n      iszero\n      tag_855\n      jumpi\n        /* \"#utility.yul\":26338:26417   */\n      tag_856\n      tag_523\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":26300:26419   */\n    tag_855:\n        /* \"#utility.yul\":26458:26459   */\n      0x00\n        /* \"#utility.yul\":26483:26547   */\n      tag_857\n        /* \"#utility.yul\":26539:26546   */\n      dup5\n        /* \"#utility.yul\":26530:26536   */\n      dup3\n        /* \"#utility.yul\":26519:26528   */\n      dup6\n        /* \"#utility.yul\":26515:26537   */\n      add\n        /* \"#utility.yul\":26483:26547   */\n      tag_585\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":26473:26547   */\n      swap2\n      pop\n        /* \"#utility.yul\":26429:26557   */\n      pop\n        /* \"#utility.yul\":26213:26564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26570:27012   */\n    tag_439:\n        /* \"#utility.yul\":26719:26723   */\n      0x00\n        /* \"#utility.yul\":26757:26759   */\n      0x60\n        /* \"#utility.yul\":26746:26755   */\n      dup3\n        /* \"#utility.yul\":26742:26760   */\n      add\n        /* \"#utility.yul\":26734:26760   */\n      swap1\n      pop\n        /* \"#utility.yul\":26770:26841   */\n      tag_859\n        /* \"#utility.yul\":26838:26839   */\n      0x00\n        /* \"#utility.yul\":26827:26836   */\n      dup4\n        /* \"#utility.yul\":26823:26840   */\n      add\n        /* \"#utility.yul\":26814:26820   */\n      dup7\n        /* \"#utility.yul\":26770:26841   */\n      tag_554\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":26851:26923   */\n      tag_860\n        /* \"#utility.yul\":26919:26921   */\n      0x20\n        /* \"#utility.yul\":26908:26917   */\n      dup4\n        /* \"#utility.yul\":26904:26922   */\n      add\n        /* \"#utility.yul\":26895:26901   */\n      dup6\n        /* \"#utility.yul\":26851:26923   */\n      tag_536\n      jump\t// in\n    tag_860:\n        /* \"#utility.yul\":26933:27005   */\n      tag_861\n        /* \"#utility.yul\":27001:27003   */\n      0x40\n        /* \"#utility.yul\":26990:26999   */\n      dup4\n        /* \"#utility.yul\":26986:27004   */\n      add\n        /* \"#utility.yul\":26977:26983   */\n      dup5\n        /* \"#utility.yul\":26933:27005   */\n      tag_536\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":26570:27012   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27018:27188   */\n    tag_586:\n        /* \"#utility.yul\":27158:27180   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":27154:27155   */\n      0x00\n        /* \"#utility.yul\":27146:27152   */\n      dup3\n        /* \"#utility.yul\":27142:27156   */\n      add\n        /* \"#utility.yul\":27135:27181   */\n      mstore\n        /* \"#utility.yul\":27018:27188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27194:27560   */\n    tag_587:\n        /* \"#utility.yul\":27336:27339   */\n      0x00\n        /* \"#utility.yul\":27357:27424   */\n      tag_864\n        /* \"#utility.yul\":27421:27423   */\n      0x14\n        /* \"#utility.yul\":27416:27419   */\n      dup4\n        /* \"#utility.yul\":27357:27424   */\n      tag_518\n      jump\t// in\n    tag_864:\n        /* \"#utility.yul\":27350:27424   */\n      swap2\n      pop\n        /* \"#utility.yul\":27433:27526   */\n      tag_865\n        /* \"#utility.yul\":27522:27525   */\n      dup3\n        /* \"#utility.yul\":27433:27526   */\n      tag_586\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":27551:27553   */\n      0x20\n        /* \"#utility.yul\":27546:27549   */\n      dup3\n        /* \"#utility.yul\":27542:27554   */\n      add\n        /* \"#utility.yul\":27535:27554   */\n      swap1\n      pop\n        /* \"#utility.yul\":27194:27560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27566:27985   */\n    tag_445:\n        /* \"#utility.yul\":27732:27736   */\n      0x00\n        /* \"#utility.yul\":27770:27772   */\n      0x20\n        /* \"#utility.yul\":27759:27768   */\n      dup3\n        /* \"#utility.yul\":27755:27773   */\n      add\n        /* \"#utility.yul\":27747:27773   */\n      swap1\n      pop\n        /* \"#utility.yul\":27819:27828   */\n      dup2\n        /* \"#utility.yul\":27813:27817   */\n      dup2\n        /* \"#utility.yul\":27809:27829   */\n      sub\n        /* \"#utility.yul\":27805:27806   */\n      0x00\n        /* \"#utility.yul\":27794:27803   */\n      dup4\n        /* \"#utility.yul\":27790:27807   */\n      add\n        /* \"#utility.yul\":27783:27830   */\n      mstore\n        /* \"#utility.yul\":27847:27978   */\n      tag_867\n        /* \"#utility.yul\":27973:27977   */\n      dup2\n        /* \"#utility.yul\":27847:27978   */\n      tag_587\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":27839:27978   */\n      swap1\n      pop\n        /* \"#utility.yul\":27566:27985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27991:28171   */\n    tag_588:\n        /* \"#utility.yul\":28039:28116   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28036:28037   */\n      0x00\n        /* \"#utility.yul\":28029:28117   */\n      mstore\n        /* \"#utility.yul\":28136:28140   */\n      0x11\n        /* \"#utility.yul\":28133:28134   */\n      0x04\n        /* \"#utility.yul\":28126:28141   */\n      mstore\n        /* \"#utility.yul\":28160:28164   */\n      0x24\n        /* \"#utility.yul\":28157:28158   */\n      0x00\n        /* \"#utility.yul\":28150:28165   */\n      revert\n        /* \"#utility.yul\":28177:28368   */\n    tag_462:\n        /* \"#utility.yul\":28217:28220   */\n      0x00\n        /* \"#utility.yul\":28236:28256   */\n      tag_870\n        /* \"#utility.yul\":28254:28255   */\n      dup3\n        /* \"#utility.yul\":28236:28256   */\n      tag_529\n      jump\t// in\n    tag_870:\n        /* \"#utility.yul\":28231:28256   */\n      swap2\n      pop\n        /* \"#utility.yul\":28270:28290   */\n      tag_871\n        /* \"#utility.yul\":28288:28289   */\n      dup4\n        /* \"#utility.yul\":28270:28290   */\n      tag_529\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":28265:28290   */\n      swap3\n      pop\n        /* \"#utility.yul\":28313:28314   */\n      dup3\n        /* \"#utility.yul\":28310:28311   */\n      dup3\n        /* \"#utility.yul\":28306:28315   */\n      add\n        /* \"#utility.yul\":28299:28315   */\n      swap1\n      pop\n        /* \"#utility.yul\":28334:28337   */\n      dup1\n        /* \"#utility.yul\":28331:28332   */\n      dup3\n        /* \"#utility.yul\":28328:28338   */\n      gt\n        /* \"#utility.yul\":28325:28361   */\n      iszero\n      tag_872\n      jumpi\n        /* \"#utility.yul\":28341:28359   */\n      tag_873\n      tag_588\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":28325:28361   */\n    tag_872:\n        /* \"#utility.yul\":28177:28368   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28374:28515   */\n    tag_589:\n        /* \"#utility.yul\":28423:28427   */\n      0x00\n        /* \"#utility.yul\":28446:28449   */\n      dup2\n        /* \"#utility.yul\":28438:28449   */\n      swap1\n      pop\n        /* \"#utility.yul\":28469:28472   */\n      dup2\n        /* \"#utility.yul\":28466:28467   */\n      0x00\n        /* \"#utility.yul\":28459:28473   */\n      mstore\n        /* \"#utility.yul\":28503:28507   */\n      0x20\n        /* \"#utility.yul\":28500:28501   */\n      0x00\n        /* \"#utility.yul\":28490:28508   */\n      keccak256\n        /* \"#utility.yul\":28482:28508   */\n      swap1\n      pop\n        /* \"#utility.yul\":28374:28515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28521:28614   */\n    tag_590:\n        /* \"#utility.yul\":28558:28564   */\n      0x00\n        /* \"#utility.yul\":28605:28607   */\n      0x20\n        /* \"#utility.yul\":28600:28602   */\n      0x1f\n        /* \"#utility.yul\":28593:28598   */\n      dup4\n        /* \"#utility.yul\":28589:28603   */\n      add\n        /* \"#utility.yul\":28585:28608   */\n      div\n        /* \"#utility.yul\":28575:28608   */\n      swap1\n      pop\n        /* \"#utility.yul\":28521:28614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28620:28727   */\n    tag_591:\n        /* \"#utility.yul\":28664:28672   */\n      0x00\n        /* \"#utility.yul\":28714:28719   */\n      dup3\n        /* \"#utility.yul\":28708:28712   */\n      dup3\n        /* \"#utility.yul\":28704:28720   */\n      shl\n        /* \"#utility.yul\":28683:28720   */\n      swap1\n      pop\n        /* \"#utility.yul\":28620:28727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28733:29126   */\n    tag_592:\n        /* \"#utility.yul\":28802:28808   */\n      0x00\n        /* \"#utility.yul\":28852:28853   */\n      0x08\n        /* \"#utility.yul\":28840:28850   */\n      dup4\n        /* \"#utility.yul\":28836:28854   */\n      mul\n        /* \"#utility.yul\":28875:28972   */\n      tag_878\n        /* \"#utility.yul\":28905:28971   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":28894:28903   */\n      dup3\n        /* \"#utility.yul\":28875:28972   */\n      tag_591\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":28993:29032   */\n      tag_879\n        /* \"#utility.yul\":29023:29031   */\n      dup7\n        /* \"#utility.yul\":29012:29021   */\n      dup4\n        /* \"#utility.yul\":28993:29032   */\n      tag_591\n      jump\t// in\n    tag_879:\n        /* \"#utility.yul\":28981:29032   */\n      swap6\n      pop\n        /* \"#utility.yul\":29065:29069   */\n      dup1\n        /* \"#utility.yul\":29061:29070   */\n      not\n        /* \"#utility.yul\":29054:29059   */\n      dup5\n        /* \"#utility.yul\":29050:29071   */\n      and\n        /* \"#utility.yul\":29041:29071   */\n      swap4\n      pop\n        /* \"#utility.yul\":29114:29118   */\n      dup1\n        /* \"#utility.yul\":29104:29112   */\n      dup7\n        /* \"#utility.yul\":29100:29119   */\n      and\n        /* \"#utility.yul\":29093:29098   */\n      dup5\n        /* \"#utility.yul\":29090:29120   */\n      or\n        /* \"#utility.yul\":29080:29120   */\n      swap3\n      pop\n        /* \"#utility.yul\":28809:29126   */\n      pop\n      pop\n        /* \"#utility.yul\":28733:29126   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29132:29274   */\n    tag_593:\n        /* \"#utility.yul\":29182:29191   */\n      0x00\n        /* \"#utility.yul\":29215:29268   */\n      tag_881\n        /* \"#utility.yul\":29233:29267   */\n      tag_882\n        /* \"#utility.yul\":29242:29266   */\n      tag_883\n        /* \"#utility.yul\":29260:29265   */\n      dup5\n        /* \"#utility.yul\":29242:29266   */\n      tag_529\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":29233:29267   */\n      tag_579\n      jump\t// in\n    tag_882:\n        /* \"#utility.yul\":29215:29268   */\n      tag_529\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":29202:29268   */\n      swap1\n      pop\n        /* \"#utility.yul\":29132:29274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29280:29355   */\n    tag_594:\n        /* \"#utility.yul\":29323:29326   */\n      0x00\n        /* \"#utility.yul\":29344:29349   */\n      dup2\n        /* \"#utility.yul\":29337:29349   */\n      swap1\n      pop\n        /* \"#utility.yul\":29280:29355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29361:29630   */\n    tag_595:\n        /* \"#utility.yul\":29471:29510   */\n      tag_886\n        /* \"#utility.yul\":29502:29509   */\n      dup4\n        /* \"#utility.yul\":29471:29510   */\n      tag_593\n      jump\t// in\n    tag_886:\n        /* \"#utility.yul\":29532:29623   */\n      tag_887\n        /* \"#utility.yul\":29581:29622   */\n      tag_888\n        /* \"#utility.yul\":29605:29621   */\n      dup3\n        /* \"#utility.yul\":29581:29622   */\n      tag_594\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":29573:29579   */\n      dup5\n        /* \"#utility.yul\":29566:29570   */\n      dup5\n        /* \"#utility.yul\":29560:29571   */\n      sload\n        /* \"#utility.yul\":29532:29623   */\n      tag_592\n      jump\t// in\n    tag_887:\n        /* \"#utility.yul\":29526:29530   */\n      dup3\n        /* \"#utility.yul\":29519:29624   */\n      sstore\n        /* \"#utility.yul\":29437:29630   */\n      pop\n        /* \"#utility.yul\":29361:29630   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29636:29709   */\n    tag_596:\n        /* \"#utility.yul\":29681:29684   */\n      0x00\n        /* \"#utility.yul\":29636:29709   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":29715:29904   */\n    tag_597:\n        /* \"#utility.yul\":29792:29824   */\n      tag_891\n      tag_596\n      jump\t// in\n    tag_891:\n        /* \"#utility.yul\":29833:29898   */\n      tag_892\n        /* \"#utility.yul\":29891:29897   */\n      dup2\n        /* \"#utility.yul\":29883:29889   */\n      dup5\n        /* \"#utility.yul\":29877:29881   */\n      dup5\n        /* \"#utility.yul\":29833:29898   */\n      tag_595\n      jump\t// in\n    tag_892:\n        /* \"#utility.yul\":29768:29904   */\n      pop\n        /* \"#utility.yul\":29715:29904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29910:30096   */\n    tag_598:\n        /* \"#utility.yul\":29970:30090   */\n    tag_894:\n        /* \"#utility.yul\":29987:29990   */\n      dup2\n        /* \"#utility.yul\":29980:29985   */\n      dup2\n        /* \"#utility.yul\":29977:29991   */\n      lt\n        /* \"#utility.yul\":29970:30090   */\n      iszero\n      tag_896\n      jumpi\n        /* \"#utility.yul\":30041:30080   */\n      tag_897\n        /* \"#utility.yul\":30078:30079   */\n      0x00\n        /* \"#utility.yul\":30071:30076   */\n      dup3\n        /* \"#utility.yul\":30041:30080   */\n      tag_597\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":30014:30015   */\n      0x01\n        /* \"#utility.yul\":30007:30012   */\n      dup2\n        /* \"#utility.yul\":30003:30016   */\n      add\n        /* \"#utility.yul\":29994:30016   */\n      swap1\n      pop\n        /* \"#utility.yul\":29970:30090   */\n      jump(tag_894)\n    tag_896:\n        /* \"#utility.yul\":29910:30096   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30102:30645   */\n    tag_599:\n        /* \"#utility.yul\":30203:30205   */\n      0x1f\n        /* \"#utility.yul\":30198:30201   */\n      dup3\n        /* \"#utility.yul\":30195:30206   */\n      gt\n        /* \"#utility.yul\":30192:30638   */\n      iszero\n      tag_899\n      jumpi\n        /* \"#utility.yul\":30237:30275   */\n      tag_900\n        /* \"#utility.yul\":30269:30274   */\n      dup2\n        /* \"#utility.yul\":30237:30275   */\n      tag_589\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":30321:30350   */\n      tag_901\n        /* \"#utility.yul\":30339:30349   */\n      dup5\n        /* \"#utility.yul\":30321:30350   */\n      tag_590\n      jump\t// in\n    tag_901:\n        /* \"#utility.yul\":30311:30319   */\n      dup2\n        /* \"#utility.yul\":30307:30351   */\n      add\n        /* \"#utility.yul\":30504:30506   */\n      0x20\n        /* \"#utility.yul\":30492:30502   */\n      dup6\n        /* \"#utility.yul\":30489:30507   */\n      lt\n        /* \"#utility.yul\":30486:30535   */\n      iszero\n      tag_902\n      jumpi\n        /* \"#utility.yul\":30525:30533   */\n      dup2\n        /* \"#utility.yul\":30510:30533   */\n      swap1\n      pop\n        /* \"#utility.yul\":30486:30535   */\n    tag_902:\n        /* \"#utility.yul\":30548:30628   */\n      tag_903\n        /* \"#utility.yul\":30604:30626   */\n      tag_904\n        /* \"#utility.yul\":30622:30625   */\n      dup6\n        /* \"#utility.yul\":30604:30626   */\n      tag_590\n      jump\t// in\n    tag_904:\n        /* \"#utility.yul\":30594:30602   */\n      dup4\n        /* \"#utility.yul\":30590:30627   */\n      add\n        /* \"#utility.yul\":30577:30588   */\n      dup3\n        /* \"#utility.yul\":30548:30628   */\n      tag_598\n      jump\t// in\n    tag_903:\n        /* \"#utility.yul\":30207:30638   */\n      pop\n      pop\n        /* \"#utility.yul\":30192:30638   */\n    tag_899:\n        /* \"#utility.yul\":30102:30645   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30651:30768   */\n    tag_600:\n        /* \"#utility.yul\":30705:30713   */\n      0x00\n        /* \"#utility.yul\":30755:30760   */\n      dup3\n        /* \"#utility.yul\":30749:30753   */\n      dup3\n        /* \"#utility.yul\":30745:30761   */\n      shr\n        /* \"#utility.yul\":30724:30761   */\n      swap1\n      pop\n        /* \"#utility.yul\":30651:30768   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30774:30943   */\n    tag_601:\n        /* \"#utility.yul\":30818:30824   */\n      0x00\n        /* \"#utility.yul\":30851:30902   */\n      tag_907\n        /* \"#utility.yul\":30899:30900   */\n      0x00\n        /* \"#utility.yul\":30895:30901   */\n      not\n        /* \"#utility.yul\":30887:30892   */\n      dup5\n        /* \"#utility.yul\":30884:30885   */\n      0x08\n        /* \"#utility.yul\":30880:30893   */\n      mul\n        /* \"#utility.yul\":30851:30902   */\n      tag_600\n      jump\t// in\n    tag_907:\n        /* \"#utility.yul\":30847:30903   */\n      not\n        /* \"#utility.yul\":30932:30936   */\n      dup1\n        /* \"#utility.yul\":30926:30930   */\n      dup4\n        /* \"#utility.yul\":30922:30937   */\n      and\n        /* \"#utility.yul\":30912:30937   */\n      swap2\n      pop\n        /* \"#utility.yul\":30825:30943   */\n      pop\n        /* \"#utility.yul\":30774:30943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30948:31243   */\n    tag_602:\n        /* \"#utility.yul\":31024:31028   */\n      0x00\n        /* \"#utility.yul\":31170:31199   */\n      tag_909\n        /* \"#utility.yul\":31195:31198   */\n      dup4\n        /* \"#utility.yul\":31189:31193   */\n      dup4\n        /* \"#utility.yul\":31170:31199   */\n      tag_601\n      jump\t// in\n    tag_909:\n        /* \"#utility.yul\":31162:31199   */\n      swap2\n      pop\n        /* \"#utility.yul\":31232:31235   */\n      dup3\n        /* \"#utility.yul\":31229:31230   */\n      0x02\n        /* \"#utility.yul\":31225:31236   */\n      mul\n        /* \"#utility.yul\":31219:31223   */\n      dup3\n        /* \"#utility.yul\":31216:31237   */\n      or\n        /* \"#utility.yul\":31208:31237   */\n      swap1\n      pop\n        /* \"#utility.yul\":30948:31243   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31248:32643   */\n    tag_478:\n        /* \"#utility.yul\":31365:31402   */\n      tag_911\n        /* \"#utility.yul\":31398:31401   */\n      dup3\n        /* \"#utility.yul\":31365:31402   */\n      tag_517\n      jump\t// in\n    tag_911:\n        /* \"#utility.yul\":31467:31485   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":31459:31465   */\n      dup2\n        /* \"#utility.yul\":31456:31486   */\n      gt\n        /* \"#utility.yul\":31453:31509   */\n      iszero\n      tag_912\n      jumpi\n        /* \"#utility.yul\":31489:31507   */\n      tag_913\n      tag_541\n      jump\t// in\n    tag_913:\n        /* \"#utility.yul\":31453:31509   */\n    tag_912:\n        /* \"#utility.yul\":31533:31571   */\n      tag_914\n        /* \"#utility.yul\":31565:31569   */\n      dup3\n        /* \"#utility.yul\":31559:31570   */\n      sload\n        /* \"#utility.yul\":31533:31571   */\n      tag_165\n      jump\t// in\n    tag_914:\n        /* \"#utility.yul\":31618:31685   */\n      tag_915\n        /* \"#utility.yul\":31678:31684   */\n      dup3\n        /* \"#utility.yul\":31670:31676   */\n      dup3\n        /* \"#utility.yul\":31664:31668   */\n      dup6\n        /* \"#utility.yul\":31618:31685   */\n      tag_599\n      jump\t// in\n    tag_915:\n        /* \"#utility.yul\":31712:31713   */\n      0x00\n        /* \"#utility.yul\":31736:31740   */\n      0x20\n        /* \"#utility.yul\":31723:31740   */\n      swap1\n      pop\n        /* \"#utility.yul\":31768:31770   */\n      0x1f\n        /* \"#utility.yul\":31760:31766   */\n      dup4\n        /* \"#utility.yul\":31757:31771   */\n      gt\n        /* \"#utility.yul\":31785:31786   */\n      0x01\n        /* \"#utility.yul\":31780:32398   */\n      dup2\n      eq\n      tag_917\n      jumpi\n        /* \"#utility.yul\":32442:32443   */\n      0x00\n        /* \"#utility.yul\":32459:32465   */\n      dup5\n        /* \"#utility.yul\":32456:32533   */\n      iszero\n      tag_918\n      jumpi\n        /* \"#utility.yul\":32508:32517   */\n      dup3\n        /* \"#utility.yul\":32503:32506   */\n      dup8\n        /* \"#utility.yul\":32499:32518   */\n      add\n        /* \"#utility.yul\":32493:32519   */\n      mload\n        /* \"#utility.yul\":32484:32519   */\n      swap1\n      pop\n        /* \"#utility.yul\":32456:32533   */\n    tag_918:\n        /* \"#utility.yul\":32559:32626   */\n      tag_919\n        /* \"#utility.yul\":32619:32625   */\n      dup6\n        /* \"#utility.yul\":32612:32617   */\n      dup3\n        /* \"#utility.yul\":32559:32626   */\n      tag_602\n      jump\t// in\n    tag_919:\n        /* \"#utility.yul\":32553:32557   */\n      dup7\n        /* \"#utility.yul\":32546:32627   */\n      sstore\n        /* \"#utility.yul\":32415:32637   */\n      pop\n        /* \"#utility.yul\":31750:32637   */\n      jump(tag_916)\n        /* \"#utility.yul\":31780:32398   */\n    tag_917:\n        /* \"#utility.yul\":31832:31836   */\n      0x1f\n        /* \"#utility.yul\":31828:31837   */\n      not\n        /* \"#utility.yul\":31820:31826   */\n      dup5\n        /* \"#utility.yul\":31816:31838   */\n      and\n        /* \"#utility.yul\":31866:31903   */\n      tag_920\n        /* \"#utility.yul\":31898:31902   */\n      dup7\n        /* \"#utility.yul\":31866:31903   */\n      tag_589\n      jump\t// in\n    tag_920:\n        /* \"#utility.yul\":31925:31926   */\n      0x00\n        /* \"#utility.yul\":31939:32147   */\n    tag_921:\n        /* \"#utility.yul\":31953:31960   */\n      dup3\n        /* \"#utility.yul\":31950:31951   */\n      dup2\n        /* \"#utility.yul\":31947:31961   */\n      lt\n        /* \"#utility.yul\":31939:32147   */\n      iszero\n      tag_923\n      jumpi\n        /* \"#utility.yul\":32032:32041   */\n      dup5\n        /* \"#utility.yul\":32027:32030   */\n      dup10\n        /* \"#utility.yul\":32023:32042   */\n      add\n        /* \"#utility.yul\":32017:32043   */\n      mload\n        /* \"#utility.yul\":32009:32015   */\n      dup3\n        /* \"#utility.yul\":32002:32044   */\n      sstore\n        /* \"#utility.yul\":32083:32084   */\n      0x01\n        /* \"#utility.yul\":32075:32081   */\n      dup3\n        /* \"#utility.yul\":32071:32085   */\n      add\n        /* \"#utility.yul\":32061:32085   */\n      swap2\n      pop\n        /* \"#utility.yul\":32130:32132   */\n      0x20\n        /* \"#utility.yul\":32119:32128   */\n      dup6\n        /* \"#utility.yul\":32115:32133   */\n      add\n        /* \"#utility.yul\":32102:32133   */\n      swap5\n      pop\n        /* \"#utility.yul\":31976:31980   */\n      0x20\n        /* \"#utility.yul\":31973:31974   */\n      dup2\n        /* \"#utility.yul\":31969:31981   */\n      add\n        /* \"#utility.yul\":31964:31981   */\n      swap1\n      pop\n        /* \"#utility.yul\":31939:32147   */\n      jump(tag_921)\n    tag_923:\n        /* \"#utility.yul\":32175:32181   */\n      dup7\n        /* \"#utility.yul\":32166:32173   */\n      dup4\n        /* \"#utility.yul\":32163:32182   */\n      lt\n        /* \"#utility.yul\":32160:32339   */\n      iszero\n      tag_924\n      jumpi\n        /* \"#utility.yul\":32233:32242   */\n      dup5\n        /* \"#utility.yul\":32228:32231   */\n      dup10\n        /* \"#utility.yul\":32224:32243   */\n      add\n        /* \"#utility.yul\":32218:32244   */\n      mload\n        /* \"#utility.yul\":32276:32324   */\n      tag_925\n        /* \"#utility.yul\":32318:32322   */\n      0x1f\n        /* \"#utility.yul\":32310:32316   */\n      dup10\n        /* \"#utility.yul\":32306:32323   */\n      and\n        /* \"#utility.yul\":32295:32304   */\n      dup3\n        /* \"#utility.yul\":32276:32324   */\n      tag_601\n      jump\t// in\n    tag_925:\n        /* \"#utility.yul\":32268:32274   */\n      dup4\n        /* \"#utility.yul\":32261:32325   */\n      sstore\n        /* \"#utility.yul\":32183:32339   */\n      pop\n        /* \"#utility.yul\":32160:32339   */\n    tag_924:\n        /* \"#utility.yul\":32385:32386   */\n      0x01\n        /* \"#utility.yul\":32381:32382   */\n      0x02\n        /* \"#utility.yul\":32373:32379   */\n      dup9\n        /* \"#utility.yul\":32369:32383   */\n      mul\n        /* \"#utility.yul\":32365:32387   */\n      add\n        /* \"#utility.yul\":32359:32363   */\n      dup9\n        /* \"#utility.yul\":32352:32388   */\n      sstore\n        /* \"#utility.yul\":31787:32398   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":31750:32637   */\n    tag_916:\n      pop\n        /* \"#utility.yul\":31340:32643   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":31248:32643   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32649:32747   */\n    tag_603:\n        /* \"#utility.yul\":32700:32706   */\n      0x00\n        /* \"#utility.yul\":32734:32739   */\n      dup2\n        /* \"#utility.yul\":32728:32740   */\n      mload\n        /* \"#utility.yul\":32718:32740   */\n      swap1\n      pop\n        /* \"#utility.yul\":32649:32747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32753:32900   */\n    tag_604:\n        /* \"#utility.yul\":32854:32865   */\n      0x00\n        /* \"#utility.yul\":32891:32894   */\n      dup2\n        /* \"#utility.yul\":32876:32894   */\n      swap1\n      pop\n        /* \"#utility.yul\":32753:32900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32906:33292   */\n    tag_605:\n        /* \"#utility.yul\":33010:33013   */\n      0x00\n        /* \"#utility.yul\":33038:33076   */\n      tag_929\n        /* \"#utility.yul\":33070:33075   */\n      dup3\n        /* \"#utility.yul\":33038:33076   */\n      tag_603\n      jump\t// in\n    tag_929:\n        /* \"#utility.yul\":33092:33180   */\n      tag_930\n        /* \"#utility.yul\":33173:33179   */\n      dup2\n        /* \"#utility.yul\":33168:33171   */\n      dup6\n        /* \"#utility.yul\":33092:33180   */\n      tag_604\n      jump\t// in\n    tag_930:\n        /* \"#utility.yul\":33085:33180   */\n      swap4\n      pop\n        /* \"#utility.yul\":33189:33254   */\n      tag_931\n        /* \"#utility.yul\":33247:33253   */\n      dup2\n        /* \"#utility.yul\":33242:33245   */\n      dup6\n        /* \"#utility.yul\":33235:33239   */\n      0x20\n        /* \"#utility.yul\":33228:33233   */\n      dup7\n        /* \"#utility.yul\":33224:33240   */\n      add\n        /* \"#utility.yul\":33189:33254   */\n      tag_519\n      jump\t// in\n    tag_931:\n        /* \"#utility.yul\":33279:33285   */\n      dup1\n        /* \"#utility.yul\":33274:33277   */\n      dup5\n        /* \"#utility.yul\":33270:33286   */\n      add\n        /* \"#utility.yul\":33263:33286   */\n      swap2\n      pop\n        /* \"#utility.yul\":33014:33292   */\n      pop\n        /* \"#utility.yul\":32906:33292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33298:33569   */\n    tag_496:\n        /* \"#utility.yul\":33428:33431   */\n      0x00\n        /* \"#utility.yul\":33450:33543   */\n      tag_933\n        /* \"#utility.yul\":33539:33542   */\n      dup3\n        /* \"#utility.yul\":33530:33536   */\n      dup5\n        /* \"#utility.yul\":33450:33543   */\n      tag_605\n      jump\t// in\n    tag_933:\n        /* \"#utility.yul\":33443:33543   */\n      swap2\n      pop\n        /* \"#utility.yul\":33560:33563   */\n      dup2\n        /* \"#utility.yul\":33553:33563   */\n      swap1\n      pop\n        /* \"#utility.yul\":33298:33569   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203ad225a9e9e1fc3e1094eba6d62ba1605e7edef8e480b9aeff9b2aedfd25481e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2792": {
									"entryPoint": null,
									"id": 2792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 87,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 347,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": 422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:456:18",
										"nodeType": "YulBlock",
										"src": "0:456:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "51:57:18",
													"nodeType": "YulBlock",
													"src": "51:57:18",
													"statements": [
														{
															"nativeSrc": "61:41:18",
															"nodeType": "YulAssignment",
															"src": "61:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "76:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "83:18:18",
																		"nodeType": "YulLiteral",
																		"src": "83:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "72:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:18"
																},
																"nativeSrc": "72:30:18",
																"nodeType": "YulFunctionCall",
																"src": "72:30:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "61:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7:101:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "33:5:18",
														"nodeType": "YulTypedName",
														"src": "33:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "43:7:18",
														"nodeType": "YulTypedName",
														"src": "43:7:18",
														"type": ""
													}
												],
												"src": "7:101:18"
											},
											{
												"body": {
													"nativeSrc": "177:52:18",
													"nodeType": "YulBlock",
													"src": "177:52:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "194:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "194:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "216:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "216:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "199:16:18",
																			"nodeType": "YulIdentifier",
																			"src": "199:16:18"
																		},
																		"nativeSrc": "199:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "199:23:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:36:18",
																"nodeType": "YulFunctionCall",
																"src": "187:36:18"
															},
															"nativeSrc": "187:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:36:18"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "114:115:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "165:5:18",
														"nodeType": "YulTypedName",
														"src": "165:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "172:3:18",
														"nodeType": "YulTypedName",
														"src": "172:3:18",
														"type": ""
													}
												],
												"src": "114:115:18"
											},
											{
												"body": {
													"nativeSrc": "331:122:18",
													"nodeType": "YulBlock",
													"src": "331:122:18",
													"statements": [
														{
															"nativeSrc": "341:26:18",
															"nodeType": "YulAssignment",
															"src": "341:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "353:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "353:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "364:2:18",
																		"nodeType": "YulLiteral",
																		"src": "364:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "349:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:18"
																},
																"nativeSrc": "349:18:18",
																"nodeType": "YulFunctionCall",
																"src": "349:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "341:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "341:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "419:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "432:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "443:1:18",
																				"nodeType": "YulLiteral",
																				"src": "443:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "428:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "428:3:18"
																		},
																		"nativeSrc": "428:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "428:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "377:41:18",
																	"nodeType": "YulIdentifier",
																	"src": "377:41:18"
																},
																"nativeSrc": "377:69:18",
																"nodeType": "YulFunctionCall",
																"src": "377:69:18"
															},
															"nativeSrc": "377:69:18",
															"nodeType": "YulExpressionStatement",
															"src": "377:69:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "235:218:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "303:9:18",
														"nodeType": "YulTypedName",
														"src": "303:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "315:6:18",
														"nodeType": "YulTypedName",
														"src": "315:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "326:4:18",
														"nodeType": "YulTypedName",
														"src": "326:4:18",
														"type": ""
													}
												],
												"src": "235:218:18"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5061005261005760201b60201c565b6101c1565b600061006761015b60201b60201c565b90508060000160089054906101000a900460ff16156100b2576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146101585767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff60405161014f91906101a6565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600067ffffffffffffffff82169050919050565b6101a081610183565b82525050565b60006020820190506101bb6000830184610197565b92915050565b608051613a8d6101ea60003960008181611902015281816119570152611b120152613a8d6000f3fe60806040526004361061019c5760003560e01c8063715018a6116100ec578063ad3cb1cc1161008a578063dbac26e911610064578063dbac26e914610583578063dd62ed3e146105c0578063f2fde38b146105fd578063fe575a87146106265761019c565b8063ad3cb1cc14610504578063b119490e1461052f578063c66e4095146105585761019c565b80638da5cb5b116100c65780638da5cb5b1461043457806395d89b411461045f5780639bc289f11461048a578063a9059cbb146104c75761019c565b8063715018a6146103dd5780638456cb59146103f457806388d695b21461040b5761019c565b8063313ce567116101595780634f1ef286116101335780634f1ef2861461032e57806352d1902d1461034a5780635c975abb1461037557806370a08231146103a05761019c565b8063313ce567146102c35780633e579307146102ee5780633f4ba83a146103175761019c565b806306fdde03146101a1578063095ea7b3146101cc578063153b0d1e1461020957806318160ddd1461023257806323b872dd1461025d5780632e0d2a001461029a575b600080fd5b3480156101ad57600080fd5b506101b6610663565b6040516101c3919061290e565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee91906129d8565b610704565b6040516102009190612a33565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b9190612a7a565b610727565b005b34801561023e57600080fd5b50610247610847565b6040516102549190612ac9565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190612ae4565b61085f565b6040516102919190612a33565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc9190612b37565b610aa6565b005b3480156102cf57600080fd5b506102d8610c02565b6040516102e59190612b80565b60405180910390f35b3480156102fa57600080fd5b50610315600480360381019061031091906129d8565b610c0b565b005b34801561032357600080fd5b5061032c610de7565b005b61034860048036038101906103439190612cd0565b610df9565b005b34801561035657600080fd5b5061035f610e18565b60405161036c9190612d45565b60405180910390f35b34801561038157600080fd5b5061038a610e4b565b6040516103979190612a33565b60405180910390f35b3480156103ac57600080fd5b506103c760048036038101906103c29190612b37565b610e61565b6040516103d49190612ac9565b60405180910390f35b3480156103e957600080fd5b506103f2610eb8565b005b34801561040057600080fd5b50610409610ecc565b005b34801561041757600080fd5b50610432600480360381019061042d9190612e16565b610ede565b005b34801561044057600080fd5b50610449611055565b6040516104569190612ea6565b60405180910390f35b34801561046b57600080fd5b5061047461108d565b604051610481919061290e565b60405180910390f35b34801561049657600080fd5b506104b160048036038101906104ac9190612b37565b61112e565b6040516104be9190612ac9565b60405180910390f35b3480156104d357600080fd5b506104ee60048036038101906104e991906129d8565b611146565b6040516104fb9190612a33565b60405180910390f35b34801561051057600080fd5b5061051961138b565b604051610526919061290e565b60405180910390f35b34801561053b57600080fd5b5061055660048036038101906105519190612f62565b6113c4565b005b34801561056457600080fd5b5061056d611582565b60405161057a9190612ea6565b60405180910390f35b34801561058f57600080fd5b506105aa60048036038101906105a59190612b37565b6115a8565b6040516105b79190612a33565b60405180910390f35b3480156105cc57600080fd5b506105e760048036038101906105e29190612fed565b6115c8565b6040516105f49190612ac9565b60405180910390f35b34801561060957600080fd5b50610624600480360381019061061f9190612b37565b61165d565b005b34801561063257600080fd5b5061064d60048036038101906106489190612b37565b6116e3565b60405161065a9190612a33565b60405180910390f35b6060600061066f611739565b90508060030180546106809061305c565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac9061305c565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b505050505091505090565b60008061070f611761565b905061071c818585611769565b600191505092915050565b61072f61177b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361079e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610795906130d9565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd88260405161083b9190612a33565b60405180910390a25050565b600080610852611739565b9050806002015491505090565b6000610869611802565b603560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed9061316b565b60405180910390fd5b603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a906131fd565b60405180910390fd5b600082116109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd90613269565b60405180910390fd5b603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442101580610a5357506000603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b610a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a89906132fb565b60405180910390fd5b610a9d84848461184c565b90509392505050565b610aae61177b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b14906130d9565b60405180910390fd5b610b3c8173ffffffffffffffffffffffffffffffffffffffff1661187b565b610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7290613367565b60405180910390fd5b80603260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad860405160405180910390a250565b60006012905090565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c92906133d3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d01906130d9565b60405180910390fd5b80603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610de35780603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f82604051610dda9190612ac9565b60405180910390a25b5050565b610def61177b565b610df761189e565b565b610e01611900565b610e0a826119e6565b610e1482826119f1565b5050565b6000610e22611b10565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008060009054906101000a900460ff16905090565b600080610e6c611739565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610ec061177b565b610eca6000611b97565b565b610ed461177b565b610edc611c6e565b565b610ee6611802565b818190508484905014610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2590613465565b60405180910390fd5b600084849050905060005b8181101561104d5760356000878784818110610f5857610f57613485565b5b9050602002016020810190610f6d9190612b37565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610ff5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fec90613526565b60405180910390fd5b6110403387878481811061100c5761100b613485565b5b90506020020160208101906110219190612b37565b86868581811061103457611033613485565b5b90506020020135611cd0565b8080600101915050610f39565b505050505050565b600080611060611dc4565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60606000611099611739565b90508060040180546110aa9061305c565b80601f01602080910402602001604051908101604052809291908181526020018280546110d69061305c565b80156111235780601f106110f857610100808354040283529160200191611123565b820191906000526020600020905b81548152906001019060200180831161110657829003601f168201915b505050505091505090565b60346020528060005260406000206000915090505481565b6000611150611802565b603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156111dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d49061316b565b60405180910390fd5b603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561126a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611261906131fd565b60405180910390fd5b600082116112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490613269565b60405180910390fd5b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544210158061133a57506000603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b611379576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611370906132fb565b60405180910390fd5b6113838383611dec565b905092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60006113ce611e0f565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561141c5750825b9050600060018367ffffffffffffffff16148015611451575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561145f575080155b15611496576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156114e65760018560000160086101000a81548160ff0219169083151502179055505b6114f08888611e37565b6114f933611e4d565b611501611e61565b611509611e73565b8560338190555061151c33603354611e7d565b83156115785760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161156f919061359f565b60405180910390a15b5050505050505050565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60356020528060005260406000206000915054906101000a900460ff1681565b6000806115d3611739565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b61166561177b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116d75760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116ce9190612ea6565b60405180910390fd5b6116e081611b97565b50565b6000603560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b6117768383836001611eff565b505050565b611783611761565b73ffffffffffffffffffffffffffffffffffffffff166117a1611055565b73ffffffffffffffffffffffffffffffffffffffff1614611800576117c4611761565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016117f79190612ea6565b60405180910390fd5b565b61180a610e4b565b1561184a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184190613606565b60405180910390fd5b565b600080611857611761565b90506118648582856120e5565b61186f858585611cd0565b60019150509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6118a6612179565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6118e9611761565b6040516118f69190612ea6565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806119ad57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166119946121c2565b73ffffffffffffffffffffffffffffffffffffffff1614155b156119e4576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6119ee61177b565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611a5957506040513d601f19601f82011682018060405250810190611a569190613652565b60015b611a9a57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611a919190612ea6565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611b0157806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611af89190612d45565b60405180910390fd5b611b0b8383612219565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611b95576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611ba1611dc4565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b611c76611802565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611cb9611761565b604051611cc69190612ea6565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d425760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611d399190612ea6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611db45760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611dab9190612ea6565b60405180910390fd5b611dbf83838361228c565b505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600080611df7611761565b9050611e04818585611cd0565b600191505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611e3f6124cb565b611e49828261250b565b5050565b611e556124cb565b611e5e81612548565b50565b611e696124cb565b611e716125ce565b565b611e7b6124cb565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611eef5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611ee69190612ea6565b60405180910390fd5b611efb6000838361228c565b5050565b6000611f09611739565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611f7d5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611f749190612ea6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611fef5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611fe69190612ea6565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081156120de578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516120d59190612ac9565b60405180910390a35b5050505050565b60006120f184846115c8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146121735781811015612163578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161215a9392919061367f565b60405180910390fd5b61217284848484036000611eff565b5b50505050565b612181610e4b565b6121c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121b790613702565b60405180910390fd5b565b60006121f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6125f2565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612222826125fc565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111561227f5761227982826126c9565b50612288565b61228761274d565b5b5050565b6000612296611739565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036122ec57818160020160008282546122e09190613751565b925050819055506123c5565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561237b578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016123729392919061367f565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361241057818160020160008282540392505081905550612460565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124bd9190612ac9565b60405180910390a350505050565b6124d361278a565b612509576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6125136124cb565b600061251d611739565b9050828160030190816125309190613927565b50818160040190816125429190613927565b50505050565b6125506124cb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125c25760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016125b99190612ea6565b60405180910390fd5b6125cb81611b97565b50565b6125d66124cb565b60008060006101000a81548160ff021916908315150217905550565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361265857806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161264f9190612ea6565b60405180910390fd5b806126857f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6125f2565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516126f39190613a40565b600060405180830381855af49150503d806000811461272e576040519150601f19603f3d011682016040523d82523d6000602084013e612733565b606091505b50915091506127438583836127aa565b9250505092915050565b6000341115612788576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000612794611e0f565b60000160089054906101000a900460ff16905090565b6060826127bf576127ba82612839565b612831565b600082511480156127e7575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561282957836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016128209190612ea6565b60405180910390fd5b819050612832565b5b9392505050565b60008151111561284c5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081519050919050565b600082825260208201905092915050565b60005b838110156128b857808201518184015260208101905061289d565b60008484015250505050565b6000601f19601f8301169050919050565b60006128e08261287e565b6128ea8185612889565b93506128fa81856020860161289a565b612903816128c4565b840191505092915050565b6000602082019050818103600083015261292881846128d5565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061296f82612944565b9050919050565b61297f81612964565b811461298a57600080fd5b50565b60008135905061299c81612976565b92915050565b6000819050919050565b6129b5816129a2565b81146129c057600080fd5b50565b6000813590506129d2816129ac565b92915050565b600080604083850312156129ef576129ee61293a565b5b60006129fd8582860161298d565b9250506020612a0e858286016129c3565b9150509250929050565b60008115159050919050565b612a2d81612a18565b82525050565b6000602082019050612a486000830184612a24565b92915050565b612a5781612a18565b8114612a6257600080fd5b50565b600081359050612a7481612a4e565b92915050565b60008060408385031215612a9157612a9061293a565b5b6000612a9f8582860161298d565b9250506020612ab085828601612a65565b9150509250929050565b612ac3816129a2565b82525050565b6000602082019050612ade6000830184612aba565b92915050565b600080600060608486031215612afd57612afc61293a565b5b6000612b0b8682870161298d565b9350506020612b1c8682870161298d565b9250506040612b2d868287016129c3565b9150509250925092565b600060208284031215612b4d57612b4c61293a565b5b6000612b5b8482850161298d565b91505092915050565b600060ff82169050919050565b612b7a81612b64565b82525050565b6000602082019050612b956000830184612b71565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612bdd826128c4565b810181811067ffffffffffffffff82111715612bfc57612bfb612ba5565b5b80604052505050565b6000612c0f612930565b9050612c1b8282612bd4565b919050565b600067ffffffffffffffff821115612c3b57612c3a612ba5565b5b612c44826128c4565b9050602081019050919050565b82818337600083830152505050565b6000612c73612c6e84612c20565b612c05565b905082815260208101848484011115612c8f57612c8e612ba0565b5b612c9a848285612c51565b509392505050565b600082601f830112612cb757612cb6612b9b565b5b8135612cc7848260208601612c60565b91505092915050565b60008060408385031215612ce757612ce661293a565b5b6000612cf58582860161298d565b925050602083013567ffffffffffffffff811115612d1657612d1561293f565b5b612d2285828601612ca2565b9150509250929050565b6000819050919050565b612d3f81612d2c565b82525050565b6000602082019050612d5a6000830184612d36565b92915050565b600080fd5b600080fd5b60008083601f840112612d8057612d7f612b9b565b5b8235905067ffffffffffffffff811115612d9d57612d9c612d60565b5b602083019150836020820283011115612db957612db8612d65565b5b9250929050565b60008083601f840112612dd657612dd5612b9b565b5b8235905067ffffffffffffffff811115612df357612df2612d60565b5b602083019150836020820283011115612e0f57612e0e612d65565b5b9250929050565b60008060008060408587031215612e3057612e2f61293a565b5b600085013567ffffffffffffffff811115612e4e57612e4d61293f565b5b612e5a87828801612d6a565b9450945050602085013567ffffffffffffffff811115612e7d57612e7c61293f565b5b612e8987828801612dc0565b925092505092959194509250565b612ea081612964565b82525050565b6000602082019050612ebb6000830184612e97565b92915050565b600067ffffffffffffffff821115612edc57612edb612ba5565b5b612ee5826128c4565b9050602081019050919050565b6000612f05612f0084612ec1565b612c05565b905082815260208101848484011115612f2157612f20612ba0565b5b612f2c848285612c51565b509392505050565b600082601f830112612f4957612f48612b9b565b5b8135612f59848260208601612ef2565b91505092915050565b600080600060608486031215612f7b57612f7a61293a565b5b600084013567ffffffffffffffff811115612f9957612f9861293f565b5b612fa586828701612f34565b935050602084013567ffffffffffffffff811115612fc657612fc561293f565b5b612fd286828701612f34565b9250506040612fe3868287016129c3565b9150509250925092565b600080604083850312156130045761300361293a565b5b60006130128582860161298d565b92505060206130238582860161298d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061307457607f821691505b6020821081036130875761308661302d565b5b50919050565b7f4e756c6c20416464726573730000000000000000000000000000000000000000600082015250565b60006130c3600c83612889565b91506130ce8261308d565b602082019050919050565b600060208201905081810360008301526130f2816130b6565b9050919050565b7f5472616e73666572206661696c65643a2053656e64657220697320626c61636b60008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b6000613155602683612889565b9150613160826130f9565b604082019050919050565b6000602082019050818103600083015261318481613148565b9050919050565b7f5472616e73666572206661696c65643a20526563697069656e7420697320626c60008201527f61636b6c69737465640000000000000000000000000000000000000000000000602082015250565b60006131e7602983612889565b91506131f28261318b565b604082019050919050565b60006020820190508181036000830152613216816131da565b9050919050565b7f416d6f756e742073686f756c646e2774206265207a65726f0000000000000000600082015250565b6000613253601883612889565b915061325e8261321d565b602082019050919050565b6000602082019050818103600083015261328281613246565b9050919050565b7f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006132e5602283612889565b91506132f082613289565b604082019050919050565b60006020820190508181036000830152613314816132d8565b9050919050565b7f41646472657373206973206e6f74206120636f6e747261637400000000000000600082015250565b6000613351601983612889565b915061335c8261331b565b602082019050919050565b6000602082019050818103600083015261338081613344565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b60006133bd600e83612889565b91506133c882613387565b602082019050919050565b600060208201905081810360008301526133ec816133b0565b9050919050565b7f42617463685472616e73666572206661696c65643a204d69736d61746368656460008201527f2061727261797300000000000000000000000000000000000000000000000000602082015250565b600061344f602783612889565b915061345a826133f3565b604082019050919050565b6000602082019050818103600083015261347e81613442565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f42617463685472616e73666572206661696c65643a20526563697069656e742060008201527f697320626c61636b6c6973746564000000000000000000000000000000000000602082015250565b6000613510602e83612889565b915061351b826134b4565b604082019050919050565b6000602082019050818103600083015261353f81613503565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061358961358461357f84613546565b613564565b613550565b9050919050565b6135998161356e565b82525050565b60006020820190506135b46000830184613590565b92915050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006135f0601083612889565b91506135fb826135ba565b602082019050919050565b6000602082019050818103600083015261361f816135e3565b9050919050565b61362f81612d2c565b811461363a57600080fd5b50565b60008151905061364c81613626565b92915050565b6000602082840312156136685761366761293a565b5b60006136768482850161363d565b91505092915050565b60006060820190506136946000830186612e97565b6136a16020830185612aba565b6136ae6040830184612aba565b949350505050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006136ec601483612889565b91506136f7826136b6565b602082019050919050565b6000602082019050818103600083015261371b816136df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061375c826129a2565b9150613767836129a2565b925082820190508082111561377f5761377e613722565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026137e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826137aa565b6137f186836137aa565b95508019841693508086168417925050509392505050565b600061382461381f61381a846129a2565b613564565b6129a2565b9050919050565b6000819050919050565b61383e83613809565b61385261384a8261382b565b8484546137b7565b825550505050565b600090565b61386761385a565b613872818484613835565b505050565b5b818110156138965761388b60008261385f565b600181019050613878565b5050565b601f8211156138db576138ac81613785565b6138b58461379a565b810160208510156138c4578190505b6138d86138d08561379a565b830182613877565b50505b505050565b600082821c905092915050565b60006138fe600019846008026138e0565b1980831691505092915050565b600061391783836138ed565b9150826002028217905092915050565b6139308261287e565b67ffffffffffffffff81111561394957613948612ba5565b5b613953825461305c565b61395e82828561389a565b600060209050601f831160018114613991576000841561397f578287015190505b613989858261390b565b8655506139f1565b601f19841661399f86613785565b60005b828110156139c7578489015182556001820191506020850194506020810190506139a2565b868310156139e457848901516139e0601f8916826138ed565b8355505b6001600288020188555050505b505050505050565b600081519050919050565b600081905092915050565b6000613a1a826139f9565b613a248185613a04565b9350613a3481856020860161289a565b80840191505092915050565b6000613a4c8284613a0f565b91508190509291505056fea26469706673582212203ad225a9e9e1fc3e1094eba6d62ba1605e7edef8e480b9aeff9b2aedfd25481e64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52 PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67 PUSH2 0x15B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x158 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A0 DUP2 PUSH2 0x183 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3A8D PUSH2 0x1EA PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1902 ADD MSTORE DUP2 DUP2 PUSH2 0x1957 ADD MSTORE PUSH2 0x1B12 ADD MSTORE PUSH2 0x3A8D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDBAC26E9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x626 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB119490E EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x558 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C7 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x40B JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A0 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x3E579307 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x317 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x29A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x29D8 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x2A7A JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x2AE4 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x29D8 JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0xDE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2CD0 JUMP JUMPDEST PUSH2 0xDF9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0xEB8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0xECC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x2E16 JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x449 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x29D8 JUMP JUMPDEST PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x519 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x556 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x2F62 JUMP JUMPDEST PUSH2 0x13C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56D PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x2FED JUMP JUMPDEST PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x624 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x165D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x66F PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x680 SWAP1 PUSH2 0x305C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AC SWAP1 PUSH2 0x305C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70F PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP PUSH2 0x71C DUP2 DUP6 DUP6 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x72F PUSH2 0x177B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x795 SWAP1 PUSH2 0x30D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x83B SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x852 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97A SWAP1 PUSH2 0x31FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP1 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0xA53 JUMPI POP PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0xA92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA89 SWAP1 PUSH2 0x32FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9D DUP5 DUP5 DUP5 PUSH2 0x184C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAAE PUSH2 0x177B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB14 SWAP1 PUSH2 0x30D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB3C DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x187B JUMP JUMPDEST PUSH2 0xB7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB72 SWAP1 PUSH2 0x3367 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x32 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC92 SWAP1 PUSH2 0x33D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP1 PUSH2 0x30D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xDE3 JUMPI DUP1 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F DUP3 PUSH1 0x40 MLOAD PUSH2 0xDDA SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xDEF PUSH2 0x177B JUMP JUMPDEST PUSH2 0xDF7 PUSH2 0x189E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE01 PUSH2 0x1900 JUMP JUMPDEST PUSH2 0xE0A DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0xE14 DUP3 DUP3 PUSH2 0x19F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE22 PUSH2 0x1B10 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE6C PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC0 PUSH2 0x177B JUMP JUMPDEST PUSH2 0xECA PUSH1 0x0 PUSH2 0x1B97 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xED4 PUSH2 0x177B JUMP JUMPDEST PUSH2 0xEDC PUSH2 0x1C6E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEE6 PUSH2 0x1802 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF25 SWAP1 PUSH2 0x3465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x104D JUMPI PUSH1 0x35 PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xF58 JUMPI PUSH2 0xF57 PUSH2 0x3485 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF6D SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEC SWAP1 PUSH2 0x3526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1040 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x100C JUMPI PUSH2 0x100B PUSH2 0x3485 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1021 SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x1034 JUMPI PUSH2 0x1033 PUSH2 0x3485 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1CD0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF39 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1060 PUSH2 0x1DC4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1099 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x10AA SWAP1 PUSH2 0x305C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10D6 SWAP1 PUSH2 0x305C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1123 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1123 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1106 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1150 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D4 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x126A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1261 SWAP1 PUSH2 0x31FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x133A JUMPI POP PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1379 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1370 SWAP1 PUSH2 0x32FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1383 DUP4 DUP4 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CE PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x141C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1451 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x145F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1496 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x14E6 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x14F0 DUP9 DUP9 PUSH2 0x1E37 JUMP JUMPDEST PUSH2 0x14F9 CALLER PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x1501 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x1509 PUSH2 0x1E73 JUMP JUMPDEST DUP6 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH2 0x151C CALLER PUSH1 0x33 SLOAD PUSH2 0x1E7D JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1578 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x156F SWAP2 SWAP1 PUSH2 0x359F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15D3 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1665 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16D7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CE SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E0 DUP2 PUSH2 0x1B97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1776 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1783 PUSH2 0x1761 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17A1 PUSH2 0x1055 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1800 JUMPI PUSH2 0x17C4 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F7 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x180A PUSH2 0xE4B JUMP JUMPDEST ISZERO PUSH2 0x184A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1841 SWAP1 PUSH2 0x3606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1857 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP PUSH2 0x1864 DUP6 DUP3 DUP6 PUSH2 0x20E5 JUMP JUMPDEST PUSH2 0x186F DUP6 DUP6 DUP6 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A6 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x18E9 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F6 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x19AD JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1994 PUSH2 0x21C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x19EE PUSH2 0x177B JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A59 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A56 SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A9A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A91 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x1B01 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF8 SWAP2 SWAP1 PUSH2 0x2D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B0B DUP4 DUP4 PUSH2 0x2219 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B95 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA1 PUSH2 0x1DC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1CB9 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC6 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D42 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D39 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DB4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAB SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DBF DUP4 DUP4 DUP4 PUSH2 0x228C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1DF7 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E04 DUP2 DUP6 DUP6 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E3F PUSH2 0x24CB JUMP JUMPDEST PUSH2 0x1E49 DUP3 DUP3 PUSH2 0x250B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E55 PUSH2 0x24CB JUMP JUMPDEST PUSH2 0x1E5E DUP2 PUSH2 0x2548 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E69 PUSH2 0x24CB JUMP JUMPDEST PUSH2 0x1E71 PUSH2 0x25CE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E7B PUSH2 0x24CB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EEF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE6 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EFB PUSH1 0x0 DUP4 DUP4 PUSH2 0x228C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F09 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F7D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F74 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FEF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE6 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x20DE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x20D5 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F1 DUP5 DUP5 PUSH2 0x15C8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x2173 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2163 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2172 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1EFF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2181 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x21C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B7 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x25F2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2222 DUP3 PUSH2 0x25FC JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x227F JUMPI PUSH2 0x2279 DUP3 DUP3 PUSH2 0x26C9 JUMP JUMPDEST POP PUSH2 0x2288 JUMP JUMPDEST PUSH2 0x2287 PUSH2 0x274D JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2296 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22EC JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x22E0 SWAP2 SWAP1 PUSH2 0x3751 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x237B JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2372 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2410 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2460 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x24BD SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x24D3 PUSH2 0x278A JUMP JUMPDEST PUSH2 0x2509 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2513 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251D PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2530 SWAP2 SWAP1 PUSH2 0x3927 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2542 SWAP2 SWAP1 PUSH2 0x3927 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2550 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25C2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B9 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25CB DUP2 PUSH2 0x1B97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25D6 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2658 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x264F SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2685 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x25F2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x26F3 SWAP2 SWAP1 PUSH2 0x3A40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x272E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2743 DUP6 DUP4 DUP4 PUSH2 0x27AA JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2788 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2794 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x27BF JUMPI PUSH2 0x27BA DUP3 PUSH2 0x2839 JUMP JUMPDEST PUSH2 0x2831 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x27E7 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2829 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2820 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2832 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x284C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28B8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x289D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E0 DUP3 PUSH2 0x287E JUMP JUMPDEST PUSH2 0x28EA DUP2 DUP6 PUSH2 0x2889 JUMP JUMPDEST SWAP4 POP PUSH2 0x28FA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x289A JUMP JUMPDEST PUSH2 0x2903 DUP2 PUSH2 0x28C4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2928 DUP2 DUP5 PUSH2 0x28D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296F DUP3 PUSH2 0x2944 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x297F DUP2 PUSH2 0x2964 JUMP JUMPDEST DUP2 EQ PUSH2 0x298A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x299C DUP2 PUSH2 0x2976 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B5 DUP2 PUSH2 0x29A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29D2 DUP2 PUSH2 0x29AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29EF JUMPI PUSH2 0x29EE PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29FD DUP6 DUP3 DUP7 ADD PUSH2 0x298D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A0E DUP6 DUP3 DUP7 ADD PUSH2 0x29C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A2D DUP2 PUSH2 0x2A18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A57 DUP2 PUSH2 0x2A18 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A74 DUP2 PUSH2 0x2A4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A91 JUMPI PUSH2 0x2A90 PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A9F DUP6 DUP3 DUP7 ADD PUSH2 0x298D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AB0 DUP6 DUP3 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC3 DUP2 PUSH2 0x29A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2ADE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ABA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AFD JUMPI PUSH2 0x2AFC PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B0B DUP7 DUP3 DUP8 ADD PUSH2 0x298D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B1C DUP7 DUP3 DUP8 ADD PUSH2 0x298D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B2D DUP7 DUP3 DUP8 ADD PUSH2 0x29C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B4D JUMPI PUSH2 0x2B4C PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B5B DUP5 DUP3 DUP6 ADD PUSH2 0x298D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B7A DUP2 PUSH2 0x2B64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B95 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2BDD DUP3 PUSH2 0x28C4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2BFC JUMPI PUSH2 0x2BFB PUSH2 0x2BA5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0F PUSH2 0x2930 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C1B DUP3 DUP3 PUSH2 0x2BD4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C3B JUMPI PUSH2 0x2C3A PUSH2 0x2BA5 JUMP JUMPDEST JUMPDEST PUSH2 0x2C44 DUP3 PUSH2 0x28C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C73 PUSH2 0x2C6E DUP5 PUSH2 0x2C20 JUMP JUMPDEST PUSH2 0x2C05 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C8F JUMPI PUSH2 0x2C8E PUSH2 0x2BA0 JUMP JUMPDEST JUMPDEST PUSH2 0x2C9A DUP5 DUP3 DUP6 PUSH2 0x2C51 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CB7 JUMPI PUSH2 0x2CB6 PUSH2 0x2B9B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2CC7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE7 JUMPI PUSH2 0x2CE6 PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CF5 DUP6 DUP3 DUP7 ADD PUSH2 0x298D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D16 JUMPI PUSH2 0x2D15 PUSH2 0x293F JUMP JUMPDEST JUMPDEST PUSH2 0x2D22 DUP6 DUP3 DUP7 ADD PUSH2 0x2CA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D3F DUP2 PUSH2 0x2D2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2D80 JUMPI PUSH2 0x2D7F PUSH2 0x2B9B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D9D JUMPI PUSH2 0x2D9C PUSH2 0x2D60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2DB9 JUMPI PUSH2 0x2DB8 PUSH2 0x2D65 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2DD6 JUMPI PUSH2 0x2DD5 PUSH2 0x2B9B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DF3 JUMPI PUSH2 0x2DF2 PUSH2 0x2D60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2E0F JUMPI PUSH2 0x2E0E PUSH2 0x2D65 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E30 JUMPI PUSH2 0x2E2F PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E4E JUMPI PUSH2 0x2E4D PUSH2 0x293F JUMP JUMPDEST JUMPDEST PUSH2 0x2E5A DUP8 DUP3 DUP9 ADD PUSH2 0x2D6A JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E7D JUMPI PUSH2 0x2E7C PUSH2 0x293F JUMP JUMPDEST JUMPDEST PUSH2 0x2E89 DUP8 DUP3 DUP9 ADD PUSH2 0x2DC0 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2EA0 DUP2 PUSH2 0x2964 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2EDC JUMPI PUSH2 0x2EDB PUSH2 0x2BA5 JUMP JUMPDEST JUMPDEST PUSH2 0x2EE5 DUP3 PUSH2 0x28C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F05 PUSH2 0x2F00 DUP5 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x2C05 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2F21 JUMPI PUSH2 0x2F20 PUSH2 0x2BA0 JUMP JUMPDEST JUMPDEST PUSH2 0x2F2C DUP5 DUP3 DUP6 PUSH2 0x2C51 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F49 JUMPI PUSH2 0x2F48 PUSH2 0x2B9B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2F59 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2EF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F7B JUMPI PUSH2 0x2F7A PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F99 JUMPI PUSH2 0x2F98 PUSH2 0x293F JUMP JUMPDEST JUMPDEST PUSH2 0x2FA5 DUP7 DUP3 DUP8 ADD PUSH2 0x2F34 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FC6 JUMPI PUSH2 0x2FC5 PUSH2 0x293F JUMP JUMPDEST JUMPDEST PUSH2 0x2FD2 DUP7 DUP3 DUP8 ADD PUSH2 0x2F34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2FE3 DUP7 DUP3 DUP8 ADD PUSH2 0x29C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3004 JUMPI PUSH2 0x3003 PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3012 DUP6 DUP3 DUP7 ADD PUSH2 0x298D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3023 DUP6 DUP3 DUP7 ADD PUSH2 0x298D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3074 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3087 JUMPI PUSH2 0x3086 PUSH2 0x302D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756C6C20416464726573730000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C3 PUSH1 0xC DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x30CE DUP3 PUSH2 0x308D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30F2 DUP2 PUSH2 0x30B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C69737465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3155 PUSH1 0x26 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x3160 DUP3 PUSH2 0x30F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3184 DUP2 PUSH2 0x3148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61636B6C69737465640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E7 PUSH1 0x29 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x31F2 DUP3 PUSH2 0x318B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3216 DUP2 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C646E2774206265207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3253 PUSH1 0x18 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x325E DUP3 PUSH2 0x321D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3282 DUP2 PUSH2 0x3246 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E5 PUSH1 0x22 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F0 DUP3 PUSH2 0x3289 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3314 DUP2 PUSH2 0x32D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206973206E6F74206120636F6E747261637400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3351 PUSH1 0x19 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x335C DUP3 PUSH2 0x331B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3380 DUP2 PUSH2 0x3344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33BD PUSH1 0xE DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x33C8 DUP3 PUSH2 0x3387 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33EC DUP2 PUSH2 0x33B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061727261797300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344F PUSH1 0x27 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x345A DUP3 PUSH2 0x33F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x347E DUP2 PUSH2 0x3442 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697320626C61636B6C6973746564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3510 PUSH1 0x2E DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x351B DUP3 PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x353F DUP2 PUSH2 0x3503 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3589 PUSH2 0x3584 PUSH2 0x357F DUP5 PUSH2 0x3546 JUMP JUMPDEST PUSH2 0x3564 JUMP JUMPDEST PUSH2 0x3550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3599 DUP2 PUSH2 0x356E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F0 PUSH1 0x10 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x35FB DUP3 PUSH2 0x35BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x361F DUP2 PUSH2 0x35E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x362F DUP2 PUSH2 0x2D2C JUMP JUMPDEST DUP2 EQ PUSH2 0x363A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x364C DUP2 PUSH2 0x3626 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3668 JUMPI PUSH2 0x3667 PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3676 DUP5 DUP3 DUP6 ADD PUSH2 0x363D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3694 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2E97 JUMP JUMPDEST PUSH2 0x36A1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2ABA JUMP JUMPDEST PUSH2 0x36AE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2ABA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36EC PUSH1 0x14 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x36F7 DUP3 PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x371B DUP2 PUSH2 0x36DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x375C DUP3 PUSH2 0x29A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3767 DUP4 PUSH2 0x29A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x377F JUMPI PUSH2 0x377E PUSH2 0x3722 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x37E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x37AA JUMP JUMPDEST PUSH2 0x37F1 DUP7 DUP4 PUSH2 0x37AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3824 PUSH2 0x381F PUSH2 0x381A DUP5 PUSH2 0x29A2 JUMP JUMPDEST PUSH2 0x3564 JUMP JUMPDEST PUSH2 0x29A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x383E DUP4 PUSH2 0x3809 JUMP JUMPDEST PUSH2 0x3852 PUSH2 0x384A DUP3 PUSH2 0x382B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x37B7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3867 PUSH2 0x385A JUMP JUMPDEST PUSH2 0x3872 DUP2 DUP5 DUP5 PUSH2 0x3835 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3896 JUMPI PUSH2 0x388B PUSH1 0x0 DUP3 PUSH2 0x385F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3878 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x38DB JUMPI PUSH2 0x38AC DUP2 PUSH2 0x3785 JUMP JUMPDEST PUSH2 0x38B5 DUP5 PUSH2 0x379A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x38C4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x38D8 PUSH2 0x38D0 DUP6 PUSH2 0x379A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3877 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38FE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x38E0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3917 DUP4 DUP4 PUSH2 0x38ED JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3930 DUP3 PUSH2 0x287E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3949 JUMPI PUSH2 0x3948 PUSH2 0x2BA5 JUMP JUMPDEST JUMPDEST PUSH2 0x3953 DUP3 SLOAD PUSH2 0x305C JUMP JUMPDEST PUSH2 0x395E DUP3 DUP3 DUP6 PUSH2 0x389A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3991 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x397F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3989 DUP6 DUP3 PUSH2 0x390B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x39F1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x399F DUP7 PUSH2 0x3785 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39C7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39A2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39E4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x39E0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x38ED JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A1A DUP3 PUSH2 0x39F9 JUMP JUMPDEST PUSH2 0x3A24 DUP2 DUP6 PUSH2 0x3A04 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A34 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x289A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4C DUP3 DUP5 PUSH2 0x3A0F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xD2 0x25 0xA9 0xE9 0xE1 0xFC RETURNDATACOPY LT SWAP5 0xEB 0xA6 0xD6 0x2B LOG1 PUSH1 0x5E PUSH31 0xDEF8E480B9AEFF9B2AEDFD25481E64736F6C634300081A0033000000000000 ",
							"sourceMap": "445:4024:17:-:0;;;1171:4:2;1128:48;;;;;;;;;1087:105:17;;;;;;;;;;1111:22;:20;;;:22;;:::i;:::-;445:4024;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:18:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;445:4024:17:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": 5003,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_826": {
									"entryPoint": 7735,
									"id": 826,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_854": {
									"entryPoint": 9483,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 7757,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 9544,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_662": {
									"entryPoint": 7777,
									"id": 662,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_672": {
									"entryPoint": 9678,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_502": {
									"entryPoint": 7795,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1258": {
									"entryPoint": 5993,
									"id": 1258,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1326": {
									"entryPoint": 7935,
									"id": 1326,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_3166": {
									"entryPoint": 6630,
									"id": 3166,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 9419,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_2212": {
									"entryPoint": 10061,
									"id": 2212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 6928,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 6011,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 6400,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_810": {
									"entryPoint": 5945,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 7695,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 7620,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 10122,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1207": {
									"entryPoint": 7805,
									"id": 1207,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1733": {
									"entryPoint": 5985,
									"id": 1733,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_736": {
									"entryPoint": 7278,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_709": {
									"entryPoint": 6146,
									"id": 709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_720": {
									"entryPoint": 8569,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2585": {
									"entryPoint": 10297,
									"id": 2585,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1992": {
									"entryPoint": 9724,
									"id": 1992,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1374": {
									"entryPoint": 8421,
									"id": 1374,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 7063,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1082": {
									"entryPoint": 7376,
									"id": 1082,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_752": {
									"entryPoint": 6302,
									"id": 752,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_1174": {
									"entryPoint": 8844,
									"id": 1174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 6641,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_979": {
									"entryPoint": 5576,
									"id": 979,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1003": {
									"entryPoint": 1796,
									"id": 1003,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_931": {
									"entryPoint": 3681,
									"id": 931,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchTransfer_3157": {
									"entryPoint": 3806,
									"id": 3157,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@blacklisted_2762": {
									"entryPoint": 5544,
									"id": 2762,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_895": {
									"entryPoint": 3074,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_2503": {
									"entryPoint": 9929,
									"id": 2503,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2643": {
									"entryPoint": 9714,
									"id": 2643,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1965": {
									"entryPoint": 8642,
									"id": 1965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@icoContract_2749": {
									"entryPoint": 5506,
									"id": 2749,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_2830": {
									"entryPoint": 5060,
									"id": 2830,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isBlacklisted_2941": {
									"entryPoint": 5859,
									"id": 2941,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_1393": {
									"entryPoint": 6267,
									"id": 1393,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockedUntil_2758": {
									"entryPoint": 4398,
									"id": 2758,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_870": {
									"entryPoint": 1635,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 4181,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2851": {
									"entryPoint": 3788,
									"id": 2851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_697": {
									"entryPoint": 3659,
									"id": 697,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_520": {
									"entryPoint": 3608,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3768,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlacklist_2929": {
									"entryPoint": 1831,
									"id": 2929,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setICOContract_3096": {
									"entryPoint": 2726,
									"id": 3096,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockup_2898": {
									"entryPoint": 3083,
									"id": 2898,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_886": {
									"entryPoint": 4237,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_911": {
									"entryPoint": 2119,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1035": {
									"entryPoint": 6220,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_3063": {
									"entryPoint": 2143,
									"id": 3063,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 5725,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_3002": {
									"entryPoint": 4422,
									"id": 3002,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_955": {
									"entryPoint": 7660,
									"id": 955,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_2860": {
									"entryPoint": 3559,
									"id": 2860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_2028": {
									"entryPoint": 8729,
									"id": 2028,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 3577,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2543": {
									"entryPoint": 10154,
									"id": 2543,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 11360,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 12018,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 10637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 11626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 11712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 10853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 13885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 11426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 12084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 12269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 11472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 11798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 13906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 12130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 11574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 13712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 11121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 14912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13951,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 11589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 13727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 11269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 10544,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 11296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 11969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 14213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 14841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 10366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 14161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 14490,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 10596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 11564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 13638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 13648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 11108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 14455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 13678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 14345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 14631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 11345,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10394,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 14234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 12380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 14603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 11220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 13668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 14573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 14114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 12333,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 13445,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 14379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 11616,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 11163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 11621,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 11168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 10559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 14250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 14560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 14431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 14006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96": {
									"entryPoint": 12829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f": {
									"entryPoint": 13299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc": {
									"entryPoint": 13492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 13754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e": {
									"entryPoint": 12937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940": {
									"entryPoint": 12683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed": {
									"entryPoint": 13083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4": {
									"entryPoint": 12537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5": {
									"entryPoint": 12429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 13191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 14263,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 14389,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 13862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 14426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:33572:18",
										"nodeType": "YulBlock",
										"src": "0:33572:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:18",
													"nodeType": "YulBlock",
													"src": "66:40:18",
													"statements": [
														{
															"nativeSrc": "77:22:18",
															"nodeType": "YulAssignment",
															"src": "77:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:18"
																},
																"nativeSrc": "87:12:18",
																"nodeType": "YulFunctionCall",
																"src": "87:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:18",
														"nodeType": "YulTypedName",
														"src": "49:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:18",
														"nodeType": "YulTypedName",
														"src": "59:6:18",
														"type": ""
													}
												],
												"src": "7:99:18"
											},
											{
												"body": {
													"nativeSrc": "208:73:18",
													"nodeType": "YulBlock",
													"src": "208:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:18"
																},
																"nativeSrc": "218:19:18",
																"nodeType": "YulFunctionCall",
																"src": "218:19:18"
															},
															"nativeSrc": "218:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:18"
														},
														{
															"nativeSrc": "246:29:18",
															"nodeType": "YulAssignment",
															"src": "246:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:18",
																		"nodeType": "YulLiteral",
																		"src": "270:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:18"
																},
																"nativeSrc": "261:14:18",
																"nodeType": "YulFunctionCall",
																"src": "261:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:18",
														"nodeType": "YulTypedName",
														"src": "180:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:18",
														"nodeType": "YulTypedName",
														"src": "185:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:18",
														"nodeType": "YulTypedName",
														"src": "196:11:18",
														"type": ""
													}
												],
												"src": "112:169:18"
											},
											{
												"body": {
													"nativeSrc": "349:186:18",
													"nodeType": "YulBlock",
													"src": "349:186:18",
													"statements": [
														{
															"nativeSrc": "360:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:18",
																"nodeType": "YulLiteral",
																"src": "369:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:18",
																	"nodeType": "YulTypedName",
																	"src": "364:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:18",
																"nodeType": "YulBlock",
																"src": "429:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:18"
																					},
																					"nativeSrc": "450:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:18"
																							},
																							"nativeSrc": "469:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:18"
																					},
																					"nativeSrc": "463:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:18"
																			},
																			"nativeSrc": "443:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:18"
																		},
																		"nativeSrc": "443:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:18"
																},
																"nativeSrc": "387:13:18",
																"nodeType": "YulFunctionCall",
																"src": "387:13:18"
															},
															"nativeSrc": "379:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:18",
																"nodeType": "YulBlock",
																"src": "401:19:18",
																"statements": [
																	{
																		"nativeSrc": "403:15:18",
																		"nodeType": "YulAssignment",
																		"src": "403:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:18",
																					"nodeType": "YulLiteral",
																					"src": "415:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:18"
																			},
																			"nativeSrc": "408:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:18",
																"nodeType": "YulBlock",
																"src": "383:3:18",
																"statements": []
															},
															"src": "379:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:18"
																		},
																		"nativeSrc": "508:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:18",
																		"nodeType": "YulLiteral",
																		"src": "526:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:18"
																},
																"nativeSrc": "501:27:18",
																"nodeType": "YulFunctionCall",
																"src": "501:27:18"
															},
															"nativeSrc": "501:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:18",
														"nodeType": "YulTypedName",
														"src": "331:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:18",
														"nodeType": "YulTypedName",
														"src": "336:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:18",
														"nodeType": "YulTypedName",
														"src": "341:6:18",
														"type": ""
													}
												],
												"src": "287:248:18"
											},
											{
												"body": {
													"nativeSrc": "589:54:18",
													"nodeType": "YulBlock",
													"src": "589:54:18",
													"statements": [
														{
															"nativeSrc": "599:38:18",
															"nodeType": "YulAssignment",
															"src": "599:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:18",
																				"nodeType": "YulLiteral",
																				"src": "624:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:18"
																		},
																		"nativeSrc": "613:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:18",
																				"nodeType": "YulLiteral",
																				"src": "633:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:18"
																		},
																		"nativeSrc": "629:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:18"
																},
																"nativeSrc": "609:28:18",
																"nodeType": "YulFunctionCall",
																"src": "609:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:18",
														"nodeType": "YulTypedName",
														"src": "572:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:18",
														"nodeType": "YulTypedName",
														"src": "582:6:18",
														"type": ""
													}
												],
												"src": "541:102:18"
											},
											{
												"body": {
													"nativeSrc": "741:285:18",
													"nodeType": "YulBlock",
													"src": "741:285:18",
													"statements": [
														{
															"nativeSrc": "751:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:18"
																},
																"nativeSrc": "765:39:18",
																"nodeType": "YulFunctionCall",
																"src": "765:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:18",
																	"nodeType": "YulTypedName",
																	"src": "755:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:18",
															"nodeType": "YulAssignment",
															"src": "813:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:18"
																},
																"nativeSrc": "820:71:18",
																"nodeType": "YulFunctionCall",
																"src": "820:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:18",
																				"nodeType": "YulLiteral",
																				"src": "946:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:18"
																		},
																		"nativeSrc": "935:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:18"
																},
																"nativeSrc": "900:65:18",
																"nodeType": "YulFunctionCall",
																"src": "900:65:18"
															},
															"nativeSrc": "900:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:18"
														},
														{
															"nativeSrc": "974:46:18",
															"nodeType": "YulAssignment",
															"src": "974:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:18"
																		},
																		"nativeSrc": "990:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:18"
																},
																"nativeSrc": "981:39:18",
																"nodeType": "YulFunctionCall",
																"src": "981:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:18",
														"nodeType": "YulTypedName",
														"src": "722:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:18",
														"nodeType": "YulTypedName",
														"src": "729:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:18",
														"nodeType": "YulTypedName",
														"src": "737:3:18",
														"type": ""
													}
												],
												"src": "649:377:18"
											},
											{
												"body": {
													"nativeSrc": "1150:195:18",
													"nodeType": "YulBlock",
													"src": "1150:195:18",
													"statements": [
														{
															"nativeSrc": "1160:26:18",
															"nodeType": "YulAssignment",
															"src": "1160:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:18"
																},
																"nativeSrc": "1168:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:18"
																		},
																		"nativeSrc": "1203:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:18"
																		},
																		"nativeSrc": "1222:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:18"
																},
																"nativeSrc": "1196:47:18",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:18"
															},
															"nativeSrc": "1196:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:18"
														},
														{
															"nativeSrc": "1252:86:18",
															"nodeType": "YulAssignment",
															"src": "1252:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:18"
																},
																"nativeSrc": "1260:78:18",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:18",
														"nodeType": "YulTypedName",
														"src": "1122:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:18",
														"nodeType": "YulTypedName",
														"src": "1134:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:18",
														"nodeType": "YulTypedName",
														"src": "1145:4:18",
														"type": ""
													}
												],
												"src": "1032:313:18"
											},
											{
												"body": {
													"nativeSrc": "1391:35:18",
													"nodeType": "YulBlock",
													"src": "1391:35:18",
													"statements": [
														{
															"nativeSrc": "1401:19:18",
															"nodeType": "YulAssignment",
															"src": "1401:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1411:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:18"
																},
																"nativeSrc": "1411:9:18",
																"nodeType": "YulFunctionCall",
																"src": "1411:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1401:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1351:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1384:6:18",
														"nodeType": "YulTypedName",
														"src": "1384:6:18",
														"type": ""
													}
												],
												"src": "1351:75:18"
											},
											{
												"body": {
													"nativeSrc": "1521:28:18",
													"nodeType": "YulBlock",
													"src": "1521:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1531:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:18"
																},
																"nativeSrc": "1531:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1531:12:18"
															},
															"nativeSrc": "1531:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "1531:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1432:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1432:117:18"
											},
											{
												"body": {
													"nativeSrc": "1644:28:18",
													"nodeType": "YulBlock",
													"src": "1644:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:18"
																},
																"nativeSrc": "1654:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:18"
															},
															"nativeSrc": "1654:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1555:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:18"
											},
											{
												"body": {
													"nativeSrc": "1723:81:18",
													"nodeType": "YulBlock",
													"src": "1723:81:18",
													"statements": [
														{
															"nativeSrc": "1733:65:18",
															"nodeType": "YulAssignment",
															"src": "1733:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1748:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1748:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1755:42:18",
																		"nodeType": "YulLiteral",
																		"src": "1755:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1744:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:18"
																},
																"nativeSrc": "1744:54:18",
																"nodeType": "YulFunctionCall",
																"src": "1744:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1733:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1733:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1678:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:18",
														"nodeType": "YulTypedName",
														"src": "1705:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1715:7:18",
														"nodeType": "YulTypedName",
														"src": "1715:7:18",
														"type": ""
													}
												],
												"src": "1678:126:18"
											},
											{
												"body": {
													"nativeSrc": "1855:51:18",
													"nodeType": "YulBlock",
													"src": "1855:51:18",
													"statements": [
														{
															"nativeSrc": "1865:35:18",
															"nodeType": "YulAssignment",
															"src": "1865:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1894:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1894:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1876:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1876:17:18"
																},
																"nativeSrc": "1876:24:18",
																"nodeType": "YulFunctionCall",
																"src": "1876:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1865:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1865:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1810:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1837:5:18",
														"nodeType": "YulTypedName",
														"src": "1837:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1847:7:18",
														"nodeType": "YulTypedName",
														"src": "1847:7:18",
														"type": ""
													}
												],
												"src": "1810:96:18"
											},
											{
												"body": {
													"nativeSrc": "1955:79:18",
													"nodeType": "YulBlock",
													"src": "1955:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2012:16:18",
																"nodeType": "YulBlock",
																"src": "2012:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:18"
																			},
																			"nativeSrc": "2014:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:18"
																		},
																		"nativeSrc": "2014:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1978:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1978:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2003:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "2003:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1985:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1985:17:18"
																				},
																				"nativeSrc": "1985:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1975:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1975:2:18"
																		},
																		"nativeSrc": "1975:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1975:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1968:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:18"
																},
																"nativeSrc": "1968:43:18",
																"nodeType": "YulFunctionCall",
																"src": "1968:43:18"
															},
															"nativeSrc": "1965:63:18",
															"nodeType": "YulIf",
															"src": "1965:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1912:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:18",
														"nodeType": "YulTypedName",
														"src": "1948:5:18",
														"type": ""
													}
												],
												"src": "1912:122:18"
											},
											{
												"body": {
													"nativeSrc": "2092:87:18",
													"nodeType": "YulBlock",
													"src": "2092:87:18",
													"statements": [
														{
															"nativeSrc": "2102:29:18",
															"nodeType": "YulAssignment",
															"src": "2102:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2124:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2111:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2111:12:18"
																},
																"nativeSrc": "2111:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2111:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2102:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2167:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2140:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "2140:26:18"
																},
																"nativeSrc": "2140:33:18",
																"nodeType": "YulFunctionCall",
																"src": "2140:33:18"
															},
															"nativeSrc": "2140:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "2140:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2040:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2070:6:18",
														"nodeType": "YulTypedName",
														"src": "2070:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2078:3:18",
														"nodeType": "YulTypedName",
														"src": "2078:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2086:5:18",
														"nodeType": "YulTypedName",
														"src": "2086:5:18",
														"type": ""
													}
												],
												"src": "2040:139:18"
											},
											{
												"body": {
													"nativeSrc": "2230:32:18",
													"nodeType": "YulBlock",
													"src": "2230:32:18",
													"statements": [
														{
															"nativeSrc": "2240:16:18",
															"nodeType": "YulAssignment",
															"src": "2240:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:18",
																"nodeType": "YulIdentifier",
																"src": "2251:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2240:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2185:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2212:5:18",
														"nodeType": "YulTypedName",
														"src": "2212:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2222:7:18",
														"nodeType": "YulTypedName",
														"src": "2222:7:18",
														"type": ""
													}
												],
												"src": "2185:77:18"
											},
											{
												"body": {
													"nativeSrc": "2311:79:18",
													"nodeType": "YulBlock",
													"src": "2311:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:18",
																"nodeType": "YulBlock",
																"src": "2368:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:18"
																			},
																			"nativeSrc": "2370:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:18"
																		},
																		"nativeSrc": "2370:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2341:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:18"
																				},
																				"nativeSrc": "2341:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:18"
																		},
																		"nativeSrc": "2331:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:18"
																},
																"nativeSrc": "2324:43:18",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:18"
															},
															"nativeSrc": "2321:63:18",
															"nodeType": "YulIf",
															"src": "2321:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2268:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:18",
														"nodeType": "YulTypedName",
														"src": "2304:5:18",
														"type": ""
													}
												],
												"src": "2268:122:18"
											},
											{
												"body": {
													"nativeSrc": "2448:87:18",
													"nodeType": "YulBlock",
													"src": "2448:87:18",
													"statements": [
														{
															"nativeSrc": "2458:29:18",
															"nodeType": "YulAssignment",
															"src": "2458:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:18"
																},
																"nativeSrc": "2467:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2496:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:18"
																},
																"nativeSrc": "2496:33:18",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:18"
															},
															"nativeSrc": "2496:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2396:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:18",
														"nodeType": "YulTypedName",
														"src": "2426:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:18",
														"nodeType": "YulTypedName",
														"src": "2434:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:18",
														"nodeType": "YulTypedName",
														"src": "2442:5:18",
														"type": ""
													}
												],
												"src": "2396:139:18"
											},
											{
												"body": {
													"nativeSrc": "2624:391:18",
													"nodeType": "YulBlock",
													"src": "2624:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:18",
																"nodeType": "YulBlock",
																"src": "2670:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:18"
																			},
																			"nativeSrc": "2672:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:18"
																		},
																		"nativeSrc": "2672:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:18"
																		},
																		"nativeSrc": "2641:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:18"
																},
																"nativeSrc": "2637:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:18"
															},
															"nativeSrc": "2634:119:18",
															"nodeType": "YulIf",
															"src": "2634:119:18"
														},
														{
															"nativeSrc": "2763:117:18",
															"nodeType": "YulBlock",
															"src": "2763:117:18",
															"statements": [
																{
																	"nativeSrc": "2778:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2792:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2807:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2807:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2853:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:18"
																				},
																				"nativeSrc": "2838:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2862:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2817:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:18"
																		},
																		"nativeSrc": "2817:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2807:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2890:118:18",
															"nodeType": "YulBlock",
															"src": "2890:118:18",
															"statements": [
																{
																	"nativeSrc": "2905:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2919:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2909:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2935:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2935:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2970:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2981:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2966:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:18"
																				},
																				"nativeSrc": "2966:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2990:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2945:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:18"
																		},
																		"nativeSrc": "2945:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2935:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2541:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:18",
														"nodeType": "YulTypedName",
														"src": "2586:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:18",
														"nodeType": "YulTypedName",
														"src": "2597:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:18",
														"nodeType": "YulTypedName",
														"src": "2609:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2617:6:18",
														"nodeType": "YulTypedName",
														"src": "2617:6:18",
														"type": ""
													}
												],
												"src": "2541:474:18"
											},
											{
												"body": {
													"nativeSrc": "3063:48:18",
													"nodeType": "YulBlock",
													"src": "3063:48:18",
													"statements": [
														{
															"nativeSrc": "3073:32:18",
															"nodeType": "YulAssignment",
															"src": "3073:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3098:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3098:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3091:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3091:6:18"
																		},
																		"nativeSrc": "3091:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3084:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:18"
																},
																"nativeSrc": "3084:21:18",
																"nodeType": "YulFunctionCall",
																"src": "3084:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3073:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3021:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:18",
														"nodeType": "YulTypedName",
														"src": "3045:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3055:7:18",
														"nodeType": "YulTypedName",
														"src": "3055:7:18",
														"type": ""
													}
												],
												"src": "3021:90:18"
											},
											{
												"body": {
													"nativeSrc": "3176:50:18",
													"nodeType": "YulBlock",
													"src": "3176:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3193:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3213:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3213:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3198:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "3198:14:18"
																		},
																		"nativeSrc": "3198:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:18"
																},
																"nativeSrc": "3186:34:18",
																"nodeType": "YulFunctionCall",
																"src": "3186:34:18"
															},
															"nativeSrc": "3186:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3117:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3164:5:18",
														"nodeType": "YulTypedName",
														"src": "3164:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3171:3:18",
														"nodeType": "YulTypedName",
														"src": "3171:3:18",
														"type": ""
													}
												],
												"src": "3117:109:18"
											},
											{
												"body": {
													"nativeSrc": "3324:118:18",
													"nodeType": "YulBlock",
													"src": "3324:118:18",
													"statements": [
														{
															"nativeSrc": "3334:26:18",
															"nodeType": "YulAssignment",
															"src": "3334:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3346:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3342:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:18"
																},
																"nativeSrc": "3342:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3342:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:18"
																		},
																		"nativeSrc": "3417:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3370:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "3370:37:18"
																},
																"nativeSrc": "3370:65:18",
																"nodeType": "YulFunctionCall",
																"src": "3370:65:18"
															},
															"nativeSrc": "3370:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "3370:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3232:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:18",
														"nodeType": "YulTypedName",
														"src": "3296:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:18",
														"nodeType": "YulTypedName",
														"src": "3308:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3319:4:18",
														"nodeType": "YulTypedName",
														"src": "3319:4:18",
														"type": ""
													}
												],
												"src": "3232:210:18"
											},
											{
												"body": {
													"nativeSrc": "3488:76:18",
													"nodeType": "YulBlock",
													"src": "3488:76:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3542:16:18",
																"nodeType": "YulBlock",
																"src": "3542:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3551:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3551:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3554:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3544:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3544:6:18"
																			},
																			"nativeSrc": "3544:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3544:12:18"
																		},
																		"nativeSrc": "3544:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3544:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3511:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3511:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3533:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3533:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3518:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "3518:14:18"
																				},
																				"nativeSrc": "3518:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3518:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3508:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3508:2:18"
																		},
																		"nativeSrc": "3508:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3508:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3501:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:18"
																},
																"nativeSrc": "3501:40:18",
																"nodeType": "YulFunctionCall",
																"src": "3501:40:18"
															},
															"nativeSrc": "3498:60:18",
															"nodeType": "YulIf",
															"src": "3498:60:18"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3448:116:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3481:5:18",
														"nodeType": "YulTypedName",
														"src": "3481:5:18",
														"type": ""
													}
												],
												"src": "3448:116:18"
											},
											{
												"body": {
													"nativeSrc": "3619:84:18",
													"nodeType": "YulBlock",
													"src": "3619:84:18",
													"statements": [
														{
															"nativeSrc": "3629:29:18",
															"nodeType": "YulAssignment",
															"src": "3629:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3651:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3638:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3638:12:18"
																},
																"nativeSrc": "3638:20:18",
																"nodeType": "YulFunctionCall",
																"src": "3638:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3629:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3629:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3691:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3691:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3667:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "3667:23:18"
																},
																"nativeSrc": "3667:30:18",
																"nodeType": "YulFunctionCall",
																"src": "3667:30:18"
															},
															"nativeSrc": "3667:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "3667:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3570:133:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3597:6:18",
														"nodeType": "YulTypedName",
														"src": "3597:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3605:3:18",
														"nodeType": "YulTypedName",
														"src": "3605:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3613:5:18",
														"nodeType": "YulTypedName",
														"src": "3613:5:18",
														"type": ""
													}
												],
												"src": "3570:133:18"
											},
											{
												"body": {
													"nativeSrc": "3789:388:18",
													"nodeType": "YulBlock",
													"src": "3789:388:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3835:83:18",
																"nodeType": "YulBlock",
																"src": "3835:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3837:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3837:77:18"
																			},
																			"nativeSrc": "3837:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3837:79:18"
																		},
																		"nativeSrc": "3837:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3837:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3810:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3810:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3819:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3806:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3806:3:18"
																		},
																		"nativeSrc": "3806:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3806:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3831:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3831:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3802:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:18"
																},
																"nativeSrc": "3802:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3802:32:18"
															},
															"nativeSrc": "3799:119:18",
															"nodeType": "YulIf",
															"src": "3799:119:18"
														},
														{
															"nativeSrc": "3928:117:18",
															"nodeType": "YulBlock",
															"src": "3928:117:18",
															"statements": [
																{
																	"nativeSrc": "3943:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3943:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3957:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3957:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3947:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3947:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3972:63:18",
																	"nodeType": "YulAssignment",
																	"src": "3972:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4007:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4007:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4018:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4018:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4003:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:18"
																				},
																				"nativeSrc": "4003:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4003:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4027:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4027:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3982:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "3982:20:18"
																		},
																		"nativeSrc": "3982:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3982:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3972:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3972:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4055:115:18",
															"nodeType": "YulBlock",
															"src": "4055:115:18",
															"statements": [
																{
																	"nativeSrc": "4070:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4070:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4084:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4084:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4074:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4074:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4100:60:18",
																	"nodeType": "YulAssignment",
																	"src": "4100:60:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4132:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4132:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4143:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4143:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4128:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4128:3:18"
																				},
																				"nativeSrc": "4128:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4128:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4152:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4152:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4110:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "4110:17:18"
																		},
																		"nativeSrc": "4110:50:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:50:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4100:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4100:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3709:468:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3751:9:18",
														"nodeType": "YulTypedName",
														"src": "3751:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3762:7:18",
														"nodeType": "YulTypedName",
														"src": "3762:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3774:6:18",
														"nodeType": "YulTypedName",
														"src": "3774:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3782:6:18",
														"nodeType": "YulTypedName",
														"src": "3782:6:18",
														"type": ""
													}
												],
												"src": "3709:468:18"
											},
											{
												"body": {
													"nativeSrc": "4248:53:18",
													"nodeType": "YulBlock",
													"src": "4248:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4265:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4265:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4288:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4288:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4270:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "4270:17:18"
																		},
																		"nativeSrc": "4270:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4270:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4258:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:18"
																},
																"nativeSrc": "4258:37:18",
																"nodeType": "YulFunctionCall",
																"src": "4258:37:18"
															},
															"nativeSrc": "4258:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "4258:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4183:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4236:5:18",
														"nodeType": "YulTypedName",
														"src": "4236:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4243:3:18",
														"nodeType": "YulTypedName",
														"src": "4243:3:18",
														"type": ""
													}
												],
												"src": "4183:118:18"
											},
											{
												"body": {
													"nativeSrc": "4405:124:18",
													"nodeType": "YulBlock",
													"src": "4405:124:18",
													"statements": [
														{
															"nativeSrc": "4415:26:18",
															"nodeType": "YulAssignment",
															"src": "4415:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4427:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4427:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4438:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4438:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4423:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4423:3:18"
																},
																"nativeSrc": "4423:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4423:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4415:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4415:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4495:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4495:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4508:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4508:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4519:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4519:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4504:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4504:3:18"
																		},
																		"nativeSrc": "4504:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4504:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4451:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "4451:43:18"
																},
																"nativeSrc": "4451:71:18",
																"nodeType": "YulFunctionCall",
																"src": "4451:71:18"
															},
															"nativeSrc": "4451:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "4451:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4307:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4377:9:18",
														"nodeType": "YulTypedName",
														"src": "4377:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4389:6:18",
														"nodeType": "YulTypedName",
														"src": "4389:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4400:4:18",
														"nodeType": "YulTypedName",
														"src": "4400:4:18",
														"type": ""
													}
												],
												"src": "4307:222:18"
											},
											{
												"body": {
													"nativeSrc": "4635:519:18",
													"nodeType": "YulBlock",
													"src": "4635:519:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4681:83:18",
																"nodeType": "YulBlock",
																"src": "4681:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4683:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "4683:77:18"
																			},
																			"nativeSrc": "4683:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4683:79:18"
																		},
																		"nativeSrc": "4683:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4683:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4656:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4656:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4665:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4665:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4652:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4652:3:18"
																		},
																		"nativeSrc": "4652:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4652:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4677:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4677:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4648:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4648:3:18"
																},
																"nativeSrc": "4648:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4648:32:18"
															},
															"nativeSrc": "4645:119:18",
															"nodeType": "YulIf",
															"src": "4645:119:18"
														},
														{
															"nativeSrc": "4774:117:18",
															"nodeType": "YulBlock",
															"src": "4774:117:18",
															"statements": [
																{
																	"nativeSrc": "4789:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4789:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4803:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4803:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4793:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4793:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4818:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4818:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4853:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4853:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4864:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4864:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4849:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4849:3:18"
																				},
																				"nativeSrc": "4849:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4849:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4873:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4873:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4828:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4828:20:18"
																		},
																		"nativeSrc": "4828:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4828:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4818:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4818:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4901:118:18",
															"nodeType": "YulBlock",
															"src": "4901:118:18",
															"statements": [
																{
																	"nativeSrc": "4916:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4916:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4930:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4930:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4920:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4920:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4946:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4946:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4981:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4981:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4992:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4992:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4977:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4977:3:18"
																				},
																				"nativeSrc": "4977:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4977:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5001:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5001:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4956:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4956:20:18"
																		},
																		"nativeSrc": "4956:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4956:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4946:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4946:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5029:118:18",
															"nodeType": "YulBlock",
															"src": "5029:118:18",
															"statements": [
																{
																	"nativeSrc": "5044:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5044:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5058:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5058:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5048:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5048:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5074:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5074:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5109:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5109:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5120:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5120:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5105:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5105:3:18"
																				},
																				"nativeSrc": "5105:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5105:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5129:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5129:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5084:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5084:20:18"
																		},
																		"nativeSrc": "5084:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5084:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5074:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5074:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4535:619:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4589:9:18",
														"nodeType": "YulTypedName",
														"src": "4589:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4600:7:18",
														"nodeType": "YulTypedName",
														"src": "4600:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4612:6:18",
														"nodeType": "YulTypedName",
														"src": "4612:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4620:6:18",
														"nodeType": "YulTypedName",
														"src": "4620:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4628:6:18",
														"nodeType": "YulTypedName",
														"src": "4628:6:18",
														"type": ""
													}
												],
												"src": "4535:619:18"
											},
											{
												"body": {
													"nativeSrc": "5226:263:18",
													"nodeType": "YulBlock",
													"src": "5226:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5272:83:18",
																"nodeType": "YulBlock",
																"src": "5272:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5274:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5274:77:18"
																			},
																			"nativeSrc": "5274:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5274:79:18"
																		},
																		"nativeSrc": "5274:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5274:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5247:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5247:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5256:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5256:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5243:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5243:3:18"
																		},
																		"nativeSrc": "5243:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5243:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5268:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5239:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5239:3:18"
																},
																"nativeSrc": "5239:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5239:32:18"
															},
															"nativeSrc": "5236:119:18",
															"nodeType": "YulIf",
															"src": "5236:119:18"
														},
														{
															"nativeSrc": "5365:117:18",
															"nodeType": "YulBlock",
															"src": "5365:117:18",
															"statements": [
																{
																	"nativeSrc": "5380:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5380:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5394:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5394:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5384:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5384:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5409:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5409:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5444:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5444:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5455:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5455:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5440:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5440:3:18"
																				},
																				"nativeSrc": "5440:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5440:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5464:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5464:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5419:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5419:20:18"
																		},
																		"nativeSrc": "5419:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5419:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5409:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5409:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5160:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5196:9:18",
														"nodeType": "YulTypedName",
														"src": "5196:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5207:7:18",
														"nodeType": "YulTypedName",
														"src": "5207:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5219:6:18",
														"nodeType": "YulTypedName",
														"src": "5219:6:18",
														"type": ""
													}
												],
												"src": "5160:329:18"
											},
											{
												"body": {
													"nativeSrc": "5538:43:18",
													"nodeType": "YulBlock",
													"src": "5538:43:18",
													"statements": [
														{
															"nativeSrc": "5548:27:18",
															"nodeType": "YulAssignment",
															"src": "5548:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5563:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5563:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5570:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5570:4:18",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5559:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5559:3:18"
																},
																"nativeSrc": "5559:16:18",
																"nodeType": "YulFunctionCall",
																"src": "5559:16:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5548:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "5548:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5495:86:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5520:5:18",
														"nodeType": "YulTypedName",
														"src": "5520:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5530:7:18",
														"nodeType": "YulTypedName",
														"src": "5530:7:18",
														"type": ""
													}
												],
												"src": "5495:86:18"
											},
											{
												"body": {
													"nativeSrc": "5648:51:18",
													"nodeType": "YulBlock",
													"src": "5648:51:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5665:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5665:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5686:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5686:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5670:15:18",
																			"nodeType": "YulIdentifier",
																			"src": "5670:15:18"
																		},
																		"nativeSrc": "5670:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5670:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5658:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:18"
																},
																"nativeSrc": "5658:35:18",
																"nodeType": "YulFunctionCall",
																"src": "5658:35:18"
															},
															"nativeSrc": "5658:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "5658:35:18"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5587:112:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5636:5:18",
														"nodeType": "YulTypedName",
														"src": "5636:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5643:3:18",
														"nodeType": "YulTypedName",
														"src": "5643:3:18",
														"type": ""
													}
												],
												"src": "5587:112:18"
											},
											{
												"body": {
													"nativeSrc": "5799:120:18",
													"nodeType": "YulBlock",
													"src": "5799:120:18",
													"statements": [
														{
															"nativeSrc": "5809:26:18",
															"nodeType": "YulAssignment",
															"src": "5809:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5821:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5821:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5832:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5832:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5817:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5817:3:18"
																},
																"nativeSrc": "5817:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5817:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5809:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5809:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5885:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5885:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5898:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5909:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5909:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5894:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:18"
																		},
																		"nativeSrc": "5894:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5845:39:18",
																	"nodeType": "YulIdentifier",
																	"src": "5845:39:18"
																},
																"nativeSrc": "5845:67:18",
																"nodeType": "YulFunctionCall",
																"src": "5845:67:18"
															},
															"nativeSrc": "5845:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "5845:67:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5705:214:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5771:9:18",
														"nodeType": "YulTypedName",
														"src": "5771:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5783:6:18",
														"nodeType": "YulTypedName",
														"src": "5783:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5794:4:18",
														"nodeType": "YulTypedName",
														"src": "5794:4:18",
														"type": ""
													}
												],
												"src": "5705:214:18"
											},
											{
												"body": {
													"nativeSrc": "6014:28:18",
													"nodeType": "YulBlock",
													"src": "6014:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6031:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6031:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6034:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6034:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6024:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6024:6:18"
																},
																"nativeSrc": "6024:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6024:12:18"
															},
															"nativeSrc": "6024:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "6024:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5925:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5925:117:18"
											},
											{
												"body": {
													"nativeSrc": "6137:28:18",
													"nodeType": "YulBlock",
													"src": "6137:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6154:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6154:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6157:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6157:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6147:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6147:6:18"
																},
																"nativeSrc": "6147:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6147:12:18"
															},
															"nativeSrc": "6147:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "6147:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6048:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6048:117:18"
											},
											{
												"body": {
													"nativeSrc": "6199:152:18",
													"nodeType": "YulBlock",
													"src": "6199:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6216:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6216:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6219:77:18",
																		"nodeType": "YulLiteral",
																		"src": "6219:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6209:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6209:6:18"
																},
																"nativeSrc": "6209:88:18",
																"nodeType": "YulFunctionCall",
																"src": "6209:88:18"
															},
															"nativeSrc": "6209:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "6209:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6313:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6313:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6316:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6316:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6306:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6306:6:18"
																},
																"nativeSrc": "6306:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6306:15:18"
															},
															"nativeSrc": "6306:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "6306:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6337:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6337:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6340:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6340:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6330:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6330:6:18"
																},
																"nativeSrc": "6330:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6330:15:18"
															},
															"nativeSrc": "6330:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "6330:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6171:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6171:180:18"
											},
											{
												"body": {
													"nativeSrc": "6400:238:18",
													"nodeType": "YulBlock",
													"src": "6400:238:18",
													"statements": [
														{
															"nativeSrc": "6410:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "6410:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6432:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6432:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6462:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6462:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6440:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "6440:21:18"
																		},
																		"nativeSrc": "6440:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6440:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6428:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6428:3:18"
																},
																"nativeSrc": "6428:40:18",
																"nodeType": "YulFunctionCall",
																"src": "6428:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6414:10:18",
																	"nodeType": "YulTypedName",
																	"src": "6414:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6579:22:18",
																"nodeType": "YulBlock",
																"src": "6579:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6581:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "6581:16:18"
																			},
																			"nativeSrc": "6581:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6581:18:18"
																		},
																		"nativeSrc": "6581:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6581:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6522:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "6522:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6534:18:18",
																				"nodeType": "YulLiteral",
																				"src": "6534:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6519:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "6519:2:18"
																		},
																		"nativeSrc": "6519:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6519:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6558:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "6558:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6570:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6570:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6555:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "6555:2:18"
																		},
																		"nativeSrc": "6555:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6555:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6516:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6516:2:18"
																},
																"nativeSrc": "6516:62:18",
																"nodeType": "YulFunctionCall",
																"src": "6516:62:18"
															},
															"nativeSrc": "6513:88:18",
															"nodeType": "YulIf",
															"src": "6513:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6617:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6617:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6621:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "6621:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6610:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6610:6:18"
																},
																"nativeSrc": "6610:22:18",
																"nodeType": "YulFunctionCall",
																"src": "6610:22:18"
															},
															"nativeSrc": "6610:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "6610:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6357:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6386:6:18",
														"nodeType": "YulTypedName",
														"src": "6386:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6394:4:18",
														"nodeType": "YulTypedName",
														"src": "6394:4:18",
														"type": ""
													}
												],
												"src": "6357:281:18"
											},
											{
												"body": {
													"nativeSrc": "6685:88:18",
													"nodeType": "YulBlock",
													"src": "6685:88:18",
													"statements": [
														{
															"nativeSrc": "6695:30:18",
															"nodeType": "YulAssignment",
															"src": "6695:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6705:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "6705:18:18"
																},
																"nativeSrc": "6705:20:18",
																"nodeType": "YulFunctionCall",
																"src": "6705:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6695:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6695:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6754:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6754:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6762:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6762:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6734:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "6734:19:18"
																},
																"nativeSrc": "6734:33:18",
																"nodeType": "YulFunctionCall",
																"src": "6734:33:18"
															},
															"nativeSrc": "6734:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "6734:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6644:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6669:4:18",
														"nodeType": "YulTypedName",
														"src": "6669:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6678:6:18",
														"nodeType": "YulTypedName",
														"src": "6678:6:18",
														"type": ""
													}
												],
												"src": "6644:129:18"
											},
											{
												"body": {
													"nativeSrc": "6845:241:18",
													"nodeType": "YulBlock",
													"src": "6845:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6950:22:18",
																"nodeType": "YulBlock",
																"src": "6950:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6952:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "6952:16:18"
																			},
																			"nativeSrc": "6952:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6952:18:18"
																		},
																		"nativeSrc": "6952:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6952:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6922:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6930:18:18",
																		"nodeType": "YulLiteral",
																		"src": "6930:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6919:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6919:2:18"
																},
																"nativeSrc": "6919:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6919:30:18"
															},
															"nativeSrc": "6916:56:18",
															"nodeType": "YulIf",
															"src": "6916:56:18"
														},
														{
															"nativeSrc": "6982:37:18",
															"nodeType": "YulAssignment",
															"src": "6982:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7012:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7012:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "6990:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "6990:21:18"
																},
																"nativeSrc": "6990:29:18",
																"nodeType": "YulFunctionCall",
																"src": "6990:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6982:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6982:4:18"
																}
															]
														},
														{
															"nativeSrc": "7056:23:18",
															"nodeType": "YulAssignment",
															"src": "7056:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7068:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7068:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7074:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7074:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7064:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7064:3:18"
																},
																"nativeSrc": "7064:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7064:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7056:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7056:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "6779:307:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6829:6:18",
														"nodeType": "YulTypedName",
														"src": "6829:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6840:4:18",
														"nodeType": "YulTypedName",
														"src": "6840:4:18",
														"type": ""
													}
												],
												"src": "6779:307:18"
											},
											{
												"body": {
													"nativeSrc": "7156:84:18",
													"nodeType": "YulBlock",
													"src": "7156:84:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7180:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7180:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7185:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7185:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7190:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7190:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7167:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "7167:12:18"
																},
																"nativeSrc": "7167:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7167:30:18"
															},
															"nativeSrc": "7167:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7167:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7217:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7217:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7222:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7222:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7213:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7213:3:18"
																		},
																		"nativeSrc": "7213:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7213:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7231:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7206:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7206:6:18"
																},
																"nativeSrc": "7206:27:18",
																"nodeType": "YulFunctionCall",
																"src": "7206:27:18"
															},
															"nativeSrc": "7206:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "7206:27:18"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7092:148:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7138:3:18",
														"nodeType": "YulTypedName",
														"src": "7138:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7143:3:18",
														"nodeType": "YulTypedName",
														"src": "7143:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7148:6:18",
														"nodeType": "YulTypedName",
														"src": "7148:6:18",
														"type": ""
													}
												],
												"src": "7092:148:18"
											},
											{
												"body": {
													"nativeSrc": "7329:340:18",
													"nodeType": "YulBlock",
													"src": "7329:340:18",
													"statements": [
														{
															"nativeSrc": "7339:74:18",
															"nodeType": "YulAssignment",
															"src": "7339:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7405:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7405:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "7364:40:18",
																			"nodeType": "YulIdentifier",
																			"src": "7364:40:18"
																		},
																		"nativeSrc": "7364:48:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7364:48:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7348:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "7348:15:18"
																},
																"nativeSrc": "7348:65:18",
																"nodeType": "YulFunctionCall",
																"src": "7348:65:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7339:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7339:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7429:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7429:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7436:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7436:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7422:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7422:6:18"
																},
																"nativeSrc": "7422:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7422:21:18"
															},
															"nativeSrc": "7422:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "7422:21:18"
														},
														{
															"nativeSrc": "7452:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7452:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7467:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7467:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7474:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7474:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7463:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7463:3:18"
																},
																"nativeSrc": "7463:16:18",
																"nodeType": "YulFunctionCall",
																"src": "7463:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7456:3:18",
																	"nodeType": "YulTypedName",
																	"src": "7456:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7517:83:18",
																"nodeType": "YulBlock",
																"src": "7517:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7519:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "7519:77:18"
																			},
																			"nativeSrc": "7519:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7519:79:18"
																		},
																		"nativeSrc": "7519:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7519:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7498:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7498:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7503:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7503:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7494:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7494:3:18"
																		},
																		"nativeSrc": "7494:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7494:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7512:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7512:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7491:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7491:2:18"
																},
																"nativeSrc": "7491:25:18",
																"nodeType": "YulFunctionCall",
																"src": "7491:25:18"
															},
															"nativeSrc": "7488:112:18",
															"nodeType": "YulIf",
															"src": "7488:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7646:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7646:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7651:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7651:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7656:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7656:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7609:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "7609:36:18"
																},
																"nativeSrc": "7609:54:18",
																"nodeType": "YulFunctionCall",
																"src": "7609:54:18"
															},
															"nativeSrc": "7609:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "7609:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "7246:423:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7302:3:18",
														"nodeType": "YulTypedName",
														"src": "7302:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7307:6:18",
														"nodeType": "YulTypedName",
														"src": "7307:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7315:3:18",
														"nodeType": "YulTypedName",
														"src": "7315:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7323:5:18",
														"nodeType": "YulTypedName",
														"src": "7323:5:18",
														"type": ""
													}
												],
												"src": "7246:423:18"
											},
											{
												"body": {
													"nativeSrc": "7749:277:18",
													"nodeType": "YulBlock",
													"src": "7749:277:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "7798:83:18",
																"nodeType": "YulBlock",
																"src": "7798:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7800:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "7800:77:18"
																			},
																			"nativeSrc": "7800:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7800:79:18"
																		},
																		"nativeSrc": "7800:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7800:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7777:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "7777:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7785:4:18",
																						"nodeType": "YulLiteral",
																						"src": "7785:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7773:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "7773:3:18"
																				},
																				"nativeSrc": "7773:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7773:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7792:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7792:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7769:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7769:3:18"
																		},
																		"nativeSrc": "7769:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7769:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7762:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7762:6:18"
																},
																"nativeSrc": "7762:35:18",
																"nodeType": "YulFunctionCall",
																"src": "7762:35:18"
															},
															"nativeSrc": "7759:122:18",
															"nodeType": "YulIf",
															"src": "7759:122:18"
														},
														{
															"nativeSrc": "7890:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7890:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7917:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7904:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "7904:12:18"
																},
																"nativeSrc": "7904:20:18",
																"nodeType": "YulFunctionCall",
																"src": "7904:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7894:6:18",
																	"nodeType": "YulTypedName",
																	"src": "7894:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7933:87:18",
															"nodeType": "YulAssignment",
															"src": "7933:87:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7993:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7993:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8001:4:18",
																				"nodeType": "YulLiteral",
																				"src": "8001:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7989:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7989:3:18"
																		},
																		"nativeSrc": "7989:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7989:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8008:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8008:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8016:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8016:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "7942:46:18",
																	"nodeType": "YulIdentifier",
																	"src": "7942:46:18"
																},
																"nativeSrc": "7942:78:18",
																"nodeType": "YulFunctionCall",
																"src": "7942:78:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7933:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7933:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "7688:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7727:6:18",
														"nodeType": "YulTypedName",
														"src": "7727:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7735:3:18",
														"nodeType": "YulTypedName",
														"src": "7735:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7743:5:18",
														"nodeType": "YulTypedName",
														"src": "7743:5:18",
														"type": ""
													}
												],
												"src": "7688:338:18"
											},
											{
												"body": {
													"nativeSrc": "8124:560:18",
													"nodeType": "YulBlock",
													"src": "8124:560:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8170:83:18",
																"nodeType": "YulBlock",
																"src": "8170:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8172:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8172:77:18"
																			},
																			"nativeSrc": "8172:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8172:79:18"
																		},
																		"nativeSrc": "8172:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8172:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8145:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8145:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8154:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8154:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8141:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8141:3:18"
																		},
																		"nativeSrc": "8141:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8141:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8166:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8166:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8137:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8137:3:18"
																},
																"nativeSrc": "8137:32:18",
																"nodeType": "YulFunctionCall",
																"src": "8137:32:18"
															},
															"nativeSrc": "8134:119:18",
															"nodeType": "YulIf",
															"src": "8134:119:18"
														},
														{
															"nativeSrc": "8263:117:18",
															"nodeType": "YulBlock",
															"src": "8263:117:18",
															"statements": [
																{
																	"nativeSrc": "8278:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8278:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8292:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8292:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8282:6:18",
																			"nodeType": "YulTypedName",
																			"src": "8282:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8307:63:18",
																	"nodeType": "YulAssignment",
																	"src": "8307:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8342:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8342:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8353:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8353:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8338:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8338:3:18"
																				},
																				"nativeSrc": "8338:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8338:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8362:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8362:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8317:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "8317:20:18"
																		},
																		"nativeSrc": "8317:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8307:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8307:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8390:287:18",
															"nodeType": "YulBlock",
															"src": "8390:287:18",
															"statements": [
																{
																	"nativeSrc": "8405:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8405:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8436:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8436:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8447:2:18",
																						"nodeType": "YulLiteral",
																						"src": "8447:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8432:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8432:3:18"
																				},
																				"nativeSrc": "8432:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8432:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8419:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "8419:12:18"
																		},
																		"nativeSrc": "8419:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8419:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8409:6:18",
																			"nodeType": "YulTypedName",
																			"src": "8409:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8498:83:18",
																		"nodeType": "YulBlock",
																		"src": "8498:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8500:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "8500:77:18"
																					},
																					"nativeSrc": "8500:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8500:79:18"
																				},
																				"nativeSrc": "8500:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "8500:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8470:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8470:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8478:18:18",
																				"nodeType": "YulLiteral",
																				"src": "8478:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8467:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8467:2:18"
																		},
																		"nativeSrc": "8467:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8467:30:18"
																	},
																	"nativeSrc": "8464:117:18",
																	"nodeType": "YulIf",
																	"src": "8464:117:18"
																},
																{
																	"nativeSrc": "8595:72:18",
																	"nodeType": "YulAssignment",
																	"src": "8595:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8639:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "8639:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8650:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8650:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8635:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8635:3:18"
																				},
																				"nativeSrc": "8635:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8635:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8659:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "8659:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "8605:29:18",
																			"nodeType": "YulIdentifier",
																			"src": "8605:29:18"
																		},
																		"nativeSrc": "8605:62:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8605:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8595:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8595:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "8032:652:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8086:9:18",
														"nodeType": "YulTypedName",
														"src": "8086:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8097:7:18",
														"nodeType": "YulTypedName",
														"src": "8097:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8109:6:18",
														"nodeType": "YulTypedName",
														"src": "8109:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8117:6:18",
														"nodeType": "YulTypedName",
														"src": "8117:6:18",
														"type": ""
													}
												],
												"src": "8032:652:18"
											},
											{
												"body": {
													"nativeSrc": "8735:32:18",
													"nodeType": "YulBlock",
													"src": "8735:32:18",
													"statements": [
														{
															"nativeSrc": "8745:16:18",
															"nodeType": "YulAssignment",
															"src": "8745:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "8756:5:18",
																"nodeType": "YulIdentifier",
																"src": "8756:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8745:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "8745:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "8690:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8717:5:18",
														"nodeType": "YulTypedName",
														"src": "8717:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8727:7:18",
														"nodeType": "YulTypedName",
														"src": "8727:7:18",
														"type": ""
													}
												],
												"src": "8690:77:18"
											},
											{
												"body": {
													"nativeSrc": "8838:53:18",
													"nodeType": "YulBlock",
													"src": "8838:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8855:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8855:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8878:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "8878:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8860:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "8860:17:18"
																		},
																		"nativeSrc": "8860:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8860:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8848:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8848:6:18"
																},
																"nativeSrc": "8848:37:18",
																"nodeType": "YulFunctionCall",
																"src": "8848:37:18"
															},
															"nativeSrc": "8848:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "8848:37:18"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8773:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8826:5:18",
														"nodeType": "YulTypedName",
														"src": "8826:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8833:3:18",
														"nodeType": "YulTypedName",
														"src": "8833:3:18",
														"type": ""
													}
												],
												"src": "8773:118:18"
											},
											{
												"body": {
													"nativeSrc": "8995:124:18",
													"nodeType": "YulBlock",
													"src": "8995:124:18",
													"statements": [
														{
															"nativeSrc": "9005:26:18",
															"nodeType": "YulAssignment",
															"src": "9005:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9017:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9017:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9028:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9028:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9013:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9013:3:18"
																},
																"nativeSrc": "9013:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9013:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9005:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9005:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9085:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9085:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9098:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9098:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9109:1:18",
																				"nodeType": "YulLiteral",
																				"src": "9109:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9094:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9094:3:18"
																		},
																		"nativeSrc": "9094:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9094:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9041:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "9041:43:18"
																},
																"nativeSrc": "9041:71:18",
																"nodeType": "YulFunctionCall",
																"src": "9041:71:18"
															},
															"nativeSrc": "9041:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "9041:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "8897:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8967:9:18",
														"nodeType": "YulTypedName",
														"src": "8967:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8979:6:18",
														"nodeType": "YulTypedName",
														"src": "8979:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8990:4:18",
														"nodeType": "YulTypedName",
														"src": "8990:4:18",
														"type": ""
													}
												],
												"src": "8897:222:18"
											},
											{
												"body": {
													"nativeSrc": "9214:28:18",
													"nodeType": "YulBlock",
													"src": "9214:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9231:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9231:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9234:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9234:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9224:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9224:6:18"
																},
																"nativeSrc": "9224:12:18",
																"nodeType": "YulFunctionCall",
																"src": "9224:12:18"
															},
															"nativeSrc": "9224:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "9224:12:18"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "9125:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "9125:117:18"
											},
											{
												"body": {
													"nativeSrc": "9337:28:18",
													"nodeType": "YulBlock",
													"src": "9337:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9354:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9354:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9357:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9357:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9347:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9347:6:18"
																},
																"nativeSrc": "9347:12:18",
																"nodeType": "YulFunctionCall",
																"src": "9347:12:18"
															},
															"nativeSrc": "9347:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "9347:12:18"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "9248:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "9248:117:18"
											},
											{
												"body": {
													"nativeSrc": "9478:478:18",
													"nodeType": "YulBlock",
													"src": "9478:478:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9527:83:18",
																"nodeType": "YulBlock",
																"src": "9527:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9529:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9529:77:18"
																			},
																			"nativeSrc": "9529:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9529:79:18"
																		},
																		"nativeSrc": "9529:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9529:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9506:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9506:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9514:4:18",
																						"nodeType": "YulLiteral",
																						"src": "9514:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9502:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9502:3:18"
																				},
																				"nativeSrc": "9502:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9502:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9521:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9521:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9498:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:18"
																		},
																		"nativeSrc": "9498:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9498:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9491:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9491:6:18"
																},
																"nativeSrc": "9491:35:18",
																"nodeType": "YulFunctionCall",
																"src": "9491:35:18"
															},
															"nativeSrc": "9488:122:18",
															"nodeType": "YulIf",
															"src": "9488:122:18"
														},
														{
															"nativeSrc": "9619:30:18",
															"nodeType": "YulAssignment",
															"src": "9619:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9642:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9642:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9629:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "9629:12:18"
																},
																"nativeSrc": "9629:20:18",
																"nodeType": "YulFunctionCall",
																"src": "9629:20:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9619:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9619:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9692:83:18",
																"nodeType": "YulBlock",
																"src": "9692:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "9694:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9694:77:18"
																			},
																			"nativeSrc": "9694:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9694:79:18"
																		},
																		"nativeSrc": "9694:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9694:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9664:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9664:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9672:18:18",
																		"nodeType": "YulLiteral",
																		"src": "9672:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9661:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9661:2:18"
																},
																"nativeSrc": "9661:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9661:30:18"
															},
															"nativeSrc": "9658:117:18",
															"nodeType": "YulIf",
															"src": "9658:117:18"
														},
														{
															"nativeSrc": "9784:29:18",
															"nodeType": "YulAssignment",
															"src": "9784:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9800:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9800:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9808:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9808:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9796:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9796:3:18"
																},
																"nativeSrc": "9796:17:18",
																"nodeType": "YulFunctionCall",
																"src": "9796:17:18"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "9784:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "9784:8:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9867:83:18",
																"nodeType": "YulBlock",
																"src": "9867:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9869:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9869:77:18"
																			},
																			"nativeSrc": "9869:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9869:79:18"
																		},
																		"nativeSrc": "9869:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9869:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "9832:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "9832:8:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "9846:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9854:4:18",
																						"nodeType": "YulLiteral",
																						"src": "9854:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9842:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9842:3:18"
																				},
																				"nativeSrc": "9842:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9842:17:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9828:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9828:3:18"
																		},
																		"nativeSrc": "9828:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9828:32:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9862:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9862:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9825:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9825:2:18"
																},
																"nativeSrc": "9825:41:18",
																"nodeType": "YulFunctionCall",
																"src": "9825:41:18"
															},
															"nativeSrc": "9822:128:18",
															"nodeType": "YulIf",
															"src": "9822:128:18"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "9388:568:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9445:6:18",
														"nodeType": "YulTypedName",
														"src": "9445:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9453:3:18",
														"nodeType": "YulTypedName",
														"src": "9453:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "9461:8:18",
														"nodeType": "YulTypedName",
														"src": "9461:8:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9471:6:18",
														"nodeType": "YulTypedName",
														"src": "9471:6:18",
														"type": ""
													}
												],
												"src": "9388:568:18"
											},
											{
												"body": {
													"nativeSrc": "10069:478:18",
													"nodeType": "YulBlock",
													"src": "10069:478:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10118:83:18",
																"nodeType": "YulBlock",
																"src": "10118:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10120:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10120:77:18"
																			},
																			"nativeSrc": "10120:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10120:79:18"
																		},
																		"nativeSrc": "10120:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10120:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10097:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10097:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10105:4:18",
																						"nodeType": "YulLiteral",
																						"src": "10105:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10093:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10093:3:18"
																				},
																				"nativeSrc": "10093:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10093:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10112:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10112:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10089:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10089:3:18"
																		},
																		"nativeSrc": "10089:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10089:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10082:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10082:6:18"
																},
																"nativeSrc": "10082:35:18",
																"nodeType": "YulFunctionCall",
																"src": "10082:35:18"
															},
															"nativeSrc": "10079:122:18",
															"nodeType": "YulIf",
															"src": "10079:122:18"
														},
														{
															"nativeSrc": "10210:30:18",
															"nodeType": "YulAssignment",
															"src": "10210:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10233:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10233:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10220:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "10220:12:18"
																},
																"nativeSrc": "10220:20:18",
																"nodeType": "YulFunctionCall",
																"src": "10220:20:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10210:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10210:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10283:83:18",
																"nodeType": "YulBlock",
																"src": "10283:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "10285:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10285:77:18"
																			},
																			"nativeSrc": "10285:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10285:79:18"
																		},
																		"nativeSrc": "10285:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10285:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10255:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10255:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10263:18:18",
																		"nodeType": "YulLiteral",
																		"src": "10263:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10252:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10252:2:18"
																},
																"nativeSrc": "10252:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10252:30:18"
															},
															"nativeSrc": "10249:117:18",
															"nodeType": "YulIf",
															"src": "10249:117:18"
														},
														{
															"nativeSrc": "10375:29:18",
															"nodeType": "YulAssignment",
															"src": "10375:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10391:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10391:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10399:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10399:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10387:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10387:3:18"
																},
																"nativeSrc": "10387:17:18",
																"nodeType": "YulFunctionCall",
																"src": "10387:17:18"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "10375:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "10375:8:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10458:83:18",
																"nodeType": "YulBlock",
																"src": "10458:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10460:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10460:77:18"
																			},
																			"nativeSrc": "10460:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10460:79:18"
																		},
																		"nativeSrc": "10460:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10460:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "10423:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "10423:8:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "10437:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10437:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10445:4:18",
																						"nodeType": "YulLiteral",
																						"src": "10445:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10433:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10433:3:18"
																				},
																				"nativeSrc": "10433:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10433:17:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10419:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10419:3:18"
																		},
																		"nativeSrc": "10419:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10419:32:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10453:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10453:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10416:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10416:2:18"
																},
																"nativeSrc": "10416:41:18",
																"nodeType": "YulFunctionCall",
																"src": "10416:41:18"
															},
															"nativeSrc": "10413:128:18",
															"nodeType": "YulIf",
															"src": "10413:128:18"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "9979:568:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10036:6:18",
														"nodeType": "YulTypedName",
														"src": "10036:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10044:3:18",
														"nodeType": "YulTypedName",
														"src": "10044:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "10052:8:18",
														"nodeType": "YulTypedName",
														"src": "10052:8:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10062:6:18",
														"nodeType": "YulTypedName",
														"src": "10062:6:18",
														"type": ""
													}
												],
												"src": "9979:568:18"
											},
											{
												"body": {
													"nativeSrc": "10706:781:18",
													"nodeType": "YulBlock",
													"src": "10706:781:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10752:83:18",
																"nodeType": "YulBlock",
																"src": "10752:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10754:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10754:77:18"
																			},
																			"nativeSrc": "10754:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10754:79:18"
																		},
																		"nativeSrc": "10754:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10754:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10727:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10727:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10736:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10736:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10723:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10723:3:18"
																		},
																		"nativeSrc": "10723:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10723:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10748:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10748:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10719:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10719:3:18"
																},
																"nativeSrc": "10719:32:18",
																"nodeType": "YulFunctionCall",
																"src": "10719:32:18"
															},
															"nativeSrc": "10716:119:18",
															"nodeType": "YulIf",
															"src": "10716:119:18"
														},
														{
															"nativeSrc": "10845:312:18",
															"nodeType": "YulBlock",
															"src": "10845:312:18",
															"statements": [
																{
																	"nativeSrc": "10860:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10860:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10891:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10891:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10902:1:18",
																						"nodeType": "YulLiteral",
																						"src": "10902:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10887:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10887:3:18"
																				},
																				"nativeSrc": "10887:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10887:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10874:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "10874:12:18"
																		},
																		"nativeSrc": "10874:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10874:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10864:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10864:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10952:83:18",
																		"nodeType": "YulBlock",
																		"src": "10952:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10954:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "10954:77:18"
																					},
																					"nativeSrc": "10954:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10954:79:18"
																				},
																				"nativeSrc": "10954:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "10954:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10924:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10924:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10932:18:18",
																				"nodeType": "YulLiteral",
																				"src": "10932:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10921:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "10921:2:18"
																		},
																		"nativeSrc": "10921:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10921:30:18"
																	},
																	"nativeSrc": "10918:117:18",
																	"nodeType": "YulIf",
																	"src": "10918:117:18"
																},
																{
																	"nativeSrc": "11049:98:18",
																	"nodeType": "YulAssignment",
																	"src": "11049:98:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11119:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11119:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11130:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11130:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11115:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11115:3:18"
																				},
																				"nativeSrc": "11115:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11115:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11139:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11139:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "11067:47:18",
																			"nodeType": "YulIdentifier",
																			"src": "11067:47:18"
																		},
																		"nativeSrc": "11067:80:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11067:80:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11049:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11049:6:18"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "11057:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11057:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11167:313:18",
															"nodeType": "YulBlock",
															"src": "11167:313:18",
															"statements": [
																{
																	"nativeSrc": "11182:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11182:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11213:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11213:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11224:2:18",
																						"nodeType": "YulLiteral",
																						"src": "11224:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11209:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11209:3:18"
																				},
																				"nativeSrc": "11209:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11209:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11196:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "11196:12:18"
																		},
																		"nativeSrc": "11196:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11196:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11186:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11186:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11275:83:18",
																		"nodeType": "YulBlock",
																		"src": "11275:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11277:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "11277:77:18"
																					},
																					"nativeSrc": "11277:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11277:79:18"
																				},
																				"nativeSrc": "11277:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "11277:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11247:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11247:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11255:18:18",
																				"nodeType": "YulLiteral",
																				"src": "11255:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11244:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "11244:2:18"
																		},
																		"nativeSrc": "11244:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11244:30:18"
																	},
																	"nativeSrc": "11241:117:18",
																	"nodeType": "YulIf",
																	"src": "11241:117:18"
																},
																{
																	"nativeSrc": "11372:98:18",
																	"nodeType": "YulAssignment",
																	"src": "11372:98:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11442:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11442:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11453:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11453:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11438:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11438:3:18"
																				},
																				"nativeSrc": "11438:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11438:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11462:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11462:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "11390:47:18",
																			"nodeType": "YulIdentifier",
																			"src": "11390:47:18"
																		},
																		"nativeSrc": "11390:80:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11390:80:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11372:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11372:6:18"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "11380:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11380:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "10553:934:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10652:9:18",
														"nodeType": "YulTypedName",
														"src": "10652:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10663:7:18",
														"nodeType": "YulTypedName",
														"src": "10663:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10675:6:18",
														"nodeType": "YulTypedName",
														"src": "10675:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10683:6:18",
														"nodeType": "YulTypedName",
														"src": "10683:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10691:6:18",
														"nodeType": "YulTypedName",
														"src": "10691:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10699:6:18",
														"nodeType": "YulTypedName",
														"src": "10699:6:18",
														"type": ""
													}
												],
												"src": "10553:934:18"
											},
											{
												"body": {
													"nativeSrc": "11558:53:18",
													"nodeType": "YulBlock",
													"src": "11558:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11575:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11575:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11598:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "11598:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11580:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "11580:17:18"
																		},
																		"nativeSrc": "11580:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11580:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11568:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11568:6:18"
																},
																"nativeSrc": "11568:37:18",
																"nodeType": "YulFunctionCall",
																"src": "11568:37:18"
															},
															"nativeSrc": "11568:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "11568:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11493:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11546:5:18",
														"nodeType": "YulTypedName",
														"src": "11546:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11553:3:18",
														"nodeType": "YulTypedName",
														"src": "11553:3:18",
														"type": ""
													}
												],
												"src": "11493:118:18"
											},
											{
												"body": {
													"nativeSrc": "11715:124:18",
													"nodeType": "YulBlock",
													"src": "11715:124:18",
													"statements": [
														{
															"nativeSrc": "11725:26:18",
															"nodeType": "YulAssignment",
															"src": "11725:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11737:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11737:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11748:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11748:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11733:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11733:3:18"
																},
																"nativeSrc": "11733:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11733:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11725:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11725:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11805:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11805:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11818:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11818:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11829:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11829:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11814:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11814:3:18"
																		},
																		"nativeSrc": "11814:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11814:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11761:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "11761:43:18"
																},
																"nativeSrc": "11761:71:18",
																"nodeType": "YulFunctionCall",
																"src": "11761:71:18"
															},
															"nativeSrc": "11761:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "11761:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11617:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11687:9:18",
														"nodeType": "YulTypedName",
														"src": "11687:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11699:6:18",
														"nodeType": "YulTypedName",
														"src": "11699:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11710:4:18",
														"nodeType": "YulTypedName",
														"src": "11710:4:18",
														"type": ""
													}
												],
												"src": "11617:222:18"
											},
											{
												"body": {
													"nativeSrc": "11912:241:18",
													"nodeType": "YulBlock",
													"src": "11912:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12017:22:18",
																"nodeType": "YulBlock",
																"src": "12017:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12019:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "12019:16:18"
																			},
																			"nativeSrc": "12019:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12019:18:18"
																		},
																		"nativeSrc": "12019:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12019:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11989:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11989:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11997:18:18",
																		"nodeType": "YulLiteral",
																		"src": "11997:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11986:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11986:2:18"
																},
																"nativeSrc": "11986:30:18",
																"nodeType": "YulFunctionCall",
																"src": "11986:30:18"
															},
															"nativeSrc": "11983:56:18",
															"nodeType": "YulIf",
															"src": "11983:56:18"
														},
														{
															"nativeSrc": "12049:37:18",
															"nodeType": "YulAssignment",
															"src": "12049:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12079:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12079:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "12057:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "12057:21:18"
																},
																"nativeSrc": "12057:29:18",
																"nodeType": "YulFunctionCall",
																"src": "12057:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12049:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12049:4:18"
																}
															]
														},
														{
															"nativeSrc": "12123:23:18",
															"nodeType": "YulAssignment",
															"src": "12123:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "12135:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "12135:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12141:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12141:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12131:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12131:3:18"
																},
																"nativeSrc": "12131:15:18",
																"nodeType": "YulFunctionCall",
																"src": "12131:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12123:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12123:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "11845:308:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11896:6:18",
														"nodeType": "YulTypedName",
														"src": "11896:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11907:4:18",
														"nodeType": "YulTypedName",
														"src": "11907:4:18",
														"type": ""
													}
												],
												"src": "11845:308:18"
											},
											{
												"body": {
													"nativeSrc": "12243:341:18",
													"nodeType": "YulBlock",
													"src": "12243:341:18",
													"statements": [
														{
															"nativeSrc": "12253:75:18",
															"nodeType": "YulAssignment",
															"src": "12253:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12320:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12320:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "12278:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "12278:41:18"
																		},
																		"nativeSrc": "12278:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12278:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12262:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "12262:15:18"
																},
																"nativeSrc": "12262:66:18",
																"nodeType": "YulFunctionCall",
																"src": "12262:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12253:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12253:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12344:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12344:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12351:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12351:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12337:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12337:6:18"
																},
																"nativeSrc": "12337:21:18",
																"nodeType": "YulFunctionCall",
																"src": "12337:21:18"
															},
															"nativeSrc": "12337:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "12337:21:18"
														},
														{
															"nativeSrc": "12367:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12367:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12382:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12382:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12389:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12389:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12378:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12378:3:18"
																},
																"nativeSrc": "12378:16:18",
																"nodeType": "YulFunctionCall",
																"src": "12378:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12371:3:18",
																	"nodeType": "YulTypedName",
																	"src": "12371:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12432:83:18",
																"nodeType": "YulBlock",
																"src": "12432:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "12434:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "12434:77:18"
																			},
																			"nativeSrc": "12434:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12434:79:18"
																		},
																		"nativeSrc": "12434:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12434:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "12413:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "12413:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12418:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12418:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12409:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12409:3:18"
																		},
																		"nativeSrc": "12409:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12409:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12427:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12427:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12406:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "12406:2:18"
																},
																"nativeSrc": "12406:25:18",
																"nodeType": "YulFunctionCall",
																"src": "12406:25:18"
															},
															"nativeSrc": "12403:112:18",
															"nodeType": "YulIf",
															"src": "12403:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12561:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12561:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "12566:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12566:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12571:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12571:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "12524:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "12524:36:18"
																},
																"nativeSrc": "12524:54:18",
																"nodeType": "YulFunctionCall",
																"src": "12524:54:18"
															},
															"nativeSrc": "12524:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "12524:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "12159:425:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12216:3:18",
														"nodeType": "YulTypedName",
														"src": "12216:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12221:6:18",
														"nodeType": "YulTypedName",
														"src": "12221:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12229:3:18",
														"nodeType": "YulTypedName",
														"src": "12229:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12237:5:18",
														"nodeType": "YulTypedName",
														"src": "12237:5:18",
														"type": ""
													}
												],
												"src": "12159:425:18"
											},
											{
												"body": {
													"nativeSrc": "12666:278:18",
													"nodeType": "YulBlock",
													"src": "12666:278:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "12715:83:18",
																"nodeType": "YulBlock",
																"src": "12715:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12717:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "12717:77:18"
																			},
																			"nativeSrc": "12717:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "12717:79:18"
																		},
																		"nativeSrc": "12717:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "12717:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12694:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12694:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12702:4:18",
																						"nodeType": "YulLiteral",
																						"src": "12702:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12690:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12690:3:18"
																				},
																				"nativeSrc": "12690:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12690:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12709:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "12709:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12686:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12686:3:18"
																		},
																		"nativeSrc": "12686:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12686:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12679:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12679:6:18"
																},
																"nativeSrc": "12679:35:18",
																"nodeType": "YulFunctionCall",
																"src": "12679:35:18"
															},
															"nativeSrc": "12676:122:18",
															"nodeType": "YulIf",
															"src": "12676:122:18"
														},
														{
															"nativeSrc": "12807:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12807:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12834:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12834:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12821:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "12821:12:18"
																},
																"nativeSrc": "12821:20:18",
																"nodeType": "YulFunctionCall",
																"src": "12821:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12811:6:18",
																	"nodeType": "YulTypedName",
																	"src": "12811:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12850:88:18",
															"nodeType": "YulAssignment",
															"src": "12850:88:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12911:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12911:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12919:4:18",
																				"nodeType": "YulLiteral",
																				"src": "12919:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12907:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12907:3:18"
																		},
																		"nativeSrc": "12907:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12907:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12926:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12926:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12934:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12934:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "12859:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "12859:47:18"
																},
																"nativeSrc": "12859:79:18",
																"nodeType": "YulFunctionCall",
																"src": "12859:79:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12850:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "12850:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "12604:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12644:6:18",
														"nodeType": "YulTypedName",
														"src": "12644:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12652:3:18",
														"nodeType": "YulTypedName",
														"src": "12652:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12660:5:18",
														"nodeType": "YulTypedName",
														"src": "12660:5:18",
														"type": ""
													}
												],
												"src": "12604:340:18"
											},
											{
												"body": {
													"nativeSrc": "13070:859:18",
													"nodeType": "YulBlock",
													"src": "13070:859:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "13116:83:18",
																"nodeType": "YulBlock",
																"src": "13116:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13118:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "13118:77:18"
																			},
																			"nativeSrc": "13118:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13118:79:18"
																		},
																		"nativeSrc": "13118:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13118:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13091:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13091:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13100:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13100:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13087:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13087:3:18"
																		},
																		"nativeSrc": "13087:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13087:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13112:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13112:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13083:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13083:3:18"
																},
																"nativeSrc": "13083:32:18",
																"nodeType": "YulFunctionCall",
																"src": "13083:32:18"
															},
															"nativeSrc": "13080:119:18",
															"nodeType": "YulIf",
															"src": "13080:119:18"
														},
														{
															"nativeSrc": "13209:287:18",
															"nodeType": "YulBlock",
															"src": "13209:287:18",
															"statements": [
																{
																	"nativeSrc": "13224:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13224:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13255:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13255:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13266:1:18",
																						"nodeType": "YulLiteral",
																						"src": "13266:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13251:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13251:3:18"
																				},
																				"nativeSrc": "13251:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13251:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13238:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "13238:12:18"
																		},
																		"nativeSrc": "13238:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13238:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13228:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13228:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13316:83:18",
																		"nodeType": "YulBlock",
																		"src": "13316:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13318:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "13318:77:18"
																					},
																					"nativeSrc": "13318:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13318:79:18"
																				},
																				"nativeSrc": "13318:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "13318:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13288:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13288:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13296:18:18",
																				"nodeType": "YulLiteral",
																				"src": "13296:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13285:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "13285:2:18"
																		},
																		"nativeSrc": "13285:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13285:30:18"
																	},
																	"nativeSrc": "13282:117:18",
																	"nodeType": "YulIf",
																	"src": "13282:117:18"
																},
																{
																	"nativeSrc": "13413:73:18",
																	"nodeType": "YulAssignment",
																	"src": "13413:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13458:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13458:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13469:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13469:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13454:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13454:3:18"
																				},
																				"nativeSrc": "13454:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13454:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13478:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13478:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "13423:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "13423:30:18"
																		},
																		"nativeSrc": "13423:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13423:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13413:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13413:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13506:288:18",
															"nodeType": "YulBlock",
															"src": "13506:288:18",
															"statements": [
																{
																	"nativeSrc": "13521:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13521:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13552:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13552:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13563:2:18",
																						"nodeType": "YulLiteral",
																						"src": "13563:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13548:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13548:3:18"
																				},
																				"nativeSrc": "13548:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13548:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13535:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "13535:12:18"
																		},
																		"nativeSrc": "13535:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13535:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13525:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13525:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13614:83:18",
																		"nodeType": "YulBlock",
																		"src": "13614:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13616:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "13616:77:18"
																					},
																					"nativeSrc": "13616:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13616:79:18"
																				},
																				"nativeSrc": "13616:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "13616:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13586:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13586:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13594:18:18",
																				"nodeType": "YulLiteral",
																				"src": "13594:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13583:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "13583:2:18"
																		},
																		"nativeSrc": "13583:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13583:30:18"
																	},
																	"nativeSrc": "13580:117:18",
																	"nodeType": "YulIf",
																	"src": "13580:117:18"
																},
																{
																	"nativeSrc": "13711:73:18",
																	"nodeType": "YulAssignment",
																	"src": "13711:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13756:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13756:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13767:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13767:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13752:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13752:3:18"
																				},
																				"nativeSrc": "13752:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13752:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13776:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13776:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "13721:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "13721:30:18"
																		},
																		"nativeSrc": "13721:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13721:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13711:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13711:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13804:118:18",
															"nodeType": "YulBlock",
															"src": "13804:118:18",
															"statements": [
																{
																	"nativeSrc": "13819:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13819:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13833:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13833:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13823:6:18",
																			"nodeType": "YulTypedName",
																			"src": "13823:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13849:63:18",
																	"nodeType": "YulAssignment",
																	"src": "13849:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13884:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13884:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13895:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13895:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13880:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "13880:3:18"
																				},
																				"nativeSrc": "13880:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13880:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13904:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "13904:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13859:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "13859:20:18"
																		},
																		"nativeSrc": "13859:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13859:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13849:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "13849:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nativeSrc": "12950:979:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13024:9:18",
														"nodeType": "YulTypedName",
														"src": "13024:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13035:7:18",
														"nodeType": "YulTypedName",
														"src": "13035:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13047:6:18",
														"nodeType": "YulTypedName",
														"src": "13047:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13055:6:18",
														"nodeType": "YulTypedName",
														"src": "13055:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13063:6:18",
														"nodeType": "YulTypedName",
														"src": "13063:6:18",
														"type": ""
													}
												],
												"src": "12950:979:18"
											},
											{
												"body": {
													"nativeSrc": "14018:391:18",
													"nodeType": "YulBlock",
													"src": "14018:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "14064:83:18",
																"nodeType": "YulBlock",
																"src": "14064:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14066:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "14066:77:18"
																			},
																			"nativeSrc": "14066:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14066:79:18"
																		},
																		"nativeSrc": "14066:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "14066:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14039:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14039:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14048:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14048:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14035:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14035:3:18"
																		},
																		"nativeSrc": "14035:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14035:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14060:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14060:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14031:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14031:3:18"
																},
																"nativeSrc": "14031:32:18",
																"nodeType": "YulFunctionCall",
																"src": "14031:32:18"
															},
															"nativeSrc": "14028:119:18",
															"nodeType": "YulIf",
															"src": "14028:119:18"
														},
														{
															"nativeSrc": "14157:117:18",
															"nodeType": "YulBlock",
															"src": "14157:117:18",
															"statements": [
																{
																	"nativeSrc": "14172:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14172:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14186:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14186:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14176:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14176:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14201:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14201:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14236:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14236:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14247:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14247:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14232:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14232:3:18"
																				},
																				"nativeSrc": "14232:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14232:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14256:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14256:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14211:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14211:20:18"
																		},
																		"nativeSrc": "14211:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14211:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14201:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14201:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14284:118:18",
															"nodeType": "YulBlock",
															"src": "14284:118:18",
															"statements": [
																{
																	"nativeSrc": "14299:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14299:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14313:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14313:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14303:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14303:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14329:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14329:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14364:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14364:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14375:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14375:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14360:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14360:3:18"
																				},
																				"nativeSrc": "14360:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14360:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14384:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14384:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14339:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14339:20:18"
																		},
																		"nativeSrc": "14339:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14339:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14329:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14329:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13935:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13980:9:18",
														"nodeType": "YulTypedName",
														"src": "13980:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13991:7:18",
														"nodeType": "YulTypedName",
														"src": "13991:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14003:6:18",
														"nodeType": "YulTypedName",
														"src": "14003:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14011:6:18",
														"nodeType": "YulTypedName",
														"src": "14011:6:18",
														"type": ""
													}
												],
												"src": "13935:474:18"
											},
											{
												"body": {
													"nativeSrc": "14443:152:18",
													"nodeType": "YulBlock",
													"src": "14443:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14460:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14460:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14463:77:18",
																		"nodeType": "YulLiteral",
																		"src": "14463:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14453:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14453:6:18"
																},
																"nativeSrc": "14453:88:18",
																"nodeType": "YulFunctionCall",
																"src": "14453:88:18"
															},
															"nativeSrc": "14453:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "14453:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14557:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14557:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14560:4:18",
																		"nodeType": "YulLiteral",
																		"src": "14560:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14550:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14550:6:18"
																},
																"nativeSrc": "14550:15:18",
																"nodeType": "YulFunctionCall",
																"src": "14550:15:18"
															},
															"nativeSrc": "14550:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "14550:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14581:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14581:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14584:4:18",
																		"nodeType": "YulLiteral",
																		"src": "14584:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14574:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14574:6:18"
																},
																"nativeSrc": "14574:15:18",
																"nodeType": "YulFunctionCall",
																"src": "14574:15:18"
															},
															"nativeSrc": "14574:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "14574:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "14415:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "14415:180:18"
											},
											{
												"body": {
													"nativeSrc": "14652:269:18",
													"nodeType": "YulBlock",
													"src": "14652:269:18",
													"statements": [
														{
															"nativeSrc": "14662:22:18",
															"nodeType": "YulAssignment",
															"src": "14662:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14676:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "14676:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14682:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14682:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14672:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14672:3:18"
																},
																"nativeSrc": "14672:12:18",
																"nodeType": "YulFunctionCall",
																"src": "14672:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14662:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14662:6:18"
																}
															]
														},
														{
															"nativeSrc": "14693:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "14693:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14723:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "14723:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14729:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14729:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14719:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14719:3:18"
																},
																"nativeSrc": "14719:12:18",
																"nodeType": "YulFunctionCall",
																"src": "14719:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "14697:18:18",
																	"nodeType": "YulTypedName",
																	"src": "14697:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14770:51:18",
																"nodeType": "YulBlock",
																"src": "14770:51:18",
																"statements": [
																	{
																		"nativeSrc": "14784:27:18",
																		"nodeType": "YulAssignment",
																		"src": "14784:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "14798:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "14798:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14806:4:18",
																					"nodeType": "YulLiteral",
																					"src": "14806:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "14794:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "14794:3:18"
																			},
																			"nativeSrc": "14794:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14794:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "14784:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14784:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14750:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "14750:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14743:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14743:6:18"
																},
																"nativeSrc": "14743:26:18",
																"nodeType": "YulFunctionCall",
																"src": "14743:26:18"
															},
															"nativeSrc": "14740:81:18",
															"nodeType": "YulIf",
															"src": "14740:81:18"
														},
														{
															"body": {
																"nativeSrc": "14873:42:18",
																"nodeType": "YulBlock",
																"src": "14873:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14887:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "14887:16:18"
																			},
																			"nativeSrc": "14887:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14887:18:18"
																		},
																		"nativeSrc": "14887:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "14887:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14837:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "14837:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14860:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14860:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14868:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14868:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14857:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "14857:2:18"
																		},
																		"nativeSrc": "14857:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14857:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14834:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "14834:2:18"
																},
																"nativeSrc": "14834:38:18",
																"nodeType": "YulFunctionCall",
																"src": "14834:38:18"
															},
															"nativeSrc": "14831:84:18",
															"nodeType": "YulIf",
															"src": "14831:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "14601:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14636:4:18",
														"nodeType": "YulTypedName",
														"src": "14636:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14645:6:18",
														"nodeType": "YulTypedName",
														"src": "14645:6:18",
														"type": ""
													}
												],
												"src": "14601:320:18"
											},
											{
												"body": {
													"nativeSrc": "15033:56:18",
													"nodeType": "YulBlock",
													"src": "15033:56:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15055:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15055:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15063:1:18",
																				"nodeType": "YulLiteral",
																				"src": "15063:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15051:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15051:3:18"
																		},
																		"nativeSrc": "15051:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15051:14:18"
																	},
																	{
																		"hexValue": "4e756c6c2041646472657373",
																		"kind": "string",
																		"nativeSrc": "15067:14:18",
																		"nodeType": "YulLiteral",
																		"src": "15067:14:18",
																		"type": "",
																		"value": "Null Address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15044:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15044:6:18"
																},
																"nativeSrc": "15044:38:18",
																"nodeType": "YulFunctionCall",
																"src": "15044:38:18"
															},
															"nativeSrc": "15044:38:18",
															"nodeType": "YulExpressionStatement",
															"src": "15044:38:18"
														}
													]
												},
												"name": "store_literal_in_memory_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
												"nativeSrc": "14927:162:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15025:6:18",
														"nodeType": "YulTypedName",
														"src": "15025:6:18",
														"type": ""
													}
												],
												"src": "14927:162:18"
											},
											{
												"body": {
													"nativeSrc": "15241:220:18",
													"nodeType": "YulBlock",
													"src": "15241:220:18",
													"statements": [
														{
															"nativeSrc": "15251:74:18",
															"nodeType": "YulAssignment",
															"src": "15251:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15317:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15317:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15322:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15322:2:18",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15258:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "15258:58:18"
																},
																"nativeSrc": "15258:67:18",
																"nodeType": "YulFunctionCall",
																"src": "15258:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15251:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15251:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15423:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15423:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																	"nativeSrc": "15334:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "15334:88:18"
																},
																"nativeSrc": "15334:93:18",
																"nodeType": "YulFunctionCall",
																"src": "15334:93:18"
															},
															"nativeSrc": "15334:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "15334:93:18"
														},
														{
															"nativeSrc": "15436:19:18",
															"nodeType": "YulAssignment",
															"src": "15436:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15447:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15447:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15452:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15452:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15443:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15443:3:18"
																},
																"nativeSrc": "15443:12:18",
																"nodeType": "YulFunctionCall",
																"src": "15443:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15436:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15436:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15095:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15229:3:18",
														"nodeType": "YulTypedName",
														"src": "15229:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15237:3:18",
														"nodeType": "YulTypedName",
														"src": "15237:3:18",
														"type": ""
													}
												],
												"src": "15095:366:18"
											},
											{
												"body": {
													"nativeSrc": "15638:248:18",
													"nodeType": "YulBlock",
													"src": "15638:248:18",
													"statements": [
														{
															"nativeSrc": "15648:26:18",
															"nodeType": "YulAssignment",
															"src": "15648:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15660:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15660:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15671:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15671:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15656:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15656:3:18"
																},
																"nativeSrc": "15656:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15656:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15648:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15648:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15695:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15695:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15706:1:18",
																				"nodeType": "YulLiteral",
																				"src": "15706:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15691:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15691:3:18"
																		},
																		"nativeSrc": "15691:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15691:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15714:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "15714:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15720:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15720:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15710:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15710:3:18"
																		},
																		"nativeSrc": "15710:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15710:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15684:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15684:6:18"
																},
																"nativeSrc": "15684:47:18",
																"nodeType": "YulFunctionCall",
																"src": "15684:47:18"
															},
															"nativeSrc": "15684:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "15684:47:18"
														},
														{
															"nativeSrc": "15740:139:18",
															"nodeType": "YulAssignment",
															"src": "15740:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15874:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "15874:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15748:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "15748:124:18"
																},
																"nativeSrc": "15748:131:18",
																"nodeType": "YulFunctionCall",
																"src": "15748:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15740:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15740:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15467:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15618:9:18",
														"nodeType": "YulTypedName",
														"src": "15618:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15633:4:18",
														"nodeType": "YulTypedName",
														"src": "15633:4:18",
														"type": ""
													}
												],
												"src": "15467:419:18"
											},
											{
												"body": {
													"nativeSrc": "15998:119:18",
													"nodeType": "YulBlock",
													"src": "15998:119:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16020:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16020:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16028:1:18",
																				"nodeType": "YulLiteral",
																				"src": "16028:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16016:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16016:3:18"
																		},
																		"nativeSrc": "16016:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16016:14:18"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b",
																		"kind": "string",
																		"nativeSrc": "16032:34:18",
																		"nodeType": "YulLiteral",
																		"src": "16032:34:18",
																		"type": "",
																		"value": "Transfer failed: Sender is black"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16009:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16009:6:18"
																},
																"nativeSrc": "16009:58:18",
																"nodeType": "YulFunctionCall",
																"src": "16009:58:18"
															},
															"nativeSrc": "16009:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "16009:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16088:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16088:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16096:2:18",
																				"nodeType": "YulLiteral",
																				"src": "16096:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16084:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16084:3:18"
																		},
																		"nativeSrc": "16084:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16084:15:18"
																	},
																	{
																		"hexValue": "6c6973746564",
																		"kind": "string",
																		"nativeSrc": "16101:8:18",
																		"nodeType": "YulLiteral",
																		"src": "16101:8:18",
																		"type": "",
																		"value": "listed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16077:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16077:6:18"
																},
																"nativeSrc": "16077:33:18",
																"nodeType": "YulFunctionCall",
																"src": "16077:33:18"
															},
															"nativeSrc": "16077:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "16077:33:18"
														}
													]
												},
												"name": "store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
												"nativeSrc": "15892:225:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15990:6:18",
														"nodeType": "YulTypedName",
														"src": "15990:6:18",
														"type": ""
													}
												],
												"src": "15892:225:18"
											},
											{
												"body": {
													"nativeSrc": "16269:220:18",
													"nodeType": "YulBlock",
													"src": "16269:220:18",
													"statements": [
														{
															"nativeSrc": "16279:74:18",
															"nodeType": "YulAssignment",
															"src": "16279:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16345:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16345:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16350:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16350:2:18",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16286:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "16286:58:18"
																},
																"nativeSrc": "16286:67:18",
																"nodeType": "YulFunctionCall",
																"src": "16286:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16279:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16279:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16451:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16451:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																	"nativeSrc": "16362:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "16362:88:18"
																},
																"nativeSrc": "16362:93:18",
																"nodeType": "YulFunctionCall",
																"src": "16362:93:18"
															},
															"nativeSrc": "16362:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "16362:93:18"
														},
														{
															"nativeSrc": "16464:19:18",
															"nodeType": "YulAssignment",
															"src": "16464:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16475:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16475:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16480:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16480:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16471:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16471:3:18"
																},
																"nativeSrc": "16471:12:18",
																"nodeType": "YulFunctionCall",
																"src": "16471:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16464:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16464:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16123:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16257:3:18",
														"nodeType": "YulTypedName",
														"src": "16257:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16265:3:18",
														"nodeType": "YulTypedName",
														"src": "16265:3:18",
														"type": ""
													}
												],
												"src": "16123:366:18"
											},
											{
												"body": {
													"nativeSrc": "16666:248:18",
													"nodeType": "YulBlock",
													"src": "16666:248:18",
													"statements": [
														{
															"nativeSrc": "16676:26:18",
															"nodeType": "YulAssignment",
															"src": "16676:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16688:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16688:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16699:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16699:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16684:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16684:3:18"
																},
																"nativeSrc": "16684:18:18",
																"nodeType": "YulFunctionCall",
																"src": "16684:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16676:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16676:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16723:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16723:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16734:1:18",
																				"nodeType": "YulLiteral",
																				"src": "16734:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16719:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16719:3:18"
																		},
																		"nativeSrc": "16719:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16719:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16742:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "16742:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16748:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16748:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16738:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16738:3:18"
																		},
																		"nativeSrc": "16738:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16738:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16712:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16712:6:18"
																},
																"nativeSrc": "16712:47:18",
																"nodeType": "YulFunctionCall",
																"src": "16712:47:18"
															},
															"nativeSrc": "16712:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "16712:47:18"
														},
														{
															"nativeSrc": "16768:139:18",
															"nodeType": "YulAssignment",
															"src": "16768:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16902:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "16902:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16776:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "16776:124:18"
																},
																"nativeSrc": "16776:131:18",
																"nodeType": "YulFunctionCall",
																"src": "16776:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16768:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16768:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16495:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16646:9:18",
														"nodeType": "YulTypedName",
														"src": "16646:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16661:4:18",
														"nodeType": "YulTypedName",
														"src": "16661:4:18",
														"type": ""
													}
												],
												"src": "16495:419:18"
											},
											{
												"body": {
													"nativeSrc": "17026:122:18",
													"nodeType": "YulBlock",
													"src": "17026:122:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17048:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "17048:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17056:1:18",
																				"nodeType": "YulLiteral",
																				"src": "17056:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17044:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17044:3:18"
																		},
																		"nativeSrc": "17044:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17044:14:18"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c",
																		"kind": "string",
																		"nativeSrc": "17060:34:18",
																		"nodeType": "YulLiteral",
																		"src": "17060:34:18",
																		"type": "",
																		"value": "Transfer failed: Recipient is bl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17037:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17037:6:18"
																},
																"nativeSrc": "17037:58:18",
																"nodeType": "YulFunctionCall",
																"src": "17037:58:18"
															},
															"nativeSrc": "17037:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "17037:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17116:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "17116:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17124:2:18",
																				"nodeType": "YulLiteral",
																				"src": "17124:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17112:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17112:3:18"
																		},
																		"nativeSrc": "17112:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17112:15:18"
																	},
																	{
																		"hexValue": "61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "17129:11:18",
																		"nodeType": "YulLiteral",
																		"src": "17129:11:18",
																		"type": "",
																		"value": "acklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17105:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17105:6:18"
																},
																"nativeSrc": "17105:36:18",
																"nodeType": "YulFunctionCall",
																"src": "17105:36:18"
															},
															"nativeSrc": "17105:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "17105:36:18"
														}
													]
												},
												"name": "store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
												"nativeSrc": "16920:228:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17018:6:18",
														"nodeType": "YulTypedName",
														"src": "17018:6:18",
														"type": ""
													}
												],
												"src": "16920:228:18"
											},
											{
												"body": {
													"nativeSrc": "17300:220:18",
													"nodeType": "YulBlock",
													"src": "17300:220:18",
													"statements": [
														{
															"nativeSrc": "17310:74:18",
															"nodeType": "YulAssignment",
															"src": "17310:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17376:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17376:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17381:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17381:2:18",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17317:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "17317:58:18"
																},
																"nativeSrc": "17317:67:18",
																"nodeType": "YulFunctionCall",
																"src": "17317:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17310:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17310:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17482:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17482:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																	"nativeSrc": "17393:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "17393:88:18"
																},
																"nativeSrc": "17393:93:18",
																"nodeType": "YulFunctionCall",
																"src": "17393:93:18"
															},
															"nativeSrc": "17393:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "17393:93:18"
														},
														{
															"nativeSrc": "17495:19:18",
															"nodeType": "YulAssignment",
															"src": "17495:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17506:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17506:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17511:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17511:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17502:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17502:3:18"
																},
																"nativeSrc": "17502:12:18",
																"nodeType": "YulFunctionCall",
																"src": "17502:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17495:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17495:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17154:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17288:3:18",
														"nodeType": "YulTypedName",
														"src": "17288:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17296:3:18",
														"nodeType": "YulTypedName",
														"src": "17296:3:18",
														"type": ""
													}
												],
												"src": "17154:366:18"
											},
											{
												"body": {
													"nativeSrc": "17697:248:18",
													"nodeType": "YulBlock",
													"src": "17697:248:18",
													"statements": [
														{
															"nativeSrc": "17707:26:18",
															"nodeType": "YulAssignment",
															"src": "17707:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17719:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "17719:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17730:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17730:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17715:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17715:3:18"
																},
																"nativeSrc": "17715:18:18",
																"nodeType": "YulFunctionCall",
																"src": "17715:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17707:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17707:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17754:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17754:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17765:1:18",
																				"nodeType": "YulLiteral",
																				"src": "17765:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17750:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17750:3:18"
																		},
																		"nativeSrc": "17750:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17750:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17773:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "17773:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17779:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17779:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17769:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17769:3:18"
																		},
																		"nativeSrc": "17769:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17769:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17743:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17743:6:18"
																},
																"nativeSrc": "17743:47:18",
																"nodeType": "YulFunctionCall",
																"src": "17743:47:18"
															},
															"nativeSrc": "17743:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "17743:47:18"
														},
														{
															"nativeSrc": "17799:139:18",
															"nodeType": "YulAssignment",
															"src": "17799:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17933:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17933:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17807:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "17807:124:18"
																},
																"nativeSrc": "17807:131:18",
																"nodeType": "YulFunctionCall",
																"src": "17807:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17799:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17799:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17526:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17677:9:18",
														"nodeType": "YulTypedName",
														"src": "17677:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17692:4:18",
														"nodeType": "YulTypedName",
														"src": "17692:4:18",
														"type": ""
													}
												],
												"src": "17526:419:18"
											},
											{
												"body": {
													"nativeSrc": "18057:68:18",
													"nodeType": "YulBlock",
													"src": "18057:68:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18079:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "18079:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18087:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18087:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18075:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18075:3:18"
																		},
																		"nativeSrc": "18075:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18075:14:18"
																	},
																	{
																		"hexValue": "416d6f756e742073686f756c646e2774206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "18091:26:18",
																		"nodeType": "YulLiteral",
																		"src": "18091:26:18",
																		"type": "",
																		"value": "Amount shouldn't be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18068:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18068:6:18"
																},
																"nativeSrc": "18068:50:18",
																"nodeType": "YulFunctionCall",
																"src": "18068:50:18"
															},
															"nativeSrc": "18068:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "18068:50:18"
														}
													]
												},
												"name": "store_literal_in_memory_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
												"nativeSrc": "17951:174:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18049:6:18",
														"nodeType": "YulTypedName",
														"src": "18049:6:18",
														"type": ""
													}
												],
												"src": "17951:174:18"
											},
											{
												"body": {
													"nativeSrc": "18277:220:18",
													"nodeType": "YulBlock",
													"src": "18277:220:18",
													"statements": [
														{
															"nativeSrc": "18287:74:18",
															"nodeType": "YulAssignment",
															"src": "18287:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18353:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18353:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18358:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18358:2:18",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18294:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "18294:58:18"
																},
																"nativeSrc": "18294:67:18",
																"nodeType": "YulFunctionCall",
																"src": "18294:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18287:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18287:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18459:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18459:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																	"nativeSrc": "18370:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "18370:88:18"
																},
																"nativeSrc": "18370:93:18",
																"nodeType": "YulFunctionCall",
																"src": "18370:93:18"
															},
															"nativeSrc": "18370:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "18370:93:18"
														},
														{
															"nativeSrc": "18472:19:18",
															"nodeType": "YulAssignment",
															"src": "18472:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18483:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18483:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18488:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18488:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18479:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18479:3:18"
																},
																"nativeSrc": "18479:12:18",
																"nodeType": "YulFunctionCall",
																"src": "18479:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18472:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18472:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18131:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18265:3:18",
														"nodeType": "YulTypedName",
														"src": "18265:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18273:3:18",
														"nodeType": "YulTypedName",
														"src": "18273:3:18",
														"type": ""
													}
												],
												"src": "18131:366:18"
											},
											{
												"body": {
													"nativeSrc": "18674:248:18",
													"nodeType": "YulBlock",
													"src": "18674:248:18",
													"statements": [
														{
															"nativeSrc": "18684:26:18",
															"nodeType": "YulAssignment",
															"src": "18684:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18696:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "18696:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18707:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18707:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18692:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18692:3:18"
																},
																"nativeSrc": "18692:18:18",
																"nodeType": "YulFunctionCall",
																"src": "18692:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18684:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18684:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18731:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18731:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18742:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18742:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18727:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18727:3:18"
																		},
																		"nativeSrc": "18727:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18727:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18750:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "18750:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18756:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18756:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18746:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18746:3:18"
																		},
																		"nativeSrc": "18746:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18746:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18720:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18720:6:18"
																},
																"nativeSrc": "18720:47:18",
																"nodeType": "YulFunctionCall",
																"src": "18720:47:18"
															},
															"nativeSrc": "18720:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "18720:47:18"
														},
														{
															"nativeSrc": "18776:139:18",
															"nodeType": "YulAssignment",
															"src": "18776:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18910:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18910:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18784:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "18784:124:18"
																},
																"nativeSrc": "18784:131:18",
																"nodeType": "YulFunctionCall",
																"src": "18784:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18776:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18776:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18503:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18654:9:18",
														"nodeType": "YulTypedName",
														"src": "18654:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18669:4:18",
														"nodeType": "YulTypedName",
														"src": "18669:4:18",
														"type": ""
													}
												],
												"src": "18503:419:18"
											},
											{
												"body": {
													"nativeSrc": "19034:115:18",
													"nodeType": "YulBlock",
													"src": "19034:115:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19056:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19056:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19064:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19064:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19052:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19052:3:18"
																		},
																		"nativeSrc": "19052:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19052:14:18"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b",
																		"kind": "string",
																		"nativeSrc": "19068:34:18",
																		"nodeType": "YulLiteral",
																		"src": "19068:34:18",
																		"type": "",
																		"value": "Transfer failed: Tokens are lock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19045:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19045:6:18"
																},
																"nativeSrc": "19045:58:18",
																"nodeType": "YulFunctionCall",
																"src": "19045:58:18"
															},
															"nativeSrc": "19045:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "19045:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19124:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19124:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19132:2:18",
																				"nodeType": "YulLiteral",
																				"src": "19132:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19120:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19120:3:18"
																		},
																		"nativeSrc": "19120:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19120:15:18"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "19137:4:18",
																		"nodeType": "YulLiteral",
																		"src": "19137:4:18",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19113:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19113:6:18"
																},
																"nativeSrc": "19113:29:18",
																"nodeType": "YulFunctionCall",
																"src": "19113:29:18"
															},
															"nativeSrc": "19113:29:18",
															"nodeType": "YulExpressionStatement",
															"src": "19113:29:18"
														}
													]
												},
												"name": "store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
												"nativeSrc": "18928:221:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19026:6:18",
														"nodeType": "YulTypedName",
														"src": "19026:6:18",
														"type": ""
													}
												],
												"src": "18928:221:18"
											},
											{
												"body": {
													"nativeSrc": "19301:220:18",
													"nodeType": "YulBlock",
													"src": "19301:220:18",
													"statements": [
														{
															"nativeSrc": "19311:74:18",
															"nodeType": "YulAssignment",
															"src": "19311:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19377:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19377:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19382:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19382:2:18",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19318:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "19318:58:18"
																},
																"nativeSrc": "19318:67:18",
																"nodeType": "YulFunctionCall",
																"src": "19318:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19311:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19311:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19483:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19483:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																	"nativeSrc": "19394:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "19394:88:18"
																},
																"nativeSrc": "19394:93:18",
																"nodeType": "YulFunctionCall",
																"src": "19394:93:18"
															},
															"nativeSrc": "19394:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "19394:93:18"
														},
														{
															"nativeSrc": "19496:19:18",
															"nodeType": "YulAssignment",
															"src": "19496:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19507:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19507:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19512:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19512:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19503:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19503:3:18"
																},
																"nativeSrc": "19503:12:18",
																"nodeType": "YulFunctionCall",
																"src": "19503:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19496:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19496:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19155:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19289:3:18",
														"nodeType": "YulTypedName",
														"src": "19289:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19297:3:18",
														"nodeType": "YulTypedName",
														"src": "19297:3:18",
														"type": ""
													}
												],
												"src": "19155:366:18"
											},
											{
												"body": {
													"nativeSrc": "19698:248:18",
													"nodeType": "YulBlock",
													"src": "19698:248:18",
													"statements": [
														{
															"nativeSrc": "19708:26:18",
															"nodeType": "YulAssignment",
															"src": "19708:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19720:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "19720:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19731:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19731:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19716:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19716:3:18"
																},
																"nativeSrc": "19716:18:18",
																"nodeType": "YulFunctionCall",
																"src": "19716:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19708:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19708:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19755:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19755:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19766:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19766:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19751:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19751:3:18"
																		},
																		"nativeSrc": "19751:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19751:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19774:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "19774:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19780:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19780:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19770:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19770:3:18"
																		},
																		"nativeSrc": "19770:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19770:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19744:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19744:6:18"
																},
																"nativeSrc": "19744:47:18",
																"nodeType": "YulFunctionCall",
																"src": "19744:47:18"
															},
															"nativeSrc": "19744:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "19744:47:18"
														},
														{
															"nativeSrc": "19800:139:18",
															"nodeType": "YulAssignment",
															"src": "19800:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19934:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "19934:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19808:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "19808:124:18"
																},
																"nativeSrc": "19808:131:18",
																"nodeType": "YulFunctionCall",
																"src": "19808:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19800:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19800:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19527:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19678:9:18",
														"nodeType": "YulTypedName",
														"src": "19678:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19693:4:18",
														"nodeType": "YulTypedName",
														"src": "19693:4:18",
														"type": ""
													}
												],
												"src": "19527:419:18"
											},
											{
												"body": {
													"nativeSrc": "20058:69:18",
													"nodeType": "YulBlock",
													"src": "20058:69:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20080:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "20080:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20088:1:18",
																				"nodeType": "YulLiteral",
																				"src": "20088:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20076:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20076:3:18"
																		},
																		"nativeSrc": "20076:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20076:14:18"
																	},
																	{
																		"hexValue": "41646472657373206973206e6f74206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "20092:27:18",
																		"nodeType": "YulLiteral",
																		"src": "20092:27:18",
																		"type": "",
																		"value": "Address is not a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20069:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20069:6:18"
																},
																"nativeSrc": "20069:51:18",
																"nodeType": "YulFunctionCall",
																"src": "20069:51:18"
															},
															"nativeSrc": "20069:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "20069:51:18"
														}
													]
												},
												"name": "store_literal_in_memory_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed",
												"nativeSrc": "19952:175:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20050:6:18",
														"nodeType": "YulTypedName",
														"src": "20050:6:18",
														"type": ""
													}
												],
												"src": "19952:175:18"
											},
											{
												"body": {
													"nativeSrc": "20279:220:18",
													"nodeType": "YulBlock",
													"src": "20279:220:18",
													"statements": [
														{
															"nativeSrc": "20289:74:18",
															"nodeType": "YulAssignment",
															"src": "20289:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20355:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20355:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20360:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20360:2:18",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20296:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "20296:58:18"
																},
																"nativeSrc": "20296:67:18",
																"nodeType": "YulFunctionCall",
																"src": "20296:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20289:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20289:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20461:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20461:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed",
																	"nativeSrc": "20372:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "20372:88:18"
																},
																"nativeSrc": "20372:93:18",
																"nodeType": "YulFunctionCall",
																"src": "20372:93:18"
															},
															"nativeSrc": "20372:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "20372:93:18"
														},
														{
															"nativeSrc": "20474:19:18",
															"nodeType": "YulAssignment",
															"src": "20474:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20485:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20485:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20490:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20490:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20481:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20481:3:18"
																},
																"nativeSrc": "20481:12:18",
																"nodeType": "YulFunctionCall",
																"src": "20481:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20474:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20474:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20133:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20267:3:18",
														"nodeType": "YulTypedName",
														"src": "20267:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20275:3:18",
														"nodeType": "YulTypedName",
														"src": "20275:3:18",
														"type": ""
													}
												],
												"src": "20133:366:18"
											},
											{
												"body": {
													"nativeSrc": "20676:248:18",
													"nodeType": "YulBlock",
													"src": "20676:248:18",
													"statements": [
														{
															"nativeSrc": "20686:26:18",
															"nodeType": "YulAssignment",
															"src": "20686:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20698:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "20698:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20709:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20709:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20694:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20694:3:18"
																},
																"nativeSrc": "20694:18:18",
																"nodeType": "YulFunctionCall",
																"src": "20694:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20686:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20686:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20733:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20733:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20744:1:18",
																				"nodeType": "YulLiteral",
																				"src": "20744:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20729:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20729:3:18"
																		},
																		"nativeSrc": "20729:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20729:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20752:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "20752:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20758:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20758:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20748:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20748:3:18"
																		},
																		"nativeSrc": "20748:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20748:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20722:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20722:6:18"
																},
																"nativeSrc": "20722:47:18",
																"nodeType": "YulFunctionCall",
																"src": "20722:47:18"
															},
															"nativeSrc": "20722:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "20722:47:18"
														},
														{
															"nativeSrc": "20778:139:18",
															"nodeType": "YulAssignment",
															"src": "20778:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20912:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "20912:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20786:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "20786:124:18"
																},
																"nativeSrc": "20786:131:18",
																"nodeType": "YulFunctionCall",
																"src": "20786:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20778:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20778:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20505:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20656:9:18",
														"nodeType": "YulTypedName",
														"src": "20656:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20671:4:18",
														"nodeType": "YulTypedName",
														"src": "20671:4:18",
														"type": ""
													}
												],
												"src": "20505:419:18"
											},
											{
												"body": {
													"nativeSrc": "21036:58:18",
													"nodeType": "YulBlock",
													"src": "21036:58:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21058:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "21058:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21066:1:18",
																				"nodeType": "YulLiteral",
																				"src": "21066:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21054:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21054:3:18"
																		},
																		"nativeSrc": "21054:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21054:14:18"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "21070:16:18",
																		"nodeType": "YulLiteral",
																		"src": "21070:16:18",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21047:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21047:6:18"
																},
																"nativeSrc": "21047:40:18",
																"nodeType": "YulFunctionCall",
																"src": "21047:40:18"
															},
															"nativeSrc": "21047:40:18",
															"nodeType": "YulExpressionStatement",
															"src": "21047:40:18"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nativeSrc": "20930:164:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21028:6:18",
														"nodeType": "YulTypedName",
														"src": "21028:6:18",
														"type": ""
													}
												],
												"src": "20930:164:18"
											},
											{
												"body": {
													"nativeSrc": "21246:220:18",
													"nodeType": "YulBlock",
													"src": "21246:220:18",
													"statements": [
														{
															"nativeSrc": "21256:74:18",
															"nodeType": "YulAssignment",
															"src": "21256:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21322:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21322:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21327:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21327:2:18",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21263:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "21263:58:18"
																},
																"nativeSrc": "21263:67:18",
																"nodeType": "YulFunctionCall",
																"src": "21263:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21256:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21256:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21428:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21428:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nativeSrc": "21339:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "21339:88:18"
																},
																"nativeSrc": "21339:93:18",
																"nodeType": "YulFunctionCall",
																"src": "21339:93:18"
															},
															"nativeSrc": "21339:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "21339:93:18"
														},
														{
															"nativeSrc": "21441:19:18",
															"nodeType": "YulAssignment",
															"src": "21441:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21452:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21452:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21457:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21457:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21448:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21448:3:18"
																},
																"nativeSrc": "21448:12:18",
																"nodeType": "YulFunctionCall",
																"src": "21448:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21441:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21441:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21100:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21234:3:18",
														"nodeType": "YulTypedName",
														"src": "21234:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21242:3:18",
														"nodeType": "YulTypedName",
														"src": "21242:3:18",
														"type": ""
													}
												],
												"src": "21100:366:18"
											},
											{
												"body": {
													"nativeSrc": "21643:248:18",
													"nodeType": "YulBlock",
													"src": "21643:248:18",
													"statements": [
														{
															"nativeSrc": "21653:26:18",
															"nodeType": "YulAssignment",
															"src": "21653:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21665:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "21665:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21676:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21676:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21661:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21661:3:18"
																},
																"nativeSrc": "21661:18:18",
																"nodeType": "YulFunctionCall",
																"src": "21661:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21653:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "21653:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21700:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21700:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21711:1:18",
																				"nodeType": "YulLiteral",
																				"src": "21711:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21696:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21696:3:18"
																		},
																		"nativeSrc": "21696:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21696:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21719:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "21719:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21725:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21725:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21715:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21715:3:18"
																		},
																		"nativeSrc": "21715:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21715:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21689:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "21689:6:18"
																},
																"nativeSrc": "21689:47:18",
																"nodeType": "YulFunctionCall",
																"src": "21689:47:18"
															},
															"nativeSrc": "21689:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "21689:47:18"
														},
														{
															"nativeSrc": "21745:139:18",
															"nodeType": "YulAssignment",
															"src": "21745:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21879:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "21879:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21753:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "21753:124:18"
																},
																"nativeSrc": "21753:131:18",
																"nodeType": "YulFunctionCall",
																"src": "21753:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21745:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "21745:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21472:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21623:9:18",
														"nodeType": "YulTypedName",
														"src": "21623:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21638:4:18",
														"nodeType": "YulTypedName",
														"src": "21638:4:18",
														"type": ""
													}
												],
												"src": "21472:419:18"
											},
											{
												"body": {
													"nativeSrc": "22003:120:18",
													"nodeType": "YulBlock",
													"src": "22003:120:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22025:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "22025:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22033:1:18",
																				"nodeType": "YulLiteral",
																				"src": "22033:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22021:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22021:3:18"
																		},
																		"nativeSrc": "22021:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22021:14:18"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a204d69736d617463686564",
																		"kind": "string",
																		"nativeSrc": "22037:34:18",
																		"nodeType": "YulLiteral",
																		"src": "22037:34:18",
																		"type": "",
																		"value": "BatchTransfer failed: Mismatched"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22014:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22014:6:18"
																},
																"nativeSrc": "22014:58:18",
																"nodeType": "YulFunctionCall",
																"src": "22014:58:18"
															},
															"nativeSrc": "22014:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "22014:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22093:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "22093:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22101:2:18",
																				"nodeType": "YulLiteral",
																				"src": "22101:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22089:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22089:3:18"
																		},
																		"nativeSrc": "22089:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22089:15:18"
																	},
																	{
																		"hexValue": "20617272617973",
																		"kind": "string",
																		"nativeSrc": "22106:9:18",
																		"nodeType": "YulLiteral",
																		"src": "22106:9:18",
																		"type": "",
																		"value": " arrays"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22082:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22082:6:18"
																},
																"nativeSrc": "22082:34:18",
																"nodeType": "YulFunctionCall",
																"src": "22082:34:18"
															},
															"nativeSrc": "22082:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "22082:34:18"
														}
													]
												},
												"name": "store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
												"nativeSrc": "21897:226:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21995:6:18",
														"nodeType": "YulTypedName",
														"src": "21995:6:18",
														"type": ""
													}
												],
												"src": "21897:226:18"
											},
											{
												"body": {
													"nativeSrc": "22275:220:18",
													"nodeType": "YulBlock",
													"src": "22275:220:18",
													"statements": [
														{
															"nativeSrc": "22285:74:18",
															"nodeType": "YulAssignment",
															"src": "22285:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22351:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22351:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22356:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22356:2:18",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22292:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "22292:58:18"
																},
																"nativeSrc": "22292:67:18",
																"nodeType": "YulFunctionCall",
																"src": "22292:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22285:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22285:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22457:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22457:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																	"nativeSrc": "22368:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "22368:88:18"
																},
																"nativeSrc": "22368:93:18",
																"nodeType": "YulFunctionCall",
																"src": "22368:93:18"
															},
															"nativeSrc": "22368:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "22368:93:18"
														},
														{
															"nativeSrc": "22470:19:18",
															"nodeType": "YulAssignment",
															"src": "22470:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22481:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22481:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22486:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22486:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22477:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22477:3:18"
																},
																"nativeSrc": "22477:12:18",
																"nodeType": "YulFunctionCall",
																"src": "22477:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22470:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22470:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22129:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22263:3:18",
														"nodeType": "YulTypedName",
														"src": "22263:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22271:3:18",
														"nodeType": "YulTypedName",
														"src": "22271:3:18",
														"type": ""
													}
												],
												"src": "22129:366:18"
											},
											{
												"body": {
													"nativeSrc": "22672:248:18",
													"nodeType": "YulBlock",
													"src": "22672:248:18",
													"statements": [
														{
															"nativeSrc": "22682:26:18",
															"nodeType": "YulAssignment",
															"src": "22682:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22694:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "22694:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22705:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22705:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22690:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22690:3:18"
																},
																"nativeSrc": "22690:18:18",
																"nodeType": "YulFunctionCall",
																"src": "22690:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22682:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22682:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22729:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22729:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22740:1:18",
																				"nodeType": "YulLiteral",
																				"src": "22740:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22725:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22725:3:18"
																		},
																		"nativeSrc": "22725:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22725:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22748:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "22748:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22754:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "22754:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22744:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22744:3:18"
																		},
																		"nativeSrc": "22744:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22744:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22718:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22718:6:18"
																},
																"nativeSrc": "22718:47:18",
																"nodeType": "YulFunctionCall",
																"src": "22718:47:18"
															},
															"nativeSrc": "22718:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "22718:47:18"
														},
														{
															"nativeSrc": "22774:139:18",
															"nodeType": "YulAssignment",
															"src": "22774:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22908:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22908:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22782:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "22782:124:18"
																},
																"nativeSrc": "22782:131:18",
																"nodeType": "YulFunctionCall",
																"src": "22782:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22774:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22774:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22501:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22652:9:18",
														"nodeType": "YulTypedName",
														"src": "22652:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22667:4:18",
														"nodeType": "YulTypedName",
														"src": "22667:4:18",
														"type": ""
													}
												],
												"src": "22501:419:18"
											},
											{
												"body": {
													"nativeSrc": "22954:152:18",
													"nodeType": "YulBlock",
													"src": "22954:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22971:1:18",
																		"nodeType": "YulLiteral",
																		"src": "22971:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22974:77:18",
																		"nodeType": "YulLiteral",
																		"src": "22974:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22964:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22964:6:18"
																},
																"nativeSrc": "22964:88:18",
																"nodeType": "YulFunctionCall",
																"src": "22964:88:18"
															},
															"nativeSrc": "22964:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "22964:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23068:1:18",
																		"nodeType": "YulLiteral",
																		"src": "23068:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23071:4:18",
																		"nodeType": "YulLiteral",
																		"src": "23071:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23061:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23061:6:18"
																},
																"nativeSrc": "23061:15:18",
																"nodeType": "YulFunctionCall",
																"src": "23061:15:18"
															},
															"nativeSrc": "23061:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "23061:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23092:1:18",
																		"nodeType": "YulLiteral",
																		"src": "23092:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23095:4:18",
																		"nodeType": "YulLiteral",
																		"src": "23095:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23085:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23085:6:18"
																},
																"nativeSrc": "23085:15:18",
																"nodeType": "YulFunctionCall",
																"src": "23085:15:18"
															},
															"nativeSrc": "23085:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "23085:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "22926:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "22926:180:18"
											},
											{
												"body": {
													"nativeSrc": "23218:127:18",
													"nodeType": "YulBlock",
													"src": "23218:127:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23240:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "23240:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23248:1:18",
																				"nodeType": "YulLiteral",
																				"src": "23248:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23236:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23236:3:18"
																		},
																		"nativeSrc": "23236:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23236:14:18"
																	},
																	{
																		"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420",
																		"kind": "string",
																		"nativeSrc": "23252:34:18",
																		"nodeType": "YulLiteral",
																		"src": "23252:34:18",
																		"type": "",
																		"value": "BatchTransfer failed: Recipient "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23229:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23229:6:18"
																},
																"nativeSrc": "23229:58:18",
																"nodeType": "YulFunctionCall",
																"src": "23229:58:18"
															},
															"nativeSrc": "23229:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "23229:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23308:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "23308:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23316:2:18",
																				"nodeType": "YulLiteral",
																				"src": "23316:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23304:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23304:3:18"
																		},
																		"nativeSrc": "23304:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23304:15:18"
																	},
																	{
																		"hexValue": "697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "23321:16:18",
																		"nodeType": "YulLiteral",
																		"src": "23321:16:18",
																		"type": "",
																		"value": "is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23297:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23297:6:18"
																},
																"nativeSrc": "23297:41:18",
																"nodeType": "YulFunctionCall",
																"src": "23297:41:18"
															},
															"nativeSrc": "23297:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "23297:41:18"
														}
													]
												},
												"name": "store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
												"nativeSrc": "23112:233:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23210:6:18",
														"nodeType": "YulTypedName",
														"src": "23210:6:18",
														"type": ""
													}
												],
												"src": "23112:233:18"
											},
											{
												"body": {
													"nativeSrc": "23497:220:18",
													"nodeType": "YulBlock",
													"src": "23497:220:18",
													"statements": [
														{
															"nativeSrc": "23507:74:18",
															"nodeType": "YulAssignment",
															"src": "23507:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23573:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23573:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23578:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23578:2:18",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23514:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "23514:58:18"
																},
																"nativeSrc": "23514:67:18",
																"nodeType": "YulFunctionCall",
																"src": "23514:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23507:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23507:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23679:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23679:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																	"nativeSrc": "23590:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "23590:88:18"
																},
																"nativeSrc": "23590:93:18",
																"nodeType": "YulFunctionCall",
																"src": "23590:93:18"
															},
															"nativeSrc": "23590:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "23590:93:18"
														},
														{
															"nativeSrc": "23692:19:18",
															"nodeType": "YulAssignment",
															"src": "23692:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23703:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23703:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23708:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23708:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23699:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23699:3:18"
																},
																"nativeSrc": "23699:12:18",
																"nodeType": "YulFunctionCall",
																"src": "23699:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23692:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23692:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23351:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23485:3:18",
														"nodeType": "YulTypedName",
														"src": "23485:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23493:3:18",
														"nodeType": "YulTypedName",
														"src": "23493:3:18",
														"type": ""
													}
												],
												"src": "23351:366:18"
											},
											{
												"body": {
													"nativeSrc": "23894:248:18",
													"nodeType": "YulBlock",
													"src": "23894:248:18",
													"statements": [
														{
															"nativeSrc": "23904:26:18",
															"nodeType": "YulAssignment",
															"src": "23904:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23916:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "23916:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23927:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23927:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23912:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23912:3:18"
																},
																"nativeSrc": "23912:18:18",
																"nodeType": "YulFunctionCall",
																"src": "23912:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23904:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23904:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23951:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23951:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23962:1:18",
																				"nodeType": "YulLiteral",
																				"src": "23962:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23947:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23947:3:18"
																		},
																		"nativeSrc": "23947:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23947:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23970:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "23970:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23976:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "23976:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23966:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "23966:3:18"
																		},
																		"nativeSrc": "23966:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23966:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23940:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23940:6:18"
																},
																"nativeSrc": "23940:47:18",
																"nodeType": "YulFunctionCall",
																"src": "23940:47:18"
															},
															"nativeSrc": "23940:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "23940:47:18"
														},
														{
															"nativeSrc": "23996:139:18",
															"nodeType": "YulAssignment",
															"src": "23996:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24130:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "24130:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24004:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "24004:124:18"
																},
																"nativeSrc": "24004:131:18",
																"nodeType": "YulFunctionCall",
																"src": "24004:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23996:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "23996:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23723:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23874:9:18",
														"nodeType": "YulTypedName",
														"src": "23874:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23889:4:18",
														"nodeType": "YulTypedName",
														"src": "23889:4:18",
														"type": ""
													}
												],
												"src": "23723:419:18"
											},
											{
												"body": {
													"nativeSrc": "24201:32:18",
													"nodeType": "YulBlock",
													"src": "24201:32:18",
													"statements": [
														{
															"nativeSrc": "24211:16:18",
															"nodeType": "YulAssignment",
															"src": "24211:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "24222:5:18",
																"nodeType": "YulIdentifier",
																"src": "24222:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "24211:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "24211:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "24148:85:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24183:5:18",
														"nodeType": "YulTypedName",
														"src": "24183:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "24193:7:18",
														"nodeType": "YulTypedName",
														"src": "24193:7:18",
														"type": ""
													}
												],
												"src": "24148:85:18"
											},
											{
												"body": {
													"nativeSrc": "24283:57:18",
													"nodeType": "YulBlock",
													"src": "24283:57:18",
													"statements": [
														{
															"nativeSrc": "24293:41:18",
															"nodeType": "YulAssignment",
															"src": "24293:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24308:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "24308:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24315:18:18",
																		"nodeType": "YulLiteral",
																		"src": "24315:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24304:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24304:3:18"
																},
																"nativeSrc": "24304:30:18",
																"nodeType": "YulFunctionCall",
																"src": "24304:30:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "24293:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "24293:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "24239:101:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24265:5:18",
														"nodeType": "YulTypedName",
														"src": "24265:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "24275:7:18",
														"nodeType": "YulTypedName",
														"src": "24275:7:18",
														"type": ""
													}
												],
												"src": "24239:101:18"
											},
											{
												"body": {
													"nativeSrc": "24378:28:18",
													"nodeType": "YulBlock",
													"src": "24378:28:18",
													"statements": [
														{
															"nativeSrc": "24388:12:18",
															"nodeType": "YulAssignment",
															"src": "24388:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "24395:5:18",
																"nodeType": "YulIdentifier",
																"src": "24395:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24388:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24388:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "24346:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24364:5:18",
														"nodeType": "YulTypedName",
														"src": "24364:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24374:3:18",
														"nodeType": "YulTypedName",
														"src": "24374:3:18",
														"type": ""
													}
												],
												"src": "24346:60:18"
											},
											{
												"body": {
													"nativeSrc": "24479:89:18",
													"nodeType": "YulBlock",
													"src": "24479:89:18",
													"statements": [
														{
															"nativeSrc": "24489:73:18",
															"nodeType": "YulAssignment",
															"src": "24489:73:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24554:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "24554:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "24528:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "24528:25:18"
																				},
																				"nativeSrc": "24528:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "24528:32:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "24519:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "24519:8:18"
																		},
																		"nativeSrc": "24519:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24519:42:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "24502:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "24502:16:18"
																},
																"nativeSrc": "24502:60:18",
																"nodeType": "YulFunctionCall",
																"src": "24502:60:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "24489:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "24489:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "24412:156:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24459:5:18",
														"nodeType": "YulTypedName",
														"src": "24459:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "24469:9:18",
														"nodeType": "YulTypedName",
														"src": "24469:9:18",
														"type": ""
													}
												],
												"src": "24412:156:18"
											},
											{
												"body": {
													"nativeSrc": "24646:73:18",
													"nodeType": "YulBlock",
													"src": "24646:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24663:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24663:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24706:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "24706:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "24668:37:18",
																			"nodeType": "YulIdentifier",
																			"src": "24668:37:18"
																		},
																		"nativeSrc": "24668:44:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24668:44:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24656:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "24656:6:18"
																},
																"nativeSrc": "24656:57:18",
																"nodeType": "YulFunctionCall",
																"src": "24656:57:18"
															},
															"nativeSrc": "24656:57:18",
															"nodeType": "YulExpressionStatement",
															"src": "24656:57:18"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "24574:145:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24634:5:18",
														"nodeType": "YulTypedName",
														"src": "24634:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24641:3:18",
														"nodeType": "YulTypedName",
														"src": "24641:3:18",
														"type": ""
													}
												],
												"src": "24574:145:18"
											},
											{
												"body": {
													"nativeSrc": "24830:131:18",
													"nodeType": "YulBlock",
													"src": "24830:131:18",
													"statements": [
														{
															"nativeSrc": "24840:26:18",
															"nodeType": "YulAssignment",
															"src": "24840:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24852:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "24852:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24863:2:18",
																		"nodeType": "YulLiteral",
																		"src": "24863:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24848:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24848:3:18"
																},
																"nativeSrc": "24848:18:18",
																"nodeType": "YulFunctionCall",
																"src": "24848:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24840:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "24840:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24927:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24927:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24940:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "24940:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24951:1:18",
																				"nodeType": "YulLiteral",
																				"src": "24951:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24936:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24936:3:18"
																		},
																		"nativeSrc": "24936:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24936:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "24876:50:18",
																	"nodeType": "YulIdentifier",
																	"src": "24876:50:18"
																},
																"nativeSrc": "24876:78:18",
																"nodeType": "YulFunctionCall",
																"src": "24876:78:18"
															},
															"nativeSrc": "24876:78:18",
															"nodeType": "YulExpressionStatement",
															"src": "24876:78:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "24725:236:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24802:9:18",
														"nodeType": "YulTypedName",
														"src": "24802:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24814:6:18",
														"nodeType": "YulTypedName",
														"src": "24814:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24825:4:18",
														"nodeType": "YulTypedName",
														"src": "24825:4:18",
														"type": ""
													}
												],
												"src": "24725:236:18"
											},
											{
												"body": {
													"nativeSrc": "25073:60:18",
													"nodeType": "YulBlock",
													"src": "25073:60:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25095:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "25095:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25103:1:18",
																				"nodeType": "YulLiteral",
																				"src": "25103:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25091:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25091:3:18"
																		},
																		"nativeSrc": "25091:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25091:14:18"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "25107:18:18",
																		"nodeType": "YulLiteral",
																		"src": "25107:18:18",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25084:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25084:6:18"
																},
																"nativeSrc": "25084:42:18",
																"nodeType": "YulFunctionCall",
																"src": "25084:42:18"
															},
															"nativeSrc": "25084:42:18",
															"nodeType": "YulExpressionStatement",
															"src": "25084:42:18"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "24967:166:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25065:6:18",
														"nodeType": "YulTypedName",
														"src": "25065:6:18",
														"type": ""
													}
												],
												"src": "24967:166:18"
											},
											{
												"body": {
													"nativeSrc": "25285:220:18",
													"nodeType": "YulBlock",
													"src": "25285:220:18",
													"statements": [
														{
															"nativeSrc": "25295:74:18",
															"nodeType": "YulAssignment",
															"src": "25295:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25361:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25361:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25366:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25366:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25302:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "25302:58:18"
																},
																"nativeSrc": "25302:67:18",
																"nodeType": "YulFunctionCall",
																"src": "25302:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25295:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25295:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25467:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25467:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "25378:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "25378:88:18"
																},
																"nativeSrc": "25378:93:18",
																"nodeType": "YulFunctionCall",
																"src": "25378:93:18"
															},
															"nativeSrc": "25378:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "25378:93:18"
														},
														{
															"nativeSrc": "25480:19:18",
															"nodeType": "YulAssignment",
															"src": "25480:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25491:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25491:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25496:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25496:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25487:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25487:3:18"
																},
																"nativeSrc": "25487:12:18",
																"nodeType": "YulFunctionCall",
																"src": "25487:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25480:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25480:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25139:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25273:3:18",
														"nodeType": "YulTypedName",
														"src": "25273:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25281:3:18",
														"nodeType": "YulTypedName",
														"src": "25281:3:18",
														"type": ""
													}
												],
												"src": "25139:366:18"
											},
											{
												"body": {
													"nativeSrc": "25682:248:18",
													"nodeType": "YulBlock",
													"src": "25682:248:18",
													"statements": [
														{
															"nativeSrc": "25692:26:18",
															"nodeType": "YulAssignment",
															"src": "25692:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25704:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "25704:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25715:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25715:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25700:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "25700:3:18"
																},
																"nativeSrc": "25700:18:18",
																"nodeType": "YulFunctionCall",
																"src": "25700:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25692:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25692:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25739:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25739:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25750:1:18",
																				"nodeType": "YulLiteral",
																				"src": "25750:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25735:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25735:3:18"
																		},
																		"nativeSrc": "25735:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25735:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25758:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "25758:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25764:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "25764:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25754:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25754:3:18"
																		},
																		"nativeSrc": "25754:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25754:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25728:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25728:6:18"
																},
																"nativeSrc": "25728:47:18",
																"nodeType": "YulFunctionCall",
																"src": "25728:47:18"
															},
															"nativeSrc": "25728:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "25728:47:18"
														},
														{
															"nativeSrc": "25784:139:18",
															"nodeType": "YulAssignment",
															"src": "25784:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25918:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "25918:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25792:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "25792:124:18"
																},
																"nativeSrc": "25792:131:18",
																"nodeType": "YulFunctionCall",
																"src": "25792:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25784:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25784:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25511:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25662:9:18",
														"nodeType": "YulTypedName",
														"src": "25662:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25677:4:18",
														"nodeType": "YulTypedName",
														"src": "25677:4:18",
														"type": ""
													}
												],
												"src": "25511:419:18"
											},
											{
												"body": {
													"nativeSrc": "25979:79:18",
													"nodeType": "YulBlock",
													"src": "25979:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "26036:16:18",
																"nodeType": "YulBlock",
																"src": "26036:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "26045:1:18",
																					"nodeType": "YulLiteral",
																					"src": "26045:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26048:1:18",
																					"nodeType": "YulLiteral",
																					"src": "26048:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "26038:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "26038:6:18"
																			},
																			"nativeSrc": "26038:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "26038:12:18"
																		},
																		"nativeSrc": "26038:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "26038:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "26002:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "26002:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "26027:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "26027:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "26009:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "26009:17:18"
																				},
																				"nativeSrc": "26009:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "26009:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "25999:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "25999:2:18"
																		},
																		"nativeSrc": "25999:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25999:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "25992:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "25992:6:18"
																},
																"nativeSrc": "25992:43:18",
																"nodeType": "YulFunctionCall",
																"src": "25992:43:18"
															},
															"nativeSrc": "25989:63:18",
															"nodeType": "YulIf",
															"src": "25989:63:18"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "25936:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25972:5:18",
														"nodeType": "YulTypedName",
														"src": "25972:5:18",
														"type": ""
													}
												],
												"src": "25936:122:18"
											},
											{
												"body": {
													"nativeSrc": "26127:80:18",
													"nodeType": "YulBlock",
													"src": "26127:80:18",
													"statements": [
														{
															"nativeSrc": "26137:22:18",
															"nodeType": "YulAssignment",
															"src": "26137:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "26152:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26152:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26146:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "26146:5:18"
																},
																"nativeSrc": "26146:13:18",
																"nodeType": "YulFunctionCall",
																"src": "26146:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "26137:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "26137:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26195:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "26195:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "26168:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "26168:26:18"
																},
																"nativeSrc": "26168:33:18",
																"nodeType": "YulFunctionCall",
																"src": "26168:33:18"
															},
															"nativeSrc": "26168:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "26168:33:18"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "26064:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "26105:6:18",
														"nodeType": "YulTypedName",
														"src": "26105:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "26113:3:18",
														"nodeType": "YulTypedName",
														"src": "26113:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "26121:5:18",
														"nodeType": "YulTypedName",
														"src": "26121:5:18",
														"type": ""
													}
												],
												"src": "26064:143:18"
											},
											{
												"body": {
													"nativeSrc": "26290:274:18",
													"nodeType": "YulBlock",
													"src": "26290:274:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "26336:83:18",
																"nodeType": "YulBlock",
																"src": "26336:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "26338:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "26338:77:18"
																			},
																			"nativeSrc": "26338:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "26338:79:18"
																		},
																		"nativeSrc": "26338:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "26338:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26311:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "26311:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26320:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26320:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26307:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26307:3:18"
																		},
																		"nativeSrc": "26307:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26307:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26332:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26332:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "26303:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26303:3:18"
																},
																"nativeSrc": "26303:32:18",
																"nodeType": "YulFunctionCall",
																"src": "26303:32:18"
															},
															"nativeSrc": "26300:119:18",
															"nodeType": "YulIf",
															"src": "26300:119:18"
														},
														{
															"nativeSrc": "26429:128:18",
															"nodeType": "YulBlock",
															"src": "26429:128:18",
															"statements": [
																{
																	"nativeSrc": "26444:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "26444:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "26458:1:18",
																		"nodeType": "YulLiteral",
																		"src": "26458:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "26448:6:18",
																			"nodeType": "YulTypedName",
																			"src": "26448:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "26473:74:18",
																	"nodeType": "YulAssignment",
																	"src": "26473:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "26519:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "26519:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "26530:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "26530:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "26515:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "26515:3:18"
																				},
																				"nativeSrc": "26515:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "26515:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "26539:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "26539:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "26483:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "26483:31:18"
																		},
																		"nativeSrc": "26483:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26483:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "26473:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "26473:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "26213:351:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26260:9:18",
														"nodeType": "YulTypedName",
														"src": "26260:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "26271:7:18",
														"nodeType": "YulTypedName",
														"src": "26271:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "26283:6:18",
														"nodeType": "YulTypedName",
														"src": "26283:6:18",
														"type": ""
													}
												],
												"src": "26213:351:18"
											},
											{
												"body": {
													"nativeSrc": "26724:288:18",
													"nodeType": "YulBlock",
													"src": "26724:288:18",
													"statements": [
														{
															"nativeSrc": "26734:26:18",
															"nodeType": "YulAssignment",
															"src": "26734:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26746:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "26746:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26757:2:18",
																		"nodeType": "YulLiteral",
																		"src": "26757:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26742:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26742:3:18"
																},
																"nativeSrc": "26742:18:18",
																"nodeType": "YulFunctionCall",
																"src": "26742:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26734:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "26734:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26814:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26814:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26827:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26827:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26838:1:18",
																				"nodeType": "YulLiteral",
																				"src": "26838:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26823:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26823:3:18"
																		},
																		"nativeSrc": "26823:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26823:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26770:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "26770:43:18"
																},
																"nativeSrc": "26770:71:18",
																"nodeType": "YulFunctionCall",
																"src": "26770:71:18"
															},
															"nativeSrc": "26770:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "26770:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26895:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26895:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26908:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26908:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26919:2:18",
																				"nodeType": "YulLiteral",
																				"src": "26919:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26904:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26904:3:18"
																		},
																		"nativeSrc": "26904:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26904:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26851:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "26851:43:18"
																},
																"nativeSrc": "26851:72:18",
																"nodeType": "YulFunctionCall",
																"src": "26851:72:18"
															},
															"nativeSrc": "26851:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "26851:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26977:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26977:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26990:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "26990:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27001:2:18",
																				"nodeType": "YulLiteral",
																				"src": "27001:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26986:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "26986:3:18"
																		},
																		"nativeSrc": "26986:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "26986:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26933:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "26933:43:18"
																},
																"nativeSrc": "26933:72:18",
																"nodeType": "YulFunctionCall",
																"src": "26933:72:18"
															},
															"nativeSrc": "26933:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "26933:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "26570:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26680:9:18",
														"nodeType": "YulTypedName",
														"src": "26680:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26692:6:18",
														"nodeType": "YulTypedName",
														"src": "26692:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26700:6:18",
														"nodeType": "YulTypedName",
														"src": "26700:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26708:6:18",
														"nodeType": "YulTypedName",
														"src": "26708:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26719:4:18",
														"nodeType": "YulTypedName",
														"src": "26719:4:18",
														"type": ""
													}
												],
												"src": "26570:442:18"
											},
											{
												"body": {
													"nativeSrc": "27124:64:18",
													"nodeType": "YulBlock",
													"src": "27124:64:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27146:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "27146:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27154:1:18",
																				"nodeType": "YulLiteral",
																				"src": "27154:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27142:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27142:3:18"
																		},
																		"nativeSrc": "27142:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27142:14:18"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "27158:22:18",
																		"nodeType": "YulLiteral",
																		"src": "27158:22:18",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27135:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "27135:6:18"
																},
																"nativeSrc": "27135:46:18",
																"nodeType": "YulFunctionCall",
																"src": "27135:46:18"
															},
															"nativeSrc": "27135:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "27135:46:18"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "27018:170:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27116:6:18",
														"nodeType": "YulTypedName",
														"src": "27116:6:18",
														"type": ""
													}
												],
												"src": "27018:170:18"
											},
											{
												"body": {
													"nativeSrc": "27340:220:18",
													"nodeType": "YulBlock",
													"src": "27340:220:18",
													"statements": [
														{
															"nativeSrc": "27350:74:18",
															"nodeType": "YulAssignment",
															"src": "27350:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27416:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "27416:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27421:2:18",
																		"nodeType": "YulLiteral",
																		"src": "27421:2:18",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27357:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "27357:58:18"
																},
																"nativeSrc": "27357:67:18",
																"nodeType": "YulFunctionCall",
																"src": "27357:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27350:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27350:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27522:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "27522:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "27433:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "27433:88:18"
																},
																"nativeSrc": "27433:93:18",
																"nodeType": "YulFunctionCall",
																"src": "27433:93:18"
															},
															"nativeSrc": "27433:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "27433:93:18"
														},
														{
															"nativeSrc": "27535:19:18",
															"nodeType": "YulAssignment",
															"src": "27535:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27546:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "27546:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27551:2:18",
																		"nodeType": "YulLiteral",
																		"src": "27551:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27542:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27542:3:18"
																},
																"nativeSrc": "27542:12:18",
																"nodeType": "YulFunctionCall",
																"src": "27542:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27535:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27535:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27194:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27328:3:18",
														"nodeType": "YulTypedName",
														"src": "27328:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27336:3:18",
														"nodeType": "YulTypedName",
														"src": "27336:3:18",
														"type": ""
													}
												],
												"src": "27194:366:18"
											},
											{
												"body": {
													"nativeSrc": "27737:248:18",
													"nodeType": "YulBlock",
													"src": "27737:248:18",
													"statements": [
														{
															"nativeSrc": "27747:26:18",
															"nodeType": "YulAssignment",
															"src": "27747:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27759:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "27759:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27770:2:18",
																		"nodeType": "YulLiteral",
																		"src": "27770:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27755:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27755:3:18"
																},
																"nativeSrc": "27755:18:18",
																"nodeType": "YulFunctionCall",
																"src": "27755:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27747:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "27747:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27794:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "27794:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27805:1:18",
																				"nodeType": "YulLiteral",
																				"src": "27805:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27790:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27790:3:18"
																		},
																		"nativeSrc": "27790:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27790:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27813:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "27813:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27819:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "27819:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27809:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27809:3:18"
																		},
																		"nativeSrc": "27809:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27809:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27783:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "27783:6:18"
																},
																"nativeSrc": "27783:47:18",
																"nodeType": "YulFunctionCall",
																"src": "27783:47:18"
															},
															"nativeSrc": "27783:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "27783:47:18"
														},
														{
															"nativeSrc": "27839:139:18",
															"nodeType": "YulAssignment",
															"src": "27839:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27973:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "27973:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27847:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "27847:124:18"
																},
																"nativeSrc": "27847:131:18",
																"nodeType": "YulFunctionCall",
																"src": "27847:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27839:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "27839:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27566:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27717:9:18",
														"nodeType": "YulTypedName",
														"src": "27717:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27732:4:18",
														"nodeType": "YulTypedName",
														"src": "27732:4:18",
														"type": ""
													}
												],
												"src": "27566:419:18"
											},
											{
												"body": {
													"nativeSrc": "28019:152:18",
													"nodeType": "YulBlock",
													"src": "28019:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28036:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28036:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28039:77:18",
																		"nodeType": "YulLiteral",
																		"src": "28039:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28029:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "28029:6:18"
																},
																"nativeSrc": "28029:88:18",
																"nodeType": "YulFunctionCall",
																"src": "28029:88:18"
															},
															"nativeSrc": "28029:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "28029:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28133:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28133:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28136:4:18",
																		"nodeType": "YulLiteral",
																		"src": "28136:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28126:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "28126:6:18"
																},
																"nativeSrc": "28126:15:18",
																"nodeType": "YulFunctionCall",
																"src": "28126:15:18"
															},
															"nativeSrc": "28126:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "28126:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28157:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28157:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28160:4:18",
																		"nodeType": "YulLiteral",
																		"src": "28160:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "28150:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "28150:6:18"
																},
																"nativeSrc": "28150:15:18",
																"nodeType": "YulFunctionCall",
																"src": "28150:15:18"
															},
															"nativeSrc": "28150:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "28150:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "27991:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "27991:180:18"
											},
											{
												"body": {
													"nativeSrc": "28221:147:18",
													"nodeType": "YulBlock",
													"src": "28221:147:18",
													"statements": [
														{
															"nativeSrc": "28231:25:18",
															"nodeType": "YulAssignment",
															"src": "28231:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28254:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "28254:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28236:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "28236:17:18"
																},
																"nativeSrc": "28236:20:18",
																"nodeType": "YulFunctionCall",
																"src": "28236:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "28231:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "28231:1:18"
																}
															]
														},
														{
															"nativeSrc": "28265:25:18",
															"nodeType": "YulAssignment",
															"src": "28265:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "28288:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "28288:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "28270:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "28270:17:18"
																},
																"nativeSrc": "28270:20:18",
																"nodeType": "YulFunctionCall",
																"src": "28270:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "28265:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "28265:1:18"
																}
															]
														},
														{
															"nativeSrc": "28299:16:18",
															"nodeType": "YulAssignment",
															"src": "28299:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28310:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "28310:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "28313:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "28313:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28306:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28306:3:18"
																},
																"nativeSrc": "28306:9:18",
																"nodeType": "YulFunctionCall",
																"src": "28306:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "28299:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28299:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "28339:22:18",
																"nodeType": "YulBlock",
																"src": "28339:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "28341:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "28341:16:18"
																			},
																			"nativeSrc": "28341:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28341:18:18"
																		},
																		"nativeSrc": "28341:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "28341:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "28331:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "28331:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "28334:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "28334:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "28328:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "28328:2:18"
																},
																"nativeSrc": "28328:10:18",
																"nodeType": "YulFunctionCall",
																"src": "28328:10:18"
															},
															"nativeSrc": "28325:36:18",
															"nodeType": "YulIf",
															"src": "28325:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "28177:191:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "28208:1:18",
														"nodeType": "YulTypedName",
														"src": "28208:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "28211:1:18",
														"nodeType": "YulTypedName",
														"src": "28211:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "28217:3:18",
														"nodeType": "YulTypedName",
														"src": "28217:3:18",
														"type": ""
													}
												],
												"src": "28177:191:18"
											},
											{
												"body": {
													"nativeSrc": "28428:87:18",
													"nodeType": "YulBlock",
													"src": "28428:87:18",
													"statements": [
														{
															"nativeSrc": "28438:11:18",
															"nodeType": "YulAssignment",
															"src": "28438:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "28446:3:18",
																"nodeType": "YulIdentifier",
																"src": "28446:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "28438:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "28438:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28466:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28466:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "28469:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "28469:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28459:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "28459:6:18"
																},
																"nativeSrc": "28459:14:18",
																"nodeType": "YulFunctionCall",
																"src": "28459:14:18"
															},
															"nativeSrc": "28459:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "28459:14:18"
														},
														{
															"nativeSrc": "28482:26:18",
															"nodeType": "YulAssignment",
															"src": "28482:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28500:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28500:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28503:4:18",
																		"nodeType": "YulLiteral",
																		"src": "28503:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "28490:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "28490:9:18"
																},
																"nativeSrc": "28490:18:18",
																"nodeType": "YulFunctionCall",
																"src": "28490:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "28482:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "28482:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "28374:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "28415:3:18",
														"nodeType": "YulTypedName",
														"src": "28415:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "28423:4:18",
														"nodeType": "YulTypedName",
														"src": "28423:4:18",
														"type": ""
													}
												],
												"src": "28374:141:18"
											},
											{
												"body": {
													"nativeSrc": "28565:49:18",
													"nodeType": "YulBlock",
													"src": "28565:49:18",
													"statements": [
														{
															"nativeSrc": "28575:33:18",
															"nodeType": "YulAssignment",
															"src": "28575:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "28593:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "28593:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28600:2:18",
																				"nodeType": "YulLiteral",
																				"src": "28600:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28589:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28589:3:18"
																		},
																		"nativeSrc": "28589:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28589:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28605:2:18",
																		"nodeType": "YulLiteral",
																		"src": "28605:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "28585:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28585:3:18"
																},
																"nativeSrc": "28585:23:18",
																"nodeType": "YulFunctionCall",
																"src": "28585:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "28575:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "28575:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "28521:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28548:5:18",
														"nodeType": "YulTypedName",
														"src": "28548:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "28558:6:18",
														"nodeType": "YulTypedName",
														"src": "28558:6:18",
														"type": ""
													}
												],
												"src": "28521:93:18"
											},
											{
												"body": {
													"nativeSrc": "28673:54:18",
													"nodeType": "YulBlock",
													"src": "28673:54:18",
													"statements": [
														{
															"nativeSrc": "28683:37:18",
															"nodeType": "YulAssignment",
															"src": "28683:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "28708:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "28708:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "28714:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "28714:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "28704:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28704:3:18"
																},
																"nativeSrc": "28704:16:18",
																"nodeType": "YulFunctionCall",
																"src": "28704:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "28683:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "28683:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "28620:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "28648:4:18",
														"nodeType": "YulTypedName",
														"src": "28648:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "28654:5:18",
														"nodeType": "YulTypedName",
														"src": "28654:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "28664:8:18",
														"nodeType": "YulTypedName",
														"src": "28664:8:18",
														"type": ""
													}
												],
												"src": "28620:107:18"
											},
											{
												"body": {
													"nativeSrc": "28809:317:18",
													"nodeType": "YulBlock",
													"src": "28809:317:18",
													"statements": [
														{
															"nativeSrc": "28819:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "28819:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "28840:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "28840:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28852:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28852:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "28836:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28836:3:18"
																},
																"nativeSrc": "28836:18:18",
																"nodeType": "YulFunctionCall",
																"src": "28836:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "28823:9:18",
																	"nodeType": "YulTypedName",
																	"src": "28823:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "28863:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "28863:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "28894:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "28894:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28905:66:18",
																		"nodeType": "YulLiteral",
																		"src": "28905:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "28875:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "28875:18:18"
																},
																"nativeSrc": "28875:97:18",
																"nodeType": "YulFunctionCall",
																"src": "28875:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "28867:4:18",
																	"nodeType": "YulTypedName",
																	"src": "28867:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "28981:51:18",
															"nodeType": "YulAssignment",
															"src": "28981:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "29012:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "29012:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "29023:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "29023:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "28993:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "28993:18:18"
																},
																"nativeSrc": "28993:39:18",
																"nodeType": "YulFunctionCall",
																"src": "28993:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "28981:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "28981:8:18"
																}
															]
														},
														{
															"nativeSrc": "29041:30:18",
															"nodeType": "YulAssignment",
															"src": "29041:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29054:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "29054:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "29065:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "29065:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "29061:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "29061:3:18"
																		},
																		"nativeSrc": "29061:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29061:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "29050:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29050:3:18"
																},
																"nativeSrc": "29050:21:18",
																"nodeType": "YulFunctionCall",
																"src": "29050:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "29041:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "29041:5:18"
																}
															]
														},
														{
															"nativeSrc": "29080:40:18",
															"nodeType": "YulAssignment",
															"src": "29080:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29093:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "29093:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "29104:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "29104:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "29114:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "29114:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "29100:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "29100:3:18"
																		},
																		"nativeSrc": "29100:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29100:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "29090:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "29090:2:18"
																},
																"nativeSrc": "29090:30:18",
																"nodeType": "YulFunctionCall",
																"src": "29090:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "29080:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29080:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "28733:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28770:5:18",
														"nodeType": "YulTypedName",
														"src": "28770:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "28777:10:18",
														"nodeType": "YulTypedName",
														"src": "28777:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "28789:8:18",
														"nodeType": "YulTypedName",
														"src": "28789:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "28802:6:18",
														"nodeType": "YulTypedName",
														"src": "28802:6:18",
														"type": ""
													}
												],
												"src": "28733:393:18"
											},
											{
												"body": {
													"nativeSrc": "29192:82:18",
													"nodeType": "YulBlock",
													"src": "29192:82:18",
													"statements": [
														{
															"nativeSrc": "29202:66:18",
															"nodeType": "YulAssignment",
															"src": "29202:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "29260:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "29260:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "29242:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "29242:17:18"
																				},
																				"nativeSrc": "29242:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "29242:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "29233:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "29233:8:18"
																		},
																		"nativeSrc": "29233:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29233:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "29215:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "29215:17:18"
																},
																"nativeSrc": "29215:53:18",
																"nodeType": "YulFunctionCall",
																"src": "29215:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "29202:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "29202:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "29132:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29172:5:18",
														"nodeType": "YulTypedName",
														"src": "29172:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "29182:9:18",
														"nodeType": "YulTypedName",
														"src": "29182:9:18",
														"type": ""
													}
												],
												"src": "29132:142:18"
											},
											{
												"body": {
													"nativeSrc": "29327:28:18",
													"nodeType": "YulBlock",
													"src": "29327:28:18",
													"statements": [
														{
															"nativeSrc": "29337:12:18",
															"nodeType": "YulAssignment",
															"src": "29337:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "29344:5:18",
																"nodeType": "YulIdentifier",
																"src": "29344:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "29337:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29337:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "29280:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29313:5:18",
														"nodeType": "YulTypedName",
														"src": "29313:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "29323:3:18",
														"nodeType": "YulTypedName",
														"src": "29323:3:18",
														"type": ""
													}
												],
												"src": "29280:75:18"
											},
											{
												"body": {
													"nativeSrc": "29437:193:18",
													"nodeType": "YulBlock",
													"src": "29437:193:18",
													"statements": [
														{
															"nativeSrc": "29447:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "29447:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "29502:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "29502:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "29471:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "29471:30:18"
																},
																"nativeSrc": "29471:39:18",
																"nodeType": "YulFunctionCall",
																"src": "29471:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "29451:16:18",
																	"nodeType": "YulTypedName",
																	"src": "29451:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "29526:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "29526:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "29566:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "29566:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "29560:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "29560:5:18"
																				},
																				"nativeSrc": "29560:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "29560:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "29573:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "29573:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "29605:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "29605:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "29581:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "29581:23:18"
																				},
																				"nativeSrc": "29581:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "29581:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "29532:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "29532:27:18"
																		},
																		"nativeSrc": "29532:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "29532:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "29519:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "29519:6:18"
																},
																"nativeSrc": "29519:105:18",
																"nodeType": "YulFunctionCall",
																"src": "29519:105:18"
															},
															"nativeSrc": "29519:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "29519:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "29361:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "29414:4:18",
														"nodeType": "YulTypedName",
														"src": "29414:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "29420:6:18",
														"nodeType": "YulTypedName",
														"src": "29420:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "29428:7:18",
														"nodeType": "YulTypedName",
														"src": "29428:7:18",
														"type": ""
													}
												],
												"src": "29361:269:18"
											},
											{
												"body": {
													"nativeSrc": "29685:24:18",
													"nodeType": "YulBlock",
													"src": "29685:24:18",
													"statements": [
														{
															"nativeSrc": "29695:8:18",
															"nodeType": "YulAssignment",
															"src": "29695:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "29702:1:18",
																"nodeType": "YulLiteral",
																"src": "29702:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "29695:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "29695:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "29636:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "29681:3:18",
														"nodeType": "YulTypedName",
														"src": "29681:3:18",
														"type": ""
													}
												],
												"src": "29636:73:18"
											},
											{
												"body": {
													"nativeSrc": "29768:136:18",
													"nodeType": "YulBlock",
													"src": "29768:136:18",
													"statements": [
														{
															"nativeSrc": "29778:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "29778:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "29792:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "29792:30:18"
																},
																"nativeSrc": "29792:32:18",
																"nodeType": "YulFunctionCall",
																"src": "29792:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "29782:6:18",
																	"nodeType": "YulTypedName",
																	"src": "29782:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "29877:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "29877:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "29883:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "29883:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "29891:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "29891:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "29833:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "29833:43:18"
																},
																"nativeSrc": "29833:65:18",
																"nodeType": "YulFunctionCall",
																"src": "29833:65:18"
															},
															"nativeSrc": "29833:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "29833:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "29715:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "29754:4:18",
														"nodeType": "YulTypedName",
														"src": "29754:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "29760:6:18",
														"nodeType": "YulTypedName",
														"src": "29760:6:18",
														"type": ""
													}
												],
												"src": "29715:189:18"
											},
											{
												"body": {
													"nativeSrc": "29960:136:18",
													"nodeType": "YulBlock",
													"src": "29960:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "30027:63:18",
																"nodeType": "YulBlock",
																"src": "30027:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "30071:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "30071:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "30078:1:18",
																					"nodeType": "YulLiteral",
																					"src": "30078:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "30041:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "30041:29:18"
																			},
																			"nativeSrc": "30041:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "30041:39:18"
																		},
																		"nativeSrc": "30041:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "30041:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "29980:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "29980:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "29987:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "29987:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "29977:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "29977:2:18"
																},
																"nativeSrc": "29977:14:18",
																"nodeType": "YulFunctionCall",
																"src": "29977:14:18"
															},
															"nativeSrc": "29970:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "29992:26:18",
																"nodeType": "YulBlock",
																"src": "29992:26:18",
																"statements": [
																	{
																		"nativeSrc": "29994:22:18",
																		"nodeType": "YulAssignment",
																		"src": "29994:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "30007:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "30007:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "30014:1:18",
																					"nodeType": "YulLiteral",
																					"src": "30014:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "30003:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "30003:3:18"
																			},
																			"nativeSrc": "30003:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "30003:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "29994:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "29994:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "29974:2:18",
																"nodeType": "YulBlock",
																"src": "29974:2:18",
																"statements": []
															},
															"src": "29970:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "29910:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "29948:5:18",
														"nodeType": "YulTypedName",
														"src": "29948:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "29955:3:18",
														"nodeType": "YulTypedName",
														"src": "29955:3:18",
														"type": ""
													}
												],
												"src": "29910:186:18"
											},
											{
												"body": {
													"nativeSrc": "30181:464:18",
													"nodeType": "YulBlock",
													"src": "30181:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "30207:431:18",
																"nodeType": "YulBlock",
																"src": "30207:431:18",
																"statements": [
																	{
																		"nativeSrc": "30221:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "30221:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "30269:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "30269:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "30237:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "30237:31:18"
																			},
																			"nativeSrc": "30237:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "30237:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "30225:8:18",
																				"nodeType": "YulTypedName",
																				"src": "30225:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "30288:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "30288:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "30311:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "30311:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "30339:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "30339:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "30321:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "30321:17:18"
																					},
																					"nativeSrc": "30321:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "30321:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "30307:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "30307:3:18"
																			},
																			"nativeSrc": "30307:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "30307:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "30292:11:18",
																				"nodeType": "YulTypedName",
																				"src": "30292:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "30508:27:18",
																			"nodeType": "YulBlock",
																			"src": "30508:27:18",
																			"statements": [
																				{
																					"nativeSrc": "30510:23:18",
																					"nodeType": "YulAssignment",
																					"src": "30510:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "30525:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "30525:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "30510:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "30510:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "30492:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "30492:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "30504:2:18",
																					"nodeType": "YulLiteral",
																					"src": "30504:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "30489:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "30489:2:18"
																			},
																			"nativeSrc": "30489:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "30489:18:18"
																		},
																		"nativeSrc": "30486:49:18",
																		"nodeType": "YulIf",
																		"src": "30486:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "30577:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "30577:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "30594:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "30594:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "30622:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "30622:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "30604:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "30604:17:18"
																							},
																							"nativeSrc": "30604:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "30604:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "30590:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "30590:3:18"
																					},
																					"nativeSrc": "30590:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "30590:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "30548:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "30548:28:18"
																			},
																			"nativeSrc": "30548:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "30548:80:18"
																		},
																		"nativeSrc": "30548:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "30548:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "30198:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "30198:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30203:2:18",
																		"nodeType": "YulLiteral",
																		"src": "30203:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "30195:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "30195:2:18"
																},
																"nativeSrc": "30195:11:18",
																"nodeType": "YulFunctionCall",
																"src": "30195:11:18"
															},
															"nativeSrc": "30192:446:18",
															"nodeType": "YulIf",
															"src": "30192:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "30102:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "30157:5:18",
														"nodeType": "YulTypedName",
														"src": "30157:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "30164:3:18",
														"nodeType": "YulTypedName",
														"src": "30164:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "30169:10:18",
														"nodeType": "YulTypedName",
														"src": "30169:10:18",
														"type": ""
													}
												],
												"src": "30102:543:18"
											},
											{
												"body": {
													"nativeSrc": "30714:54:18",
													"nodeType": "YulBlock",
													"src": "30714:54:18",
													"statements": [
														{
															"nativeSrc": "30724:37:18",
															"nodeType": "YulAssignment",
															"src": "30724:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "30749:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "30749:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "30755:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "30755:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "30745:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30745:3:18"
																},
																"nativeSrc": "30745:16:18",
																"nodeType": "YulFunctionCall",
																"src": "30745:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "30724:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "30724:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "30651:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "30689:4:18",
														"nodeType": "YulTypedName",
														"src": "30689:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "30695:5:18",
														"nodeType": "YulTypedName",
														"src": "30695:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "30705:8:18",
														"nodeType": "YulTypedName",
														"src": "30705:8:18",
														"type": ""
													}
												],
												"src": "30651:117:18"
											},
											{
												"body": {
													"nativeSrc": "30825:118:18",
													"nodeType": "YulBlock",
													"src": "30825:118:18",
													"statements": [
														{
															"nativeSrc": "30835:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "30835:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "30884:1:18",
																						"nodeType": "YulLiteral",
																						"src": "30884:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "30887:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "30887:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "30880:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "30880:3:18"
																				},
																				"nativeSrc": "30880:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "30880:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "30899:1:18",
																						"nodeType": "YulLiteral",
																						"src": "30899:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "30895:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "30895:3:18"
																				},
																				"nativeSrc": "30895:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "30895:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "30851:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "30851:28:18"
																		},
																		"nativeSrc": "30851:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "30851:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "30847:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30847:3:18"
																},
																"nativeSrc": "30847:56:18",
																"nodeType": "YulFunctionCall",
																"src": "30847:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "30839:4:18",
																	"nodeType": "YulTypedName",
																	"src": "30839:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "30912:25:18",
															"nodeType": "YulAssignment",
															"src": "30912:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "30926:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "30926:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "30932:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "30932:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "30922:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "30922:3:18"
																},
																"nativeSrc": "30922:15:18",
																"nodeType": "YulFunctionCall",
																"src": "30922:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "30912:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "30912:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "30774:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "30802:4:18",
														"nodeType": "YulTypedName",
														"src": "30802:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "30808:5:18",
														"nodeType": "YulTypedName",
														"src": "30808:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "30818:6:18",
														"nodeType": "YulTypedName",
														"src": "30818:6:18",
														"type": ""
													}
												],
												"src": "30774:169:18"
											},
											{
												"body": {
													"nativeSrc": "31029:214:18",
													"nodeType": "YulBlock",
													"src": "31029:214:18",
													"statements": [
														{
															"nativeSrc": "31162:37:18",
															"nodeType": "YulAssignment",
															"src": "31162:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "31189:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "31189:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "31195:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "31195:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "31170:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "31170:18:18"
																},
																"nativeSrc": "31170:29:18",
																"nodeType": "YulFunctionCall",
																"src": "31170:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "31162:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "31162:4:18"
																}
															]
														},
														{
															"nativeSrc": "31208:29:18",
															"nodeType": "YulAssignment",
															"src": "31208:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "31219:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "31219:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "31229:1:18",
																				"nodeType": "YulLiteral",
																				"src": "31229:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "31232:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "31232:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "31225:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "31225:3:18"
																		},
																		"nativeSrc": "31225:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "31225:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "31216:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "31216:2:18"
																},
																"nativeSrc": "31216:21:18",
																"nodeType": "YulFunctionCall",
																"src": "31216:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "31208:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "31208:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "30948:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "31010:4:18",
														"nodeType": "YulTypedName",
														"src": "31010:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "31016:3:18",
														"nodeType": "YulTypedName",
														"src": "31016:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "31024:4:18",
														"nodeType": "YulTypedName",
														"src": "31024:4:18",
														"type": ""
													}
												],
												"src": "30948:295:18"
											},
											{
												"body": {
													"nativeSrc": "31340:1303:18",
													"nodeType": "YulBlock",
													"src": "31340:1303:18",
													"statements": [
														{
															"nativeSrc": "31351:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "31351:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "31398:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "31398:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "31365:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "31365:32:18"
																},
																"nativeSrc": "31365:37:18",
																"nodeType": "YulFunctionCall",
																"src": "31365:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "31355:6:18",
																	"nodeType": "YulTypedName",
																	"src": "31355:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "31487:22:18",
																"nodeType": "YulBlock",
																"src": "31487:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "31489:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "31489:16:18"
																			},
																			"nativeSrc": "31489:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "31489:18:18"
																		},
																		"nativeSrc": "31489:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "31489:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "31459:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31459:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31467:18:18",
																		"nodeType": "YulLiteral",
																		"src": "31467:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "31456:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "31456:2:18"
																},
																"nativeSrc": "31456:30:18",
																"nodeType": "YulFunctionCall",
																"src": "31456:30:18"
															},
															"nativeSrc": "31453:56:18",
															"nodeType": "YulIf",
															"src": "31453:56:18"
														},
														{
															"nativeSrc": "31519:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "31519:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "31565:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "31565:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "31559:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "31559:5:18"
																		},
																		"nativeSrc": "31559:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "31559:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "31533:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "31533:25:18"
																},
																"nativeSrc": "31533:38:18",
																"nodeType": "YulFunctionCall",
																"src": "31533:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "31523:6:18",
																	"nodeType": "YulTypedName",
																	"src": "31523:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "31664:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "31664:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "31670:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31670:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "31678:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31678:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "31618:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "31618:45:18"
																},
																"nativeSrc": "31618:67:18",
																"nodeType": "YulFunctionCall",
																"src": "31618:67:18"
															},
															"nativeSrc": "31618:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "31618:67:18"
														},
														{
															"nativeSrc": "31695:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "31695:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "31712:1:18",
																"nodeType": "YulLiteral",
																"src": "31712:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "31699:9:18",
																	"nodeType": "YulTypedName",
																	"src": "31699:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "31723:17:18",
															"nodeType": "YulAssignment",
															"src": "31723:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "31736:4:18",
																"nodeType": "YulLiteral",
																"src": "31736:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "31723:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "31723:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "31787:611:18",
																		"nodeType": "YulBlock",
																		"src": "31787:611:18",
																		"statements": [
																			{
																				"nativeSrc": "31801:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "31801:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "31820:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "31820:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "31832:4:18",
																									"nodeType": "YulLiteral",
																									"src": "31832:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "31828:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "31828:3:18"
																							},
																							"nativeSrc": "31828:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "31828:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "31816:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "31816:3:18"
																					},
																					"nativeSrc": "31816:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "31816:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "31805:7:18",
																						"nodeType": "YulTypedName",
																						"src": "31805:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "31852:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "31852:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "31898:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "31898:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "31866:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "31866:31:18"
																					},
																					"nativeSrc": "31866:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "31866:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "31856:6:18",
																						"nodeType": "YulTypedName",
																						"src": "31856:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "31916:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "31916:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "31925:1:18",
																					"nodeType": "YulLiteral",
																					"src": "31925:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "31920:1:18",
																						"nodeType": "YulTypedName",
																						"src": "31920:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "31984:163:18",
																					"nodeType": "YulBlock",
																					"src": "31984:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "32009:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "32009:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "32027:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "32027:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "32032:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "32032:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "32023:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "32023:3:18"
																												},
																												"nativeSrc": "32023:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "32023:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "32017:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "32017:5:18"
																										},
																										"nativeSrc": "32017:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "32017:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "32002:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "32002:6:18"
																								},
																								"nativeSrc": "32002:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "32002:42:18"
																							},
																							"nativeSrc": "32002:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "32002:42:18"
																						},
																						{
																							"nativeSrc": "32061:24:18",
																							"nodeType": "YulAssignment",
																							"src": "32061:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "32075:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "32075:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "32083:1:18",
																										"nodeType": "YulLiteral",
																										"src": "32083:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "32071:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "32071:3:18"
																								},
																								"nativeSrc": "32071:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "32071:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "32061:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "32061:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "32102:31:18",
																							"nodeType": "YulAssignment",
																							"src": "32102:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "32119:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "32119:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "32130:2:18",
																										"nodeType": "YulLiteral",
																										"src": "32130:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "32115:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "32115:3:18"
																								},
																								"nativeSrc": "32115:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "32115:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "32102:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "32102:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "31950:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "31950:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "31953:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "31953:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "31947:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "31947:2:18"
																					},
																					"nativeSrc": "31947:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "31947:14:18"
																				},
																				"nativeSrc": "31939:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "31962:21:18",
																					"nodeType": "YulBlock",
																					"src": "31962:21:18",
																					"statements": [
																						{
																							"nativeSrc": "31964:17:18",
																							"nodeType": "YulAssignment",
																							"src": "31964:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "31973:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "31973:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "31976:4:18",
																										"nodeType": "YulLiteral",
																										"src": "31976:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "31969:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "31969:3:18"
																								},
																								"nativeSrc": "31969:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "31969:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "31964:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "31964:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "31943:3:18",
																					"nodeType": "YulBlock",
																					"src": "31943:3:18",
																					"statements": []
																				},
																				"src": "31939:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "32183:156:18",
																					"nodeType": "YulBlock",
																					"src": "32183:156:18",
																					"statements": [
																						{
																							"nativeSrc": "32201:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "32201:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "32228:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "32228:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "32233:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "32233:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "32224:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "32224:3:18"
																										},
																										"nativeSrc": "32224:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "32224:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "32218:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "32218:5:18"
																								},
																								"nativeSrc": "32218:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "32218:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "32205:9:18",
																									"nodeType": "YulTypedName",
																									"src": "32205:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "32268:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "32268:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "32295:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "32295:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "32310:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "32310:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "32318:4:18",
																														"nodeType": "YulLiteral",
																														"src": "32318:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "32306:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "32306:3:18"
																												},
																												"nativeSrc": "32306:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "32306:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "32276:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "32276:18:18"
																										},
																										"nativeSrc": "32276:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "32276:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "32261:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "32261:6:18"
																								},
																								"nativeSrc": "32261:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "32261:64:18"
																							},
																							"nativeSrc": "32261:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "32261:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "32166:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "32166:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "32175:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "32175:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "32163:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "32163:2:18"
																					},
																					"nativeSrc": "32163:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "32163:19:18"
																				},
																				"nativeSrc": "32160:179:18",
																				"nodeType": "YulIf",
																				"src": "32160:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "32359:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "32359:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "32373:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "32373:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "32381:1:18",
																											"nodeType": "YulLiteral",
																											"src": "32381:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "32369:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "32369:3:18"
																									},
																									"nativeSrc": "32369:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "32369:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "32385:1:18",
																									"nodeType": "YulLiteral",
																									"src": "32385:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "32365:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "32365:3:18"
																							},
																							"nativeSrc": "32365:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "32365:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "32352:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "32352:6:18"
																					},
																					"nativeSrc": "32352:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "32352:36:18"
																				},
																				"nativeSrc": "32352:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "32352:36:18"
																			}
																		]
																	},
																	"nativeSrc": "31780:618:18",
																	"nodeType": "YulCase",
																	"src": "31780:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "31785:1:18",
																		"nodeType": "YulLiteral",
																		"src": "31785:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "32415:222:18",
																		"nodeType": "YulBlock",
																		"src": "32415:222:18",
																		"statements": [
																			{
																				"nativeSrc": "32429:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "32429:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "32442:1:18",
																					"nodeType": "YulLiteral",
																					"src": "32442:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "32433:5:18",
																						"nodeType": "YulTypedName",
																						"src": "32433:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "32466:67:18",
																					"nodeType": "YulBlock",
																					"src": "32466:67:18",
																					"statements": [
																						{
																							"nativeSrc": "32484:35:18",
																							"nodeType": "YulAssignment",
																							"src": "32484:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "32503:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "32503:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "32508:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "32508:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "32499:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "32499:3:18"
																										},
																										"nativeSrc": "32499:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "32499:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "32493:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "32493:5:18"
																								},
																								"nativeSrc": "32493:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "32493:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "32484:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "32484:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "32459:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "32459:6:18"
																				},
																				"nativeSrc": "32456:77:18",
																				"nodeType": "YulIf",
																				"src": "32456:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "32553:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "32553:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "32612:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "32612:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "32619:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "32619:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "32559:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "32559:52:18"
																							},
																							"nativeSrc": "32559:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "32559:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "32546:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "32546:6:18"
																					},
																					"nativeSrc": "32546:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "32546:81:18"
																				},
																				"nativeSrc": "32546:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "32546:81:18"
																			}
																		]
																	},
																	"nativeSrc": "32407:230:18",
																	"nodeType": "YulCase",
																	"src": "32407:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "31760:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "31760:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31768:2:18",
																		"nodeType": "YulLiteral",
																		"src": "31768:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "31757:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "31757:2:18"
																},
																"nativeSrc": "31757:14:18",
																"nodeType": "YulFunctionCall",
																"src": "31757:14:18"
															},
															"nativeSrc": "31750:887:18",
															"nodeType": "YulSwitch",
															"src": "31750:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "31248:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "31329:4:18",
														"nodeType": "YulTypedName",
														"src": "31329:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "31335:3:18",
														"nodeType": "YulTypedName",
														"src": "31335:3:18",
														"type": ""
													}
												],
												"src": "31248:1395:18"
											},
											{
												"body": {
													"nativeSrc": "32707:40:18",
													"nodeType": "YulBlock",
													"src": "32707:40:18",
													"statements": [
														{
															"nativeSrc": "32718:22:18",
															"nodeType": "YulAssignment",
															"src": "32718:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "32734:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "32734:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "32728:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "32728:5:18"
																},
																"nativeSrc": "32728:12:18",
																"nodeType": "YulFunctionCall",
																"src": "32728:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "32718:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "32718:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "32649:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "32690:5:18",
														"nodeType": "YulTypedName",
														"src": "32690:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "32700:6:18",
														"nodeType": "YulTypedName",
														"src": "32700:6:18",
														"type": ""
													}
												],
												"src": "32649:98:18"
											},
											{
												"body": {
													"nativeSrc": "32866:34:18",
													"nodeType": "YulBlock",
													"src": "32866:34:18",
													"statements": [
														{
															"nativeSrc": "32876:18:18",
															"nodeType": "YulAssignment",
															"src": "32876:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "32891:3:18",
																"nodeType": "YulIdentifier",
																"src": "32891:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "32876:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "32876:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "32753:147:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32838:3:18",
														"nodeType": "YulTypedName",
														"src": "32838:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "32843:6:18",
														"nodeType": "YulTypedName",
														"src": "32843:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "32854:11:18",
														"nodeType": "YulTypedName",
														"src": "32854:11:18",
														"type": ""
													}
												],
												"src": "32753:147:18"
											},
											{
												"body": {
													"nativeSrc": "33014:278:18",
													"nodeType": "YulBlock",
													"src": "33014:278:18",
													"statements": [
														{
															"nativeSrc": "33024:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "33024:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "33070:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "33070:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "33038:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "33038:31:18"
																},
																"nativeSrc": "33038:38:18",
																"nodeType": "YulFunctionCall",
																"src": "33038:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "33028:6:18",
																	"nodeType": "YulTypedName",
																	"src": "33028:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "33085:95:18",
															"nodeType": "YulAssignment",
															"src": "33085:95:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33168:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "33168:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "33173:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33173:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "33092:75:18",
																	"nodeType": "YulIdentifier",
																	"src": "33092:75:18"
																},
																"nativeSrc": "33092:88:18",
																"nodeType": "YulFunctionCall",
																"src": "33092:88:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "33085:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "33085:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "33228:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "33228:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33235:4:18",
																				"nodeType": "YulLiteral",
																				"src": "33235:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33224:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "33224:3:18"
																		},
																		"nativeSrc": "33224:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "33224:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "33242:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "33242:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "33247:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33247:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "33189:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "33189:34:18"
																},
																"nativeSrc": "33189:65:18",
																"nodeType": "YulFunctionCall",
																"src": "33189:65:18"
															},
															"nativeSrc": "33189:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "33189:65:18"
														},
														{
															"nativeSrc": "33263:23:18",
															"nodeType": "YulAssignment",
															"src": "33263:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33274:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "33274:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "33279:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33279:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33270:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "33270:3:18"
																},
																"nativeSrc": "33270:16:18",
																"nodeType": "YulFunctionCall",
																"src": "33270:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "33263:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "33263:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "32906:386:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "32995:5:18",
														"nodeType": "YulTypedName",
														"src": "32995:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "33002:3:18",
														"nodeType": "YulTypedName",
														"src": "33002:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "33010:3:18",
														"nodeType": "YulTypedName",
														"src": "33010:3:18",
														"type": ""
													}
												],
												"src": "32906:386:18"
											},
											{
												"body": {
													"nativeSrc": "33432:137:18",
													"nodeType": "YulBlock",
													"src": "33432:137:18",
													"statements": [
														{
															"nativeSrc": "33443:100:18",
															"nodeType": "YulAssignment",
															"src": "33443:100:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "33530:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "33530:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "33539:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "33539:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "33450:79:18",
																	"nodeType": "YulIdentifier",
																	"src": "33450:79:18"
																},
																"nativeSrc": "33450:93:18",
																"nodeType": "YulFunctionCall",
																"src": "33450:93:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "33443:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "33443:3:18"
																}
															]
														},
														{
															"nativeSrc": "33553:10:18",
															"nodeType": "YulAssignment",
															"src": "33553:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "33560:3:18",
																"nodeType": "YulIdentifier",
																"src": "33560:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "33553:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "33553:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "33298:271:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "33411:3:18",
														"nodeType": "YulTypedName",
														"src": "33411:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "33417:6:18",
														"nodeType": "YulTypedName",
														"src": "33417:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "33428:3:18",
														"nodeType": "YulTypedName",
														"src": "33428:3:18",
														"type": ""
													}
												],
												"src": "33298:271:18"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Null Address\")\n\n    }\n\n    function abi_encode_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Sender is black\")\n\n        mstore(add(memPtr, 32), \"listed\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Recipient is bl\")\n\n        mstore(add(memPtr, 32), \"acklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount shouldn't be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed: Tokens are lock\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is not a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f(memPtr) {\n\n        mstore(add(memPtr, 0), \"BatchTransfer failed: Mismatched\")\n\n        mstore(add(memPtr, 32), \" arrays\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc(memPtr) {\n\n        mstore(add(memPtr, 0), \"BatchTransfer failed: Recipient \")\n\n        mstore(add(memPtr, 32), \"is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 6402
									},
									{
										"length": 32,
										"start": 6487
									},
									{
										"length": 32,
										"start": 6930
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061019c5760003560e01c8063715018a6116100ec578063ad3cb1cc1161008a578063dbac26e911610064578063dbac26e914610583578063dd62ed3e146105c0578063f2fde38b146105fd578063fe575a87146106265761019c565b8063ad3cb1cc14610504578063b119490e1461052f578063c66e4095146105585761019c565b80638da5cb5b116100c65780638da5cb5b1461043457806395d89b411461045f5780639bc289f11461048a578063a9059cbb146104c75761019c565b8063715018a6146103dd5780638456cb59146103f457806388d695b21461040b5761019c565b8063313ce567116101595780634f1ef286116101335780634f1ef2861461032e57806352d1902d1461034a5780635c975abb1461037557806370a08231146103a05761019c565b8063313ce567146102c35780633e579307146102ee5780633f4ba83a146103175761019c565b806306fdde03146101a1578063095ea7b3146101cc578063153b0d1e1461020957806318160ddd1461023257806323b872dd1461025d5780632e0d2a001461029a575b600080fd5b3480156101ad57600080fd5b506101b6610663565b6040516101c3919061290e565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee91906129d8565b610704565b6040516102009190612a33565b60405180910390f35b34801561021557600080fd5b50610230600480360381019061022b9190612a7a565b610727565b005b34801561023e57600080fd5b50610247610847565b6040516102549190612ac9565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190612ae4565b61085f565b6040516102919190612a33565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc9190612b37565b610aa6565b005b3480156102cf57600080fd5b506102d8610c02565b6040516102e59190612b80565b60405180910390f35b3480156102fa57600080fd5b50610315600480360381019061031091906129d8565b610c0b565b005b34801561032357600080fd5b5061032c610de7565b005b61034860048036038101906103439190612cd0565b610df9565b005b34801561035657600080fd5b5061035f610e18565b60405161036c9190612d45565b60405180910390f35b34801561038157600080fd5b5061038a610e4b565b6040516103979190612a33565b60405180910390f35b3480156103ac57600080fd5b506103c760048036038101906103c29190612b37565b610e61565b6040516103d49190612ac9565b60405180910390f35b3480156103e957600080fd5b506103f2610eb8565b005b34801561040057600080fd5b50610409610ecc565b005b34801561041757600080fd5b50610432600480360381019061042d9190612e16565b610ede565b005b34801561044057600080fd5b50610449611055565b6040516104569190612ea6565b60405180910390f35b34801561046b57600080fd5b5061047461108d565b604051610481919061290e565b60405180910390f35b34801561049657600080fd5b506104b160048036038101906104ac9190612b37565b61112e565b6040516104be9190612ac9565b60405180910390f35b3480156104d357600080fd5b506104ee60048036038101906104e991906129d8565b611146565b6040516104fb9190612a33565b60405180910390f35b34801561051057600080fd5b5061051961138b565b604051610526919061290e565b60405180910390f35b34801561053b57600080fd5b5061055660048036038101906105519190612f62565b6113c4565b005b34801561056457600080fd5b5061056d611582565b60405161057a9190612ea6565b60405180910390f35b34801561058f57600080fd5b506105aa60048036038101906105a59190612b37565b6115a8565b6040516105b79190612a33565b60405180910390f35b3480156105cc57600080fd5b506105e760048036038101906105e29190612fed565b6115c8565b6040516105f49190612ac9565b60405180910390f35b34801561060957600080fd5b50610624600480360381019061061f9190612b37565b61165d565b005b34801561063257600080fd5b5061064d60048036038101906106489190612b37565b6116e3565b60405161065a9190612a33565b60405180910390f35b6060600061066f611739565b90508060030180546106809061305c565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac9061305c565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b505050505091505090565b60008061070f611761565b905061071c818585611769565b600191505092915050565b61072f61177b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361079e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610795906130d9565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd88260405161083b9190612a33565b60405180910390a25050565b600080610852611739565b9050806002015491505090565b6000610869611802565b603560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed9061316b565b60405180910390fd5b603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a906131fd565b60405180910390fd5b600082116109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd90613269565b60405180910390fd5b603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442101580610a5357506000603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b610a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a89906132fb565b60405180910390fd5b610a9d84848461184c565b90509392505050565b610aae61177b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b14906130d9565b60405180910390fd5b610b3c8173ffffffffffffffffffffffffffffffffffffffff1661187b565b610b7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7290613367565b60405180910390fd5b80603260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fe7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad860405160405180910390a250565b60006012905090565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c92906133d3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d01906130d9565b60405180910390fd5b80603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610de35780603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f82604051610dda9190612ac9565b60405180910390a25b5050565b610def61177b565b610df761189e565b565b610e01611900565b610e0a826119e6565b610e1482826119f1565b5050565b6000610e22611b10565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008060009054906101000a900460ff16905090565b600080610e6c611739565b90508060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b610ec061177b565b610eca6000611b97565b565b610ed461177b565b610edc611c6e565b565b610ee6611802565b818190508484905014610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2590613465565b60405180910390fd5b600084849050905060005b8181101561104d5760356000878784818110610f5857610f57613485565b5b9050602002016020810190610f6d9190612b37565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610ff5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fec90613526565b60405180910390fd5b6110403387878481811061100c5761100b613485565b5b90506020020160208101906110219190612b37565b86868581811061103457611033613485565b5b90506020020135611cd0565b8080600101915050610f39565b505050505050565b600080611060611dc4565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60606000611099611739565b90508060040180546110aa9061305c565b80601f01602080910402602001604051908101604052809291908181526020018280546110d69061305c565b80156111235780601f106110f857610100808354040283529160200191611123565b820191906000526020600020905b81548152906001019060200180831161110657829003601f168201915b505050505091505090565b60346020528060005260406000206000915090505481565b6000611150611802565b603560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156111dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d49061316b565b60405180910390fd5b603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561126a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611261906131fd565b60405180910390fd5b600082116112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490613269565b60405180910390fd5b603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544210158061133a57506000603460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054145b611379576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611370906132fb565b60405180910390fd5b6113838383611dec565b905092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60006113ce611e0f565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561141c5750825b9050600060018367ffffffffffffffff16148015611451575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561145f575080155b15611496576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156114e65760018560000160086101000a81548160ff0219169083151502179055505b6114f08888611e37565b6114f933611e4d565b611501611e61565b611509611e73565b8560338190555061151c33603354611e7d565b83156115785760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161156f919061359f565b60405180910390a15b5050505050505050565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60356020528060005260406000206000915054906101000a900460ff1681565b6000806115d3611739565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b61166561177b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116d75760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116ce9190612ea6565b60405180910390fd5b6116e081611b97565b50565b6000603560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b600033905090565b6117768383836001611eff565b505050565b611783611761565b73ffffffffffffffffffffffffffffffffffffffff166117a1611055565b73ffffffffffffffffffffffffffffffffffffffff1614611800576117c4611761565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016117f79190612ea6565b60405180910390fd5b565b61180a610e4b565b1561184a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184190613606565b60405180910390fd5b565b600080611857611761565b90506118648582856120e5565b61186f858585611cd0565b60019150509392505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6118a6612179565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6118e9611761565b6040516118f69190612ea6565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806119ad57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166119946121c2565b73ffffffffffffffffffffffffffffffffffffffff1614155b156119e4576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6119ee61177b565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611a5957506040513d601f19601f82011682018060405250810190611a569190613652565b60015b611a9a57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611a919190612ea6565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611b0157806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611af89190612d45565b60405180910390fd5b611b0b8383612219565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611b95576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611ba1611dc4565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b611c76611802565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611cb9611761565b604051611cc69190612ea6565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611d425760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611d399190612ea6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611db45760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611dab9190612ea6565b60405180910390fd5b611dbf83838361228c565b505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600080611df7611761565b9050611e04818585611cd0565b600191505092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611e3f6124cb565b611e49828261250b565b5050565b611e556124cb565b611e5e81612548565b50565b611e696124cb565b611e716125ce565b565b611e7b6124cb565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611eef5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611ee69190612ea6565b60405180910390fd5b611efb6000838361228c565b5050565b6000611f09611739565b9050600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611f7d5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611f749190612ea6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611fef5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611fe69190612ea6565b60405180910390fd5b828160010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081156120de578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516120d59190612ac9565b60405180910390a35b5050505050565b60006120f184846115c8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146121735781811015612163578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161215a9392919061367f565b60405180910390fd5b61217284848484036000611eff565b5b50505050565b612181610e4b565b6121c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121b790613702565b60405180910390fd5b565b60006121f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6125f2565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612222826125fc565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111561227f5761227982826126c9565b50612288565b61228761274d565b5b5050565b6000612296611739565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036122ec57818160020160008282546122e09190613751565b925050819055506123c5565b60008160000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561237b578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016123729392919061367f565b60405180910390fd5b8281038260000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361241057818160020160008282540392505081905550612460565b818160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124bd9190612ac9565b60405180910390a350505050565b6124d361278a565b612509576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6125136124cb565b600061251d611739565b9050828160030190816125309190613927565b50818160040190816125429190613927565b50505050565b6125506124cb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125c25760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016125b99190612ea6565b60405180910390fd5b6125cb81611b97565b50565b6125d66124cb565b60008060006101000a81548160ff021916908315150217905550565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361265857806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161264f9190612ea6565b60405180910390fd5b806126857f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6125f2565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516126f39190613a40565b600060405180830381855af49150503d806000811461272e576040519150601f19603f3d011682016040523d82523d6000602084013e612733565b606091505b50915091506127438583836127aa565b9250505092915050565b6000341115612788576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000612794611e0f565b60000160089054906101000a900460ff16905090565b6060826127bf576127ba82612839565b612831565b600082511480156127e7575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561282957836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016128209190612ea6565b60405180910390fd5b819050612832565b5b9392505050565b60008151111561284c5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081519050919050565b600082825260208201905092915050565b60005b838110156128b857808201518184015260208101905061289d565b60008484015250505050565b6000601f19601f8301169050919050565b60006128e08261287e565b6128ea8185612889565b93506128fa81856020860161289a565b612903816128c4565b840191505092915050565b6000602082019050818103600083015261292881846128d5565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061296f82612944565b9050919050565b61297f81612964565b811461298a57600080fd5b50565b60008135905061299c81612976565b92915050565b6000819050919050565b6129b5816129a2565b81146129c057600080fd5b50565b6000813590506129d2816129ac565b92915050565b600080604083850312156129ef576129ee61293a565b5b60006129fd8582860161298d565b9250506020612a0e858286016129c3565b9150509250929050565b60008115159050919050565b612a2d81612a18565b82525050565b6000602082019050612a486000830184612a24565b92915050565b612a5781612a18565b8114612a6257600080fd5b50565b600081359050612a7481612a4e565b92915050565b60008060408385031215612a9157612a9061293a565b5b6000612a9f8582860161298d565b9250506020612ab085828601612a65565b9150509250929050565b612ac3816129a2565b82525050565b6000602082019050612ade6000830184612aba565b92915050565b600080600060608486031215612afd57612afc61293a565b5b6000612b0b8682870161298d565b9350506020612b1c8682870161298d565b9250506040612b2d868287016129c3565b9150509250925092565b600060208284031215612b4d57612b4c61293a565b5b6000612b5b8482850161298d565b91505092915050565b600060ff82169050919050565b612b7a81612b64565b82525050565b6000602082019050612b956000830184612b71565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612bdd826128c4565b810181811067ffffffffffffffff82111715612bfc57612bfb612ba5565b5b80604052505050565b6000612c0f612930565b9050612c1b8282612bd4565b919050565b600067ffffffffffffffff821115612c3b57612c3a612ba5565b5b612c44826128c4565b9050602081019050919050565b82818337600083830152505050565b6000612c73612c6e84612c20565b612c05565b905082815260208101848484011115612c8f57612c8e612ba0565b5b612c9a848285612c51565b509392505050565b600082601f830112612cb757612cb6612b9b565b5b8135612cc7848260208601612c60565b91505092915050565b60008060408385031215612ce757612ce661293a565b5b6000612cf58582860161298d565b925050602083013567ffffffffffffffff811115612d1657612d1561293f565b5b612d2285828601612ca2565b9150509250929050565b6000819050919050565b612d3f81612d2c565b82525050565b6000602082019050612d5a6000830184612d36565b92915050565b600080fd5b600080fd5b60008083601f840112612d8057612d7f612b9b565b5b8235905067ffffffffffffffff811115612d9d57612d9c612d60565b5b602083019150836020820283011115612db957612db8612d65565b5b9250929050565b60008083601f840112612dd657612dd5612b9b565b5b8235905067ffffffffffffffff811115612df357612df2612d60565b5b602083019150836020820283011115612e0f57612e0e612d65565b5b9250929050565b60008060008060408587031215612e3057612e2f61293a565b5b600085013567ffffffffffffffff811115612e4e57612e4d61293f565b5b612e5a87828801612d6a565b9450945050602085013567ffffffffffffffff811115612e7d57612e7c61293f565b5b612e8987828801612dc0565b925092505092959194509250565b612ea081612964565b82525050565b6000602082019050612ebb6000830184612e97565b92915050565b600067ffffffffffffffff821115612edc57612edb612ba5565b5b612ee5826128c4565b9050602081019050919050565b6000612f05612f0084612ec1565b612c05565b905082815260208101848484011115612f2157612f20612ba0565b5b612f2c848285612c51565b509392505050565b600082601f830112612f4957612f48612b9b565b5b8135612f59848260208601612ef2565b91505092915050565b600080600060608486031215612f7b57612f7a61293a565b5b600084013567ffffffffffffffff811115612f9957612f9861293f565b5b612fa586828701612f34565b935050602084013567ffffffffffffffff811115612fc657612fc561293f565b5b612fd286828701612f34565b9250506040612fe3868287016129c3565b9150509250925092565b600080604083850312156130045761300361293a565b5b60006130128582860161298d565b92505060206130238582860161298d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061307457607f821691505b6020821081036130875761308661302d565b5b50919050565b7f4e756c6c20416464726573730000000000000000000000000000000000000000600082015250565b60006130c3600c83612889565b91506130ce8261308d565b602082019050919050565b600060208201905081810360008301526130f2816130b6565b9050919050565b7f5472616e73666572206661696c65643a2053656e64657220697320626c61636b60008201527f6c69737465640000000000000000000000000000000000000000000000000000602082015250565b6000613155602683612889565b9150613160826130f9565b604082019050919050565b6000602082019050818103600083015261318481613148565b9050919050565b7f5472616e73666572206661696c65643a20526563697069656e7420697320626c60008201527f61636b6c69737465640000000000000000000000000000000000000000000000602082015250565b60006131e7602983612889565b91506131f28261318b565b604082019050919050565b60006020820190508181036000830152613216816131da565b9050919050565b7f416d6f756e742073686f756c646e2774206265207a65726f0000000000000000600082015250565b6000613253601883612889565b915061325e8261321d565b602082019050919050565b6000602082019050818103600083015261328281613246565b9050919050565b7f5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b60006132e5602283612889565b91506132f082613289565b604082019050919050565b60006020820190508181036000830152613314816132d8565b9050919050565b7f41646472657373206973206e6f74206120636f6e747261637400000000000000600082015250565b6000613351601983612889565b915061335c8261331b565b602082019050919050565b6000602082019050818103600083015261338081613344565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b60006133bd600e83612889565b91506133c882613387565b602082019050919050565b600060208201905081810360008301526133ec816133b0565b9050919050565b7f42617463685472616e73666572206661696c65643a204d69736d61746368656460008201527f2061727261797300000000000000000000000000000000000000000000000000602082015250565b600061344f602783612889565b915061345a826133f3565b604082019050919050565b6000602082019050818103600083015261347e81613442565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f42617463685472616e73666572206661696c65643a20526563697069656e742060008201527f697320626c61636b6c6973746564000000000000000000000000000000000000602082015250565b6000613510602e83612889565b915061351b826134b4565b604082019050919050565b6000602082019050818103600083015261353f81613503565b9050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061358961358461357f84613546565b613564565b613550565b9050919050565b6135998161356e565b82525050565b60006020820190506135b46000830184613590565b92915050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006135f0601083612889565b91506135fb826135ba565b602082019050919050565b6000602082019050818103600083015261361f816135e3565b9050919050565b61362f81612d2c565b811461363a57600080fd5b50565b60008151905061364c81613626565b92915050565b6000602082840312156136685761366761293a565b5b60006136768482850161363d565b91505092915050565b60006060820190506136946000830186612e97565b6136a16020830185612aba565b6136ae6040830184612aba565b949350505050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006136ec601483612889565b91506136f7826136b6565b602082019050919050565b6000602082019050818103600083015261371b816136df565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061375c826129a2565b9150613767836129a2565b925082820190508082111561377f5761377e613722565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026137e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826137aa565b6137f186836137aa565b95508019841693508086168417925050509392505050565b600061382461381f61381a846129a2565b613564565b6129a2565b9050919050565b6000819050919050565b61383e83613809565b61385261384a8261382b565b8484546137b7565b825550505050565b600090565b61386761385a565b613872818484613835565b505050565b5b818110156138965761388b60008261385f565b600181019050613878565b5050565b601f8211156138db576138ac81613785565b6138b58461379a565b810160208510156138c4578190505b6138d86138d08561379a565b830182613877565b50505b505050565b600082821c905092915050565b60006138fe600019846008026138e0565b1980831691505092915050565b600061391783836138ed565b9150826002028217905092915050565b6139308261287e565b67ffffffffffffffff81111561394957613948612ba5565b5b613953825461305c565b61395e82828561389a565b600060209050601f831160018114613991576000841561397f578287015190505b613989858261390b565b8655506139f1565b601f19841661399f86613785565b60005b828110156139c7578489015182556001820191506020850194506020810190506139a2565b868310156139e457848901516139e0601f8916826138ed565b8355505b6001600288020188555050505b505050505050565b600081519050919050565b600081905092915050565b6000613a1a826139f9565b613a248185613a04565b9350613a3481856020860161289a565b80840191505092915050565b6000613a4c8284613a0f565b91508190509291505056fea26469706673582212203ad225a9e9e1fc3e1094eba6d62ba1605e7edef8e480b9aeff9b2aedfd25481e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDBAC26E9 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x626 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0xB119490E EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xC66E4095 EQ PUSH2 0x558 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x9BC289F1 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C7 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x40B JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A0 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x3E579307 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x317 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x2E0D2A00 EQ PUSH2 0x29A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x29D8 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x2A7A JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x2AE4 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x2B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x29D8 JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32C PUSH2 0xDE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2CD0 JUMP JUMPDEST PUSH2 0xDF9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35F PUSH2 0xE18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x2D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0xEB8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0xECC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x2E16 JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x449 PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x474 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x481 SWAP2 SWAP1 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E9 SWAP2 SWAP1 PUSH2 0x29D8 JUMP JUMPDEST PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x519 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x290E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x556 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x2F62 JUMP JUMPDEST PUSH2 0x13C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56D PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x2FED JUMP JUMPDEST PUSH2 0x15C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x624 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x165D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x66F PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x680 SWAP1 PUSH2 0x305C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AC SWAP1 PUSH2 0x305C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x70F PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP PUSH2 0x71C DUP2 DUP6 DUP6 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x72F PUSH2 0x177B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x795 SWAP1 PUSH2 0x30D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x83B SWAP2 SWAP1 PUSH2 0x2A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x852 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x983 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97A SWAP1 PUSH2 0x31FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP1 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0xA53 JUMPI POP PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0xA92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA89 SWAP1 PUSH2 0x32FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9D DUP5 DUP5 DUP5 PUSH2 0x184C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAAE PUSH2 0x177B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB14 SWAP1 PUSH2 0x30D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB3C DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x187B JUMP JUMPDEST PUSH2 0xB7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB72 SWAP1 PUSH2 0x3367 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x32 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC92 SWAP1 PUSH2 0x33D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP1 PUSH2 0x30D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0xDE3 JUMPI DUP1 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F DUP3 PUSH1 0x40 MLOAD PUSH2 0xDDA SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xDEF PUSH2 0x177B JUMP JUMPDEST PUSH2 0xDF7 PUSH2 0x189E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE01 PUSH2 0x1900 JUMP JUMPDEST PUSH2 0xE0A DUP3 PUSH2 0x19E6 JUMP JUMPDEST PUSH2 0xE14 DUP3 DUP3 PUSH2 0x19F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE22 PUSH2 0x1B10 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE6C PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC0 PUSH2 0x177B JUMP JUMPDEST PUSH2 0xECA PUSH1 0x0 PUSH2 0x1B97 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xED4 PUSH2 0x177B JUMP JUMPDEST PUSH2 0xEDC PUSH2 0x1C6E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEE6 PUSH2 0x1802 JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF25 SWAP1 PUSH2 0x3465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP5 SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x104D JUMPI PUSH1 0x35 PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xF58 JUMPI PUSH2 0xF57 PUSH2 0x3485 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF6D SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEC SWAP1 PUSH2 0x3526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1040 CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x100C JUMPI PUSH2 0x100B PUSH2 0x3485 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1021 SWAP2 SWAP1 PUSH2 0x2B37 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x1034 JUMPI PUSH2 0x1033 PUSH2 0x3485 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1CD0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xF39 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1060 PUSH2 0x1DC4 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1099 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x10AA SWAP1 PUSH2 0x305C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10D6 SWAP1 PUSH2 0x305C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1123 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1123 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1106 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1150 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x11DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D4 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x126A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1261 SWAP1 PUSH2 0x31FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x133A JUMPI POP PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ JUMPDEST PUSH2 0x1379 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1370 SWAP1 PUSH2 0x32FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1383 DUP4 DUP4 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13CE PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x141C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1451 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x145F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1496 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x14E6 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x14F0 DUP9 DUP9 PUSH2 0x1E37 JUMP JUMPDEST PUSH2 0x14F9 CALLER PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0x1501 PUSH2 0x1E61 JUMP JUMPDEST PUSH2 0x1509 PUSH2 0x1E73 JUMP JUMPDEST DUP6 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH2 0x151C CALLER PUSH1 0x33 SLOAD PUSH2 0x1E7D JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1578 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x156F SWAP2 SWAP1 PUSH2 0x359F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15D3 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1665 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16D7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CE SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E0 DUP2 PUSH2 0x1B97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1776 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EFF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1783 PUSH2 0x1761 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17A1 PUSH2 0x1055 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1800 JUMPI PUSH2 0x17C4 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F7 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x180A PUSH2 0xE4B JUMP JUMPDEST ISZERO PUSH2 0x184A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1841 SWAP1 PUSH2 0x3606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1857 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP PUSH2 0x1864 DUP6 DUP3 DUP6 PUSH2 0x20E5 JUMP JUMPDEST PUSH2 0x186F DUP6 DUP6 DUP6 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A6 PUSH2 0x2179 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x18E9 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F6 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x19AD JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1994 PUSH2 0x21C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x19EE PUSH2 0x177B JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A59 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A56 SWAP2 SWAP1 PUSH2 0x3652 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A9A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A91 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0x1B01 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF8 SWAP2 SWAP1 PUSH2 0x2D45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B0B DUP4 DUP4 PUSH2 0x2219 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B95 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BA1 PUSH2 0x1DC4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1C76 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1CB9 PUSH2 0x1761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC6 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D42 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D39 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DB4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAB SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DBF DUP4 DUP4 DUP4 PUSH2 0x228C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1DF7 PUSH2 0x1761 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E04 DUP2 DUP6 DUP6 PUSH2 0x1CD0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E3F PUSH2 0x24CB JUMP JUMPDEST PUSH2 0x1E49 DUP3 DUP3 PUSH2 0x250B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E55 PUSH2 0x24CB JUMP JUMPDEST PUSH2 0x1E5E DUP2 PUSH2 0x2548 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1E69 PUSH2 0x24CB JUMP JUMPDEST PUSH2 0x1E71 PUSH2 0x25CE JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E7B PUSH2 0x24CB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EEF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE6 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EFB PUSH1 0x0 DUP4 DUP4 PUSH2 0x228C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F09 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F7D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F74 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FEF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FE6 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x20DE JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x20D5 SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F1 DUP5 DUP5 PUSH2 0x15C8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x2173 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2163 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x215A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2172 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1EFF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2181 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x21C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B7 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x25F2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2222 DUP3 PUSH2 0x25FC JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x227F JUMPI PUSH2 0x2279 DUP3 DUP3 PUSH2 0x26C9 JUMP JUMPDEST POP PUSH2 0x2288 JUMP JUMPDEST PUSH2 0x2287 PUSH2 0x274D JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2296 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22EC JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x22E0 SWAP2 SWAP1 PUSH2 0x3751 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x237B JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2372 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2410 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2460 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x24BD SWAP2 SWAP1 PUSH2 0x2AC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x24D3 PUSH2 0x278A JUMP JUMPDEST PUSH2 0x2509 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2513 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251D PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2530 SWAP2 SWAP1 PUSH2 0x3927 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2542 SWAP2 SWAP1 PUSH2 0x3927 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2550 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25C2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B9 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25CB DUP2 PUSH2 0x1B97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25D6 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x2658 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x264F SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2685 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x25F2 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x26F3 SWAP2 SWAP1 PUSH2 0x3A40 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x272E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2733 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2743 DUP6 DUP4 DUP4 PUSH2 0x27AA JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x2788 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2794 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x27BF JUMPI PUSH2 0x27BA DUP3 PUSH2 0x2839 JUMP JUMPDEST PUSH2 0x2831 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x27E7 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2829 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2820 SWAP2 SWAP1 PUSH2 0x2EA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2832 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x284C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28B8 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x289D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28E0 DUP3 PUSH2 0x287E JUMP JUMPDEST PUSH2 0x28EA DUP2 DUP6 PUSH2 0x2889 JUMP JUMPDEST SWAP4 POP PUSH2 0x28FA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x289A JUMP JUMPDEST PUSH2 0x2903 DUP2 PUSH2 0x28C4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2928 DUP2 DUP5 PUSH2 0x28D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296F DUP3 PUSH2 0x2944 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x297F DUP2 PUSH2 0x2964 JUMP JUMPDEST DUP2 EQ PUSH2 0x298A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x299C DUP2 PUSH2 0x2976 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B5 DUP2 PUSH2 0x29A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29D2 DUP2 PUSH2 0x29AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29EF JUMPI PUSH2 0x29EE PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29FD DUP6 DUP3 DUP7 ADD PUSH2 0x298D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A0E DUP6 DUP3 DUP7 ADD PUSH2 0x29C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A2D DUP2 PUSH2 0x2A18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A57 DUP2 PUSH2 0x2A18 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A74 DUP2 PUSH2 0x2A4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A91 JUMPI PUSH2 0x2A90 PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A9F DUP6 DUP3 DUP7 ADD PUSH2 0x298D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AB0 DUP6 DUP3 DUP7 ADD PUSH2 0x2A65 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC3 DUP2 PUSH2 0x29A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2ADE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2ABA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AFD JUMPI PUSH2 0x2AFC PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B0B DUP7 DUP3 DUP8 ADD PUSH2 0x298D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2B1C DUP7 DUP3 DUP8 ADD PUSH2 0x298D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2B2D DUP7 DUP3 DUP8 ADD PUSH2 0x29C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B4D JUMPI PUSH2 0x2B4C PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B5B DUP5 DUP3 DUP6 ADD PUSH2 0x298D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B7A DUP2 PUSH2 0x2B64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B95 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2BDD DUP3 PUSH2 0x28C4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2BFC JUMPI PUSH2 0x2BFB PUSH2 0x2BA5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C0F PUSH2 0x2930 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C1B DUP3 DUP3 PUSH2 0x2BD4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C3B JUMPI PUSH2 0x2C3A PUSH2 0x2BA5 JUMP JUMPDEST JUMPDEST PUSH2 0x2C44 DUP3 PUSH2 0x28C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C73 PUSH2 0x2C6E DUP5 PUSH2 0x2C20 JUMP JUMPDEST PUSH2 0x2C05 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C8F JUMPI PUSH2 0x2C8E PUSH2 0x2BA0 JUMP JUMPDEST JUMPDEST PUSH2 0x2C9A DUP5 DUP3 DUP6 PUSH2 0x2C51 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CB7 JUMPI PUSH2 0x2CB6 PUSH2 0x2B9B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2CC7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CE7 JUMPI PUSH2 0x2CE6 PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CF5 DUP6 DUP3 DUP7 ADD PUSH2 0x298D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D16 JUMPI PUSH2 0x2D15 PUSH2 0x293F JUMP JUMPDEST JUMPDEST PUSH2 0x2D22 DUP6 DUP3 DUP7 ADD PUSH2 0x2CA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D3F DUP2 PUSH2 0x2D2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2D80 JUMPI PUSH2 0x2D7F PUSH2 0x2B9B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D9D JUMPI PUSH2 0x2D9C PUSH2 0x2D60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2DB9 JUMPI PUSH2 0x2DB8 PUSH2 0x2D65 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2DD6 JUMPI PUSH2 0x2DD5 PUSH2 0x2B9B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DF3 JUMPI PUSH2 0x2DF2 PUSH2 0x2D60 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2E0F JUMPI PUSH2 0x2E0E PUSH2 0x2D65 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E30 JUMPI PUSH2 0x2E2F PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E4E JUMPI PUSH2 0x2E4D PUSH2 0x293F JUMP JUMPDEST JUMPDEST PUSH2 0x2E5A DUP8 DUP3 DUP9 ADD PUSH2 0x2D6A JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E7D JUMPI PUSH2 0x2E7C PUSH2 0x293F JUMP JUMPDEST JUMPDEST PUSH2 0x2E89 DUP8 DUP3 DUP9 ADD PUSH2 0x2DC0 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x2EA0 DUP2 PUSH2 0x2964 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EBB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2EDC JUMPI PUSH2 0x2EDB PUSH2 0x2BA5 JUMP JUMPDEST JUMPDEST PUSH2 0x2EE5 DUP3 PUSH2 0x28C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F05 PUSH2 0x2F00 DUP5 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x2C05 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2F21 JUMPI PUSH2 0x2F20 PUSH2 0x2BA0 JUMP JUMPDEST JUMPDEST PUSH2 0x2F2C DUP5 DUP3 DUP6 PUSH2 0x2C51 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2F49 JUMPI PUSH2 0x2F48 PUSH2 0x2B9B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2F59 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2EF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2F7B JUMPI PUSH2 0x2F7A PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F99 JUMPI PUSH2 0x2F98 PUSH2 0x293F JUMP JUMPDEST JUMPDEST PUSH2 0x2FA5 DUP7 DUP3 DUP8 ADD PUSH2 0x2F34 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2FC6 JUMPI PUSH2 0x2FC5 PUSH2 0x293F JUMP JUMPDEST JUMPDEST PUSH2 0x2FD2 DUP7 DUP3 DUP8 ADD PUSH2 0x2F34 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2FE3 DUP7 DUP3 DUP8 ADD PUSH2 0x29C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3004 JUMPI PUSH2 0x3003 PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3012 DUP6 DUP3 DUP7 ADD PUSH2 0x298D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3023 DUP6 DUP3 DUP7 ADD PUSH2 0x298D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3074 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3087 JUMPI PUSH2 0x3086 PUSH2 0x302D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756C6C20416464726573730000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30C3 PUSH1 0xC DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x30CE DUP3 PUSH2 0x308D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30F2 DUP2 PUSH2 0x30B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A2053656E64657220697320626C61636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C69737465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3155 PUSH1 0x26 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x3160 DUP3 PUSH2 0x30F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3184 DUP2 PUSH2 0x3148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20526563697069656E7420697320626C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x61636B6C69737465640000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E7 PUSH1 0x29 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x31F2 DUP3 PUSH2 0x318B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3216 DUP2 PUSH2 0x31DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C646E2774206265207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3253 PUSH1 0x18 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x325E DUP3 PUSH2 0x321D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3282 DUP2 PUSH2 0x3246 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E5 PUSH1 0x22 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F0 DUP3 PUSH2 0x3289 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3314 DUP2 PUSH2 0x32D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206973206E6F74206120636F6E747261637400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3351 PUSH1 0x19 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x335C DUP3 PUSH2 0x331B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3380 DUP2 PUSH2 0x3344 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33BD PUSH1 0xE DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x33C8 DUP3 PUSH2 0x3387 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33EC DUP2 PUSH2 0x33B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A204D69736D617463686564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2061727261797300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x344F PUSH1 0x27 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x345A DUP3 PUSH2 0x33F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x347E DUP2 PUSH2 0x3442 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x42617463685472616E73666572206661696C65643A20526563697069656E7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697320626C61636B6C6973746564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3510 PUSH1 0x2E DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x351B DUP3 PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x353F DUP2 PUSH2 0x3503 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3589 PUSH2 0x3584 PUSH2 0x357F DUP5 PUSH2 0x3546 JUMP JUMPDEST PUSH2 0x3564 JUMP JUMPDEST PUSH2 0x3550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3599 DUP2 PUSH2 0x356E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F0 PUSH1 0x10 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x35FB DUP3 PUSH2 0x35BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x361F DUP2 PUSH2 0x35E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x362F DUP2 PUSH2 0x2D2C JUMP JUMPDEST DUP2 EQ PUSH2 0x363A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x364C DUP2 PUSH2 0x3626 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3668 JUMPI PUSH2 0x3667 PUSH2 0x293A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3676 DUP5 DUP3 DUP6 ADD PUSH2 0x363D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3694 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2E97 JUMP JUMPDEST PUSH2 0x36A1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2ABA JUMP JUMPDEST PUSH2 0x36AE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2ABA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36EC PUSH1 0x14 DUP4 PUSH2 0x2889 JUMP JUMPDEST SWAP2 POP PUSH2 0x36F7 DUP3 PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x371B DUP2 PUSH2 0x36DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x375C DUP3 PUSH2 0x29A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3767 DUP4 PUSH2 0x29A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x377F JUMPI PUSH2 0x377E PUSH2 0x3722 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x37E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x37AA JUMP JUMPDEST PUSH2 0x37F1 DUP7 DUP4 PUSH2 0x37AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3824 PUSH2 0x381F PUSH2 0x381A DUP5 PUSH2 0x29A2 JUMP JUMPDEST PUSH2 0x3564 JUMP JUMPDEST PUSH2 0x29A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x383E DUP4 PUSH2 0x3809 JUMP JUMPDEST PUSH2 0x3852 PUSH2 0x384A DUP3 PUSH2 0x382B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x37B7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3867 PUSH2 0x385A JUMP JUMPDEST PUSH2 0x3872 DUP2 DUP5 DUP5 PUSH2 0x3835 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3896 JUMPI PUSH2 0x388B PUSH1 0x0 DUP3 PUSH2 0x385F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3878 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x38DB JUMPI PUSH2 0x38AC DUP2 PUSH2 0x3785 JUMP JUMPDEST PUSH2 0x38B5 DUP5 PUSH2 0x379A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x38C4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x38D8 PUSH2 0x38D0 DUP6 PUSH2 0x379A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3877 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38FE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x38E0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3917 DUP4 DUP4 PUSH2 0x38ED JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3930 DUP3 PUSH2 0x287E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3949 JUMPI PUSH2 0x3948 PUSH2 0x2BA5 JUMP JUMPDEST JUMPDEST PUSH2 0x3953 DUP3 SLOAD PUSH2 0x305C JUMP JUMPDEST PUSH2 0x395E DUP3 DUP3 DUP6 PUSH2 0x389A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3991 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x397F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3989 DUP6 DUP3 PUSH2 0x390B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x39F1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x399F DUP7 PUSH2 0x3785 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39C7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39A2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39E4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x39E0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x38ED JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A1A DUP3 PUSH2 0x39F9 JUMP JUMPDEST PUSH2 0x3A24 DUP2 DUP6 PUSH2 0x3A04 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A34 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x289A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4C DUP3 DUP5 PUSH2 0x3A0F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xD2 0x25 0xA9 0xE9 0xE1 0xFC RETURNDATACOPY LT SWAP5 0xEB 0xA6 0xD6 0x2B LOG1 PUSH1 0x5E PUSH31 0xDEF8E480B9AEFF9B2AEDFD25481E64736F6C634300081A0033000000000000 ",
							"sourceMap": "445:4024:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2118:214:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3896:152:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2974:533:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3513:285;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3754:82:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1818:294:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1747:65;;;;;;;;;;;;;:::i;:::-;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1879:84:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4106:171:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;1680:61:17;;;;;;;;;;;;;:::i;:::-;;3804:573;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:148:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;658:46:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2455:513;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1198:363:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;549:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;710:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4708:195:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2338:111:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2716:144:4;2761:13;2786:22;2811:18;:16;:18::i;:::-;2786:43;;2846:1;:7;;2839:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;5299:13;5315:12;:10;:12::i;:::-;5299:28;;5337:31;5346:5;5353:7;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;:::o;2118:214:17:-;2334:13:0;:11;:13::i;:::-;2225:1:17::1;2207:20;;:7;:20;;::::0;2199:44:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2276:6;2253:11;:20;2265:7;2253:20;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2309:7;2297:28;;;2318:6;2297:28;;;;;;:::i;:::-;;;;;;;;2118:214:::0;;:::o;3896:152:4:-;3948:7;3967:22;3992:18;:16;:18::i;:::-;3967:43;;4027:1;:14;;;4020:21;;;3896:152;:::o;2974:533:17:-;3086:4;1503:19:3;:17;:19::i;:::-;3111:11:17::1;:19;3123:6;3111:19;;;;;;;;;;;;;;;;;;;;;;;;;3110:20;3102:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3192:11;:22;3204:9;3192:22;;;;;;;;;;;;;;;;;;;;;;;;;3191:23;3183:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3286:1;3278:6;:9;3270:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3352:11;:19;3364:6;3352:19;;;;;;;;;;;;;;;;3333:15;:38;;:66;;;;3398:1;3375:11;:19;3387:6;3375:19;;;;;;;;;;;;;;;;:24;3333:66;3325:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;3455:45;3474:6;3482:9;3493:6;3455:18;:45::i;:::-;3448:52;;2974:533:::0;;;;;:::o;3513:285::-;2334:13:0;:11;:13::i;:::-;3620:1:17::1;3596:26;;:12;:26;;::::0;3588:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3657:25;:12;:23;;;:25::i;:::-;3649:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;3736:12;3722:11;;:26;;;;;;;;;;;;;;;;;;3778:12;3763:28;;;;;;;;;;;;3513:285:::0;:::o;3754:82:4:-;3803:5;3827:2;3820:9;;3754:82;:::o;1818:294:17:-;1626:11;;;;;;;;;;;1612:25;;:10;:25;;;1604:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1934:1:::1;1916:20;;:7;:20;;::::0;1908:44:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1990:9;1966:11;:20;1978:7;1966:20;;;;;;;;;;;;;;;;:33;1962:144;;2038:9;2015:11;:20;2027:7;2015:20;;;;;;;;;;;;;;;:32;;;;2076:7;2066:29;;;2085:9;2066:29;;;;;;:::i;:::-;;;;;;;;1962:144;1818:294:::0;;:::o;1747:65::-;2334:13:0;:11;:13::i;:::-;1795:10:17::1;:8;:10::i;:::-;1747:65::o:0;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:10::1;3803:32:2;;3796:39;;3708:134:::0;:::o;1879:84:3:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;4106:171:4:-;4171:7;4190:22;4215:18;:16;:18::i;:::-;4190:43;;4250:1;:11;;:20;4262:7;4250:20;;;;;;;;;;;;;;;;4243:27;;;4106:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1680:61:17:-;2334:13:0;:11;:13::i;:::-;1726:8:17::1;:6;:8::i;:::-;1680:61::o:0;3804:573::-;1503:19:3;:17;:19::i;:::-;3948:7:17::1;;:14;;3927:10;;:17;;:35;3919:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4016:23;4042:10;;:17;;4016:43;;4074:9;4069:302;4093:15;4089:1;:19;4069:302;;;4160:11;:26;4172:10;;4183:1;4172:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4160:26;;;;;;;;;;;;;;;;;;;;;;;;;4156:129;;;4210:56;;;;;;;;;;:::i;:::-;;;;;;;;4156:129;4298:48;4308:10;4320;;4331:1;4320:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4335:7;;4343:1;4335:10;;;;;;;:::i;:::-;;;;;;;;4298:9;:48::i;:::-;4110:3;;;;;;;4069:302;;;;3909:468;3804:573:::0;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2973:148:4:-;3020:13;3045:22;3070:18;:16;:18::i;:::-;3045:43;;3105:1;:9;;3098:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:148;:::o;658:46:17:-;;;;;;;;;;;;;;;;;:::o;2455:513::-;2547:4;1503:19:3;:17;:19::i;:::-;2572:11:17::1;:23;2584:10;2572:23;;;;;;;;;;;;;;;;;;;;;;;;;2571:24;2563:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2657:11;:22;2669:9;2657:22;;;;;;;;;;;;;;;;;;;;;;;;;2656:23;2648:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2751:1;2743:6;:9;2735:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2817:11;:23;2829:10;2817:23;;;;;;;;;;;;;;;;2798:15;:42;;:74;;;;2871:1;2844:11;:23;2856:10;2844:23;;;;;;;;;;;;;;;;:28;2798:74;2790:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;2928:33;2943:9;2954:6;2928:14;:33::i;:::-;2921:40;;2455:513:::0;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;1198:363:17:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1313:26:17::1;1326:4;1332:6;1313:12;:26::i;:::-;1349;1364:10;1349:14;:26::i;:::-;1385:17;:15;:17::i;:::-;1412:24;:22;:24::i;:::-;1462:12;1447;:27;;;;1484:31;1490:10;1502:12;;1484:5;:31::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1198:363:17;;;:::o;549:26::-;;;;;;;;;;;;;:::o;710:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;4708:195:4:-;4788:7;4807:22;4832:18;:16;:18::i;:::-;4807:43;;4867:1;:13;;:20;4881:5;4867:20;;;;;;;;;;;;;;;:29;4888:7;4867:29;;;;;;;;;;;;;;;;4860:36;;;4708:195;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2338:111:17:-;2399:4;2422:11;:20;2434:7;2422:20;;;;;;;;;;;;;;;;;;;;;;;;;2415:27;;2338:111;;;:::o;1947:153:4:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:6:-;940:7;966:10;959:17;;887:96;:::o;10001:128:4:-;10085:37;10094:5;10101:7;10110:5;10117:4;10085:8;:37::i;:::-;10001:128;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;2031:106:3:-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;5988:244:4:-;6075:4;6091:15;6109:12;:10;:12::i;:::-;6091:30;;6131:37;6147:4;6153:7;6162:5;6131:15;:37::i;:::-;6178:26;6188:4;6194:2;6198:5;6178:9;:26::i;:::-;6221:4;6214:11;;;5988:244;;;;;:::o;1423:320:5:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;2697:117:3:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;4603:312:2:-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;4383:84:17:-;2334:13:0;:11;:13::i;:::-;4383:84:17;:::o;6057:538:2:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:10;6258:32:2;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;2450:115:3:-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;6605:300:4:-;6704:1;6688:18;;:4;:18;;;6684:86;;6756:1;6729:30;;;;;;;;;;;:::i;:::-;;;;;;;;6684:86;6797:1;6783:16;;:2;:16;;;6779:86;;6851:1;6822:32;;;;;;;;;;;:::i;:::-;;;;;;;;6779:86;6874:24;6882:4;6888:2;6892:5;6874:7;:24::i;:::-;6605:300;;;:::o;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;4472:178:4:-;4541:4;4557:13;4573:12;:10;:12::i;:::-;4557:28;;4595:27;4605:5;4612:2;4616:5;4595:9;:27::i;:::-;4639:4;4632:11;;;4472:178;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2282:147:4:-;6931:20:1;:18;:20::i;:::-;2384:38:4::1;2407:5;2414:7;2384:22;:38::i;:::-;2282:147:::0;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1084:97:3:-;6931:20:1;:18;:20::i;:::-;1147:27:3::1;:25;:27::i;:::-;1084:97::o:0;2970:67:2:-;6931:20:1;:18;:20::i;:::-;2970:67:2:o;8733:208:4:-;8822:1;8803:21;;:7;:21;;;8799:91;;8876:1;8847:32;;;;;;;;;;;:::i;:::-;;;;;;;;8799:91;8899:35;8915:1;8919:7;8928:5;8899:7;:35::i;:::-;8733:208;;:::o;10976:487::-;11084:22;11109:18;:16;:18::i;:::-;11084:43;;11158:1;11141:19;;:5;:19;;;11137:89;;11212:1;11183:32;;;;;;;;;;;:::i;:::-;;;;;;;;11137:89;11258:1;11239:21;;:7;:21;;;11235:90;;11311:1;11283:31;;;;;;;;;;;:::i;:::-;;;;;;;;11235:90;11366:5;11334:1;:13;;:20;11348:5;11334:20;;;;;;;;;;;;;;;:29;11355:7;11334:29;;;;;;;;;;;;;;;:37;;;;11385:9;11381:76;;;11431:7;11415:31;;11424:5;11415:31;;;11440:5;11415:31;;;;;;:::i;:::-;;;;;;;;11381:76;11074:389;10976:487;;;;:::o;11745:477::-;11844:24;11871:25;11881:5;11888:7;11871:9;:25::i;:::-;11844:52;;11930:17;11910:16;:37;11906:310;;11986:5;11967:16;:24;11963:130;;;12045:7;12054:16;12072:5;12018:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11963:130;12134:57;12143:5;12150:7;12178:5;12159:16;:24;12185:5;12134:8;:57::i;:::-;11906:310;11834:388;11745:477;;;:::o;2209:106:3:-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;1441:138:10:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;7220:1170:4:-;7305:22;7330:18;:16;:18::i;:::-;7305:43;;7378:1;7362:18;;:4;:18;;;7358:546;;7516:5;7498:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7358:546;;;7552:19;7574:1;:11;;:17;7586:4;7574:17;;;;;;;;;;;;;;;;7552:39;;7623:5;7609:11;:19;7605:115;;;7680:4;7686:11;7699:5;7655:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7605:115;7874:5;7860:11;:19;7840:1;:11;;:17;7852:4;7840:17;;;;;;;;;;;;;;;:39;;;;7538:366;7358:546;7932:1;7918:16;;:2;:16;;;7914:429;;8099:5;8081:1;:14;;;:23;;;;;;;;;;;7914:429;;;8313:5;8294:1;:11;;:15;8306:2;8294:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7914:429;8373:2;8358:25;;8367:4;8358:25;;;8377:5;8358:25;;;;;;:::i;:::-;;;;;;;;7295:1095;7220:1170;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2435:216:4:-;6931:20:1;:18;:20::i;:::-;2547:22:4::1;2572:18;:16;:18::i;:::-;2547:43;;2610:5;2600:1;:7;;:15;;;;;;:::i;:::-;;2637:7;2625:1;:9;;:19;;;;;;:::i;:::-;;2537:114;2435:216:::0;;:::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1187:95:3:-;6931:20:1;:18;:20::i;:::-;1270:5:3::1;1260:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;1899:163:16:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:10:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3900:253:14:-;3983:12;4008;4022:23;4049:6;:19;;4069:4;4049:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4007:67;;;;4091:55;4118:6;4126:7;4135:10;4091:26;:55::i;:::-;4084:62;;;;3900:253;;;;:::o;6113:122:10:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4421:582:14:-;4565:12;4594:7;4589:408;;4617:19;4625:10;4617:7;:19::i;:::-;4589:408;;;4862:1;4841:10;:17;:22;:49;;;;;4889:1;4867:6;:18;;;:23;4841:49;4837:119;;;4934:6;4917:24;;;;;;;;;;;:::i;:::-;;;;;;;;4837:119;4976:10;4969:17;;;;4589:408;4421:582;;;;;;:::o;5543:487::-;5694:1;5674:10;:17;:21;5670:354;;;5871:10;5865:17;5927:15;5914:10;5910:2;5906:19;5899:44;5670:354;5994:19;;;;;;;;;;;;;;7:99:18;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1351:75::-;1384:6;1417:2;1411:9;1401:19;;1351:75;:::o;1432:117::-;1541:1;1538;1531:12;1555:117;1664:1;1661;1654:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:116::-;3518:21;3533:5;3518:21;:::i;:::-;3511:5;3508:32;3498:60;;3554:1;3551;3544:12;3498:60;3448:116;:::o;3570:133::-;3613:5;3651:6;3638:20;3629:29;;3667:30;3691:5;3667:30;:::i;:::-;3570:133;;;;:::o;3709:468::-;3774:6;3782;3831:2;3819:9;3810:7;3806:23;3802:32;3799:119;;;3837:79;;:::i;:::-;3799:119;3957:1;3982:53;4027:7;4018:6;4007:9;4003:22;3982:53;:::i;:::-;3972:63;;3928:117;4084:2;4110:50;4152:7;4143:6;4132:9;4128:22;4110:50;:::i;:::-;4100:60;;4055:115;3709:468;;;;;:::o;4183:118::-;4270:24;4288:5;4270:24;:::i;:::-;4265:3;4258:37;4183:118;;:::o;4307:222::-;4400:4;4438:2;4427:9;4423:18;4415:26;;4451:71;4519:1;4508:9;4504:17;4495:6;4451:71;:::i;:::-;4307:222;;;;:::o;4535:619::-;4612:6;4620;4628;4677:2;4665:9;4656:7;4652:23;4648:32;4645:119;;;4683:79;;:::i;:::-;4645:119;4803:1;4828:53;4873:7;4864:6;4853:9;4849:22;4828:53;:::i;:::-;4818:63;;4774:117;4930:2;4956:53;5001:7;4992:6;4981:9;4977:22;4956:53;:::i;:::-;4946:63;;4901:118;5058:2;5084:53;5129:7;5120:6;5109:9;5105:22;5084:53;:::i;:::-;5074:63;;5029:118;4535:619;;;;;:::o;5160:329::-;5219:6;5268:2;5256:9;5247:7;5243:23;5239:32;5236:119;;;5274:79;;:::i;:::-;5236:119;5394:1;5419:53;5464:7;5455:6;5444:9;5440:22;5419:53;:::i;:::-;5409:63;;5365:117;5160:329;;;;:::o;5495:86::-;5530:7;5570:4;5563:5;5559:16;5548:27;;5495:86;;;:::o;5587:112::-;5670:22;5686:5;5670:22;:::i;:::-;5665:3;5658:35;5587:112;;:::o;5705:214::-;5794:4;5832:2;5821:9;5817:18;5809:26;;5845:67;5909:1;5898:9;5894:17;5885:6;5845:67;:::i;:::-;5705:214;;;;:::o;5925:117::-;6034:1;6031;6024:12;6048:117;6157:1;6154;6147:12;6171:180;6219:77;6216:1;6209:88;6316:4;6313:1;6306:15;6340:4;6337:1;6330:15;6357:281;6440:27;6462:4;6440:27;:::i;:::-;6432:6;6428:40;6570:6;6558:10;6555:22;6534:18;6522:10;6519:34;6516:62;6513:88;;;6581:18;;:::i;:::-;6513:88;6621:10;6617:2;6610:22;6400:238;6357:281;;:::o;6644:129::-;6678:6;6705:20;;:::i;:::-;6695:30;;6734:33;6762:4;6754:6;6734:33;:::i;:::-;6644:129;;;:::o;6779:307::-;6840:4;6930:18;6922:6;6919:30;6916:56;;;6952:18;;:::i;:::-;6916:56;6990:29;7012:6;6990:29;:::i;:::-;6982:37;;7074:4;7068;7064:15;7056:23;;6779:307;;;:::o;7092:148::-;7190:6;7185:3;7180;7167:30;7231:1;7222:6;7217:3;7213:16;7206:27;7092:148;;;:::o;7246:423::-;7323:5;7348:65;7364:48;7405:6;7364:48;:::i;:::-;7348:65;:::i;:::-;7339:74;;7436:6;7429:5;7422:21;7474:4;7467:5;7463:16;7512:3;7503:6;7498:3;7494:16;7491:25;7488:112;;;7519:79;;:::i;:::-;7488:112;7609:54;7656:6;7651:3;7646;7609:54;:::i;:::-;7329:340;7246:423;;;;;:::o;7688:338::-;7743:5;7792:3;7785:4;7777:6;7773:17;7769:27;7759:122;;7800:79;;:::i;:::-;7759:122;7917:6;7904:20;7942:78;8016:3;8008:6;8001:4;7993:6;7989:17;7942:78;:::i;:::-;7933:87;;7749:277;7688:338;;;;:::o;8032:652::-;8109:6;8117;8166:2;8154:9;8145:7;8141:23;8137:32;8134:119;;;8172:79;;:::i;:::-;8134:119;8292:1;8317:53;8362:7;8353:6;8342:9;8338:22;8317:53;:::i;:::-;8307:63;;8263:117;8447:2;8436:9;8432:18;8419:32;8478:18;8470:6;8467:30;8464:117;;;8500:79;;:::i;:::-;8464:117;8605:62;8659:7;8650:6;8639:9;8635:22;8605:62;:::i;:::-;8595:72;;8390:287;8032:652;;;;;:::o;8690:77::-;8727:7;8756:5;8745:16;;8690:77;;;:::o;8773:118::-;8860:24;8878:5;8860:24;:::i;:::-;8855:3;8848:37;8773:118;;:::o;8897:222::-;8990:4;9028:2;9017:9;9013:18;9005:26;;9041:71;9109:1;9098:9;9094:17;9085:6;9041:71;:::i;:::-;8897:222;;;;:::o;9125:117::-;9234:1;9231;9224:12;9248:117;9357:1;9354;9347:12;9388:568;9461:8;9471:6;9521:3;9514:4;9506:6;9502:17;9498:27;9488:122;;9529:79;;:::i;:::-;9488:122;9642:6;9629:20;9619:30;;9672:18;9664:6;9661:30;9658:117;;;9694:79;;:::i;:::-;9658:117;9808:4;9800:6;9796:17;9784:29;;9862:3;9854:4;9846:6;9842:17;9832:8;9828:32;9825:41;9822:128;;;9869:79;;:::i;:::-;9822:128;9388:568;;;;;:::o;9979:::-;10052:8;10062:6;10112:3;10105:4;10097:6;10093:17;10089:27;10079:122;;10120:79;;:::i;:::-;10079:122;10233:6;10220:20;10210:30;;10263:18;10255:6;10252:30;10249:117;;;10285:79;;:::i;:::-;10249:117;10399:4;10391:6;10387:17;10375:29;;10453:3;10445:4;10437:6;10433:17;10423:8;10419:32;10416:41;10413:128;;;10460:79;;:::i;:::-;10413:128;9979:568;;;;;:::o;10553:934::-;10675:6;10683;10691;10699;10748:2;10736:9;10727:7;10723:23;10719:32;10716:119;;;10754:79;;:::i;:::-;10716:119;10902:1;10891:9;10887:17;10874:31;10932:18;10924:6;10921:30;10918:117;;;10954:79;;:::i;:::-;10918:117;11067:80;11139:7;11130:6;11119:9;11115:22;11067:80;:::i;:::-;11049:98;;;;10845:312;11224:2;11213:9;11209:18;11196:32;11255:18;11247:6;11244:30;11241:117;;;11277:79;;:::i;:::-;11241:117;11390:80;11462:7;11453:6;11442:9;11438:22;11390:80;:::i;:::-;11372:98;;;;11167:313;10553:934;;;;;;;:::o;11493:118::-;11580:24;11598:5;11580:24;:::i;:::-;11575:3;11568:37;11493:118;;:::o;11617:222::-;11710:4;11748:2;11737:9;11733:18;11725:26;;11761:71;11829:1;11818:9;11814:17;11805:6;11761:71;:::i;:::-;11617:222;;;;:::o;11845:308::-;11907:4;11997:18;11989:6;11986:30;11983:56;;;12019:18;;:::i;:::-;11983:56;12057:29;12079:6;12057:29;:::i;:::-;12049:37;;12141:4;12135;12131:15;12123:23;;11845:308;;;:::o;12159:425::-;12237:5;12262:66;12278:49;12320:6;12278:49;:::i;:::-;12262:66;:::i;:::-;12253:75;;12351:6;12344:5;12337:21;12389:4;12382:5;12378:16;12427:3;12418:6;12413:3;12409:16;12406:25;12403:112;;;12434:79;;:::i;:::-;12403:112;12524:54;12571:6;12566:3;12561;12524:54;:::i;:::-;12243:341;12159:425;;;;;:::o;12604:340::-;12660:5;12709:3;12702:4;12694:6;12690:17;12686:27;12676:122;;12717:79;;:::i;:::-;12676:122;12834:6;12821:20;12859:79;12934:3;12926:6;12919:4;12911:6;12907:17;12859:79;:::i;:::-;12850:88;;12666:278;12604:340;;;;:::o;12950:979::-;13047:6;13055;13063;13112:2;13100:9;13091:7;13087:23;13083:32;13080:119;;;13118:79;;:::i;:::-;13080:119;13266:1;13255:9;13251:17;13238:31;13296:18;13288:6;13285:30;13282:117;;;13318:79;;:::i;:::-;13282:117;13423:63;13478:7;13469:6;13458:9;13454:22;13423:63;:::i;:::-;13413:73;;13209:287;13563:2;13552:9;13548:18;13535:32;13594:18;13586:6;13583:30;13580:117;;;13616:79;;:::i;:::-;13580:117;13721:63;13776:7;13767:6;13756:9;13752:22;13721:63;:::i;:::-;13711:73;;13506:288;13833:2;13859:53;13904:7;13895:6;13884:9;13880:22;13859:53;:::i;:::-;13849:63;;13804:118;12950:979;;;;;:::o;13935:474::-;14003:6;14011;14060:2;14048:9;14039:7;14035:23;14031:32;14028:119;;;14066:79;;:::i;:::-;14028:119;14186:1;14211:53;14256:7;14247:6;14236:9;14232:22;14211:53;:::i;:::-;14201:63;;14157:117;14313:2;14339:53;14384:7;14375:6;14364:9;14360:22;14339:53;:::i;:::-;14329:63;;14284:118;13935:474;;;;;:::o;14415:180::-;14463:77;14460:1;14453:88;14560:4;14557:1;14550:15;14584:4;14581:1;14574:15;14601:320;14645:6;14682:1;14676:4;14672:12;14662:22;;14729:1;14723:4;14719:12;14750:18;14740:81;;14806:4;14798:6;14794:17;14784:27;;14740:81;14868:2;14860:6;14857:14;14837:18;14834:38;14831:84;;14887:18;;:::i;:::-;14831:84;14652:269;14601:320;;;:::o;14927:162::-;15067:14;15063:1;15055:6;15051:14;15044:38;14927:162;:::o;15095:366::-;15237:3;15258:67;15322:2;15317:3;15258:67;:::i;:::-;15251:74;;15334:93;15423:3;15334:93;:::i;:::-;15452:2;15447:3;15443:12;15436:19;;15095:366;;;:::o;15467:419::-;15633:4;15671:2;15660:9;15656:18;15648:26;;15720:9;15714:4;15710:20;15706:1;15695:9;15691:17;15684:47;15748:131;15874:4;15748:131;:::i;:::-;15740:139;;15467:419;;;:::o;15892:225::-;16032:34;16028:1;16020:6;16016:14;16009:58;16101:8;16096:2;16088:6;16084:15;16077:33;15892:225;:::o;16123:366::-;16265:3;16286:67;16350:2;16345:3;16286:67;:::i;:::-;16279:74;;16362:93;16451:3;16362:93;:::i;:::-;16480:2;16475:3;16471:12;16464:19;;16123:366;;;:::o;16495:419::-;16661:4;16699:2;16688:9;16684:18;16676:26;;16748:9;16742:4;16738:20;16734:1;16723:9;16719:17;16712:47;16776:131;16902:4;16776:131;:::i;:::-;16768:139;;16495:419;;;:::o;16920:228::-;17060:34;17056:1;17048:6;17044:14;17037:58;17129:11;17124:2;17116:6;17112:15;17105:36;16920:228;:::o;17154:366::-;17296:3;17317:67;17381:2;17376:3;17317:67;:::i;:::-;17310:74;;17393:93;17482:3;17393:93;:::i;:::-;17511:2;17506:3;17502:12;17495:19;;17154:366;;;:::o;17526:419::-;17692:4;17730:2;17719:9;17715:18;17707:26;;17779:9;17773:4;17769:20;17765:1;17754:9;17750:17;17743:47;17807:131;17933:4;17807:131;:::i;:::-;17799:139;;17526:419;;;:::o;17951:174::-;18091:26;18087:1;18079:6;18075:14;18068:50;17951:174;:::o;18131:366::-;18273:3;18294:67;18358:2;18353:3;18294:67;:::i;:::-;18287:74;;18370:93;18459:3;18370:93;:::i;:::-;18488:2;18483:3;18479:12;18472:19;;18131:366;;;:::o;18503:419::-;18669:4;18707:2;18696:9;18692:18;18684:26;;18756:9;18750:4;18746:20;18742:1;18731:9;18727:17;18720:47;18784:131;18910:4;18784:131;:::i;:::-;18776:139;;18503:419;;;:::o;18928:221::-;19068:34;19064:1;19056:6;19052:14;19045:58;19137:4;19132:2;19124:6;19120:15;19113:29;18928:221;:::o;19155:366::-;19297:3;19318:67;19382:2;19377:3;19318:67;:::i;:::-;19311:74;;19394:93;19483:3;19394:93;:::i;:::-;19512:2;19507:3;19503:12;19496:19;;19155:366;;;:::o;19527:419::-;19693:4;19731:2;19720:9;19716:18;19708:26;;19780:9;19774:4;19770:20;19766:1;19755:9;19751:17;19744:47;19808:131;19934:4;19808:131;:::i;:::-;19800:139;;19527:419;;;:::o;19952:175::-;20092:27;20088:1;20080:6;20076:14;20069:51;19952:175;:::o;20133:366::-;20275:3;20296:67;20360:2;20355:3;20296:67;:::i;:::-;20289:74;;20372:93;20461:3;20372:93;:::i;:::-;20490:2;20485:3;20481:12;20474:19;;20133:366;;;:::o;20505:419::-;20671:4;20709:2;20698:9;20694:18;20686:26;;20758:9;20752:4;20748:20;20744:1;20733:9;20729:17;20722:47;20786:131;20912:4;20786:131;:::i;:::-;20778:139;;20505:419;;;:::o;20930:164::-;21070:16;21066:1;21058:6;21054:14;21047:40;20930:164;:::o;21100:366::-;21242:3;21263:67;21327:2;21322:3;21263:67;:::i;:::-;21256:74;;21339:93;21428:3;21339:93;:::i;:::-;21457:2;21452:3;21448:12;21441:19;;21100:366;;;:::o;21472:419::-;21638:4;21676:2;21665:9;21661:18;21653:26;;21725:9;21719:4;21715:20;21711:1;21700:9;21696:17;21689:47;21753:131;21879:4;21753:131;:::i;:::-;21745:139;;21472:419;;;:::o;21897:226::-;22037:34;22033:1;22025:6;22021:14;22014:58;22106:9;22101:2;22093:6;22089:15;22082:34;21897:226;:::o;22129:366::-;22271:3;22292:67;22356:2;22351:3;22292:67;:::i;:::-;22285:74;;22368:93;22457:3;22368:93;:::i;:::-;22486:2;22481:3;22477:12;22470:19;;22129:366;;;:::o;22501:419::-;22667:4;22705:2;22694:9;22690:18;22682:26;;22754:9;22748:4;22744:20;22740:1;22729:9;22725:17;22718:47;22782:131;22908:4;22782:131;:::i;:::-;22774:139;;22501:419;;;:::o;22926:180::-;22974:77;22971:1;22964:88;23071:4;23068:1;23061:15;23095:4;23092:1;23085:15;23112:233;23252:34;23248:1;23240:6;23236:14;23229:58;23321:16;23316:2;23308:6;23304:15;23297:41;23112:233;:::o;23351:366::-;23493:3;23514:67;23578:2;23573:3;23514:67;:::i;:::-;23507:74;;23590:93;23679:3;23590:93;:::i;:::-;23708:2;23703:3;23699:12;23692:19;;23351:366;;;:::o;23723:419::-;23889:4;23927:2;23916:9;23912:18;23904:26;;23976:9;23970:4;23966:20;23962:1;23951:9;23947:17;23940:47;24004:131;24130:4;24004:131;:::i;:::-;23996:139;;23723:419;;;:::o;24148:85::-;24193:7;24222:5;24211:16;;24148:85;;;:::o;24239:101::-;24275:7;24315:18;24308:5;24304:30;24293:41;;24239:101;;;:::o;24346:60::-;24374:3;24395:5;24388:12;;24346:60;;;:::o;24412:156::-;24469:9;24502:60;24519:42;24528:32;24554:5;24528:32;:::i;:::-;24519:42;:::i;:::-;24502:60;:::i;:::-;24489:73;;24412:156;;;:::o;24574:145::-;24668:44;24706:5;24668:44;:::i;:::-;24663:3;24656:57;24574:145;;:::o;24725:236::-;24825:4;24863:2;24852:9;24848:18;24840:26;;24876:78;24951:1;24940:9;24936:17;24927:6;24876:78;:::i;:::-;24725:236;;;;:::o;24967:166::-;25107:18;25103:1;25095:6;25091:14;25084:42;24967:166;:::o;25139:366::-;25281:3;25302:67;25366:2;25361:3;25302:67;:::i;:::-;25295:74;;25378:93;25467:3;25378:93;:::i;:::-;25496:2;25491:3;25487:12;25480:19;;25139:366;;;:::o;25511:419::-;25677:4;25715:2;25704:9;25700:18;25692:26;;25764:9;25758:4;25754:20;25750:1;25739:9;25735:17;25728:47;25792:131;25918:4;25792:131;:::i;:::-;25784:139;;25511:419;;;:::o;25936:122::-;26009:24;26027:5;26009:24;:::i;:::-;26002:5;25999:35;25989:63;;26048:1;26045;26038:12;25989:63;25936:122;:::o;26064:143::-;26121:5;26152:6;26146:13;26137:22;;26168:33;26195:5;26168:33;:::i;:::-;26064:143;;;;:::o;26213:351::-;26283:6;26332:2;26320:9;26311:7;26307:23;26303:32;26300:119;;;26338:79;;:::i;:::-;26300:119;26458:1;26483:64;26539:7;26530:6;26519:9;26515:22;26483:64;:::i;:::-;26473:74;;26429:128;26213:351;;;;:::o;26570:442::-;26719:4;26757:2;26746:9;26742:18;26734:26;;26770:71;26838:1;26827:9;26823:17;26814:6;26770:71;:::i;:::-;26851:72;26919:2;26908:9;26904:18;26895:6;26851:72;:::i;:::-;26933;27001:2;26990:9;26986:18;26977:6;26933:72;:::i;:::-;26570:442;;;;;;:::o;27018:170::-;27158:22;27154:1;27146:6;27142:14;27135:46;27018:170;:::o;27194:366::-;27336:3;27357:67;27421:2;27416:3;27357:67;:::i;:::-;27350:74;;27433:93;27522:3;27433:93;:::i;:::-;27551:2;27546:3;27542:12;27535:19;;27194:366;;;:::o;27566:419::-;27732:4;27770:2;27759:9;27755:18;27747:26;;27819:9;27813:4;27809:20;27805:1;27794:9;27790:17;27783:47;27847:131;27973:4;27847:131;:::i;:::-;27839:139;;27566:419;;;:::o;27991:180::-;28039:77;28036:1;28029:88;28136:4;28133:1;28126:15;28160:4;28157:1;28150:15;28177:191;28217:3;28236:20;28254:1;28236:20;:::i;:::-;28231:25;;28270:20;28288:1;28270:20;:::i;:::-;28265:25;;28313:1;28310;28306:9;28299:16;;28334:3;28331:1;28328:10;28325:36;;;28341:18;;:::i;:::-;28325:36;28177:191;;;;:::o;28374:141::-;28423:4;28446:3;28438:11;;28469:3;28466:1;28459:14;28503:4;28500:1;28490:18;28482:26;;28374:141;;;:::o;28521:93::-;28558:6;28605:2;28600;28593:5;28589:14;28585:23;28575:33;;28521:93;;;:::o;28620:107::-;28664:8;28714:5;28708:4;28704:16;28683:37;;28620:107;;;;:::o;28733:393::-;28802:6;28852:1;28840:10;28836:18;28875:97;28905:66;28894:9;28875:97;:::i;:::-;28993:39;29023:8;29012:9;28993:39;:::i;:::-;28981:51;;29065:4;29061:9;29054:5;29050:21;29041:30;;29114:4;29104:8;29100:19;29093:5;29090:30;29080:40;;28809:317;;28733:393;;;;;:::o;29132:142::-;29182:9;29215:53;29233:34;29242:24;29260:5;29242:24;:::i;:::-;29233:34;:::i;:::-;29215:53;:::i;:::-;29202:66;;29132:142;;;:::o;29280:75::-;29323:3;29344:5;29337:12;;29280:75;;;:::o;29361:269::-;29471:39;29502:7;29471:39;:::i;:::-;29532:91;29581:41;29605:16;29581:41;:::i;:::-;29573:6;29566:4;29560:11;29532:91;:::i;:::-;29526:4;29519:105;29437:193;29361:269;;;:::o;29636:73::-;29681:3;29636:73;:::o;29715:189::-;29792:32;;:::i;:::-;29833:65;29891:6;29883;29877:4;29833:65;:::i;:::-;29768:136;29715:189;;:::o;29910:186::-;29970:120;29987:3;29980:5;29977:14;29970:120;;;30041:39;30078:1;30071:5;30041:39;:::i;:::-;30014:1;30007:5;30003:13;29994:22;;29970:120;;;29910:186;;:::o;30102:543::-;30203:2;30198:3;30195:11;30192:446;;;30237:38;30269:5;30237:38;:::i;:::-;30321:29;30339:10;30321:29;:::i;:::-;30311:8;30307:44;30504:2;30492:10;30489:18;30486:49;;;30525:8;30510:23;;30486:49;30548:80;30604:22;30622:3;30604:22;:::i;:::-;30594:8;30590:37;30577:11;30548:80;:::i;:::-;30207:431;;30192:446;30102:543;;;:::o;30651:117::-;30705:8;30755:5;30749:4;30745:16;30724:37;;30651:117;;;;:::o;30774:169::-;30818:6;30851:51;30899:1;30895:6;30887:5;30884:1;30880:13;30851:51;:::i;:::-;30847:56;30932:4;30926;30922:15;30912:25;;30825:118;30774:169;;;;:::o;30948:295::-;31024:4;31170:29;31195:3;31189:4;31170:29;:::i;:::-;31162:37;;31232:3;31229:1;31225:11;31219:4;31216:21;31208:29;;30948:295;;;;:::o;31248:1395::-;31365:37;31398:3;31365:37;:::i;:::-;31467:18;31459:6;31456:30;31453:56;;;31489:18;;:::i;:::-;31453:56;31533:38;31565:4;31559:11;31533:38;:::i;:::-;31618:67;31678:6;31670;31664:4;31618:67;:::i;:::-;31712:1;31736:4;31723:17;;31768:2;31760:6;31757:14;31785:1;31780:618;;;;32442:1;32459:6;32456:77;;;32508:9;32503:3;32499:19;32493:26;32484:35;;32456:77;32559:67;32619:6;32612:5;32559:67;:::i;:::-;32553:4;32546:81;32415:222;31750:887;;31780:618;31832:4;31828:9;31820:6;31816:22;31866:37;31898:4;31866:37;:::i;:::-;31925:1;31939:208;31953:7;31950:1;31947:14;31939:208;;;32032:9;32027:3;32023:19;32017:26;32009:6;32002:42;32083:1;32075:6;32071:14;32061:24;;32130:2;32119:9;32115:18;32102:31;;31976:4;31973:1;31969:12;31964:17;;31939:208;;;32175:6;32166:7;32163:19;32160:179;;;32233:9;32228:3;32224:19;32218:26;32276:48;32318:4;32310:6;32306:17;32295:9;32276:48;:::i;:::-;32268:6;32261:64;32183:156;32160:179;32385:1;32381;32373:6;32369:14;32365:22;32359:4;32352:36;31787:611;;;31750:887;;31340:1303;;;31248:1395;;:::o;32649:98::-;32700:6;32734:5;32728:12;32718:22;;32649:98;;;:::o;32753:147::-;32854:11;32891:3;32876:18;;32753:147;;;;:::o;32906:386::-;33010:3;33038:38;33070:5;33038:38;:::i;:::-;33092:88;33173:6;33168:3;33092:88;:::i;:::-;33085:95;;33189:65;33247:6;33242:3;33235:4;33228:5;33224:16;33189:65;:::i;:::-;33279:6;33274:3;33270:16;33263:23;;33014:278;32906:386;;;;:::o;33298:271::-;33428:3;33450:93;33539:3;33530:6;33450:93;:::i;:::-;33443:100;;33560:3;33553:10;;33298:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2997800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "3006",
								"batchTransfer(address[],uint256[])": "infinite",
								"blacklisted(address)": "2889",
								"decimals()": "389",
								"icoContract()": "2603",
								"initialize(string,string,uint256)": "infinite",
								"isBlacklisted(address)": "2993",
								"lockedUntil(address)": "2903",
								"name()": "infinite",
								"owner()": "2621",
								"pause()": "infinite",
								"paused()": "2568",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"setBlacklist(address,bool)": "infinite",
								"setICOContract(address)": "infinite",
								"setLockup(address,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2581",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 445,
									"end": 4469,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1192,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1111,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1111,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 1111,
									"end": 1131,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1111,
									"end": 1131,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1111,
									"end": 1133,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1111,
									"end": 1133,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1111,
									"end": 1133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1111,
									"end": 1133,
									"name": "tag",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1111,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "6"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7856,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7883,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7859,
									"end": 7885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7826,
									"end": 7885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7901,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7986,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8052,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8036,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8049,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8099,
									"end": 8115,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8087,
									"end": 8116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8795,
									"end": 8825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8860,
									"end": 8891,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8737,
									"end": 8907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 108,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 108,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 43,
									"end": 50,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 101,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 76,
									"end": 81,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 72,
									"end": 102,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 61,
									"end": 102,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 61,
									"end": 102,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"name": "tag",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 114,
									"end": 229,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 221,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 199,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 199,
									"end": 222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 199,
									"end": 222,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 199,
									"end": 222,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 194,
									"end": 197,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 187,
									"end": 223,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 114,
									"end": 229,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "tag",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 235,
									"end": 453,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 326,
									"end": 330,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 366,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 353,
									"end": 362,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 349,
									"end": 367,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 341,
									"end": 367,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 341,
									"end": 367,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 441,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 428,
									"end": 445,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 419,
									"end": 425,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 377,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "16"
								},
								{
									"begin": 377,
									"end": 446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 377,
									"end": 446,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 377,
									"end": 446,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 235,
									"end": 453,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "tag",
									"source": 17,
									"value": "6"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "468"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 4469,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203ad225a9e9e1fc3e1094eba6d62ba1605e7edef8e480b9aeff9b2aedfd25481e64736f6c634300081a0033",
									".code": [
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "DBAC26E9"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "DBAC26E9"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "DD62ED3E"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "FE575A87"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "B119490E"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "C66E4095"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "9BC289F1"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "A9059CBB"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "88D695B2"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "4F1EF286"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "4F1EF286"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "52D1902D"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "5C975ABB"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "3E579307"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "3F4BA83A"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "153B0D1E"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "18160DDD"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "2E0D2A00"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 445,
											"end": 4469,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 2118,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 2118,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2974,
											"end": 3507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 2974,
											"end": 3507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "tag",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 2974,
											"end": 3507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "tag",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "tag",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "tag",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 3513,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 3513,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 1818,
											"end": 2112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 1818,
											"end": 2112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "tag",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "tag",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 1747,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "tag",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "tag",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 1680,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "tag",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 3804,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "tag",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 3804,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "tag",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 658,
											"end": 704,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "tag",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 658,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "tag",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 658,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "tag",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 658,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "tag",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "tag",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 2455,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "tag",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 2455,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "tag",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 2455,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "tag",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "135"
										},
										{
											"begin": 1198,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "tag",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 1198,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 549,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "138"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 549,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 710,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 710,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 710,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 2338,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "tag",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 2338,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 2338,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2786,
											"end": 2808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2811,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5315,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5315,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 5337,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2225,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2207,
											"end": 2227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2207,
											"end": 2214,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2207,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2207,
											"end": 2227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2207,
											"end": 2227,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2199,
											"end": 2243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 2199,
											"end": 2243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2276,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2272,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2253,
											"end": 2282,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "CF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8"
										},
										{
											"begin": 2318,
											"end": 2324,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 2297,
											"end": 2325,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "182"
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2297,
											"end": 2325,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3992,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3992,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3111,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3129,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3111,
											"end": 3130,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3110,
											"end": 3130,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 3102,
											"end": 3173,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 3102,
											"end": 3173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3213,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3192,
											"end": 3214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3191,
											"end": 3214,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 3183,
											"end": 3260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 3183,
											"end": 3260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3286,
											"end": 3287,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3278,
											"end": 3287,
											"modifierDepth": 1,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 3270,
											"end": 3315,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 3270,
											"end": 3315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3370,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3371,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3333,
											"end": 3348,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 3333,
											"end": 3371,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3333,
											"end": 3371,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3333,
											"end": 3399,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3333,
											"end": 3399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 3333,
											"end": 3399,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3333,
											"end": 3399,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3398,
											"end": 3399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3393,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3375,
											"end": 3399,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3333,
											"end": 3399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 3333,
											"end": 3399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 3325,
											"end": 3438,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 3325,
											"end": 3438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3455,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 3474,
											"end": 3480,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3482,
											"end": 3491,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3493,
											"end": 3499,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3455,
											"end": 3473,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 3455,
											"end": 3500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3455,
											"end": 3500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 3455,
											"end": 3500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3448,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3448,
											"end": 3500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2974,
											"end": 3507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3596,
											"end": 3622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3596,
											"end": 3608,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3596,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3596,
											"end": 3622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 3588,
											"end": 3639,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 3588,
											"end": 3639,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3657,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 3657,
											"end": 3669,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3657,
											"end": 3680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3680,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3657,
											"end": 3680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 3657,
											"end": 3682,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3657,
											"end": 3682,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 3657,
											"end": 3682,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 3649,
											"end": 3712,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 3649,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3736,
											"end": 3748,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3722,
											"end": 3733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3722,
											"end": 3748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3778,
											"end": 3790,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "E7BBFBBF7E7948988EB7F8904DA938AFF02A23B8B28FCEE206BE4D4B3EDD9AD8"
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3791,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "tag",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1637,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1612,
											"end": 1622,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1612,
											"end": 1637,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "217"
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 1604,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "tag",
											"source": 17,
											"value": "217"
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "tag",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 1604,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1934,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 1936,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1916,
											"end": 1923,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1916,
											"end": 1936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1916,
											"end": 1936,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1916,
											"end": 1936,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 1908,
											"end": 1952,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 1908,
											"end": 1952,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1990,
											"end": 1999,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1985,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1999,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1962,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 1962,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2038,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2034,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2035,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2047,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2047,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2015,
											"end": 2047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2076,
											"end": 2083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "611CDBEA265CB87EF40E17C595BAD009182B4DB741622F7848E344C15451DE2F"
										},
										{
											"begin": 2085,
											"end": 2094,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "223"
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 2066,
											"end": 2095,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "223"
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2066,
											"end": 2095,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 1962,
											"end": 2106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 1962,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 2112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "tag",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 1747,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 1795,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 1795,
											"end": 1805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1795,
											"end": 1805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 1795,
											"end": 1805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1747,
											"end": 1812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 4215,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4215,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 1680,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 1726,
											"end": 1732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 1726,
											"end": 1734,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1726,
											"end": 1734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 1726,
											"end": 1734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1680,
											"end": 1741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "tag",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 3955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3948,
											"end": 3955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3948,
											"end": 3962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3948,
											"end": 3962,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3937,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3937,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3927,
											"end": 3962,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 3919,
											"end": 4006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 3919,
											"end": 4006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4016,
											"end": 4039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4052,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4042,
											"end": 4052,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4042,
											"end": 4059,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4042,
											"end": 4059,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4016,
											"end": 4059,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4016,
											"end": 4059,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4074,
											"end": 4083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 4069,
											"end": 4371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4093,
											"end": 4108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4089,
											"end": 4090,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4089,
											"end": 4108,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4069,
											"end": 4371,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4069,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 4069,
											"end": 4371,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4182,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4182,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4183,
											"end": 4184,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 4172,
											"end": 4185,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 4172,
											"end": 4185,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 4172,
											"end": 4185,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 4160,
											"end": 4186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4156,
											"end": 4285,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4156,
											"end": 4285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 4156,
											"end": 4285,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4210,
											"end": 4266,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4266,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4156,
											"end": 4285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 4156,
											"end": 4285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4298,
											"end": 4346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 4308,
											"end": 4318,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4331,
											"end": 4332,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 4320,
											"end": 4333,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 4320,
											"end": 4333,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 4320,
											"end": 4333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4342,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4342,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4343,
											"end": 4344,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 4335,
											"end": 4345,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4345,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4298,
											"end": 4307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 4298,
											"end": 4346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4298,
											"end": 4346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 4298,
											"end": 4346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4110,
											"end": 4113,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4110,
											"end": 4113,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4110,
											"end": 4113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4110,
											"end": 4113,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4110,
											"end": 4113,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4110,
											"end": 4113,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4110,
											"end": 4113,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4069,
											"end": 4371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 4069,
											"end": 4371,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4069,
											"end": 4371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 4069,
											"end": 4371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4069,
											"end": 4371,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 4377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 3070,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3070,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 658,
											"end": 704,
											"name": "tag",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 658,
											"end": 704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "tag",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2594,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2572,
											"end": 2595,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2595,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 2563,
											"end": 2638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 2563,
											"end": 2638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2678,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2657,
											"end": 2679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2656,
											"end": 2679,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 2648,
											"end": 2725,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 2648,
											"end": 2725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2749,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2743,
											"end": 2752,
											"modifierDepth": 1,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 2735,
											"end": 2780,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 2735,
											"end": 2780,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2839,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2840,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2798,
											"end": 2813,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 2798,
											"end": 2840,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2798,
											"end": 2840,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2798,
											"end": 2872,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2798,
											"end": 2872,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 2798,
											"end": 2872,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2798,
											"end": 2872,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2871,
											"end": 2872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2866,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2867,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2844,
											"end": 2872,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2798,
											"end": 2872,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 2798,
											"end": 2872,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 2790,
											"end": 2911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 2790,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2928,
											"end": 2961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 2943,
											"end": 2952,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2954,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2928,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 2928,
											"end": 2961,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2928,
											"end": 2961,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 2928,
											"end": 2961,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2921,
											"end": 2961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2921,
											"end": 2961,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "tag",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 1326,
											"end": 1330,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 1332,
											"end": 1338,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 1313,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 1313,
											"end": 1339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1313,
											"end": 1339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 1313,
											"end": 1339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1349,
											"end": 1375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 1364,
											"end": 1374,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1349,
											"end": 1363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 1349,
											"end": 1375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1349,
											"end": 1375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 1349,
											"end": 1375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 1385,
											"end": 1400,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 1385,
											"end": 1402,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1385,
											"end": 1402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 1385,
											"end": 1402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 1412,
											"end": 1434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 1412,
											"end": 1436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 1412,
											"end": 1436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1462,
											"end": 1474,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1447,
											"end": 1474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1474,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1447,
											"end": 1474,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 1490,
											"end": 1500,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1502,
											"end": 1514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1502,
											"end": 1514,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1489,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 1484,
											"end": 1515,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1484,
											"end": 1515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 1484,
											"end": 1515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1198,
											"end": 1561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 549,
											"end": 575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 710,
											"end": 753,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 710,
											"end": 753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4832,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2399,
											"end": 2403,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2433,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2441,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2422,
											"end": 2442,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2415,
											"end": 2442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2415,
											"end": 2442,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2338,
											"end": 2449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10085,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 10085,
											"end": 10122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2101,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 2092,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 6109,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 6109,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6153,
											"end": 6160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6167,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 6131,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6194,
											"end": 6196,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 6178,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1423,
											"end": 1743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 1750,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 2794,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2794,
											"end": 2806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2785,
											"end": 2807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 4753,
											"end": 4783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 4753,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4467,
											"name": "tag",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 4383,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4383,
											"end": 4467,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4383,
											"end": 4467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6518,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6317,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6209,
											"end": 6444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 2545,
											"end": 2555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2545,
											"end": 2557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2538,
											"end": 2558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6729,
											"end": 6759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6822,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 6874,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 4573,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4573,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 4595,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "tag",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 2407,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2414,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 2384,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1084,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8822,
											"end": 8823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8847,
											"end": 8879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "tag",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "tag",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 8915,
											"end": 8916,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 8899,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "tag",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8733,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 11109,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 11109,
											"end": 11127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11146,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11183,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 11283,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11366,
											"end": 11371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11355,
											"end": 11362,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 11438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11424,
											"end": 11429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11440,
											"end": 11445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 11415,
											"end": 11446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10976,
											"end": 11463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 11881,
											"end": 11886,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11888,
											"end": 11895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 11871,
											"end": 11896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11930,
											"end": 11947,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11910,
											"end": 11947,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11986,
											"end": 11991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11967,
											"end": 11983,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11967,
											"end": 11991,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12045,
											"end": 12052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12054,
											"end": 12070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12072,
											"end": 12077,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 12018,
											"end": 12078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12018,
											"end": 12078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 11963,
											"end": 12093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 12143,
											"end": 12148,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12150,
											"end": 12157,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12178,
											"end": 12183,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12159,
											"end": 12183,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12185,
											"end": 12190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 12134,
											"end": 12191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 11906,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11834,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11745,
											"end": 12222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2275,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "445"
										},
										{
											"begin": 2267,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "444"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2209,
											"end": 2315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 4,
											"value": "459"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "462"
										},
										{
											"begin": 7498,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "tag",
											"source": 4,
											"value": "461"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7623,
											"end": 7628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7680,
											"end": 7684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7699,
											"end": 7704,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 7655,
											"end": 7705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "tag",
											"source": 4,
											"value": "465"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "tag",
											"source": 4,
											"value": "464"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7874,
											"end": 7879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7538,
											"end": 7904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 4,
											"value": "463"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8099,
											"end": 8104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8373,
											"end": 8375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8377,
											"end": 8382,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 8358,
											"end": 8383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "tag",
											"source": 4,
											"value": "468"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7295,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 2572,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2572,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "476"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 2600,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "477"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2637,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 2625,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "479"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 10,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4045,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4055,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 4049,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DELEGATECALL",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4049,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 4118,
											"end": 4124,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4133,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4135,
											"end": 4145,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 4091,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 4091,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3900,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4565,
											"end": 4577,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 4625,
											"end": 4635,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4617,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 4617,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 4617,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4841,
											"end": 4851,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4858,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4873,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4885,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 4841,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 14,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 4917,
											"end": 4941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4917,
											"end": 4941,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 4837,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4976,
											"end": 4986,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 4969,
											"end": 4986,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 4589,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4421,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 5543,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5691,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5674,
											"end": 5695,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5865,
											"end": 5882,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5927,
											"end": 5942,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5914,
											"end": 5924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5910,
											"end": 5912,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5925,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5899,
											"end": 5943,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 5670,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1351,
											"end": 1426,
											"name": "tag",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 1351,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1384,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1401,
											"end": 1420,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1351,
											"end": 1426,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1351,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "tag",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1555,
											"end": 1672,
											"name": "tag",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 1555,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "tag",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1797,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1744,
											"end": 1798,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1678,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "tag",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1810,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "tag",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 1985,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "tag",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1975,
											"end": 2010,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "tag",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1912,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "tag",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2111,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 2140,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2040,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2185,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 18,
											"value": "634"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "tag",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "639"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 18,
											"value": "639"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2763,
											"end": 2880,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 2945,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "tag",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3021,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 3198,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "tag",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "tag",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 3370,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "tag",
											"source": 18,
											"value": "647"
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3232,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3448,
											"end": 3564,
											"name": "tag",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 3448,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 3533,
											"end": 3538,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 3518,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "tag",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3511,
											"end": 3516,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3508,
											"end": 3540,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3544,
											"end": 3556,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 3498,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3448,
											"end": 3564,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3448,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3613,
											"end": 3618,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3629,
											"end": 3658,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3629,
											"end": 3658,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 3667,
											"end": 3697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "tag",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3703,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3570,
											"end": 3703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3774,
											"end": 3780,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3806,
											"end": 3829,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3802,
											"end": 3834,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "654"
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 3837,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "tag",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 3837,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "tag",
											"source": 18,
											"value": "654"
										},
										{
											"begin": 3799,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 4027,
											"end": 4034,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4007,
											"end": 4016,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4003,
											"end": 4025,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 3982,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "tag",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 3982,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3972,
											"end": 4035,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3972,
											"end": 4035,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3928,
											"end": 4045,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4084,
											"end": 4086,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 4152,
											"end": 4159,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4143,
											"end": 4149,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4128,
											"end": 4150,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 4110,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "tag",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 4110,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4100,
											"end": 4160,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4055,
											"end": 4170,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3709,
											"end": 4177,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3709,
											"end": 4177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 4288,
											"end": 4293,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 4270,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "tag",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 4270,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4268,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4258,
											"end": 4295,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4301,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4183,
											"end": 4301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4400,
											"end": 4404,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4427,
											"end": 4436,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4441,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4415,
											"end": 4441,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4415,
											"end": 4441,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 4519,
											"end": 4520,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4517,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4504,
											"end": 4521,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 4451,
											"end": 4522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "tag",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 4451,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4307,
											"end": 4529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4307,
											"end": 4529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4665,
											"end": 4674,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4656,
											"end": 4663,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4652,
											"end": 4675,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 4683,
											"end": 4762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "tag",
											"source": 18,
											"value": "664"
										},
										{
											"begin": 4683,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "tag",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 4645,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 4873,
											"end": 4880,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4864,
											"end": 4870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4849,
											"end": 4871,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 4828,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "tag",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 4828,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4818,
											"end": 4881,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4774,
											"end": 4891,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4930,
											"end": 4932,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 5001,
											"end": 5008,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4992,
											"end": 4998,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4981,
											"end": 4990,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 4977,
											"end": 4999,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 4956,
											"end": 5009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "tag",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 4956,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4946,
											"end": 5009,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4946,
											"end": 5009,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4901,
											"end": 5019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 5129,
											"end": 5136,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5120,
											"end": 5126,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5109,
											"end": 5118,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5105,
											"end": 5127,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 5084,
											"end": 5137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "tag",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 5084,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5074,
											"end": 5137,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5074,
											"end": 5137,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5029,
											"end": 5147,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 5154,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 5154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5247,
											"end": 5254,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5243,
											"end": 5266,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5239,
											"end": 5271,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 5274,
											"end": 5353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "tag",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 5274,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "tag",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 5236,
											"end": 5355,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5394,
											"end": 5395,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 5464,
											"end": 5471,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5455,
											"end": 5461,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5444,
											"end": 5453,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 5419,
											"end": 5472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "tag",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 5419,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5409,
											"end": 5472,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5409,
											"end": 5472,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5482,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5160,
											"end": 5489,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5160,
											"end": 5489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5570,
											"end": 5574,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 5563,
											"end": 5568,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5559,
											"end": 5575,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5548,
											"end": 5575,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5495,
											"end": 5581,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5495,
											"end": 5581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "tag",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 5686,
											"end": 5691,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 5670,
											"end": 5692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "tag",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 5670,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5665,
											"end": 5668,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5658,
											"end": 5693,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5587,
											"end": 5699,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5587,
											"end": 5699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "tag",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5794,
											"end": 5798,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5834,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5821,
											"end": 5830,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5809,
											"end": 5835,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5809,
											"end": 5835,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "676"
										},
										{
											"begin": 5909,
											"end": 5910,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5907,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5894,
											"end": 5911,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5885,
											"end": 5891,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 5845,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "tag",
											"source": 18,
											"value": "676"
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5705,
											"end": 5919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5705,
											"end": 5919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5925,
											"end": 6042,
											"name": "tag",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 5925,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6034,
											"end": 6035,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6032,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6024,
											"end": 6036,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6048,
											"end": 6165,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 6048,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6155,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6147,
											"end": 6159,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6171,
											"end": 6351,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 6171,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6219,
											"end": 6296,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6216,
											"end": 6217,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6209,
											"end": 6297,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 6306,
											"end": 6321,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6340,
											"end": 6344,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6345,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6357,
											"end": 6638,
											"name": "tag",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 6357,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6440,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 6462,
											"end": 6466,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6440,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 6440,
											"end": 6467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6440,
											"end": 6467,
											"name": "tag",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 6440,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6432,
											"end": 6438,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6428,
											"end": 6468,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6570,
											"end": 6576,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6558,
											"end": 6568,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6555,
											"end": 6577,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 6534,
											"end": 6552,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6522,
											"end": 6532,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6519,
											"end": 6553,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 6516,
											"end": 6578,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 6513,
											"end": 6601,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6513,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "682"
										},
										{
											"begin": 6513,
											"end": 6601,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "683"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 6581,
											"end": 6599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "tag",
											"source": 18,
											"value": "683"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6513,
											"end": 6601,
											"name": "tag",
											"source": 18,
											"value": "682"
										},
										{
											"begin": 6513,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6621,
											"end": 6631,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6617,
											"end": 6619,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6610,
											"end": 6632,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6400,
											"end": 6638,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6357,
											"end": 6638,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6357,
											"end": 6638,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6357,
											"end": 6638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6644,
											"end": 6773,
											"name": "tag",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 6644,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6678,
											"end": 6684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 6705,
											"end": 6725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "tag",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 6705,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6695,
											"end": 6725,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6695,
											"end": 6725,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6734,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 6762,
											"end": 6766,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6754,
											"end": 6760,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6734,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 6734,
											"end": 6767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6734,
											"end": 6767,
											"name": "tag",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 6734,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6644,
											"end": 6773,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6644,
											"end": 6773,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6644,
											"end": 6773,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6644,
											"end": 6773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6779,
											"end": 7086,
											"name": "tag",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 6779,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6948,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6919,
											"end": 6949,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 6916,
											"end": 6972,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6916,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 6916,
											"end": 6972,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "689"
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 6952,
											"end": 6970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "tag",
											"source": 18,
											"value": "689"
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6916,
											"end": 6972,
											"name": "tag",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 6916,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6990,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "690"
										},
										{
											"begin": 7012,
											"end": 7018,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6990,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 6990,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6990,
											"end": 7019,
											"name": "tag",
											"source": 18,
											"value": "690"
										},
										{
											"begin": 6990,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6982,
											"end": 7019,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6982,
											"end": 7019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7074,
											"end": 7078,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7068,
											"end": 7072,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7064,
											"end": 7079,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7056,
											"end": 7079,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7056,
											"end": 7079,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6779,
											"end": 7086,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6779,
											"end": 7086,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6779,
											"end": 7086,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6779,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7092,
											"end": 7240,
											"name": "tag",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 7092,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7190,
											"end": 7196,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7185,
											"end": 7188,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7180,
											"end": 7183,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7167,
											"end": 7197,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 7231,
											"end": 7232,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7228,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7217,
											"end": 7220,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7213,
											"end": 7229,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7206,
											"end": 7233,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7092,
											"end": 7240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7092,
											"end": 7240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7092,
											"end": 7240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7092,
											"end": 7240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7323,
											"end": 7328,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 7364,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "694"
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7364,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 7364,
											"end": 7412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7364,
											"end": 7412,
											"name": "tag",
											"source": 18,
											"value": "694"
										},
										{
											"begin": 7364,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7348,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 7348,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7348,
											"end": 7413,
											"name": "tag",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 7348,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7339,
											"end": 7413,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7339,
											"end": 7413,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7436,
											"end": 7442,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7429,
											"end": 7434,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7422,
											"end": 7443,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7467,
											"end": 7472,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7463,
											"end": 7479,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7512,
											"end": 7515,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7503,
											"end": 7509,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7494,
											"end": 7510,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7491,
											"end": 7516,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7488,
											"end": 7600,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7488,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "695"
										},
										{
											"begin": 7488,
											"end": 7600,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7519,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 7519,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 7519,
											"end": 7598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7519,
											"end": 7598,
											"name": "tag",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 7519,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7488,
											"end": 7600,
											"name": "tag",
											"source": 18,
											"value": "695"
										},
										{
											"begin": 7488,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7609,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "697"
										},
										{
											"begin": 7656,
											"end": 7662,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7651,
											"end": 7654,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7646,
											"end": 7649,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7609,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 7609,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7609,
											"end": 7663,
											"name": "tag",
											"source": 18,
											"value": "697"
										},
										{
											"begin": 7609,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7329,
											"end": 7669,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7669,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7246,
											"end": 7669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "tag",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7743,
											"end": 7748,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7792,
											"end": 7795,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7785,
											"end": 7789,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 7777,
											"end": 7783,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7773,
											"end": 7790,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7769,
											"end": 7796,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 7759,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "699"
										},
										{
											"begin": 7759,
											"end": 7881,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7800,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 7800,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 7800,
											"end": 7879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7800,
											"end": 7879,
											"name": "tag",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 7800,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7759,
											"end": 7881,
											"name": "tag",
											"source": 18,
											"value": "699"
										},
										{
											"begin": 7759,
											"end": 7881,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7904,
											"end": 7924,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 7942,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "701"
										},
										{
											"begin": 8016,
											"end": 8019,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8001,
											"end": 8005,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7993,
											"end": 7999,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7989,
											"end": 8006,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7942,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 7942,
											"end": 8020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7942,
											"end": 8020,
											"name": "tag",
											"source": 18,
											"value": "701"
										},
										{
											"begin": 7942,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7933,
											"end": 8020,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7933,
											"end": 8020,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7749,
											"end": 8026,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7688,
											"end": 8026,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7688,
											"end": 8026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8109,
											"end": 8115,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8123,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8166,
											"end": 8168,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8145,
											"end": 8152,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8141,
											"end": 8164,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8137,
											"end": 8169,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8134,
											"end": 8253,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8134,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 8134,
											"end": 8253,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8172,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 8172,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 8172,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8172,
											"end": 8251,
											"name": "tag",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 8172,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8134,
											"end": 8253,
											"name": "tag",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 8134,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8292,
											"end": 8293,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 8362,
											"end": 8369,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8353,
											"end": 8359,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8342,
											"end": 8351,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8338,
											"end": 8360,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8317,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 8317,
											"end": 8370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8317,
											"end": 8370,
											"name": "tag",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 8317,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8307,
											"end": 8370,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8307,
											"end": 8370,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8263,
											"end": 8380,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8447,
											"end": 8449,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8419,
											"end": 8451,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8497,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8500,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 8500,
											"end": 8579,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 8500,
											"end": 8579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8500,
											"end": 8579,
											"name": "tag",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 8500,
											"end": 8579,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "tag",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "708"
										},
										{
											"begin": 8659,
											"end": 8666,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8650,
											"end": 8656,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8639,
											"end": 8648,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8635,
											"end": 8657,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 8605,
											"end": 8667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8605,
											"end": 8667,
											"name": "tag",
											"source": 18,
											"value": "708"
										},
										{
											"begin": 8605,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8595,
											"end": 8667,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8595,
											"end": 8667,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8390,
											"end": 8677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8032,
											"end": 8684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8032,
											"end": 8684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8690,
											"end": 8767,
											"name": "tag",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 8690,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8727,
											"end": 8734,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8761,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8745,
											"end": 8761,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8745,
											"end": 8761,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8690,
											"end": 8767,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8690,
											"end": 8767,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8690,
											"end": 8767,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8690,
											"end": 8767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8773,
											"end": 8891,
											"name": "tag",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 8773,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "711"
										},
										{
											"begin": 8878,
											"end": 8883,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 8860,
											"end": 8884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8860,
											"end": 8884,
											"name": "tag",
											"source": 18,
											"value": "711"
										},
										{
											"begin": 8860,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8855,
											"end": 8858,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8848,
											"end": 8885,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8773,
											"end": 8891,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8773,
											"end": 8891,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8773,
											"end": 8891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "tag",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8990,
											"end": 8994,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9030,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9017,
											"end": 9026,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9013,
											"end": 9031,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9005,
											"end": 9031,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9005,
											"end": 9031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9041,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 9109,
											"end": 9110,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9098,
											"end": 9107,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9094,
											"end": 9111,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9085,
											"end": 9091,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9041,
											"end": 9112,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 9041,
											"end": 9112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9041,
											"end": 9112,
											"name": "tag",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 9041,
											"end": 9112,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8897,
											"end": 9119,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8897,
											"end": 9119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9125,
											"end": 9242,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 9125,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9234,
											"end": 9235,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9232,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9224,
											"end": 9236,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9248,
											"end": 9365,
											"name": "tag",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 9248,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9357,
											"end": 9358,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9355,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9347,
											"end": 9359,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9461,
											"end": 9469,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9471,
											"end": 9477,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9521,
											"end": 9524,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9514,
											"end": 9518,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 9506,
											"end": 9512,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9502,
											"end": 9519,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9498,
											"end": 9525,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9488,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "717"
										},
										{
											"begin": 9488,
											"end": 9610,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "718"
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 9529,
											"end": 9608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "tag",
											"source": 18,
											"value": "718"
										},
										{
											"begin": 9529,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9488,
											"end": 9610,
											"name": "tag",
											"source": 18,
											"value": "717"
										},
										{
											"begin": 9488,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9642,
											"end": 9648,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9629,
											"end": 9649,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9619,
											"end": 9649,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9619,
											"end": 9649,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9664,
											"end": 9670,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9661,
											"end": 9691,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9658,
											"end": 9775,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9658,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "719"
										},
										{
											"begin": 9658,
											"end": 9775,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9694,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "720"
										},
										{
											"begin": 9694,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 9694,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9694,
											"end": 9773,
											"name": "tag",
											"source": 18,
											"value": "720"
										},
										{
											"begin": 9694,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9658,
											"end": 9775,
											"name": "tag",
											"source": 18,
											"value": "719"
										},
										{
											"begin": 9658,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9800,
											"end": 9806,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9796,
											"end": 9813,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9784,
											"end": 9813,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9784,
											"end": 9813,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9862,
											"end": 9865,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9854,
											"end": 9858,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 9832,
											"end": 9840,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9828,
											"end": 9860,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9825,
											"end": 9866,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9822,
											"end": 9950,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9822,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 9822,
											"end": 9950,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9869,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "722"
										},
										{
											"begin": 9869,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 9869,
											"end": 9948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9869,
											"end": 9948,
											"name": "tag",
											"source": 18,
											"value": "722"
										},
										{
											"begin": 9869,
											"end": 9948,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9822,
											"end": 9950,
											"name": "tag",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 9822,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9956,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9388,
											"end": 9956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "tag",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10052,
											"end": 10060,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10062,
											"end": 10068,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10112,
											"end": 10115,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10105,
											"end": 10109,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10097,
											"end": 10103,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10093,
											"end": 10110,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10089,
											"end": 10116,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10079,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "724"
										},
										{
											"begin": 10079,
											"end": 10201,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10120,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "725"
										},
										{
											"begin": 10120,
											"end": 10199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 10120,
											"end": 10199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10120,
											"end": 10199,
											"name": "tag",
											"source": 18,
											"value": "725"
										},
										{
											"begin": 10120,
											"end": 10199,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10079,
											"end": 10201,
											"name": "tag",
											"source": 18,
											"value": "724"
										},
										{
											"begin": 10079,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10233,
											"end": 10239,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10210,
											"end": 10240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10210,
											"end": 10240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10263,
											"end": 10281,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10255,
											"end": 10261,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10252,
											"end": 10282,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10249,
											"end": 10366,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10249,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "726"
										},
										{
											"begin": 10249,
											"end": 10366,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10285,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "727"
										},
										{
											"begin": 10285,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 10285,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10285,
											"end": 10364,
											"name": "tag",
											"source": 18,
											"value": "727"
										},
										{
											"begin": 10285,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10249,
											"end": 10366,
											"name": "tag",
											"source": 18,
											"value": "726"
										},
										{
											"begin": 10249,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10399,
											"end": 10403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10391,
											"end": 10397,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10387,
											"end": 10404,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10375,
											"end": 10404,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10375,
											"end": 10404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10453,
											"end": 10456,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10445,
											"end": 10449,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10437,
											"end": 10443,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10433,
											"end": 10450,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 10423,
											"end": 10431,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10419,
											"end": 10451,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10416,
											"end": 10457,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10413,
											"end": 10541,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10413,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "728"
										},
										{
											"begin": 10413,
											"end": 10541,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10460,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "729"
										},
										{
											"begin": 10460,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 10460,
											"end": 10539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10460,
											"end": 10539,
											"name": "tag",
											"source": 18,
											"value": "729"
										},
										{
											"begin": 10460,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10413,
											"end": 10541,
											"name": "tag",
											"source": 18,
											"value": "728"
										},
										{
											"begin": 10413,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9979,
											"end": 10547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9979,
											"end": 10547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "tag",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10675,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10691,
											"end": 10697,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10699,
											"end": 10705,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10736,
											"end": 10745,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10727,
											"end": 10734,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10723,
											"end": 10746,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10719,
											"end": 10751,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10716,
											"end": 10835,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10716,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "731"
										},
										{
											"begin": 10716,
											"end": 10835,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10754,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "732"
										},
										{
											"begin": 10754,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 10754,
											"end": 10833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10754,
											"end": 10833,
											"name": "tag",
											"source": 18,
											"value": "732"
										},
										{
											"begin": 10754,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10716,
											"end": 10835,
											"name": "tag",
											"source": 18,
											"value": "731"
										},
										{
											"begin": 10716,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10902,
											"end": 10903,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10891,
											"end": 10900,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10887,
											"end": 10904,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10874,
											"end": 10905,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10932,
											"end": 10950,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10924,
											"end": 10930,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10921,
											"end": 10951,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10918,
											"end": 11035,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10918,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "733"
										},
										{
											"begin": 10918,
											"end": 11035,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10954,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "734"
										},
										{
											"begin": 10954,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 10954,
											"end": 11033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10954,
											"end": 11033,
											"name": "tag",
											"source": 18,
											"value": "734"
										},
										{
											"begin": 10954,
											"end": 11033,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10918,
											"end": 11035,
											"name": "tag",
											"source": 18,
											"value": "733"
										},
										{
											"begin": 10918,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11067,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "735"
										},
										{
											"begin": 11139,
											"end": 11146,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11130,
											"end": 11136,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11119,
											"end": 11128,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11115,
											"end": 11137,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11067,
											"end": 11147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 11067,
											"end": 11147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11067,
											"end": 11147,
											"name": "tag",
											"source": 18,
											"value": "735"
										},
										{
											"begin": 11067,
											"end": 11147,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11049,
											"end": 11147,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 11049,
											"end": 11147,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11049,
											"end": 11147,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 11049,
											"end": 11147,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10845,
											"end": 11157,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11224,
											"end": 11226,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11213,
											"end": 11222,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11209,
											"end": 11227,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11196,
											"end": 11228,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 11255,
											"end": 11273,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11247,
											"end": 11253,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11244,
											"end": 11274,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11241,
											"end": 11358,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11241,
											"end": 11358,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "736"
										},
										{
											"begin": 11241,
											"end": 11358,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11277,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "737"
										},
										{
											"begin": 11277,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 11277,
											"end": 11356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11277,
											"end": 11356,
											"name": "tag",
											"source": 18,
											"value": "737"
										},
										{
											"begin": 11277,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11241,
											"end": 11358,
											"name": "tag",
											"source": 18,
											"value": "736"
										},
										{
											"begin": 11241,
											"end": 11358,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11390,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "738"
										},
										{
											"begin": 11462,
											"end": 11469,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 11453,
											"end": 11459,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11442,
											"end": 11451,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11438,
											"end": 11460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11390,
											"end": 11470,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 11390,
											"end": 11470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11390,
											"end": 11470,
											"name": "tag",
											"source": 18,
											"value": "738"
										},
										{
											"begin": 11390,
											"end": 11470,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11372,
											"end": 11470,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11372,
											"end": 11470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11372,
											"end": 11470,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11372,
											"end": 11470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11167,
											"end": 11480,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10553,
											"end": 11487,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10553,
											"end": 11487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11493,
											"end": 11611,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 11493,
											"end": 11611,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "740"
										},
										{
											"begin": 11598,
											"end": 11603,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 11580,
											"end": 11604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "tag",
											"source": 18,
											"value": "740"
										},
										{
											"begin": 11580,
											"end": 11604,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11575,
											"end": 11578,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11493,
											"end": 11611,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11493,
											"end": 11611,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11493,
											"end": 11611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "tag",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11710,
											"end": 11714,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11748,
											"end": 11750,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11737,
											"end": 11746,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11725,
											"end": 11751,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11725,
											"end": 11751,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11761,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "742"
										},
										{
											"begin": 11829,
											"end": 11830,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11818,
											"end": 11827,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11814,
											"end": 11831,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11805,
											"end": 11811,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11761,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 11761,
											"end": 11832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11761,
											"end": 11832,
											"name": "tag",
											"source": 18,
											"value": "742"
										},
										{
											"begin": 11761,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11617,
											"end": 11839,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11617,
											"end": 11839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11845,
											"end": 12153,
											"name": "tag",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 11845,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11907,
											"end": 11911,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11997,
											"end": 12015,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11989,
											"end": 11995,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11986,
											"end": 12016,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "744"
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "745"
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 12019,
											"end": 12037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "tag",
											"source": 18,
											"value": "745"
										},
										{
											"begin": 12019,
											"end": 12037,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "tag",
											"source": 18,
											"value": "744"
										},
										{
											"begin": 11983,
											"end": 12039,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12057,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "746"
										},
										{
											"begin": 12079,
											"end": 12085,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12057,
											"end": 12086,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 12057,
											"end": 12086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12057,
											"end": 12086,
											"name": "tag",
											"source": 18,
											"value": "746"
										},
										{
											"begin": 12057,
											"end": 12086,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12049,
											"end": 12086,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12049,
											"end": 12086,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12141,
											"end": 12145,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12135,
											"end": 12139,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12131,
											"end": 12146,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12123,
											"end": 12146,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12123,
											"end": 12146,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11845,
											"end": 12153,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11845,
											"end": 12153,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11845,
											"end": 12153,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11845,
											"end": 12153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "tag",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12237,
											"end": 12242,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12262,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "748"
										},
										{
											"begin": 12278,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "749"
										},
										{
											"begin": 12320,
											"end": 12326,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12278,
											"end": 12327,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 12278,
											"end": 12327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12278,
											"end": 12327,
											"name": "tag",
											"source": 18,
											"value": "749"
										},
										{
											"begin": 12278,
											"end": 12327,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12262,
											"end": 12328,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 12262,
											"end": 12328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12262,
											"end": 12328,
											"name": "tag",
											"source": 18,
											"value": "748"
										},
										{
											"begin": 12262,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12253,
											"end": 12328,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12253,
											"end": 12328,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12351,
											"end": 12357,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12344,
											"end": 12349,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12389,
											"end": 12393,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12382,
											"end": 12387,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12378,
											"end": 12394,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12427,
											"end": 12430,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12418,
											"end": 12424,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12413,
											"end": 12416,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12409,
											"end": 12425,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12406,
											"end": 12431,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 12403,
											"end": 12515,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12403,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "750"
										},
										{
											"begin": 12403,
											"end": 12515,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "751"
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 12434,
											"end": 12513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "tag",
											"source": 18,
											"value": "751"
										},
										{
											"begin": 12434,
											"end": 12513,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12403,
											"end": 12515,
											"name": "tag",
											"source": 18,
											"value": "750"
										},
										{
											"begin": 12403,
											"end": 12515,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12524,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "752"
										},
										{
											"begin": 12571,
											"end": 12577,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12566,
											"end": 12569,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12561,
											"end": 12564,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12524,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 12524,
											"end": 12578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12524,
											"end": 12578,
											"name": "tag",
											"source": 18,
											"value": "752"
										},
										{
											"begin": 12524,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12243,
											"end": 12584,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12584,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12159,
											"end": 12584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "tag",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12660,
											"end": 12665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12709,
											"end": 12712,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12702,
											"end": 12706,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 12694,
											"end": 12700,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12690,
											"end": 12707,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12686,
											"end": 12713,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 12676,
											"end": 12798,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "754"
										},
										{
											"begin": 12676,
											"end": 12798,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "755"
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 12717,
											"end": 12796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "tag",
											"source": 18,
											"value": "755"
										},
										{
											"begin": 12717,
											"end": 12796,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12676,
											"end": 12798,
											"name": "tag",
											"source": 18,
											"value": "754"
										},
										{
											"begin": 12676,
											"end": 12798,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12834,
											"end": 12840,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12821,
											"end": 12841,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 12859,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "756"
										},
										{
											"begin": 12934,
											"end": 12937,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12926,
											"end": 12932,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12919,
											"end": 12923,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12911,
											"end": 12917,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12907,
											"end": 12924,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12859,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 12859,
											"end": 12938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12859,
											"end": 12938,
											"name": "tag",
											"source": 18,
											"value": "756"
										},
										{
											"begin": 12859,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12850,
											"end": 12938,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12850,
											"end": 12938,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12666,
											"end": 12944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12604,
											"end": 12944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12604,
											"end": 12944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "tag",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13047,
											"end": 13053,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13055,
											"end": 13061,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13063,
											"end": 13069,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13112,
											"end": 13114,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 13100,
											"end": 13109,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13091,
											"end": 13098,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13087,
											"end": 13110,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 13080,
											"end": 13199,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13080,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "758"
										},
										{
											"begin": 13080,
											"end": 13199,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13118,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "759"
										},
										{
											"begin": 13118,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 13118,
											"end": 13197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13118,
											"end": 13197,
											"name": "tag",
											"source": 18,
											"value": "759"
										},
										{
											"begin": 13118,
											"end": 13197,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13080,
											"end": 13199,
											"name": "tag",
											"source": 18,
											"value": "758"
										},
										{
											"begin": 13080,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13266,
											"end": 13267,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13255,
											"end": 13264,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13251,
											"end": 13268,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13238,
											"end": 13269,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13288,
											"end": 13294,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13285,
											"end": 13315,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 13282,
											"end": 13399,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13282,
											"end": 13399,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "760"
										},
										{
											"begin": 13282,
											"end": 13399,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13318,
											"end": 13397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "761"
										},
										{
											"begin": 13318,
											"end": 13397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 13318,
											"end": 13397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13318,
											"end": 13397,
											"name": "tag",
											"source": 18,
											"value": "761"
										},
										{
											"begin": 13318,
											"end": 13397,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13282,
											"end": 13399,
											"name": "tag",
											"source": 18,
											"value": "760"
										},
										{
											"begin": 13282,
											"end": 13399,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13423,
											"end": 13486,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "762"
										},
										{
											"begin": 13478,
											"end": 13485,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13469,
											"end": 13475,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13458,
											"end": 13467,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13454,
											"end": 13476,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13423,
											"end": 13486,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 13423,
											"end": 13486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13423,
											"end": 13486,
											"name": "tag",
											"source": 18,
											"value": "762"
										},
										{
											"begin": 13423,
											"end": 13486,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13413,
											"end": 13486,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 13413,
											"end": 13486,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13209,
											"end": 13496,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13563,
											"end": 13565,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13552,
											"end": 13561,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13548,
											"end": 13566,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13535,
											"end": 13567,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 13594,
											"end": 13612,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13586,
											"end": 13592,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13583,
											"end": 13613,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 13580,
											"end": 13697,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13580,
											"end": 13697,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "763"
										},
										{
											"begin": 13580,
											"end": 13697,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13616,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "764"
										},
										{
											"begin": 13616,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 13616,
											"end": 13695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13616,
											"end": 13695,
											"name": "tag",
											"source": 18,
											"value": "764"
										},
										{
											"begin": 13616,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13580,
											"end": 13697,
											"name": "tag",
											"source": 18,
											"value": "763"
										},
										{
											"begin": 13580,
											"end": 13697,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "765"
										},
										{
											"begin": 13776,
											"end": 13783,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13767,
											"end": 13773,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13756,
											"end": 13765,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13752,
											"end": 13774,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 13721,
											"end": 13784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "tag",
											"source": 18,
											"value": "765"
										},
										{
											"begin": 13721,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13711,
											"end": 13784,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13711,
											"end": 13784,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13506,
											"end": 13794,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13833,
											"end": 13835,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 13859,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "766"
										},
										{
											"begin": 13904,
											"end": 13911,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13895,
											"end": 13901,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13884,
											"end": 13893,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13880,
											"end": 13902,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13859,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 13859,
											"end": 13912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13859,
											"end": 13912,
											"name": "tag",
											"source": 18,
											"value": "766"
										},
										{
											"begin": 13859,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13849,
											"end": 13912,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13849,
											"end": 13912,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13804,
											"end": 13922,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 13929,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12950,
											"end": 13929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "tag",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14003,
											"end": 14009,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14011,
											"end": 14017,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14048,
											"end": 14057,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14039,
											"end": 14046,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14035,
											"end": 14058,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14031,
											"end": 14063,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "768"
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "769"
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 14066,
											"end": 14145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "tag",
											"source": 18,
											"value": "769"
										},
										{
											"begin": 14066,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "tag",
											"source": 18,
											"value": "768"
										},
										{
											"begin": 14028,
											"end": 14147,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14186,
											"end": 14187,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14211,
											"end": 14264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "770"
										},
										{
											"begin": 14256,
											"end": 14263,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14247,
											"end": 14253,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14236,
											"end": 14245,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14232,
											"end": 14254,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14211,
											"end": 14264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 14211,
											"end": 14264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14211,
											"end": 14264,
											"name": "tag",
											"source": 18,
											"value": "770"
										},
										{
											"begin": 14211,
											"end": 14264,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14201,
											"end": 14264,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14201,
											"end": 14264,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14157,
											"end": 14274,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14313,
											"end": 14315,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14339,
											"end": 14392,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "771"
										},
										{
											"begin": 14384,
											"end": 14391,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14375,
											"end": 14381,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14364,
											"end": 14373,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14360,
											"end": 14382,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14339,
											"end": 14392,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 14339,
											"end": 14392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14339,
											"end": 14392,
											"name": "tag",
											"source": 18,
											"value": "771"
										},
										{
											"begin": 14339,
											"end": 14392,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14329,
											"end": 14392,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14329,
											"end": 14392,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14284,
											"end": 14402,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13935,
											"end": 14409,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13935,
											"end": 14409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14415,
											"end": 14595,
											"name": "tag",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 14415,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14463,
											"end": 14540,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14460,
											"end": 14461,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14453,
											"end": 14541,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14560,
											"end": 14564,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 14557,
											"end": 14558,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 14550,
											"end": 14565,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14584,
											"end": 14588,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 14581,
											"end": 14582,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14574,
											"end": 14589,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 14601,
											"end": 14921,
											"name": "tag",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 14601,
											"end": 14921,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14645,
											"end": 14651,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14682,
											"end": 14683,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 14676,
											"end": 14680,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14672,
											"end": 14684,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 14662,
											"end": 14684,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14662,
											"end": 14684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14729,
											"end": 14730,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 14723,
											"end": 14727,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14719,
											"end": 14731,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 14750,
											"end": 14768,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 14740,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "774"
										},
										{
											"begin": 14740,
											"end": 14821,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14806,
											"end": 14810,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 14798,
											"end": 14804,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14794,
											"end": 14811,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 14784,
											"end": 14811,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14784,
											"end": 14811,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14740,
											"end": 14821,
											"name": "tag",
											"source": 18,
											"value": "774"
										},
										{
											"begin": 14740,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14868,
											"end": 14870,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14860,
											"end": 14866,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14857,
											"end": 14871,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 14837,
											"end": 14855,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14834,
											"end": 14872,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14831,
											"end": 14915,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "775"
										},
										{
											"begin": 14831,
											"end": 14915,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "776"
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 14887,
											"end": 14905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "tag",
											"source": 18,
											"value": "776"
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14831,
											"end": 14915,
											"name": "tag",
											"source": 18,
											"value": "775"
										},
										{
											"begin": 14831,
											"end": 14915,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14652,
											"end": 14921,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14601,
											"end": 14921,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14601,
											"end": 14921,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14601,
											"end": 14921,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14601,
											"end": 14921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14927,
											"end": 15089,
											"name": "tag",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 14927,
											"end": 15089,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15067,
											"end": 15081,
											"name": "PUSH",
											"source": 18,
											"value": "4E756C6C20416464726573730000000000000000000000000000000000000000"
										},
										{
											"begin": 15063,
											"end": 15064,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15055,
											"end": 15061,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15051,
											"end": 15065,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15044,
											"end": 15082,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14927,
											"end": 15089,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14927,
											"end": 15089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15095,
											"end": 15461,
											"name": "tag",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 15095,
											"end": 15461,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15237,
											"end": 15240,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15258,
											"end": 15325,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "779"
										},
										{
											"begin": 15322,
											"end": 15324,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 15317,
											"end": 15320,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15258,
											"end": 15325,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 15258,
											"end": 15325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15258,
											"end": 15325,
											"name": "tag",
											"source": 18,
											"value": "779"
										},
										{
											"begin": 15258,
											"end": 15325,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15251,
											"end": 15325,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15251,
											"end": 15325,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15334,
											"end": 15427,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "780"
										},
										{
											"begin": 15423,
											"end": 15426,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15334,
											"end": 15427,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 15334,
											"end": 15427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15334,
											"end": 15427,
											"name": "tag",
											"source": 18,
											"value": "780"
										},
										{
											"begin": 15334,
											"end": 15427,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15452,
											"end": 15454,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15447,
											"end": 15450,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15443,
											"end": 15455,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15436,
											"end": 15455,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15436,
											"end": 15455,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15095,
											"end": 15461,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15095,
											"end": 15461,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15095,
											"end": 15461,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15095,
											"end": 15461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15467,
											"end": 15886,
											"name": "tag",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 15467,
											"end": 15886,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15633,
											"end": 15637,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15671,
											"end": 15673,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15660,
											"end": 15669,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15656,
											"end": 15674,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15648,
											"end": 15674,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15648,
											"end": 15674,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15720,
											"end": 15729,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15714,
											"end": 15718,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15710,
											"end": 15730,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 15706,
											"end": 15707,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15695,
											"end": 15704,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15691,
											"end": 15708,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15684,
											"end": 15731,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15748,
											"end": 15879,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "782"
										},
										{
											"begin": 15874,
											"end": 15878,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15748,
											"end": 15879,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "560"
										},
										{
											"begin": 15748,
											"end": 15879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15748,
											"end": 15879,
											"name": "tag",
											"source": 18,
											"value": "782"
										},
										{
											"begin": 15748,
											"end": 15879,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15740,
											"end": 15879,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15740,
											"end": 15879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15467,
											"end": 15886,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15467,
											"end": 15886,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15467,
											"end": 15886,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15467,
											"end": 15886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15892,
											"end": 16117,
											"name": "tag",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 15892,
											"end": 16117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16032,
											"end": 16066,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73666572206661696C65643A2053656E64657220697320626C61636B"
										},
										{
											"begin": 16028,
											"end": 16029,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16020,
											"end": 16026,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16016,
											"end": 16030,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16009,
											"end": 16067,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16101,
											"end": 16109,
											"name": "PUSH",
											"source": 18,
											"value": "6C69737465640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16096,
											"end": 16098,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16088,
											"end": 16094,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16084,
											"end": 16099,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16077,
											"end": 16110,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15892,
											"end": 16117,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15892,
											"end": 16117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16123,
											"end": 16489,
											"name": "tag",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 16123,
											"end": 16489,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16265,
											"end": 16268,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16286,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "785"
										},
										{
											"begin": 16350,
											"end": 16352,
											"name": "PUSH",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 16345,
											"end": 16348,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16286,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 16286,
											"end": 16353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16286,
											"end": 16353,
											"name": "tag",
											"source": 18,
											"value": "785"
										},
										{
											"begin": 16286,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16279,
											"end": 16353,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16279,
											"end": 16353,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16362,
											"end": 16455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "786"
										},
										{
											"begin": 16451,
											"end": 16454,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16362,
											"end": 16455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 16362,
											"end": 16455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16362,
											"end": 16455,
											"name": "tag",
											"source": 18,
											"value": "786"
										},
										{
											"begin": 16362,
											"end": 16455,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16480,
											"end": 16482,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 16475,
											"end": 16478,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16471,
											"end": 16483,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16464,
											"end": 16483,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16464,
											"end": 16483,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16123,
											"end": 16489,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16123,
											"end": 16489,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16123,
											"end": 16489,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16123,
											"end": 16489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16495,
											"end": 16914,
											"name": "tag",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 16495,
											"end": 16914,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16661,
											"end": 16665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16699,
											"end": 16701,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16688,
											"end": 16697,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16684,
											"end": 16702,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16676,
											"end": 16702,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16676,
											"end": 16702,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16748,
											"end": 16757,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16742,
											"end": 16746,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16738,
											"end": 16758,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 16734,
											"end": 16735,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16723,
											"end": 16732,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16719,
											"end": 16736,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16712,
											"end": 16759,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16776,
											"end": 16907,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "788"
										},
										{
											"begin": 16902,
											"end": 16906,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16776,
											"end": 16907,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 16776,
											"end": 16907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16776,
											"end": 16907,
											"name": "tag",
											"source": 18,
											"value": "788"
										},
										{
											"begin": 16776,
											"end": 16907,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16768,
											"end": 16907,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16768,
											"end": 16907,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16495,
											"end": 16914,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16495,
											"end": 16914,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16495,
											"end": 16914,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16495,
											"end": 16914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16920,
											"end": 17148,
											"name": "tag",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 16920,
											"end": 17148,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17060,
											"end": 17094,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73666572206661696C65643A20526563697069656E7420697320626C"
										},
										{
											"begin": 17056,
											"end": 17057,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17048,
											"end": 17054,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17044,
											"end": 17058,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17037,
											"end": 17095,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17129,
											"end": 17140,
											"name": "PUSH",
											"source": 18,
											"value": "61636B6C69737465640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17124,
											"end": 17126,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17116,
											"end": 17122,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17112,
											"end": 17127,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17105,
											"end": 17141,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16920,
											"end": 17148,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16920,
											"end": 17148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17154,
											"end": 17520,
											"name": "tag",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 17154,
											"end": 17520,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17296,
											"end": 17299,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17317,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "791"
										},
										{
											"begin": 17381,
											"end": 17383,
											"name": "PUSH",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 17376,
											"end": 17379,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17317,
											"end": 17384,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 17317,
											"end": 17384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17317,
											"end": 17384,
											"name": "tag",
											"source": 18,
											"value": "791"
										},
										{
											"begin": 17317,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17310,
											"end": 17384,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17310,
											"end": 17384,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17393,
											"end": 17486,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "792"
										},
										{
											"begin": 17482,
											"end": 17485,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17393,
											"end": 17486,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 17393,
											"end": 17486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17393,
											"end": 17486,
											"name": "tag",
											"source": 18,
											"value": "792"
										},
										{
											"begin": 17393,
											"end": 17486,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17511,
											"end": 17513,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 17506,
											"end": 17509,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17502,
											"end": 17514,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17495,
											"end": 17514,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17495,
											"end": 17514,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17154,
											"end": 17520,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17154,
											"end": 17520,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17154,
											"end": 17520,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17154,
											"end": 17520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17945,
											"name": "tag",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 17526,
											"end": 17945,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17692,
											"end": 17696,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17730,
											"end": 17732,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17719,
											"end": 17728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17715,
											"end": 17733,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17707,
											"end": 17733,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17707,
											"end": 17733,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17779,
											"end": 17788,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17773,
											"end": 17777,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17769,
											"end": 17789,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 17765,
											"end": 17766,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17754,
											"end": 17763,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17750,
											"end": 17767,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17743,
											"end": 17790,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17807,
											"end": 17938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "794"
										},
										{
											"begin": 17933,
											"end": 17937,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17807,
											"end": 17938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 17807,
											"end": 17938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17807,
											"end": 17938,
											"name": "tag",
											"source": 18,
											"value": "794"
										},
										{
											"begin": 17807,
											"end": 17938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17799,
											"end": 17938,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17799,
											"end": 17938,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17945,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17945,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17945,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17526,
											"end": 17945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17951,
											"end": 18125,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 17951,
											"end": 18125,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18091,
											"end": 18117,
											"name": "PUSH",
											"source": 18,
											"value": "416D6F756E742073686F756C646E2774206265207A65726F0000000000000000"
										},
										{
											"begin": 18087,
											"end": 18088,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18079,
											"end": 18085,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18075,
											"end": 18089,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18068,
											"end": 18118,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17951,
											"end": 18125,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17951,
											"end": 18125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18131,
											"end": 18497,
											"name": "tag",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 18131,
											"end": 18497,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18273,
											"end": 18276,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18294,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "797"
										},
										{
											"begin": 18358,
											"end": 18360,
											"name": "PUSH",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 18353,
											"end": 18356,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18294,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 18294,
											"end": 18361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18294,
											"end": 18361,
											"name": "tag",
											"source": 18,
											"value": "797"
										},
										{
											"begin": 18294,
											"end": 18361,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18287,
											"end": 18361,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18287,
											"end": 18361,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18370,
											"end": 18463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "798"
										},
										{
											"begin": 18459,
											"end": 18462,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18370,
											"end": 18463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 18370,
											"end": 18463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18370,
											"end": 18463,
											"name": "tag",
											"source": 18,
											"value": "798"
										},
										{
											"begin": 18370,
											"end": 18463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18488,
											"end": 18490,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18483,
											"end": 18486,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18479,
											"end": 18491,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18472,
											"end": 18491,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18472,
											"end": 18491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18131,
											"end": 18497,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18131,
											"end": 18497,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18131,
											"end": 18497,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18131,
											"end": 18497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18503,
											"end": 18922,
											"name": "tag",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 18503,
											"end": 18922,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18669,
											"end": 18673,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18707,
											"end": 18709,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18696,
											"end": 18705,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18692,
											"end": 18710,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18684,
											"end": 18710,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18684,
											"end": 18710,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18756,
											"end": 18765,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18750,
											"end": 18754,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18746,
											"end": 18766,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 18742,
											"end": 18743,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18731,
											"end": 18740,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18727,
											"end": 18744,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18720,
											"end": 18767,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18784,
											"end": 18915,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "800"
										},
										{
											"begin": 18910,
											"end": 18914,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18784,
											"end": 18915,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 18784,
											"end": 18915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18784,
											"end": 18915,
											"name": "tag",
											"source": 18,
											"value": "800"
										},
										{
											"begin": 18784,
											"end": 18915,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18776,
											"end": 18915,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18776,
											"end": 18915,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18503,
											"end": 18922,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18503,
											"end": 18922,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18503,
											"end": 18922,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18503,
											"end": 18922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18928,
											"end": 19149,
											"name": "tag",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 18928,
											"end": 19149,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19068,
											"end": 19102,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73666572206661696C65643A20546F6B656E7320617265206C6F636B"
										},
										{
											"begin": 19064,
											"end": 19065,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19056,
											"end": 19062,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19052,
											"end": 19066,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19045,
											"end": 19103,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19137,
											"end": 19141,
											"name": "PUSH",
											"source": 18,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19132,
											"end": 19134,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19124,
											"end": 19130,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19120,
											"end": 19135,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19113,
											"end": 19142,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18928,
											"end": 19149,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18928,
											"end": 19149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19155,
											"end": 19521,
											"name": "tag",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 19155,
											"end": 19521,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19297,
											"end": 19300,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19318,
											"end": 19385,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "803"
										},
										{
											"begin": 19382,
											"end": 19384,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 19377,
											"end": 19380,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19318,
											"end": 19385,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 19318,
											"end": 19385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19318,
											"end": 19385,
											"name": "tag",
											"source": 18,
											"value": "803"
										},
										{
											"begin": 19318,
											"end": 19385,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19311,
											"end": 19385,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19311,
											"end": 19385,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19394,
											"end": 19487,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "804"
										},
										{
											"begin": 19483,
											"end": 19486,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19394,
											"end": 19487,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 19394,
											"end": 19487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19394,
											"end": 19487,
											"name": "tag",
											"source": 18,
											"value": "804"
										},
										{
											"begin": 19394,
											"end": 19487,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19512,
											"end": 19514,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 19507,
											"end": 19510,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19503,
											"end": 19515,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19496,
											"end": 19515,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19496,
											"end": 19515,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19155,
											"end": 19521,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19155,
											"end": 19521,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19155,
											"end": 19521,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19155,
											"end": 19521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19527,
											"end": 19946,
											"name": "tag",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 19527,
											"end": 19946,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19693,
											"end": 19697,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19731,
											"end": 19733,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19720,
											"end": 19729,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19716,
											"end": 19734,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19708,
											"end": 19734,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19708,
											"end": 19734,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19780,
											"end": 19789,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19774,
											"end": 19778,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19770,
											"end": 19790,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 19766,
											"end": 19767,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19755,
											"end": 19764,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19751,
											"end": 19768,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19744,
											"end": 19791,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19808,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "806"
										},
										{
											"begin": 19934,
											"end": 19938,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19808,
											"end": 19939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 19808,
											"end": 19939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19808,
											"end": 19939,
											"name": "tag",
											"source": 18,
											"value": "806"
										},
										{
											"begin": 19808,
											"end": 19939,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19800,
											"end": 19939,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19800,
											"end": 19939,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19527,
											"end": 19946,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19527,
											"end": 19946,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19527,
											"end": 19946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19527,
											"end": 19946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19952,
											"end": 20127,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 19952,
											"end": 20127,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20092,
											"end": 20119,
											"name": "PUSH",
											"source": 18,
											"value": "41646472657373206973206E6F74206120636F6E747261637400000000000000"
										},
										{
											"begin": 20088,
											"end": 20089,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20080,
											"end": 20086,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20076,
											"end": 20090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20069,
											"end": 20120,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19952,
											"end": 20127,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19952,
											"end": 20127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20133,
											"end": 20499,
											"name": "tag",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 20133,
											"end": 20499,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20275,
											"end": 20278,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20296,
											"end": 20363,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "809"
										},
										{
											"begin": 20360,
											"end": 20362,
											"name": "PUSH",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 20355,
											"end": 20358,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20296,
											"end": 20363,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 20296,
											"end": 20363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20296,
											"end": 20363,
											"name": "tag",
											"source": 18,
											"value": "809"
										},
										{
											"begin": 20296,
											"end": 20363,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20289,
											"end": 20363,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20289,
											"end": 20363,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20372,
											"end": 20465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "810"
										},
										{
											"begin": 20461,
											"end": 20464,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20372,
											"end": 20465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 20372,
											"end": 20465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20372,
											"end": 20465,
											"name": "tag",
											"source": 18,
											"value": "810"
										},
										{
											"begin": 20372,
											"end": 20465,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20490,
											"end": 20492,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20485,
											"end": 20488,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20481,
											"end": 20493,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20474,
											"end": 20493,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20474,
											"end": 20493,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20133,
											"end": 20499,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20133,
											"end": 20499,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20133,
											"end": 20499,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20133,
											"end": 20499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20505,
											"end": 20924,
											"name": "tag",
											"source": 18,
											"value": "213"
										},
										{
											"begin": 20505,
											"end": 20924,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20671,
											"end": 20675,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20709,
											"end": 20711,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20698,
											"end": 20707,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20694,
											"end": 20712,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20686,
											"end": 20712,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20686,
											"end": 20712,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20758,
											"end": 20767,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20752,
											"end": 20756,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20748,
											"end": 20768,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 20744,
											"end": 20745,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20733,
											"end": 20742,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20729,
											"end": 20746,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20722,
											"end": 20769,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20786,
											"end": 20917,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "812"
										},
										{
											"begin": 20912,
											"end": 20916,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20786,
											"end": 20917,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 20786,
											"end": 20917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20786,
											"end": 20917,
											"name": "tag",
											"source": 18,
											"value": "812"
										},
										{
											"begin": 20786,
											"end": 20917,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20778,
											"end": 20917,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20778,
											"end": 20917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20505,
											"end": 20924,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20505,
											"end": 20924,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20505,
											"end": 20924,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20505,
											"end": 20924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20930,
											"end": 21094,
											"name": "tag",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 20930,
											"end": 21094,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21070,
											"end": 21086,
											"name": "PUSH",
											"source": 18,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 21066,
											"end": 21067,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21058,
											"end": 21064,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21054,
											"end": 21068,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21047,
											"end": 21087,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20930,
											"end": 21094,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20930,
											"end": 21094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21100,
											"end": 21466,
											"name": "tag",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 21100,
											"end": 21466,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21242,
											"end": 21245,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21263,
											"end": 21330,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "815"
										},
										{
											"begin": 21327,
											"end": 21329,
											"name": "PUSH",
											"source": 18,
											"value": "E"
										},
										{
											"begin": 21322,
											"end": 21325,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21263,
											"end": 21330,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 21263,
											"end": 21330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21263,
											"end": 21330,
											"name": "tag",
											"source": 18,
											"value": "815"
										},
										{
											"begin": 21263,
											"end": 21330,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21256,
											"end": 21330,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21256,
											"end": 21330,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21339,
											"end": 21432,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "816"
										},
										{
											"begin": 21428,
											"end": 21431,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21339,
											"end": 21432,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "571"
										},
										{
											"begin": 21339,
											"end": 21432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21339,
											"end": 21432,
											"name": "tag",
											"source": 18,
											"value": "816"
										},
										{
											"begin": 21339,
											"end": 21432,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21457,
											"end": 21459,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21452,
											"end": 21455,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21448,
											"end": 21460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21441,
											"end": 21460,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21441,
											"end": 21460,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21100,
											"end": 21466,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21100,
											"end": 21466,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21100,
											"end": 21466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21100,
											"end": 21466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21472,
											"end": 21891,
											"name": "tag",
											"source": 18,
											"value": "218"
										},
										{
											"begin": 21472,
											"end": 21891,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21638,
											"end": 21642,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21676,
											"end": 21678,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21665,
											"end": 21674,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21661,
											"end": 21679,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21653,
											"end": 21679,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21653,
											"end": 21679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21725,
											"end": 21734,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21719,
											"end": 21723,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21715,
											"end": 21735,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 21711,
											"end": 21712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21700,
											"end": 21709,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21696,
											"end": 21713,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21689,
											"end": 21736,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 21753,
											"end": 21884,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "818"
										},
										{
											"begin": 21879,
											"end": 21883,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21753,
											"end": 21884,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 21753,
											"end": 21884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21753,
											"end": 21884,
											"name": "tag",
											"source": 18,
											"value": "818"
										},
										{
											"begin": 21753,
											"end": 21884,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21745,
											"end": 21884,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21745,
											"end": 21884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21472,
											"end": 21891,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21472,
											"end": 21891,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21472,
											"end": 21891,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21472,
											"end": 21891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21897,
											"end": 22123,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 21897,
											"end": 22123,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22037,
											"end": 22071,
											"name": "PUSH",
											"source": 18,
											"value": "42617463685472616E73666572206661696C65643A204D69736D617463686564"
										},
										{
											"begin": 22033,
											"end": 22034,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22025,
											"end": 22031,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22021,
											"end": 22035,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22014,
											"end": 22072,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22106,
											"end": 22115,
											"name": "PUSH",
											"source": 18,
											"value": "2061727261797300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22101,
											"end": 22103,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22093,
											"end": 22099,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22089,
											"end": 22104,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22082,
											"end": 22116,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 21897,
											"end": 22123,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21897,
											"end": 22123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "tag",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22271,
											"end": 22274,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22292,
											"end": 22359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "821"
										},
										{
											"begin": 22356,
											"end": 22358,
											"name": "PUSH",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 22351,
											"end": 22354,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22292,
											"end": 22359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 22292,
											"end": 22359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22292,
											"end": 22359,
											"name": "tag",
											"source": 18,
											"value": "821"
										},
										{
											"begin": 22292,
											"end": 22359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22285,
											"end": 22359,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22285,
											"end": 22359,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22368,
											"end": 22461,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "822"
										},
										{
											"begin": 22457,
											"end": 22460,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22368,
											"end": 22461,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 22368,
											"end": 22461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22368,
											"end": 22461,
											"name": "tag",
											"source": 18,
											"value": "822"
										},
										{
											"begin": 22368,
											"end": 22461,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22486,
											"end": 22488,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 22481,
											"end": 22484,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22477,
											"end": 22489,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22470,
											"end": 22489,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22470,
											"end": 22489,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22129,
											"end": 22495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22129,
											"end": 22495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "tag",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22667,
											"end": 22671,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22705,
											"end": 22707,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22694,
											"end": 22703,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22690,
											"end": 22708,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22682,
											"end": 22708,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22682,
											"end": 22708,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22754,
											"end": 22763,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22748,
											"end": 22752,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22744,
											"end": 22764,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 22740,
											"end": 22741,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22729,
											"end": 22738,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22725,
											"end": 22742,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22718,
											"end": 22765,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22782,
											"end": 22913,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "824"
										},
										{
											"begin": 22908,
											"end": 22912,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22782,
											"end": 22913,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 22782,
											"end": 22913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22782,
											"end": 22913,
											"name": "tag",
											"source": 18,
											"value": "824"
										},
										{
											"begin": 22782,
											"end": 22913,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22774,
											"end": 22913,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22774,
											"end": 22913,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22501,
											"end": 22920,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22501,
											"end": 22920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22926,
											"end": 23106,
											"name": "tag",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 22926,
											"end": 23106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22974,
											"end": 23051,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22971,
											"end": 22972,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22964,
											"end": 23052,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23071,
											"end": 23075,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 23068,
											"end": 23069,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 23061,
											"end": 23076,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23095,
											"end": 23099,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 23092,
											"end": 23093,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23085,
											"end": 23100,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 23112,
											"end": 23345,
											"name": "tag",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 23112,
											"end": 23345,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23252,
											"end": 23286,
											"name": "PUSH",
											"source": 18,
											"value": "42617463685472616E73666572206661696C65643A20526563697069656E7420"
										},
										{
											"begin": 23248,
											"end": 23249,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23240,
											"end": 23246,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23236,
											"end": 23250,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23229,
											"end": 23287,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23321,
											"end": 23337,
											"name": "PUSH",
											"source": 18,
											"value": "697320626C61636B6C6973746564000000000000000000000000000000000000"
										},
										{
											"begin": 23316,
											"end": 23318,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23308,
											"end": 23314,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23304,
											"end": 23319,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23297,
											"end": 23338,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 23112,
											"end": 23345,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23112,
											"end": 23345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23351,
											"end": 23717,
											"name": "tag",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 23351,
											"end": 23717,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23493,
											"end": 23496,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "828"
										},
										{
											"begin": 23578,
											"end": 23580,
											"name": "PUSH",
											"source": 18,
											"value": "2E"
										},
										{
											"begin": 23573,
											"end": 23576,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 23514,
											"end": 23581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "tag",
											"source": 18,
											"value": "828"
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23507,
											"end": 23581,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23507,
											"end": 23581,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23590,
											"end": 23683,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "829"
										},
										{
											"begin": 23679,
											"end": 23682,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23590,
											"end": 23683,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 23590,
											"end": 23683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23590,
											"end": 23683,
											"name": "tag",
											"source": 18,
											"value": "829"
										},
										{
											"begin": 23590,
											"end": 23683,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23708,
											"end": 23710,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 23703,
											"end": 23706,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23699,
											"end": 23711,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23692,
											"end": 23711,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23692,
											"end": 23711,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23351,
											"end": 23717,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23351,
											"end": 23717,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23351,
											"end": 23717,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23351,
											"end": 23717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23723,
											"end": 24142,
											"name": "tag",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 23723,
											"end": 24142,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23889,
											"end": 23893,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23927,
											"end": 23929,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23916,
											"end": 23925,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23912,
											"end": 23930,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23904,
											"end": 23930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23904,
											"end": 23930,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23976,
											"end": 23985,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23970,
											"end": 23974,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23966,
											"end": 23986,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 23962,
											"end": 23963,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23951,
											"end": 23960,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23947,
											"end": 23964,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23940,
											"end": 23987,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 24004,
											"end": 24135,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "831"
										},
										{
											"begin": 24130,
											"end": 24134,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24004,
											"end": 24135,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 24004,
											"end": 24135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24004,
											"end": 24135,
											"name": "tag",
											"source": 18,
											"value": "831"
										},
										{
											"begin": 24004,
											"end": 24135,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23996,
											"end": 24135,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23996,
											"end": 24135,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23723,
											"end": 24142,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23723,
											"end": 24142,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23723,
											"end": 24142,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23723,
											"end": 24142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24148,
											"end": 24233,
											"name": "tag",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 24148,
											"end": 24233,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24193,
											"end": 24200,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24222,
											"end": 24227,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24211,
											"end": 24227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24211,
											"end": 24227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24148,
											"end": 24233,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24148,
											"end": 24233,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24148,
											"end": 24233,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24148,
											"end": 24233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24239,
											"end": 24340,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 24239,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24275,
											"end": 24282,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24315,
											"end": 24333,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24308,
											"end": 24313,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24304,
											"end": 24334,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 24293,
											"end": 24334,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24293,
											"end": 24334,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24239,
											"end": 24340,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24239,
											"end": 24340,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24239,
											"end": 24340,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24239,
											"end": 24340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24346,
											"end": 24406,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 24346,
											"end": 24406,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24374,
											"end": 24377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24395,
											"end": 24400,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24388,
											"end": 24400,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24388,
											"end": 24400,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24346,
											"end": 24406,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24346,
											"end": 24406,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24346,
											"end": 24406,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24346,
											"end": 24406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24412,
											"end": 24568,
											"name": "tag",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 24412,
											"end": 24568,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24469,
											"end": 24478,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24502,
											"end": 24562,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "836"
										},
										{
											"begin": 24519,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "837"
										},
										{
											"begin": 24528,
											"end": 24560,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "838"
										},
										{
											"begin": 24554,
											"end": 24559,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24528,
											"end": 24560,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 24528,
											"end": 24560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24528,
											"end": 24560,
											"name": "tag",
											"source": 18,
											"value": "838"
										},
										{
											"begin": 24528,
											"end": 24560,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24519,
											"end": 24561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 24519,
											"end": 24561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24519,
											"end": 24561,
											"name": "tag",
											"source": 18,
											"value": "837"
										},
										{
											"begin": 24519,
											"end": 24561,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24502,
											"end": 24562,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 24502,
											"end": 24562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24502,
											"end": 24562,
											"name": "tag",
											"source": 18,
											"value": "836"
										},
										{
											"begin": 24502,
											"end": 24562,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24489,
											"end": 24562,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24489,
											"end": 24562,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24412,
											"end": 24568,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24412,
											"end": 24568,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24412,
											"end": 24568,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24412,
											"end": 24568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24574,
											"end": 24719,
											"name": "tag",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 24574,
											"end": 24719,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24668,
											"end": 24712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "840"
										},
										{
											"begin": 24706,
											"end": 24711,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24668,
											"end": 24712,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 24668,
											"end": 24712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24668,
											"end": 24712,
											"name": "tag",
											"source": 18,
											"value": "840"
										},
										{
											"begin": 24668,
											"end": 24712,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24663,
											"end": 24666,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24656,
											"end": 24713,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 24574,
											"end": 24719,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24574,
											"end": 24719,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24574,
											"end": 24719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24725,
											"end": 24961,
											"name": "tag",
											"source": 18,
											"value": "322"
										},
										{
											"begin": 24725,
											"end": 24961,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24825,
											"end": 24829,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24863,
											"end": 24865,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 24852,
											"end": 24861,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24848,
											"end": 24866,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24840,
											"end": 24866,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24840,
											"end": 24866,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24876,
											"end": 24954,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "842"
										},
										{
											"begin": 24951,
											"end": 24952,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24940,
											"end": 24949,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24936,
											"end": 24953,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24927,
											"end": 24933,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24876,
											"end": 24954,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 24876,
											"end": 24954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24876,
											"end": 24954,
											"name": "tag",
											"source": 18,
											"value": "842"
										},
										{
											"begin": 24876,
											"end": 24954,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24725,
											"end": 24961,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24725,
											"end": 24961,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24725,
											"end": 24961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24725,
											"end": 24961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24725,
											"end": 24961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24967,
											"end": 25133,
											"name": "tag",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 24967,
											"end": 25133,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25107,
											"end": 25125,
											"name": "PUSH",
											"source": 18,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 25103,
											"end": 25104,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25095,
											"end": 25101,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25091,
											"end": 25105,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25084,
											"end": 25126,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 24967,
											"end": 25133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24967,
											"end": 25133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25139,
											"end": 25505,
											"name": "tag",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 25139,
											"end": 25505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25281,
											"end": 25284,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25302,
											"end": 25369,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "845"
										},
										{
											"begin": 25366,
											"end": 25368,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 25361,
											"end": 25364,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25302,
											"end": 25369,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 25302,
											"end": 25369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25302,
											"end": 25369,
											"name": "tag",
											"source": 18,
											"value": "845"
										},
										{
											"begin": 25302,
											"end": 25369,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25295,
											"end": 25369,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25295,
											"end": 25369,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25378,
											"end": 25471,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "846"
										},
										{
											"begin": 25467,
											"end": 25470,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25378,
											"end": 25471,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 25378,
											"end": 25471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25378,
											"end": 25471,
											"name": "tag",
											"source": 18,
											"value": "846"
										},
										{
											"begin": 25378,
											"end": 25471,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25496,
											"end": 25498,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25491,
											"end": 25494,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25487,
											"end": 25499,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25480,
											"end": 25499,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25480,
											"end": 25499,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25139,
											"end": 25505,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25139,
											"end": 25505,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25139,
											"end": 25505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25139,
											"end": 25505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25511,
											"end": 25930,
											"name": "tag",
											"source": 18,
											"value": "347"
										},
										{
											"begin": 25511,
											"end": 25930,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25677,
											"end": 25681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25715,
											"end": 25717,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25704,
											"end": 25713,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25700,
											"end": 25718,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25692,
											"end": 25718,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25692,
											"end": 25718,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25764,
											"end": 25773,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25758,
											"end": 25762,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25754,
											"end": 25774,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 25750,
											"end": 25751,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25739,
											"end": 25748,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25735,
											"end": 25752,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25728,
											"end": 25775,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 25792,
											"end": 25923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "848"
										},
										{
											"begin": 25918,
											"end": 25922,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25792,
											"end": 25923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 25792,
											"end": 25923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25792,
											"end": 25923,
											"name": "tag",
											"source": 18,
											"value": "848"
										},
										{
											"begin": 25792,
											"end": 25923,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25784,
											"end": 25923,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25784,
											"end": 25923,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25511,
											"end": 25930,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25511,
											"end": 25930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25511,
											"end": 25930,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25511,
											"end": 25930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25936,
											"end": 26058,
											"name": "tag",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 25936,
											"end": 26058,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26009,
											"end": 26033,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "850"
										},
										{
											"begin": 26027,
											"end": 26032,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26009,
											"end": 26033,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 26009,
											"end": 26033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26009,
											"end": 26033,
											"name": "tag",
											"source": 18,
											"value": "850"
										},
										{
											"begin": 26009,
											"end": 26033,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26002,
											"end": 26007,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25999,
											"end": 26034,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 25989,
											"end": 26052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "851"
										},
										{
											"begin": 25989,
											"end": 26052,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 26048,
											"end": 26049,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26045,
											"end": 26046,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 26038,
											"end": 26050,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 25989,
											"end": 26052,
											"name": "tag",
											"source": 18,
											"value": "851"
										},
										{
											"begin": 25989,
											"end": 26052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25936,
											"end": 26058,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25936,
											"end": 26058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26064,
											"end": 26207,
											"name": "tag",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 26064,
											"end": 26207,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26121,
											"end": 26126,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26152,
											"end": 26158,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26146,
											"end": 26159,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 26137,
											"end": 26159,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26137,
											"end": 26159,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26168,
											"end": 26201,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "853"
										},
										{
											"begin": 26195,
											"end": 26200,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26168,
											"end": 26201,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 26168,
											"end": 26201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26168,
											"end": 26201,
											"name": "tag",
											"source": 18,
											"value": "853"
										},
										{
											"begin": 26168,
											"end": 26201,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26064,
											"end": 26207,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26064,
											"end": 26207,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26064,
											"end": 26207,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26064,
											"end": 26207,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26064,
											"end": 26207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26213,
											"end": 26564,
											"name": "tag",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 26213,
											"end": 26564,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26283,
											"end": 26289,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26332,
											"end": 26334,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26320,
											"end": 26329,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26311,
											"end": 26318,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26307,
											"end": 26330,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 26303,
											"end": 26335,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 26300,
											"end": 26419,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 26300,
											"end": 26419,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "855"
										},
										{
											"begin": 26300,
											"end": 26419,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 26338,
											"end": 26417,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "856"
										},
										{
											"begin": 26338,
											"end": 26417,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 26338,
											"end": 26417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26338,
											"end": 26417,
											"name": "tag",
											"source": 18,
											"value": "856"
										},
										{
											"begin": 26338,
											"end": 26417,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26300,
											"end": 26419,
											"name": "tag",
											"source": 18,
											"value": "855"
										},
										{
											"begin": 26300,
											"end": 26419,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26458,
											"end": 26459,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26483,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "857"
										},
										{
											"begin": 26539,
											"end": 26546,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26530,
											"end": 26536,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26519,
											"end": 26528,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 26515,
											"end": 26537,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26483,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 26483,
											"end": 26547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26483,
											"end": 26547,
											"name": "tag",
											"source": 18,
											"value": "857"
										},
										{
											"begin": 26483,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26473,
											"end": 26547,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26473,
											"end": 26547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26429,
											"end": 26557,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26213,
											"end": 26564,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26213,
											"end": 26564,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26213,
											"end": 26564,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26213,
											"end": 26564,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26213,
											"end": 26564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26570,
											"end": 27012,
											"name": "tag",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 26570,
											"end": 27012,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26719,
											"end": 26723,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26757,
											"end": 26759,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 26746,
											"end": 26755,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26742,
											"end": 26760,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26734,
											"end": 26760,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26734,
											"end": 26760,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26770,
											"end": 26841,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "859"
										},
										{
											"begin": 26838,
											"end": 26839,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26827,
											"end": 26836,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26823,
											"end": 26840,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26814,
											"end": 26820,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 26770,
											"end": 26841,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 26770,
											"end": 26841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26770,
											"end": 26841,
											"name": "tag",
											"source": 18,
											"value": "859"
										},
										{
											"begin": 26770,
											"end": 26841,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26851,
											"end": 26923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "860"
										},
										{
											"begin": 26919,
											"end": 26921,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26908,
											"end": 26917,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26904,
											"end": 26922,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26895,
											"end": 26901,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 26851,
											"end": 26923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 26851,
											"end": 26923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26851,
											"end": 26923,
											"name": "tag",
											"source": 18,
											"value": "860"
										},
										{
											"begin": 26851,
											"end": 26923,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26933,
											"end": 27005,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "861"
										},
										{
											"begin": 27001,
											"end": 27003,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 26990,
											"end": 26999,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26986,
											"end": 27004,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26977,
											"end": 26983,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26933,
											"end": 27005,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 26933,
											"end": 27005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26933,
											"end": 27005,
											"name": "tag",
											"source": 18,
											"value": "861"
										},
										{
											"begin": 26933,
											"end": 27005,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26570,
											"end": 27012,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 26570,
											"end": 27012,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 26570,
											"end": 27012,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26570,
											"end": 27012,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26570,
											"end": 27012,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26570,
											"end": 27012,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26570,
											"end": 27012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27018,
											"end": 27188,
											"name": "tag",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 27018,
											"end": 27188,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27158,
											"end": 27180,
											"name": "PUSH",
											"source": 18,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 27154,
											"end": 27155,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27146,
											"end": 27152,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27142,
											"end": 27156,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27135,
											"end": 27181,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 27018,
											"end": 27188,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27018,
											"end": 27188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27194,
											"end": 27560,
											"name": "tag",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 27194,
											"end": 27560,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27336,
											"end": 27339,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27357,
											"end": 27424,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "864"
										},
										{
											"begin": 27421,
											"end": 27423,
											"name": "PUSH",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 27416,
											"end": 27419,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27357,
											"end": 27424,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 27357,
											"end": 27424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27357,
											"end": 27424,
											"name": "tag",
											"source": 18,
											"value": "864"
										},
										{
											"begin": 27357,
											"end": 27424,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27350,
											"end": 27424,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27350,
											"end": 27424,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27433,
											"end": 27526,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "865"
										},
										{
											"begin": 27522,
											"end": 27525,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27433,
											"end": 27526,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 27433,
											"end": 27526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27433,
											"end": 27526,
											"name": "tag",
											"source": 18,
											"value": "865"
										},
										{
											"begin": 27433,
											"end": 27526,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27551,
											"end": 27553,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 27546,
											"end": 27549,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27542,
											"end": 27554,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27535,
											"end": 27554,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27535,
											"end": 27554,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27194,
											"end": 27560,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27194,
											"end": 27560,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27194,
											"end": 27560,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27194,
											"end": 27560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27566,
											"end": 27985,
											"name": "tag",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 27566,
											"end": 27985,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27732,
											"end": 27736,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27770,
											"end": 27772,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 27759,
											"end": 27768,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27755,
											"end": 27773,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27747,
											"end": 27773,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27819,
											"end": 27828,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27813,
											"end": 27817,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27809,
											"end": 27829,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 27805,
											"end": 27806,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27794,
											"end": 27803,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27790,
											"end": 27807,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27783,
											"end": 27830,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 27847,
											"end": 27978,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "867"
										},
										{
											"begin": 27973,
											"end": 27977,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27847,
											"end": 27978,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 27847,
											"end": 27978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27847,
											"end": 27978,
											"name": "tag",
											"source": 18,
											"value": "867"
										},
										{
											"begin": 27847,
											"end": 27978,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27839,
											"end": 27978,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27839,
											"end": 27978,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27566,
											"end": 27985,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27566,
											"end": 27985,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27566,
											"end": 27985,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27566,
											"end": 27985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27991,
											"end": 28171,
											"name": "tag",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 27991,
											"end": 28171,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28039,
											"end": 28116,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28036,
											"end": 28037,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28029,
											"end": 28117,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 28136,
											"end": 28140,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 28133,
											"end": 28134,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 28126,
											"end": 28141,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 28160,
											"end": 28164,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 28157,
											"end": 28158,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28150,
											"end": 28165,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 28177,
											"end": 28368,
											"name": "tag",
											"source": 18,
											"value": "462"
										},
										{
											"begin": 28177,
											"end": 28368,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28217,
											"end": 28220,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28236,
											"end": 28256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "870"
										},
										{
											"begin": 28254,
											"end": 28255,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28236,
											"end": 28256,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 28236,
											"end": 28256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28236,
											"end": 28256,
											"name": "tag",
											"source": 18,
											"value": "870"
										},
										{
											"begin": 28236,
											"end": 28256,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28231,
											"end": 28256,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28231,
											"end": 28256,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28270,
											"end": 28290,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "871"
										},
										{
											"begin": 28288,
											"end": 28289,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28270,
											"end": 28290,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 28270,
											"end": 28290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28270,
											"end": 28290,
											"name": "tag",
											"source": 18,
											"value": "871"
										},
										{
											"begin": 28270,
											"end": 28290,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28265,
											"end": 28290,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28265,
											"end": 28290,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28313,
											"end": 28314,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28310,
											"end": 28311,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28306,
											"end": 28315,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28299,
											"end": 28315,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28299,
											"end": 28315,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28334,
											"end": 28337,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 28331,
											"end": 28332,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28328,
											"end": 28338,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 28325,
											"end": 28361,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 28325,
											"end": 28361,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "872"
										},
										{
											"begin": 28325,
											"end": 28361,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 28341,
											"end": 28359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "873"
										},
										{
											"begin": 28341,
											"end": 28359,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 28341,
											"end": 28359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28341,
											"end": 28359,
											"name": "tag",
											"source": 18,
											"value": "873"
										},
										{
											"begin": 28341,
											"end": 28359,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28325,
											"end": 28361,
											"name": "tag",
											"source": 18,
											"value": "872"
										},
										{
											"begin": 28325,
											"end": 28361,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28177,
											"end": 28368,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28177,
											"end": 28368,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28177,
											"end": 28368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28177,
											"end": 28368,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28177,
											"end": 28368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28374,
											"end": 28515,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 28374,
											"end": 28515,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28423,
											"end": 28427,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28446,
											"end": 28449,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28438,
											"end": 28449,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28438,
											"end": 28449,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28469,
											"end": 28472,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28466,
											"end": 28467,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28459,
											"end": 28473,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 28503,
											"end": 28507,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 28500,
											"end": 28501,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28490,
											"end": 28508,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 28482,
											"end": 28508,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28482,
											"end": 28508,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28374,
											"end": 28515,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28374,
											"end": 28515,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28374,
											"end": 28515,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28374,
											"end": 28515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28521,
											"end": 28614,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 28521,
											"end": 28614,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28558,
											"end": 28564,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28605,
											"end": 28607,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 28600,
											"end": 28602,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 28593,
											"end": 28598,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28589,
											"end": 28603,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28585,
											"end": 28608,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 28575,
											"end": 28608,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28575,
											"end": 28608,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28521,
											"end": 28614,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28521,
											"end": 28614,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28521,
											"end": 28614,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28521,
											"end": 28614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28620,
											"end": 28727,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 28620,
											"end": 28727,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28664,
											"end": 28672,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28714,
											"end": 28719,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28708,
											"end": 28712,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28704,
											"end": 28720,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 28683,
											"end": 28720,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28683,
											"end": 28720,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28620,
											"end": 28727,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28620,
											"end": 28727,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28620,
											"end": 28727,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28620,
											"end": 28727,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28620,
											"end": 28727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28733,
											"end": 29126,
											"name": "tag",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 28733,
											"end": 29126,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28802,
											"end": 28808,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28852,
											"end": 28853,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 28840,
											"end": 28850,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28836,
											"end": 28854,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 28875,
											"end": 28972,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "878"
										},
										{
											"begin": 28905,
											"end": 28971,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28894,
											"end": 28903,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28875,
											"end": 28972,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 28875,
											"end": 28972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28875,
											"end": 28972,
											"name": "tag",
											"source": 18,
											"value": "878"
										},
										{
											"begin": 28875,
											"end": 28972,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28993,
											"end": 29032,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "879"
										},
										{
											"begin": 29023,
											"end": 29031,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 29012,
											"end": 29021,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28993,
											"end": 29032,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 28993,
											"end": 29032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28993,
											"end": 29032,
											"name": "tag",
											"source": 18,
											"value": "879"
										},
										{
											"begin": 28993,
											"end": 29032,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28981,
											"end": 29032,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 28981,
											"end": 29032,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29065,
											"end": 29069,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 29061,
											"end": 29070,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 29054,
											"end": 29059,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 29050,
											"end": 29071,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 29041,
											"end": 29071,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 29041,
											"end": 29071,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29114,
											"end": 29118,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 29104,
											"end": 29112,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 29100,
											"end": 29119,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 29093,
											"end": 29098,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 29090,
											"end": 29120,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 29080,
											"end": 29120,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 29080,
											"end": 29120,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28809,
											"end": 29126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28809,
											"end": 29126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28733,
											"end": 29126,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 28733,
											"end": 29126,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28733,
											"end": 29126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28733,
											"end": 29126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28733,
											"end": 29126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28733,
											"end": 29126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29132,
											"end": 29274,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 29132,
											"end": 29274,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29182,
											"end": 29191,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29215,
											"end": 29268,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "881"
										},
										{
											"begin": 29233,
											"end": 29267,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "882"
										},
										{
											"begin": 29242,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "883"
										},
										{
											"begin": 29260,
											"end": 29265,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 29242,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 29242,
											"end": 29266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29242,
											"end": 29266,
											"name": "tag",
											"source": 18,
											"value": "883"
										},
										{
											"begin": 29242,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29233,
											"end": 29267,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 29233,
											"end": 29267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29233,
											"end": 29267,
											"name": "tag",
											"source": 18,
											"value": "882"
										},
										{
											"begin": 29233,
											"end": 29267,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29215,
											"end": 29268,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 29215,
											"end": 29268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29215,
											"end": 29268,
											"name": "tag",
											"source": 18,
											"value": "881"
										},
										{
											"begin": 29215,
											"end": 29268,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29202,
											"end": 29268,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29202,
											"end": 29268,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29132,
											"end": 29274,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29132,
											"end": 29274,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29132,
											"end": 29274,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29132,
											"end": 29274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29280,
											"end": 29355,
											"name": "tag",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 29280,
											"end": 29355,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29323,
											"end": 29326,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29344,
											"end": 29349,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29337,
											"end": 29349,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29337,
											"end": 29349,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29280,
											"end": 29355,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 29280,
											"end": 29355,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29280,
											"end": 29355,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29280,
											"end": 29355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29361,
											"end": 29630,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 29361,
											"end": 29630,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29471,
											"end": 29510,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "886"
										},
										{
											"begin": 29502,
											"end": 29509,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 29471,
											"end": 29510,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 29471,
											"end": 29510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29471,
											"end": 29510,
											"name": "tag",
											"source": 18,
											"value": "886"
										},
										{
											"begin": 29471,
											"end": 29510,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29532,
											"end": 29623,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "887"
										},
										{
											"begin": 29581,
											"end": 29622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "888"
										},
										{
											"begin": 29605,
											"end": 29621,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29581,
											"end": 29622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 29581,
											"end": 29622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29581,
											"end": 29622,
											"name": "tag",
											"source": 18,
											"value": "888"
										},
										{
											"begin": 29581,
											"end": 29622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29573,
											"end": 29579,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 29566,
											"end": 29570,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 29560,
											"end": 29571,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 29532,
											"end": 29623,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 29532,
											"end": 29623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29532,
											"end": 29623,
											"name": "tag",
											"source": 18,
											"value": "887"
										},
										{
											"begin": 29532,
											"end": 29623,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29526,
											"end": 29530,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 29519,
											"end": 29624,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 29437,
											"end": 29630,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29361,
											"end": 29630,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29361,
											"end": 29630,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29361,
											"end": 29630,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29361,
											"end": 29630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29636,
											"end": 29709,
											"name": "tag",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 29636,
											"end": 29709,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29681,
											"end": 29684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 29636,
											"end": 29709,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29636,
											"end": 29709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29715,
											"end": 29904,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 29715,
											"end": 29904,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29792,
											"end": 29824,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "891"
										},
										{
											"begin": 29792,
											"end": 29824,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 29792,
											"end": 29824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29792,
											"end": 29824,
											"name": "tag",
											"source": 18,
											"value": "891"
										},
										{
											"begin": 29792,
											"end": 29824,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29833,
											"end": 29898,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "892"
										},
										{
											"begin": 29891,
											"end": 29897,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29883,
											"end": 29889,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 29877,
											"end": 29881,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 29833,
											"end": 29898,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 29833,
											"end": 29898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29833,
											"end": 29898,
											"name": "tag",
											"source": 18,
											"value": "892"
										},
										{
											"begin": 29833,
											"end": 29898,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29768,
											"end": 29904,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29715,
											"end": 29904,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29715,
											"end": 29904,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29715,
											"end": 29904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29910,
											"end": 30096,
											"name": "tag",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 29910,
											"end": 30096,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29970,
											"end": 30090,
											"name": "tag",
											"source": 18,
											"value": "894"
										},
										{
											"begin": 29970,
											"end": 30090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29987,
											"end": 29990,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29980,
											"end": 29985,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 29977,
											"end": 29991,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 29970,
											"end": 30090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 29970,
											"end": 30090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "896"
										},
										{
											"begin": 29970,
											"end": 30090,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 30041,
											"end": 30080,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "897"
										},
										{
											"begin": 30078,
											"end": 30079,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30071,
											"end": 30076,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30041,
											"end": 30080,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 30041,
											"end": 30080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30041,
											"end": 30080,
											"name": "tag",
											"source": 18,
											"value": "897"
										},
										{
											"begin": 30041,
											"end": 30080,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30014,
											"end": 30015,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 30007,
											"end": 30012,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30003,
											"end": 30016,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 29994,
											"end": 30016,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 29994,
											"end": 30016,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29970,
											"end": 30090,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "894"
										},
										{
											"begin": 29970,
											"end": 30090,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 29970,
											"end": 30090,
											"name": "tag",
											"source": 18,
											"value": "896"
										},
										{
											"begin": 29970,
											"end": 30090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 29910,
											"end": 30096,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29910,
											"end": 30096,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 29910,
											"end": 30096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30102,
											"end": 30645,
											"name": "tag",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 30102,
											"end": 30645,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30203,
											"end": 30205,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 30198,
											"end": 30201,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30195,
											"end": 30206,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 30192,
											"end": 30638,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 30192,
											"end": 30638,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "899"
										},
										{
											"begin": 30192,
											"end": 30638,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 30237,
											"end": 30275,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "900"
										},
										{
											"begin": 30269,
											"end": 30274,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30237,
											"end": 30275,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 30237,
											"end": 30275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30237,
											"end": 30275,
											"name": "tag",
											"source": 18,
											"value": "900"
										},
										{
											"begin": 30237,
											"end": 30275,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30321,
											"end": 30350,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "901"
										},
										{
											"begin": 30339,
											"end": 30349,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 30321,
											"end": 30350,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 30321,
											"end": 30350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30321,
											"end": 30350,
											"name": "tag",
											"source": 18,
											"value": "901"
										},
										{
											"begin": 30321,
											"end": 30350,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30311,
											"end": 30319,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30307,
											"end": 30351,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30504,
											"end": 30506,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 30492,
											"end": 30502,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 30489,
											"end": 30507,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 30486,
											"end": 30535,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 30486,
											"end": 30535,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "902"
										},
										{
											"begin": 30486,
											"end": 30535,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 30525,
											"end": 30533,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 30510,
											"end": 30533,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30510,
											"end": 30533,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30486,
											"end": 30535,
											"name": "tag",
											"source": 18,
											"value": "902"
										},
										{
											"begin": 30486,
											"end": 30535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30548,
											"end": 30628,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "903"
										},
										{
											"begin": 30604,
											"end": 30626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "904"
										},
										{
											"begin": 30622,
											"end": 30625,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 30604,
											"end": 30626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 30604,
											"end": 30626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30604,
											"end": 30626,
											"name": "tag",
											"source": 18,
											"value": "904"
										},
										{
											"begin": 30604,
											"end": 30626,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30594,
											"end": 30602,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30590,
											"end": 30627,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 30577,
											"end": 30588,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30548,
											"end": 30628,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 30548,
											"end": 30628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30548,
											"end": 30628,
											"name": "tag",
											"source": 18,
											"value": "903"
										},
										{
											"begin": 30548,
											"end": 30628,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30207,
											"end": 30638,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30207,
											"end": 30638,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30192,
											"end": 30638,
											"name": "tag",
											"source": 18,
											"value": "899"
										},
										{
											"begin": 30192,
											"end": 30638,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30102,
											"end": 30645,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30102,
											"end": 30645,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30102,
											"end": 30645,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30102,
											"end": 30645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30651,
											"end": 30768,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 30651,
											"end": 30768,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30705,
											"end": 30713,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30755,
											"end": 30760,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30749,
											"end": 30753,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 30745,
											"end": 30761,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 30724,
											"end": 30761,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 30724,
											"end": 30761,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30651,
											"end": 30768,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 30651,
											"end": 30768,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30651,
											"end": 30768,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30651,
											"end": 30768,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30651,
											"end": 30768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30774,
											"end": 30943,
											"name": "tag",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 30774,
											"end": 30943,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30818,
											"end": 30824,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30851,
											"end": 30902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "907"
										},
										{
											"begin": 30899,
											"end": 30900,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 30895,
											"end": 30901,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 30887,
											"end": 30892,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 30884,
											"end": 30885,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 30880,
											"end": 30893,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 30851,
											"end": 30902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 30851,
											"end": 30902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30851,
											"end": 30902,
											"name": "tag",
											"source": 18,
											"value": "907"
										},
										{
											"begin": 30851,
											"end": 30902,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 30847,
											"end": 30903,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 30932,
											"end": 30936,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 30926,
											"end": 30930,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 30922,
											"end": 30937,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 30912,
											"end": 30937,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30912,
											"end": 30937,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30825,
											"end": 30943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30774,
											"end": 30943,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 30774,
											"end": 30943,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30774,
											"end": 30943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30774,
											"end": 30943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30774,
											"end": 30943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 30948,
											"end": 31243,
											"name": "tag",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 30948,
											"end": 31243,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31024,
											"end": 31028,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31170,
											"end": 31199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "909"
										},
										{
											"begin": 31195,
											"end": 31198,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 31189,
											"end": 31193,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 31170,
											"end": 31199,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 31170,
											"end": 31199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31170,
											"end": 31199,
											"name": "tag",
											"source": 18,
											"value": "909"
										},
										{
											"begin": 31170,
											"end": 31199,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31162,
											"end": 31199,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 31162,
											"end": 31199,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31232,
											"end": 31235,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31229,
											"end": 31230,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 31225,
											"end": 31236,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 31219,
											"end": 31223,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31216,
											"end": 31237,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 31208,
											"end": 31237,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31208,
											"end": 31237,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30948,
											"end": 31243,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 30948,
											"end": 31243,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 30948,
											"end": 31243,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30948,
											"end": 31243,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 30948,
											"end": 31243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31248,
											"end": 32643,
											"name": "tag",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 31248,
											"end": 32643,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31365,
											"end": 31402,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "911"
										},
										{
											"begin": 31398,
											"end": 31401,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31365,
											"end": 31402,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 31365,
											"end": 31402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31365,
											"end": 31402,
											"name": "tag",
											"source": 18,
											"value": "911"
										},
										{
											"begin": 31365,
											"end": 31402,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31467,
											"end": 31485,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31459,
											"end": 31465,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31456,
											"end": 31486,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 31453,
											"end": 31509,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 31453,
											"end": 31509,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "912"
										},
										{
											"begin": 31453,
											"end": 31509,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 31489,
											"end": 31507,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "913"
										},
										{
											"begin": 31489,
											"end": 31507,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 31489,
											"end": 31507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31489,
											"end": 31507,
											"name": "tag",
											"source": 18,
											"value": "913"
										},
										{
											"begin": 31489,
											"end": 31507,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31453,
											"end": 31509,
											"name": "tag",
											"source": 18,
											"value": "912"
										},
										{
											"begin": 31453,
											"end": 31509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31533,
											"end": 31571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "914"
										},
										{
											"begin": 31565,
											"end": 31569,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31559,
											"end": 31570,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 31533,
											"end": 31571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 31533,
											"end": 31571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31533,
											"end": 31571,
											"name": "tag",
											"source": 18,
											"value": "914"
										},
										{
											"begin": 31533,
											"end": 31571,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31618,
											"end": 31685,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "915"
										},
										{
											"begin": 31678,
											"end": 31684,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31670,
											"end": 31676,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31664,
											"end": 31668,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 31618,
											"end": 31685,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 31618,
											"end": 31685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31618,
											"end": 31685,
											"name": "tag",
											"source": 18,
											"value": "915"
										},
										{
											"begin": 31618,
											"end": 31685,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31712,
											"end": 31713,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31736,
											"end": 31740,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 31723,
											"end": 31740,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31723,
											"end": 31740,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31768,
											"end": 31770,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 31760,
											"end": 31766,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 31757,
											"end": 31771,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 31785,
											"end": 31786,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 31780,
											"end": 32398,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31780,
											"end": 32398,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 31780,
											"end": 32398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "917"
										},
										{
											"begin": 31780,
											"end": 32398,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 32442,
											"end": 32443,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 32459,
											"end": 32465,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 32456,
											"end": 32533,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 32456,
											"end": 32533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "918"
										},
										{
											"begin": 32456,
											"end": 32533,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 32508,
											"end": 32517,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32503,
											"end": 32506,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 32499,
											"end": 32518,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32493,
											"end": 32519,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 32484,
											"end": 32519,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32484,
											"end": 32519,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32456,
											"end": 32533,
											"name": "tag",
											"source": 18,
											"value": "918"
										},
										{
											"begin": 32456,
											"end": 32533,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32559,
											"end": 32626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "919"
										},
										{
											"begin": 32619,
											"end": 32625,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 32612,
											"end": 32617,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32559,
											"end": 32626,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 32559,
											"end": 32626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32559,
											"end": 32626,
											"name": "tag",
											"source": 18,
											"value": "919"
										},
										{
											"begin": 32559,
											"end": 32626,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32553,
											"end": 32557,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 32546,
											"end": 32627,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 32415,
											"end": 32637,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31750,
											"end": 32637,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "916"
										},
										{
											"begin": 31750,
											"end": 32637,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31780,
											"end": 32398,
											"name": "tag",
											"source": 18,
											"value": "917"
										},
										{
											"begin": 31780,
											"end": 32398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31832,
											"end": 31836,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 31828,
											"end": 31837,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 31820,
											"end": 31826,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 31816,
											"end": 31838,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 31866,
											"end": 31903,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "920"
										},
										{
											"begin": 31898,
											"end": 31902,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 31866,
											"end": 31903,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 31866,
											"end": 31903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31866,
											"end": 31903,
											"name": "tag",
											"source": 18,
											"value": "920"
										},
										{
											"begin": 31866,
											"end": 31903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31925,
											"end": 31926,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 31939,
											"end": 32147,
											"name": "tag",
											"source": 18,
											"value": "921"
										},
										{
											"begin": 31939,
											"end": 32147,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31953,
											"end": 31960,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 31950,
											"end": 31951,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31947,
											"end": 31961,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 31939,
											"end": 32147,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 31939,
											"end": 32147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "923"
										},
										{
											"begin": 31939,
											"end": 32147,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 32032,
											"end": 32041,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 32027,
											"end": 32030,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 32023,
											"end": 32042,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32017,
											"end": 32043,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 32009,
											"end": 32015,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32002,
											"end": 32044,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 32083,
											"end": 32084,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 32075,
											"end": 32081,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32071,
											"end": 32085,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32061,
											"end": 32085,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 32061,
											"end": 32085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32130,
											"end": 32132,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 32119,
											"end": 32128,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 32115,
											"end": 32133,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32102,
											"end": 32133,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 32102,
											"end": 32133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31976,
											"end": 31980,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 31973,
											"end": 31974,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 31969,
											"end": 31981,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 31964,
											"end": 31981,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 31964,
											"end": 31981,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31939,
											"end": 32147,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "921"
										},
										{
											"begin": 31939,
											"end": 32147,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 31939,
											"end": 32147,
											"name": "tag",
											"source": 18,
											"value": "923"
										},
										{
											"begin": 31939,
											"end": 32147,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32175,
											"end": 32181,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 32166,
											"end": 32173,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32163,
											"end": 32182,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 32160,
											"end": 32339,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 32160,
											"end": 32339,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "924"
										},
										{
											"begin": 32160,
											"end": 32339,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 32233,
											"end": 32242,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 32228,
											"end": 32231,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 32224,
											"end": 32243,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32218,
											"end": 32244,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 32276,
											"end": 32324,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "925"
										},
										{
											"begin": 32318,
											"end": 32322,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 32310,
											"end": 32316,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 32306,
											"end": 32323,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 32295,
											"end": 32304,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 32276,
											"end": 32324,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 32276,
											"end": 32324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32276,
											"end": 32324,
											"name": "tag",
											"source": 18,
											"value": "925"
										},
										{
											"begin": 32276,
											"end": 32324,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32268,
											"end": 32274,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 32261,
											"end": 32325,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 32183,
											"end": 32339,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32160,
											"end": 32339,
											"name": "tag",
											"source": 18,
											"value": "924"
										},
										{
											"begin": 32160,
											"end": 32339,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32385,
											"end": 32386,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 32381,
											"end": 32382,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 32373,
											"end": 32379,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 32369,
											"end": 32383,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 32365,
											"end": 32387,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 32359,
											"end": 32363,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 32352,
											"end": 32388,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 31787,
											"end": 32398,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31787,
											"end": 32398,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31787,
											"end": 32398,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31750,
											"end": 32637,
											"name": "tag",
											"source": 18,
											"value": "916"
										},
										{
											"begin": 31750,
											"end": 32637,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 31750,
											"end": 32637,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31340,
											"end": 32643,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31340,
											"end": 32643,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31340,
											"end": 32643,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31248,
											"end": 32643,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31248,
											"end": 32643,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 31248,
											"end": 32643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32649,
											"end": 32747,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 32649,
											"end": 32747,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32700,
											"end": 32706,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 32734,
											"end": 32739,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 32728,
											"end": 32740,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 32718,
											"end": 32740,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32718,
											"end": 32740,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32649,
											"end": 32747,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 32649,
											"end": 32747,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32649,
											"end": 32747,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32649,
											"end": 32747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32753,
											"end": 32900,
											"name": "tag",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 32753,
											"end": 32900,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 32854,
											"end": 32865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 32891,
											"end": 32894,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 32876,
											"end": 32894,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 32876,
											"end": 32894,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32753,
											"end": 32900,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 32753,
											"end": 32900,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 32753,
											"end": 32900,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32753,
											"end": 32900,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32753,
											"end": 32900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 32906,
											"end": 33292,
											"name": "tag",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 32906,
											"end": 33292,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33010,
											"end": 33013,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "929"
										},
										{
											"begin": 33070,
											"end": 33075,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 33038,
											"end": 33076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "tag",
											"source": 18,
											"value": "929"
										},
										{
											"begin": 33038,
											"end": 33076,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33092,
											"end": 33180,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "930"
										},
										{
											"begin": 33173,
											"end": 33179,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33168,
											"end": 33171,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 33092,
											"end": 33180,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 33092,
											"end": 33180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33092,
											"end": 33180,
											"name": "tag",
											"source": 18,
											"value": "930"
										},
										{
											"begin": 33092,
											"end": 33180,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33085,
											"end": 33180,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 33085,
											"end": 33180,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33189,
											"end": 33254,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "931"
										},
										{
											"begin": 33247,
											"end": 33253,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33242,
											"end": 33245,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 33235,
											"end": 33239,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 33228,
											"end": 33233,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 33224,
											"end": 33240,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 33189,
											"end": 33254,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 33189,
											"end": 33254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33189,
											"end": 33254,
											"name": "tag",
											"source": 18,
											"value": "931"
										},
										{
											"begin": 33189,
											"end": 33254,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33279,
											"end": 33285,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 33274,
											"end": 33277,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 33270,
											"end": 33286,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 33263,
											"end": 33286,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 33263,
											"end": 33286,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33014,
											"end": 33292,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32906,
											"end": 33292,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 32906,
											"end": 33292,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 32906,
											"end": 33292,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32906,
											"end": 33292,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 32906,
											"end": 33292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33298,
											"end": 33569,
											"name": "tag",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 33298,
											"end": 33569,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33428,
											"end": 33431,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 33450,
											"end": 33543,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "933"
										},
										{
											"begin": 33539,
											"end": 33542,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 33530,
											"end": 33536,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 33450,
											"end": 33543,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 33450,
											"end": 33543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 33450,
											"end": 33543,
											"name": "tag",
											"source": 18,
											"value": "933"
										},
										{
											"begin": 33450,
											"end": 33543,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 33443,
											"end": 33543,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 33443,
											"end": 33543,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33560,
											"end": 33563,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 33553,
											"end": 33563,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 33553,
											"end": 33563,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33298,
											"end": 33569,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 33298,
											"end": 33569,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 33298,
											"end": 33569,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33298,
											"end": 33569,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 33298,
											"end": 33569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"RVA/UpgradableToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchTransfer(address[],uint256[])": "88d695b2",
							"blacklisted(address)": "dbac26e9",
							"decimals()": "313ce567",
							"icoContract()": "c66e4095",
							"initialize(string,string,uint256)": "b119490e",
							"isBlacklisted(address)": "fe575a87",
							"lockedUntil(address)": "9bc289f1",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"setBlacklist(address,bool)": "153b0d1e",
							"setICOContract(address)": "2e0d2a00",
							"setLockup(address,uint256)": "3e579307",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBlacklisted\",\"type\":\"bool\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyTokenRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"icoContract\",\"type\":\"address\"}],\"name\":\"ICOContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedUntilTimestamp\",\"type\":\"uint256\"}],\"name\":\"LockupSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedUntil\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_icoContract\",\"type\":\"address\"}],\"name\":\"setICOContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"setLockup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RVA/UpgradableToken.sol\":\"ERC20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xbb96dc9c468170c3224126e953de917e06332ec5909a3d85e6e5bb0df10c5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d14e6486e127e7e31c2ffccfc212c7ebaaecf8fb05677575128b449ee113def2\",\"dweb:/ipfs/QmabvyfStwBcum8mGfkmxcTV45rjyHmzHGCxfxyhmu48Yx\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"RVA/UpgradableToken.sol\":{\"keccak256\":\"0x654597f535006cebcb04a8a782d81e2ac3b93d3554cfba3ea9a5fea1cabec032\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7157cbd0dfb2dfadc023006179c3ee430a4e7ee91a06e78a4fb0a86b6beb94ff\",\"dweb:/ipfs/QmTnyQc1bMkCi6khtF3Bb2YPojtBfbnPJn9SGXwR5HtteC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 652,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 757,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2749,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "icoContract",
								"offset": 0,
								"slot": "50",
								"type": "t_address"
							},
							{
								"astId": 2751,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "51",
								"type": "t_uint256"
							},
							{
								"astId": 2758,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "lockedUntil",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2762,
								"contract": "RVA/UpgradableToken.sol:ERC20Token",
								"label": "blacklisted",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1752,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1751,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1751,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							2213
						],
						"IERC1822Proxiable": [
							1782
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1783,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1782,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 2214,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2213,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1782,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								1782,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 630,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 630,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1781
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1934,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 630,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 630,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4648:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4692:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "4753:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1965,
																"src": "4753:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4789:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4658:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4848:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4869:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4862:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:2"
									},
									"scope": 630,
									"src": "4603:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5084:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5115:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5094:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5123:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5199:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5192:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:2"
									},
									"scope": 630,
									"src": "5032:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5655:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:2"
									},
									"scope": 630,
									"src": "5628:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6142:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6232:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6250:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "6258:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1934,
																			"src": "6258:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6246:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6292:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6346:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6317:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6409:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6428:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "6379:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2028,
																			"src": "6379:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6218:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:2"
														},
														"src": "6209:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6451:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6560:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "6518:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$2213_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1939,
																			"src": "6518:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6445:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6174:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1782,
																"src": "6156:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1782_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1782",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1781,
														"src": "6156:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6152:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6088:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6115:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:2"
									},
									"scope": 630,
									"src": "6057:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5611:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								1939,
								1952,
								2337,
								2599
							],
							"usedEvents": [
								219,
								1759
							]
						}
					],
					"src": "115:6483:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							758
						]
					},
					"id": 759,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 759,
							"sourceUnit": 1752,
							"src": "130:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 759,
							"sourceUnit": 449,
							"src": "172:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 634,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "180:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 637,
										"name": "Initializable",
										"nameLocations": [
											"718:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "718:13:3"
									},
									"id": 638,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:3"
								},
								{
									"baseName": {
										"id": 639,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "733:18:3"
									},
									"id": 640,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 636,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 758,
							"linearizedBaseContracts": [
								758,
								1751,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 645,
									"name": "Paused",
									"nameLocation": "842:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "849:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:3"
									},
									"src": "836:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 650,
									"name": "Unpaused",
									"nameLocation": "953:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"src": "947:32:3"
								},
								{
									"constant": false,
									"id": 652,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 758,
									"src": "985:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 651,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "1137:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 658,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1147:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:3"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 656,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 655,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1120:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:3"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:3"
									},
									"scope": 758,
									"src": "1084:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "1250:32:3",
										"statements": [
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "1260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1233:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:3"
									},
									"scope": 758,
									"src": "1187:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1493:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 675,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "1503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:3"
											},
											{
												"id": 678,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:3"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 680,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:3"
									},
									"src": "1468:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "1740:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 683,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "1750:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:3"
											},
											{
												"id": 686,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:3"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 688,
									"name": "whenPaused",
									"nameLocation": "1727:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:3"
									},
									"src": "1718:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "1932:31:3",
										"statements": [
											{
												"expression": {
													"id": 694,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 652,
													"src": "1949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 693,
												"id": 695,
												"nodeType": "Return",
												"src": "1942:14:3"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 691,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:3"
									},
									"scope": 758,
									"src": "1879:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "2082:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 702,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "2101:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:3"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:3"
									},
									"scope": 758,
									"src": "2031:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "2257:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 714,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "2275:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:3"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:3"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:3"
									},
									"scope": 758,
									"src": "2209:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "2499:66:3",
										"statements": [
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 731,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "2545:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 730,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "2538:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "EmitStatement",
												"src": "2533:25:3"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 724,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 723,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2485:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:3"
									},
									"scope": 758,
									"src": "2450:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "2745:69:3",
										"statements": [
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 742,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "2755:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 747,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "2794:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 746,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "2785:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "2780:27:3"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 740,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 739,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 688,
												"src": "2734:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:3"
									},
									"scope": 758,
									"src": "2697:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 757,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 758,
									"src": "3079:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 754,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 756,
										"length": {
											"hexValue": "3439",
											"id": 755,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 759,
							"src": "677:2430:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219,
								645,
								650
							]
						}
					],
					"src": "105:3003:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"ERC20Upgradeable": [
							1375
						],
						"IERC20": [
							2301
						],
						"IERC20Errors": [
							1824
						],
						"IERC20Metadata": [
							2327
						],
						"Initializable": [
							448
						]
					},
					"id": 1376,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 2302,
							"src": "131:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 761,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2301,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 2328,
							"src": "202:97:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 763,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2327,
										"src": "210:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1752,
							"src": "300:70:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 765,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1751,
										"src": "308:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 1920,
							"src": "371:83:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 767,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1824,
										"src": "379:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1376,
							"sourceUnit": 449,
							"src": "455:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 769,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 772,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1319:13:4"
									},
									"id": 773,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:4"
								},
								{
									"baseName": {
										"id": 774,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "1334:18:4"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:4"
								},
								{
									"baseName": {
										"id": 776,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2301,
										"src": "1354:6:4"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:4"
								},
								{
									"baseName": {
										"id": 778,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2327,
										"src": "1362:14:4"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:4"
								},
								{
									"baseName": {
										"id": 780,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1824,
										"src": "1378:12:4"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:4"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 771,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1375,
							"linearizedBaseContracts": [
								1375,
								1824,
								2327,
								2301,
								1751,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 799,
									"members": [
										{
											"constant": false,
											"id": 786,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1495:45:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 785,
												"keyName": "account",
												"keyNameLocation": "1511:7:4",
												"keyType": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1551:75:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 791,
												"keyName": "account",
												"keyNameLocation": "1567:7:4",
												"keyType": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 790,
													"keyName": "spender",
													"keyNameLocation": "1594:7:4",
													"keyType": {
														"id": 788,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 789,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1637:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 793,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1668:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 795,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 799,
											"src": "1690:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 797,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:4",
									"nodeType": "StructDefinition",
									"scope": 1375,
									"src": "1465:246:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 802,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1375,
									"src": "1826:114:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 800,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 801,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "2021:79:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:4",
													"nodeType": "YulBlock",
													"src": "2040:54:4",
													"statements": [
														{
															"nativeSrc": "2054:30:4",
															"nodeType": "YulAssignment",
															"src": "2054:30:4",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:4",
																"nodeType": "YulIdentifier",
																"src": "2064:20:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 802,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:4",
														"valueSize": 1
													}
												],
												"id": 808,
												"nodeType": "InlineAssembly",
												"src": "2031:63:4"
											}
										]
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1997:22:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 799,
														"src": "1997:12:4"
													},
													"referencedDeclaration": 799,
													"src": "1997:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:4"
									},
									"scope": 1375,
									"src": "1947:153:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2374:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2407:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 822,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "2414:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 820,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2384:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "2384:38:4"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "2106:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 818,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 817,
												"name": "onlyInitializing",
												"nameLocations": [
													"2357:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2357:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2357:16:4"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2291:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2318:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2304:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2339:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2325:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 814,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:44:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:4"
									},
									"scope": 1375,
									"src": "2282:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "2537:114:4",
										"statements": [
											{
												"assignments": [
													837
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2568:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "2547:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 836,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 835,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2547:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2547:12:4"
															},
															"referencedDeclaration": 799,
															"src": "2547:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 840,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 838,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2572:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2547:43:4"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 841,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2600:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2602:5:4",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 796,
														"src": "2600:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 844,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "2610:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2600:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "2600:15:4"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 847,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "2625:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2627:7:4",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 798,
														"src": "2625:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2637:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2625:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "2625:19:4"
											}
										]
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 833,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 832,
												"name": "onlyInitializing",
												"nameLocations": [
													"2520:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2520:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2520:16:4"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2444:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2481:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2467:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 827,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2502:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "2488:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:44:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:4"
									},
									"scope": 1375,
									"src": "2435:216:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2314
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2776:84:4",
										"statements": [
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2807:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "2786:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 861,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 860,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2786:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "2786:12:4"
															},
															"referencedDeclaration": 799,
															"src": "2786:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "2811:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 866,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "2846:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2848:5:4",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 796,
													"src": "2846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 859,
												"id": 868,
												"nodeType": "Return",
												"src": "2839:14:4"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "2657:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2725:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2761:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2761:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:15:4"
									},
									"scope": 1375,
									"src": "2716:144:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2320
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "3035:86:4",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3066:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "3045:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 877,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 876,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3045:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "3045:12:4"
															},
															"referencedDeclaration": 799,
															"src": "3045:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 879,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3070:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3045:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 882,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3105:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3107:7:4",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 798,
													"src": "3105:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 875,
												"id": 884,
												"nodeType": "Return",
												"src": "3098:16:4"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2866:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2982:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:2:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "3020:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3020:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:15:4"
									},
									"scope": 1375,
									"src": "2973:148:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2326
									],
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3810:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3827:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 891,
												"id": 893,
												"nodeType": "Return",
												"src": "3820:9:4"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "3127:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3763:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:2:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3803:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 889,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:7:4"
									},
									"scope": 1375,
									"src": "3754:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2250
									],
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "3957:91:4",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3988:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 910,
														"src": "3967:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 902,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 901,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3967:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "3967:12:4"
															},
															"referencedDeclaration": 799,
															"src": "3967:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 904,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "3992:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:43:4"
											},
											{
												"expression": {
													"expression": {
														"id": 907,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "4027:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4029:12:4",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 794,
													"src": "4027:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 900,
												"id": 909,
												"nodeType": "Return",
												"src": "4020:21:4"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3842:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3905:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3948:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:4"
									},
									"scope": 1375,
									"src": "3896:152:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2258
									],
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "4180:97:4",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4211:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "4190:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 920,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 919,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4190:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "4190:12:4"
															},
															"referencedDeclaration": 799,
															"src": "4190:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 922,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4215:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4190:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 925,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4250:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4252:9:4",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 786,
														"src": "4250:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 928,
													"indexExpression": {
														"id": 927,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "4262:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4250:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 918,
												"id": 929,
												"nodeType": "Return",
												"src": "4243:27:4"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "4054:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4115:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4133:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "4125:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:17:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "4171:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:9:4"
									},
									"scope": 1375,
									"src": "4106:171:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2268
									],
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "4547:103:4",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4565:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 954,
														"src": "4557:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 941,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4557:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 943,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "4573:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4573:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4557:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 947,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "4605:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "4612:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "4616:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4595:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "4595:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4639:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 940,
												"id": 953,
												"nodeType": "Return",
												"src": "4632:11:4"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "4283:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4481:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4498:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4490:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4510:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4502:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:27:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4541:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:6:4"
									},
									"scope": 1375,
									"src": "4472:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2278
									],
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4797:106:4",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4828:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "4807:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 966,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 965,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4807:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "4807:12:4"
															},
															"referencedDeclaration": 799,
															"src": "4807:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 968,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "4832:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:43:4"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 971,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "4867:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:11:4",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 792,
															"src": "4867:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 974,
														"indexExpression": {
															"id": 973,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "4881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4867:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 976,
													"indexExpression": {
														"id": 975,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4888:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4867:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 964,
												"id": 977,
												"nodeType": "Return",
												"src": "4860:36:4"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "4656:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4717:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4727:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4750:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4742:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:32:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4788:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4787:9:4"
									},
									"scope": 1375,
									"src": "4708:195:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2288
									],
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "5289:107:4",
										"statements": [
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5307:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1002,
														"src": "5299:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 989,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5299:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 991,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "5315:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5315:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 995,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5346:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "5353:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 997,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "5362:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1326
														],
														"referencedDeclaration": 1258,
														"src": "5337:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "5337:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5385:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 988,
												"id": 1001,
												"nodeType": "Return",
												"src": "5378:11:4"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4909:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5219:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5235:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5227:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5252:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5244:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:32:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "5283:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5283:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:6:4"
									},
									"scope": 1375,
									"src": "5210:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2300
									],
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "6081:151:4",
										"statements": [
											{
												"assignments": [
													1016
												],
												"declarations": [
													{
														"constant": false,
														"id": 1016,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6099:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1034,
														"src": "6091:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1015,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6091:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1017,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "6109:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6091:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6147:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "6153:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6162:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "6131:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "6131:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1027,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "6188:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "6194:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6198:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "6178:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "6178:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6221:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1014,
												"id": 1033,
												"nodeType": "Return",
												"src": "6214:11:4"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "5402:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5997:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6018:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6010:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6044:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6036:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:41:4"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1012,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6074:6:4"
									},
									"scope": 1375,
									"src": "5988:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "6674:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "6688:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6704:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6696:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1046,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6696:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6696:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6688:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "6684:86:4",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "6708:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6756:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6748:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1052,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6748:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6748:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1051,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "6729:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6729:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1057,
															"nodeType": "RevertStatement",
															"src": "6722:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1060,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "6783:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6797:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6789:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1061,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6789:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6789:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6783:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "6779:86:4",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "6801:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6851:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6843:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1067,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6843:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6843:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1066,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "6822:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6822:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1072,
															"nodeType": "RevertStatement",
															"src": "6815:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "6882:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "6888:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "6892:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1075,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "6874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6874:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "6874:24:4"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "6238:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6614:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6632:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6624:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6646:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6638:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6658:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "6650:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:41:4"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6674:0:4"
									},
									"scope": 1375,
									"src": "6605:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "7295:1095:4",
										"statements": [
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7326:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1173,
														"src": "7305:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1093,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1092,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7305:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "7305:12:4"
															},
															"referencedDeclaration": 799,
															"src": "7305:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1097,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1095,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "7330:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7330:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7305:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1098,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "7362:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7378:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1099,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7370:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7370:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7362:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "7538:366:4",
													"statements": [
														{
															"assignments": [
																1112
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1112,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7560:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1140,
																	"src": "7552:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1111,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7552:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1117,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1113,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "7574:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7576:9:4",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 786,
																	"src": "7574:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1116,
																"indexExpression": {
																	"id": 1115,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "7586:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7574:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7552:39:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1118,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "7609:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1119,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7609:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1128,
															"nodeType": "IfStatement",
															"src": "7605:115:4",
															"trueBody": {
																"id": 1127,
																"nodeType": "Block",
																"src": "7630:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1122,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "7680:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1123,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "7686:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1124,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1089,
																					"src": "7699:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1121,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "7655:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7655:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1126,
																		"nodeType": "RevertStatement",
																		"src": "7648:57:4"
																	}
																]
															}
														},
														{
															"id": 1139,
															"nodeType": "UncheckedBlock",
															"src": "7733:161:4",
															"statements": [
																{
																	"expression": {
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1129,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "7840:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1132,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7842:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "7840:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1133,
																			"indexExpression": {
																				"id": 1131,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "7852:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7840:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1134,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1112,
																				"src": "7860:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1135,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "7874:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7860:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7840:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1138,
																	"nodeType": "ExpressionStatement",
																	"src": "7840:39:4"
																}
															]
														}
													]
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "7358:546:4",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "7382:150:4",
													"statements": [
														{
															"expression": {
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1104,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "7498:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7500:12:4",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "7498:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1107,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "7516:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7498:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "7498:23:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "7918:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7932:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7924:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7924:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7924:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7918:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "8135:208:4",
													"statements": [
														{
															"id": 1164,
															"nodeType": "UncheckedBlock",
															"src": "8149:184:4",
															"statements": [
																{
																	"expression": {
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1156,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1094,
																					"src": "8294:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8296:9:4",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 786,
																				"src": "8294:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1160,
																			"indexExpression": {
																				"id": 1158,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "8306:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8294:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1161,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "8313:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8294:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1163,
																	"nodeType": "ExpressionStatement",
																	"src": "8294:24:4"
																}
															]
														}
													]
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "7914:429:4",
												"trueBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "7936:193:4",
													"statements": [
														{
															"id": 1154,
															"nodeType": "UncheckedBlock",
															"src": "7950:169:4",
															"statements": [
																{
																	"expression": {
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1148,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "8081:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8083:12:4",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 794,
																			"src": "8081:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "8099:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8081:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1153,
																	"nodeType": "ExpressionStatement",
																	"src": "8081:23:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1168,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "8367:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "8373:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "8377:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1167,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2235,
														"src": "8358:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8358:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "EmitStatement",
												"src": "8353:30:4"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "6911:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7229:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7245:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7237:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7259:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7251:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7271:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "7263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7236:41:4"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7295:0:4"
									},
									"scope": 1375,
									"src": "7220:1170:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "8789:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "8803:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8822:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8814:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8814:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8814:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8803:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "8799:91:4",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "8826:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8876:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8868:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1189,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8868:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8868:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1188,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "8847:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8847:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1194,
															"nodeType": "RevertStatement",
															"src": "8840:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8907:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1198,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8907:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8907:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "8919:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "8928:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "8899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "8899:35:4"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "8396:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8742:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8756:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "8748:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "8765:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:32:4"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:4"
									},
									"scope": 1375,
									"src": "8733:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "9315:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "9329:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9348:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9340:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1216,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9340:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9340:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9329:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1229,
												"nodeType": "IfStatement",
												"src": "9325:89:4",
												"trueBody": {
													"id": 1228,
													"nodeType": "Block",
													"src": "9352:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9400:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9392:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1222,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9392:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9392:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1221,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "9373:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9373:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1227,
															"nodeType": "RevertStatement",
															"src": "9366:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "9431:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9448:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9440:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9440:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9440:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1236,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "9452:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1230,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "9423:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9423:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "9423:35:4"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "8947:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9268:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9282:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "9274:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9274:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9299:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "9291:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9291:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9273:32:4"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9315:0:4"
									},
									"scope": 1375,
									"src": "9259:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "10075:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1251,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "10094:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1252,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "10101:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "10110:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10117:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1250,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1258,
															1326
														],
														"referencedDeclaration": 1326,
														"src": "10085:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10085:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "10085:37:4"
											}
										]
									},
									"documentation": {
										"id": 1241,
										"nodeType": "StructuredDocumentation",
										"src": "9471:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10010:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10027:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10019:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10042:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10034:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10034:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "10051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:47:4"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10075:0:4"
									},
									"scope": 1375,
									"src": "10001:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "11074:389:4",
										"statements": [
											{
												"assignments": [
													1272
												],
												"declarations": [
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11105:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1325,
														"src": "11084:22:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1271,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1270,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11084:12:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 799,
																"src": "11084:12:4"
															},
															"referencedDeclaration": 799,
															"src": "11084:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1275,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1273,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "11109:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$799_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11109:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11084:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1276,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "11141:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11158:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1277,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11150:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11150:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11141:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "11137:89:4",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "11162:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11212:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11204:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1283,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11204:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11204:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1282,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "11183:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1288,
															"nodeType": "RevertStatement",
															"src": "11176:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "11239:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11258:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11250:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11250:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11250:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11239:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "11235:90:4",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "11262:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11311:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11303:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1298,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11303:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11303:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1297,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "11283:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11283:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1303,
															"nodeType": "RevertStatement",
															"src": "11276:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1306,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "11334:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$799_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11336:11:4",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 792,
																"src": "11334:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1311,
															"indexExpression": {
																"id": 1308,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "11348:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11334:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1312,
														"indexExpression": {
															"id": 1309,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "11355:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11334:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1313,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "11366:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11334:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "11334:37:4"
											},
											{
												"condition": {
													"id": 1316,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1267,
													"src": "11385:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"nodeType": "IfStatement",
												"src": "11381:76:4",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "11396:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1318,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "11424:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1319,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "11431:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1320,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "11440:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1317,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2244,
																	"src": "11415:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11415:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "EmitStatement",
															"src": "11410:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "10135:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10985:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "10994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11017:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11009:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11009:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11034:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11026:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11046:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "11041:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11041:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10993:63:4"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11074:0:4"
									},
									"scope": 1375,
									"src": "10976:487:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "11834:388:4",
										"statements": [
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11852:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "11844:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11844:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"id": 1339,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "11881:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1340,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "11888:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1338,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "11871:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11871:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11844:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1343,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "11910:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11935:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1345,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11935:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1344,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11930:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11930:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11944:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11930:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11910:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "11906:310:4",
												"trueBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "11949:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1350,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "11967:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1351,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1333,
																	"src": "11986:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11967:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1360,
															"nodeType": "IfStatement",
															"src": "11963:130:4",
															"trueBody": {
																"id": 1359,
																"nodeType": "Block",
																"src": "11993:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1354,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1331,
																					"src": "12045:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1355,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12054:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1356,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "12072:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1353,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1813,
																				"src": "12018:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12018:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1358,
																		"nodeType": "RevertStatement",
																		"src": "12011:67:4"
																	}
																]
															}
														},
														{
															"id": 1370,
															"nodeType": "UncheckedBlock",
															"src": "12106:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1362,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1329,
																				"src": "12143:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1363,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1331,
																				"src": "12150:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1364,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "12159:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1365,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "12178:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12159:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12185:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1361,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1258,
																				1326
																			],
																			"referencedDeclaration": 1326,
																			"src": "12134:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12134:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "12134:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "11469:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11754:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11778:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11770:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11770:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11793:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11785:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11785:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11810:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11802:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11769:47:4"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11834:0:4"
									},
									"scope": 1375,
									"src": "11745:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1376,
							"src": "1281:10943:4",
							"usedErrors": [
								211,
								214,
								1794,
								1799,
								1804,
								1813,
								1818,
								1823
							],
							"usedEvents": [
								219,
								2235,
								2244
							]
						}
					],
					"src": "105:12120:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1705
						]
					},
					"id": 1706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1377,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1378,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1705,
							"linearizedBaseContracts": [
								1705
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "1489:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1386,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "1713:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1391,
												"nodeType": "Return",
												"src": "1706:30:5"
											}
										]
									},
									"documentation": {
										"id": 1379,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1443:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:5"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "1483:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:5"
									},
									"scope": 1705,
									"src": "1423:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "2729:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1404,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1402,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1407,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "2772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:5"
											},
											{
												"assignments": [
													1413,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1426,
														"src": "2824:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1412,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1420,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1414,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "2842:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1416,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "2864:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1422,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "2893:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:5"
											}
										]
									},
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2677:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2704:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:5"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:5"
									},
									"scope": 1705,
									"src": "2658:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "3801:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1438,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "3840:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1439,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "3848:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1437,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1485,
															1529
														],
														"referencedDeclaration": 1529,
														"src": "3818:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1443,
												"nodeType": "Return",
												"src": "3811:79:5"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3734:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3750:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:5"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3787:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:5"
									},
									"scope": 1705,
									"src": "3712:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "4266:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1458,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "4305:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "4313:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1461,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4322:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1457,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1485,
															1529
														],
														"referencedDeclaration": 1529,
														"src": "4283:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1456,
												"id": 1463,
												"nodeType": "Return",
												"src": "4276:59:5"
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4150:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4174:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4201:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:5"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "4252:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:5"
									},
									"scope": 1705,
									"src": "4119:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "4817:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1478,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4856:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "4864:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1480,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "4870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1477,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1485,
															1529
														],
														"referencedDeclaration": 1529,
														"src": "4834:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1476,
												"id": 1483,
												"nodeType": "Return",
												"src": "4827:94:5"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4735:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4751:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4770:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:5"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "4803:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:5"
									},
									"scope": 1705,
									"src": "4704:224:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "5355:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1502,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1705",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1500,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1505,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "5398:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:5"
											},
											{
												"assignments": [
													1511,
													1513
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "5457:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1510,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1513,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "5471:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1512,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1520,
												"initialValue": {
													"arguments": [
														{
															"id": 1518,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "5524:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1514,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "5498:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "5517:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1522,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "5573:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1523,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "5581:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1524,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5590:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1525,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "5602:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1521,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "5546:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1527,
												"nodeType": "Return",
												"src": "5539:76:5"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5216:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5240:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5290:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:5"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5341:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:5"
									},
									"scope": 1705,
									"src": "5176:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "5899:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1540,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "5935:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "5943:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1539,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1546,
															1575
														],
														"referencedDeclaration": 1575,
														"src": "5916:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1544,
												"nodeType": "Return",
												"src": "5909:80:5"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5827:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5843:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:5"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "5885:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:5"
									},
									"scope": 1705,
									"src": "5799:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "6338:168:5",
										"statements": [
											{
												"assignments": [
													1559,
													1561
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "6349:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1558,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1561,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1574,
														"src": "6363:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1560,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"arguments": [
														{
															"id": 1564,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "6408:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1562,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "6390:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1568,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "6457:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1569,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "6465:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1570,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "6474:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1571,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "6486:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1567,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "6430:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1557,
												"id": 1573,
												"nodeType": "Return",
												"src": "6423:76:5"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6217:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6241:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6268:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:5"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "6324:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:5"
									},
									"scope": 1705,
									"src": "6180:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "6782:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1586,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "6820:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1587,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "6828:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1585,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1592,
															1621
														],
														"referencedDeclaration": 1621,
														"src": "6799:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1590,
												"nodeType": "Return",
												"src": "6792:84:5"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "6715:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "6731:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:5"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "6768:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:5"
									},
									"scope": 1705,
									"src": "6685:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "7224:170:5",
										"statements": [
											{
												"assignments": [
													1605,
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1620,
														"src": "7235:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1604,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1620,
														"src": "7249:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1606,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"initialValue": {
													"arguments": [
														{
															"id": 1610,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "7296:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1608,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "7276:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1614,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "7345:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1615,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "7353:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1616,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "7362:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1617,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "7374:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1613,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "7318:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1619,
												"nodeType": "Return",
												"src": "7311:76:5"
											}
										]
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7108:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7132:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1596,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7159:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:5"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7210:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:5"
									},
									"scope": 1705,
									"src": "7069:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "7876:434:5",
										"statements": [
											{
												"condition": {
													"id": 1635,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1626,
													"src": "7890:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1657,
													"nodeType": "Block",
													"src": "8246:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1653,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "8268:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1654,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "8280:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1652,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "8260:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1656,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:5"
														}
													]
												},
												"id": 1658,
												"nodeType": "IfStatement",
												"src": "7886:418:5",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "7899:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1636,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "7917:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1648,
															"nodeType": "IfStatement",
															"src": "7913:286:5",
															"trueBody": {
																"id": 1647,
																"nodeType": "Block",
																"src": "7941:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1642,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1624,
																							"src": "8143:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1641,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1393,
																						"src": "8132:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1643,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1640,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1646,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1649,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "8219:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1634,
															"id": 1650,
															"nodeType": "Return",
															"src": "8212:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7751:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7773:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7806:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:5"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "7862:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:5"
									},
									"scope": 1705,
									"src": "7682:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "8691:135:5",
										"statements": [
											{
												"condition": {
													"id": 1672,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1663,
													"src": "8705:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1681,
													"nodeType": "Block",
													"src": "8762:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1677,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "8784:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1678,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "8796:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1676,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1704,
																	"src": "8776:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1680,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:5"
														}
													]
												},
												"id": 1682,
												"nodeType": "IfStatement",
												"src": "8701:119:5",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "8714:42:5",
													"statements": [
														{
															"expression": {
																"id": 1673,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1665,
																"src": "8735:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1671,
															"id": 1674,
															"nodeType": "Return",
															"src": "8728:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8566:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8588:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8621:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1666,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:5"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "8677:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:5"
									},
									"scope": 1705,
									"src": "8531:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "8915:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1691,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "8991:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1701,
													"nodeType": "Block",
													"src": "9321:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1698,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "9342:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1697,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1700,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:5"
														}
													]
												},
												"id": 1702,
												"nodeType": "IfStatement",
												"src": "8987:379:5",
												"trueBody": {
													"id": 1696,
													"nodeType": "Block",
													"src": "9014:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:5",
																"nodeType": "YulBlock",
																"src": "9172:133:5",
																"statements": [
																	{
																		"nativeSrc": "9190:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:5"
																			},
																			"nativeSrc": "9213:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:5",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:5",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:5"
																					},
																					"nativeSrc": "9254:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:5"
																			},
																			"nativeSrc": "9247:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:5"
																		},
																		"nativeSrc": "9247:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1686,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1686,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:5",
																	"valueSize": 1
																}
															],
															"id": 1695,
															"nodeType": "InlineAssembly",
															"src": "9163:142:5"
														}
													]
												}
											}
										]
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "8849:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "8874:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:5"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:5"
									},
									"scope": 1705,
									"src": "8832:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1706,
							"src": "194:9180:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1751
						],
						"Initializable": [
							448
						]
					},
					"id": 1752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1752,
							"sourceUnit": 449,
							"src": "126:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1708,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1711,
										"name": "Initializable",
										"nameLocations": [
											"728:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:6"
									},
									"id": 1712,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:6"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1710,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1751,
							"linearizedBaseContracts": [
								1751,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "800:7:6",
										"statements": []
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1715,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1714,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:6"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:6"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:6"
									},
									"scope": 1751,
									"src": "748:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "875:7:6",
										"statements": []
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1721,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1720,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:6"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:6"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:6"
									},
									"scope": 1751,
									"src": "813:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "949:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1729,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1731,
												"nodeType": "Return",
												"src": "959:17:6"
											}
										]
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:6"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "940:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:6"
									},
									"scope": 1751,
									"src": "887:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "1056:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1738,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1740,
												"nodeType": "Return",
												"src": "1066:15:6"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:6"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1040:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:6"
									},
									"scope": 1751,
									"src": "989:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "1166:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1746,
												"id": 1748,
												"nodeType": "Return",
												"src": "1176:8:6"
											}
										]
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:6"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "1157:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:6"
									},
									"scope": 1751,
									"src": "1094:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1752,
							"src": "688:505:6",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1772
						]
					},
					"id": 1773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1753,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1754,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:7",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1772,
							"linearizedBaseContracts": [
								1772
							],
							"name": "IERC1967",
							"nameLocation": "245:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:7",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1759,
									"name": "Upgraded",
									"nameLocation": "339:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "348:30:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:7"
									},
									"src": "333:47:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:7",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1766,
									"name": "AdminChanged",
									"nameLocation": "464:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "477:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "500:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:7"
									},
									"src": "458:60:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1767,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:7",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1771,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "609:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:7"
									},
									"src": "588:45:7"
								}
							],
							"scope": 1773,
							"src": "235:400:7",
							"usedErrors": [],
							"usedEvents": [
								1759,
								1766,
								1771
							]
						}
					],
					"src": "107:529:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1782
						]
					},
					"id": 1783,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1774,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1775,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:8",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1782,
							"linearizedBaseContracts": [
								1782
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:8",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:8"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "869:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:8"
									},
									"scope": 1782,
									"src": "821:57:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1783,
							"src": "344:536:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1919
						],
						"IERC20Errors": [
							1824
						],
						"IERC721Errors": [
							1872
						]
					},
					"id": 1920,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1784,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1785,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:9",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1824,
							"linearizedBaseContracts": [
								1824
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:9",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1794,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "654:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "670:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "687:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:9"
									},
									"src": "623:80:9"
								},
								{
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1799,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "891:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:9"
									},
									"src": "866:41:9"
								},
								{
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1804,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1104:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:9"
									},
									"src": "1077:45:9"
								},
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:9",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1813,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1511:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1528:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "1547:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:9"
									},
									"src": "1478:85:9"
								},
								{
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1818,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "1775:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:9"
									},
									"src": "1748:45:9"
								},
								{
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:9",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1823,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "2025:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:9"
									},
									"src": "1999:43:9"
								}
							],
							"scope": 1920,
							"src": "280:1764:9",
							"usedErrors": [
								1794,
								1799,
								1804,
								1813,
								1818,
								1823
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1825,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:9",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1872,
							"linearizedBaseContracts": [
								1872
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:9",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1830,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "2469:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:9"
									},
									"src": "2444:40:9"
								},
								{
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:9",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1835,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "2656:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:9"
									},
									"src": "2627:46:9"
								},
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:9",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1844,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3000:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3016:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3033:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:9"
									},
									"src": "2973:75:9"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1849,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "3237:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:9"
									},
									"src": "3211:42:9"
								},
								{
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1854,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "3451:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:9"
									},
									"src": "3423:46:9"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:9",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1861,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "3760:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "3778:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:9"
									},
									"src": "3727:68:9"
								},
								{
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1866,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "4008:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:9"
									},
									"src": "3980:46:9"
								},
								{
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:9",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1871,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "4262:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:9"
									},
									"src": "4234:46:9"
								}
							],
							"scope": 1920,
							"src": "2190:2092:9",
							"usedErrors": [
								1830,
								1835,
								1844,
								1849,
								1854,
								1861,
								1866,
								1871
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1873,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:9",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1919,
							"linearizedBaseContracts": [
								1919
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:9",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1884,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4860:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4876:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4893:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4909:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:9"
									},
									"src": "4827:99:9"
								},
								{
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1889,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "5116:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:9"
									},
									"src": "5089:43:9"
								},
								{
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1894,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "5331:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:9"
									},
									"src": "5302:47:9"
								},
								{
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:9",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1901,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "5651:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "5669:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:9"
									},
									"src": "5616:68:9"
								},
								{
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1906,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "5898:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:9"
									},
									"src": "5869:47:9"
								},
								{
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:9",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1911,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "6153:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:9"
									},
									"src": "6124:47:9"
								},
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:9",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1918,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "6494:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "6513:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:9"
									},
									"src": "6462:73:9"
								}
							],
							"scope": 1920,
							"src": "4430:2107:9",
							"usedErrors": [
								1884,
								1889,
								1894,
								1901,
								1906,
								1911,
								1918
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2586
						],
						"ERC1967Utils": [
							2213
						],
						"IBeacon": [
							2223
						],
						"IERC1967": [
							1772
						],
						"StorageSlot": [
							2732
						]
					},
					"id": 2214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1921,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1923,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 2224,
							"src": "140:46:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1922,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2223,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 1773,
							"src": "187:55:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1924,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1772,
										"src": "195:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 2587,
							"src": "243:48:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1926,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2586,
										"src": "251:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2214,
							"sourceUnit": 2733,
							"src": "292:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1928,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2732,
										"src": "300:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1930,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:10",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 2213,
							"linearizedBaseContracts": [
								2213
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:10",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1934,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:10",
									"nodeType": "VariableDeclaration",
									"scope": 2213,
									"src": "763:114:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1932,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1933,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:10",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1939,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "993:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:10"
									},
									"src": "958:59:10"
								},
								{
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:10",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1944,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "1114:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:10"
									},
									"src": "1088:41:10"
								},
								{
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:10",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1949,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1228:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:10"
									},
									"src": "1201:43:10"
								},
								{
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:10",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1952,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:10"
									},
									"src": "1337:26:10"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "1502:77:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1960,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "1546:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1958,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "1519:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2643,
															"src": "1519:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2613,
													"src": "1519:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1957,
												"id": 1963,
												"nodeType": "Return",
												"src": "1512:60:10"
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:10",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:10"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "1493:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:10"
									},
									"scope": 2213,
									"src": "1441:138:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "1734:218:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1971,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "1748:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1981,
												"nodeType": "IfStatement",
												"src": "1744:119:10",
												"trueBody": {
													"id": 1980,
													"nodeType": "Block",
													"src": "1784:79:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1977,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1968,
																		"src": "1834:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1976,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "1805:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1979,
															"nodeType": "RevertStatement",
															"src": "1798:54:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1985,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1934,
																	"src": "1899:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1982,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "1872:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2643,
																"src": "1872:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "1872:53:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1988,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "1928:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1990,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:10"
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:10",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "1699:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:10"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:10"
									},
									"scope": 2213,
									"src": "1671:281:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "2345:263:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2001,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "2374:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2000,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "2355:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2007,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "2425:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2004,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "2407:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1772_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:10",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1759,
														"src": "2407:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2009,
												"nodeType": "EmitStatement",
												"src": "2402:41:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2010,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "2458:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2025,
													"nodeType": "Block",
													"src": "2559:43:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2022,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "2573:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2024,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:10"
														}
													]
												},
												"id": 2026,
												"nodeType": "IfStatement",
												"src": "2454:148:10",
												"trueBody": {
													"id": 2021,
													"nodeType": "Block",
													"src": "2475:78:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2017,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1995,
																		"src": "2518:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2018,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1997,
																		"src": "2537:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2014,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "2489:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2586_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:10",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2503,
																	"src": "2489:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2020,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:10",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2290:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2317:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:10"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:10"
									},
									"scope": 2213,
									"src": "2264:344:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:10",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 2032,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2213,
									"src": "2829:105:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2030,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 2031,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "3339:68:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2040,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2032,
																"src": "3383:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2038,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "3356:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2643,
															"src": "3356:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2613,
													"src": "3356:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2037,
												"id": 2043,
												"nodeType": "Return",
												"src": "3349:51:10"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:10",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:10"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "3330:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:10"
									},
									"scope": 2213,
									"src": "3287:120:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "3535:172:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2051,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "3549:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2052,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2065,
												"nodeType": "IfStatement",
												"src": "3545:91:10",
												"trueBody": {
													"id": 2064,
													"nodeType": "Block",
													"src": "3573:63:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2058,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2057,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "3594:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2063,
															"nodeType": "RevertStatement",
															"src": "3587:38:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2069,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2032,
																	"src": "3672:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2066,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "3645:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2643,
																"src": "3645:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "3645:44:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2072,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "3692:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2074,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:10"
											}
										]
									},
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:10",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "3509:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:10"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:10"
									},
									"scope": 2213,
									"src": "3490:217:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "3875:94:10",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2085,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "3912:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2087,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "3924:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2082,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "3890:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1772_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:10",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1766,
														"src": "3890:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2089,
												"nodeType": "EmitStatement",
												"src": "3885:48:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2091,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "3953:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2090,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "3943:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:10"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:10",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "3848:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:10"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:10"
									},
									"scope": 2213,
									"src": "3827:142:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2096,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:10",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 2099,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 2213,
									"src": "4246:106:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2097,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 2098,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "4468:69:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 2107,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "4512:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2105,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "4485:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:10",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2643,
															"src": "4485:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2613,
													"src": "4485:45:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2104,
												"id": 2110,
												"nodeType": "Return",
												"src": "4478:52:10"
											}
										]
									},
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:10",
										"text": " @dev Returns the current beacon."
									},
									"id": 2112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:10"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "4459:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:10"
									},
									"scope": 2213,
									"src": "4415:122:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "4667:390:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2118,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "4681:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2128,
												"nodeType": "IfStatement",
												"src": "4677:95:10",
												"trueBody": {
													"id": 2127,
													"nodeType": "Block",
													"src": "4709:63:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2124,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "4751:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2123,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1949,
																	"src": "4730:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2126,
															"nodeType": "RevertStatement",
															"src": "4723:38:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 2132,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2099,
																	"src": "4809:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2129,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "4782:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2732_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:10",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2643,
																"src": "4782:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2614_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2613,
														"src": "4782:45:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2135,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2115,
														"src": "4830:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2137,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:10"
											},
											{
												"assignments": [
													2139
												],
												"declarations": [
													{
														"constant": false,
														"id": 2139,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:10",
														"nodeType": "VariableDeclaration",
														"scope": 2157,
														"src": "4850:28:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2138,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2145,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2141,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2115,
																	"src": "4889:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2140,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "4881:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$2223_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$2223",
																"typeString": "contract IBeacon"
															}
														},
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:10",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2222,
														"src": "4881:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2146,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2139,
																"src": "4930:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2156,
												"nodeType": "IfStatement",
												"src": "4926:125:10",
												"trueBody": {
													"id": 2155,
													"nodeType": "Block",
													"src": "4969:82:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2152,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2139,
																		"src": "5019:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2151,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "4990:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2154,
															"nodeType": "RevertStatement",
															"src": "4983:57:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:10",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "4640:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:10"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:10"
									},
									"scope": 2213,
									"src": "4620:437:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2197,
										"nodeType": "Block",
										"src": "5661:263:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2167,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "5682:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2166,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "5671:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2173,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "5731:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2170,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "5707:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1772_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:10",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1771,
														"src": "5707:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2175,
												"nodeType": "EmitStatement",
												"src": "5702:39:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2176,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "5756:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "5875:43:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2192,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "5889:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:10"
														}
													]
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "5752:166:10",
												"trueBody": {
													"id": 2191,
													"nodeType": "Block",
													"src": "5773:96:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 2184,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2161,
																						"src": "5824:9:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2183,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2223,
																					"src": "5816:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$2223_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 2185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$2223",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:10",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2222,
																			"src": "5816:33:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2188,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "5853:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2180,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "5787:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2586_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:10",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2503,
																	"src": "5787:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2190,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:10",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 2198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "5614:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "5633:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:10"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:10"
									},
									"scope": 2213,
									"src": "5582:342:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "6149:86:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2202,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:10",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2210,
												"nodeType": "IfStatement",
												"src": "6159:70:10",
												"trueBody": {
													"id": 2209,
													"nodeType": "Block",
													"src": "6178:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2206,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "6199:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2208,
															"nodeType": "RevertStatement",
															"src": "6192:26:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2199,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:10",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:10"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:10"
									},
									"scope": 2213,
									"src": "6113:122:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2214,
							"src": "496:5741:10",
							"usedErrors": [
								1939,
								1944,
								1949,
								1952
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							2223
						]
					},
					"id": 2224,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2215,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2216,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:11",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 2223,
							"linearizedBaseContracts": [
								2223
							],
							"name": "IBeacon",
							"nameLocation": "224:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2217,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:11",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 2222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:11"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "460:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:11"
									},
									"scope": 2223,
									"src": "411:58:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2224,
							"src": "214:257:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2301
						]
					},
					"id": 2302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2225,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2226,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:12",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 2301,
							"linearizedBaseContracts": [
								2301
							],
							"name": "IERC20",
							"nameLocation": "214:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:12",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2235,
									"name": "Transfer",
									"nameLocation": "396:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "405:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "427:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "447:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:12"
									},
									"src": "390:72:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:12",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2244,
									"name": "Approval",
									"nameLocation": "627:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "636:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "659:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "684:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:12"
									},
									"src": "621:78:12"
								},
								{
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:12",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:12"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "821:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:12"
									},
									"scope": 2301,
									"src": "775:55:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:12",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "931:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:12"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "971:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:12"
									},
									"scope": 2301,
									"src": "912:68:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:12",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1222:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1234:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:12"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "1267:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:12"
									},
									"scope": 2301,
									"src": "1204:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2269,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:12",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "1567:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "1582:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:12"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "1622:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:12"
									},
									"scope": 2301,
									"src": "1548:83:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2279,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:12",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2326:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2343:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:12"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2376:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:12"
									},
									"scope": 2301,
									"src": "2309:73:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:12",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2712:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2726:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2738:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:12"
									},
									"returnParameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "2771:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:12"
									},
									"scope": 2301,
									"src": "2690:87:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2302,
							"src": "204:2575:12",
							"usedErrors": [],
							"usedEvents": [
								2235,
								2244
							]
						}
					],
					"src": "106:2674:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							2301
						],
						"IERC20Metadata": [
							2327
						]
					},
					"id": 2328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2305,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2328,
							"sourceUnit": 2302,
							"src": "151:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2304,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2301,
										"src": "159:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2307,
										"name": "IERC20",
										"nameLocations": [
											"306:6:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2301,
										"src": "306:6:13"
									},
									"id": 2308,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:13"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2306,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:13",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 2327,
							"linearizedBaseContracts": [
								2327,
								2301
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2309,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:13",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:13"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "417:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:13"
									},
									"scope": 2327,
									"src": "378:54:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:13",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:13"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "540:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:13"
									},
									"scope": 2327,
									"src": "499:56:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2321,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:13",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:13"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "674:5:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2323,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:13"
									},
									"scope": 2327,
									"src": "631:50:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2328,
							"src": "278:405:13",
							"usedErrors": [],
							"usedEvents": [
								2235,
								2244
							]
						}
					],
					"src": "125:559:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2586
						],
						"Errors": [
							2608
						]
					},
					"id": 2587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 2331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2587,
							"sourceUnit": 2609,
							"src": "127:36:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2330,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2608,
										"src": "135:6:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2332,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:14",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2586,
							"linearizedBaseContracts": [
								2586
							],
							"name": "Address",
							"nameLocation": "241:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:14",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 2337,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "358:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:14"
									},
									"src": "335:39:14"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "1361:278:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2347,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																],
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2345,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2350,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2342,
														"src": "1399:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2364,
												"nodeType": "IfStatement",
												"src": "1371:125:14",
												"trueBody": {
													"id": 2363,
													"nodeType": "Block",
													"src": "1407:89:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2357,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2355,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:14",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2360,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2342,
																		"src": "1478:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2352,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "1428:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:14",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2596,
																	"src": "1428:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2362,
															"nodeType": "RevertStatement",
															"src": "1421:64:14"
														}
													]
												}
											},
											{
												"assignments": [
													2366,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2366,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2383,
														"src": "1507:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2365,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2373,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2367,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2340,
																"src": "1525:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2369,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "1547:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:14"
											},
											{
												"condition": {
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:14",
													"subExpression": {
														"id": 2374,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2366,
														"src": "1573:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2382,
												"nodeType": "IfStatement",
												"src": "1568:65:14",
												"trueBody": {
													"id": 2381,
													"nodeType": "Block",
													"src": "1582:51:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2376,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "1603:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:14",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2599,
																	"src": "1603:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2380,
															"nodeType": "RevertStatement",
															"src": "1596:26:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2338,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:14",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1309:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1336:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:14"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:14"
									},
									"scope": 2586,
									"src": "1290:349:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "2573:62:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2395,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "2612:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2396,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "2620:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2394,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "2590:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2393,
												"id": 2399,
												"nodeType": "Return",
												"src": "2583:45:14"
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:14",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "2506:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "2522:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:14"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "2559:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:14"
									},
									"scope": 2586,
									"src": "2484:151:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2450,
										"nodeType": "Block",
										"src": "3072:294:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2415,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2586",
																		"typeString": "library Address"
																	}
																],
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2413,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2418,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "3110:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2432,
												"nodeType": "IfStatement",
												"src": "3082:123:14",
												"trueBody": {
													"id": 2431,
													"nodeType": "Block",
													"src": "3117:88:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2425,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2586",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2423,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:14",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2428,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2408,
																		"src": "3188:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2420,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "3138:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:14",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2596,
																	"src": "3138:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2430,
															"nodeType": "RevertStatement",
															"src": "3131:63:14"
														}
													]
												}
											},
											{
												"assignments": [
													2434,
													2436
												],
												"declarations": [
													{
														"constant": false,
														"id": 2434,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "3215:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2433,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2436,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2450,
														"src": "3229:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2435,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2443,
												"initialValue": {
													"arguments": [
														{
															"id": 2441,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2406,
															"src": "3282:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2437,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2404,
																"src": "3256:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2439,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2408,
																"src": "3275:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2445,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2404,
															"src": "3331:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2446,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2434,
															"src": "3339:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2447,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "3348:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2444,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "3304:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2412,
												"id": 2449,
												"nodeType": "Return",
												"src": "3297:62:14"
											}
										]
									},
									"documentation": {
										"id": 2402,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "2990:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "3006:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "3025:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:14"
									},
									"returnParameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "3058:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:14"
									},
									"scope": 2586,
									"src": "2959:407:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2476,
										"nodeType": "Block",
										"src": "3605:154:14",
										"statements": [
											{
												"assignments": [
													2462,
													2464
												],
												"declarations": [
													{
														"constant": false,
														"id": 2462,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2476,
														"src": "3616:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2461,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2464,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2476,
														"src": "3630:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2463,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2469,
												"initialValue": {
													"arguments": [
														{
															"id": 2467,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "3675:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "3657:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:14",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2471,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "3724:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2472,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2462,
															"src": "3732:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2473,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2464,
															"src": "3741:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2470,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "3697:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2460,
												"id": 2475,
												"nodeType": "Return",
												"src": "3690:62:14"
											}
										]
									},
									"documentation": {
										"id": 2452,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "3533:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "3549:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:14"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "3591:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:14"
									},
									"scope": 2586,
									"src": "3505:254:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2502,
										"nodeType": "Block",
										"src": "3997:156:14",
										"statements": [
											{
												"assignments": [
													2488,
													2490
												],
												"declarations": [
													{
														"constant": false,
														"id": 2488,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2502,
														"src": "4008:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2487,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2490,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2502,
														"src": "4022:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2495,
												"initialValue": {
													"arguments": [
														{
															"id": 2493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "4069:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2491,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "4049:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:14",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "4118:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2498,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "4126:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2499,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "4135:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2496,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "4091:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2486,
												"id": 2501,
												"nodeType": "Return",
												"src": "4084:62:14"
											}
										]
									},
									"documentation": {
										"id": 2478,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "3930:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "3946:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:14"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "3983:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:14"
									},
									"scope": 2586,
									"src": "3900:253:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "4579:424:14",
										"statements": [
											{
												"condition": {
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:14",
													"subExpression": {
														"id": 2515,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2508,
														"src": "4594:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2540,
													"nodeType": "Block",
													"src": "4653:344:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2522,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2510,
																			"src": "4841:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2526,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2506,
																				"src": "4867:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:14",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2537,
															"nodeType": "IfStatement",
															"src": "4837:119:14",
															"trueBody": {
																"id": 2536,
																"nodeType": "Block",
																"src": "4892:64:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2533,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2506,
																					"src": "4934:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2532,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2337,
																				"src": "4917:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2535,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:14"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2538,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2510,
																"src": "4976:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2514,
															"id": 2539,
															"nodeType": "Return",
															"src": "4969:17:14"
														}
													]
												},
												"id": 2541,
												"nodeType": "IfStatement",
												"src": "4589:408:14",
												"trueBody": {
													"id": 2521,
													"nodeType": "Block",
													"src": "4603:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2518,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2510,
																		"src": "4625:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2517,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "4617:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2520,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2504,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:14",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4466:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4490:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4512:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:14"
									},
									"returnParameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "4565:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2512,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:14"
									},
									"scope": 2586,
									"src": "4421:582:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "5307:122:14",
										"statements": [
											{
												"condition": {
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:14",
													"subExpression": {
														"id": 2553,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "5322:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2562,
													"nodeType": "Block",
													"src": "5381:42:14",
													"statements": [
														{
															"expression": {
																"id": 2560,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2548,
																"src": "5402:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2552,
															"id": 2561,
															"nodeType": "Return",
															"src": "5395:17:14"
														}
													]
												},
												"id": 2563,
												"nodeType": "IfStatement",
												"src": "5317:106:14",
												"trueBody": {
													"id": 2559,
													"nodeType": "Block",
													"src": "5331:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2556,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2548,
																		"src": "5353:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2555,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2585,
																	"src": "5345:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2558,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2544,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:14",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5231:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5245:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:14"
									},
									"returnParameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5293:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:14"
									},
									"scope": 2586,
									"src": "5205:224:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2584,
										"nodeType": "Block",
										"src": "5598:432:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2571,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2568,
															"src": "5674:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2582,
													"nodeType": "Block",
													"src": "5973:51:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2577,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2608,
																		"src": "5994:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2608_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:14",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2599,
																	"src": "5994:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2581,
															"nodeType": "RevertStatement",
															"src": "5987:26:14"
														}
													]
												},
												"id": 2583,
												"nodeType": "IfStatement",
												"src": "5670:354:14",
												"trueBody": {
													"id": 2576,
													"nodeType": "Block",
													"src": "5697:270:14",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:14",
																"nodeType": "YulBlock",
																"src": "5824:133:14",
																"statements": [
																	{
																		"nativeSrc": "5842:40:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:14"
																			},
																			"nativeSrc": "5865:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:14"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:14",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:14",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:14",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:14"
																					},
																					"nativeSrc": "5906:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:14"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:14"
																			},
																			"nativeSrc": "5899:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:14"
																		},
																		"nativeSrc": "5899:44:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:14"
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 2568,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:14",
																	"valueSize": 1
																},
																{
																	"declaration": 2568,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:14",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2575,
															"nodeType": "InlineAssembly",
															"src": "5799:158:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:14",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2585,
												"src": "5560:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:14"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:14"
									},
									"scope": 2586,
									"src": "5543:487:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2587,
							"src": "233:5799:14",
							"usedErrors": [
								2337
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2608
						]
					},
					"id": 2609,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2589,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:15",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2608,
							"linearizedBaseContracts": [
								2608
							],
							"name": "Errors",
							"nameLocation": "419:6:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2590,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:15",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2596,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "557:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "574:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:15"
									},
									"src": "531:59:15"
								},
								{
									"documentation": {
										"id": 2597,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:15",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2599,
									"name": "FailedCall",
									"nameLocation": "696:10:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:15"
									},
									"src": "690:19:15"
								},
								{
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:15",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2602,
									"name": "FailedDeployment",
									"nameLocation": "772:16:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:15"
									},
									"src": "766:25:15"
								},
								{
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:15",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2607,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "884:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:15"
									},
									"src": "860:33:15"
								}
							],
							"scope": 2609,
							"src": "411:484:15",
							"usedErrors": [
								2596,
								2599,
								2602,
								2607
							],
							"usedEvents": []
						}
					],
					"src": "100:796:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2732
						]
					},
					"id": 2733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2610,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2611,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:16",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2732,
							"linearizedBaseContracts": [
								2732
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2614,
									"members": [
										{
											"constant": false,
											"id": 2613,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2614,
											"src": "1462:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2612,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1433:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2617,
									"members": [
										{
											"constant": false,
											"id": 2616,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2617,
											"src": "1517:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2615,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1488:46:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2620,
									"members": [
										{
											"constant": false,
											"id": 2619,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2620,
											"src": "1569:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2618,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1540:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2623,
									"members": [
										{
											"constant": false,
											"id": 2622,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2623,
											"src": "1624:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2621,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1595:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2626,
									"members": [
										{
											"constant": false,
											"id": 2625,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2626,
											"src": "1678:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2624,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1650:47:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2629,
									"members": [
										{
											"constant": false,
											"id": 2628,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2629,
											"src": "1731:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2627,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1703:47:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2632,
									"members": [
										{
											"constant": false,
											"id": 2631,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2632,
											"src": "1783:11:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2630,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:16",
									"nodeType": "StructDefinition",
									"scope": 2732,
									"src": "1756:45:16",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2642,
										"nodeType": "Block",
										"src": "1983:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:16",
													"nodeType": "YulBlock",
													"src": "2018:38:16",
													"statements": [
														{
															"nativeSrc": "2032:14:16",
															"nodeType": "YulAssignment",
															"src": "2032:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:16",
																"nodeType": "YulIdentifier",
																"src": "2042:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2639,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2635,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2641,
												"nodeType": "InlineAssembly",
												"src": "1993:63:16"
											}
										]
									},
									"documentation": {
										"id": 2633,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:16",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "1923:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2634,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:16"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2643,
												"src": "1960:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2638,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2637,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2614,
														"src": "1960:11:16"
													},
													"referencedDeclaration": 2614,
													"src": "1960:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2614_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:16"
									},
									"scope": 2732,
									"src": "1899:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2653,
										"nodeType": "Block",
										"src": "2243:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:16",
													"nodeType": "YulBlock",
													"src": "2278:38:16",
													"statements": [
														{
															"nativeSrc": "2292:14:16",
															"nodeType": "YulAssignment",
															"src": "2292:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:16",
																"nodeType": "YulIdentifier",
																"src": "2302:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2650,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2646,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2652,
												"nodeType": "InlineAssembly",
												"src": "2253:63:16"
											}
										]
									},
									"documentation": {
										"id": 2644,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:16",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "2183:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:16"
									},
									"returnParameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "2220:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2617_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2649,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2648,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2617,
														"src": "2220:11:16"
													},
													"referencedDeclaration": 2617,
													"src": "2220:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2617_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:16"
									},
									"scope": 2732,
									"src": "2159:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "2503:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:16",
													"nodeType": "YulBlock",
													"src": "2538:38:16",
													"statements": [
														{
															"nativeSrc": "2552:14:16",
															"nodeType": "YulAssignment",
															"src": "2552:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:16",
																"nodeType": "YulIdentifier",
																"src": "2562:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2661,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2657,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2663,
												"nodeType": "InlineAssembly",
												"src": "2513:63:16"
											}
										]
									},
									"documentation": {
										"id": 2655,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:16",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "2443:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:16"
									},
									"returnParameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "2480:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2620_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2660,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2659,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2620,
														"src": "2480:11:16"
													},
													"referencedDeclaration": 2620,
													"src": "2480:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2620_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:16"
									},
									"scope": 2732,
									"src": "2419:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2675,
										"nodeType": "Block",
										"src": "2763:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:16",
													"nodeType": "YulBlock",
													"src": "2798:38:16",
													"statements": [
														{
															"nativeSrc": "2812:14:16",
															"nodeType": "YulAssignment",
															"src": "2812:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:16",
																"nodeType": "YulIdentifier",
																"src": "2822:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2672,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2668,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2674,
												"nodeType": "InlineAssembly",
												"src": "2773:63:16"
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:16",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "2703:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2667,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:16"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "2740:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2623_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2670,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2623,
														"src": "2740:11:16"
													},
													"referencedDeclaration": 2623,
													"src": "2740:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2623_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:16"
									},
									"scope": 2732,
									"src": "2679:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "3020:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:16",
													"nodeType": "YulBlock",
													"src": "3055:38:16",
													"statements": [
														{
															"nativeSrc": "3069:14:16",
															"nodeType": "YulAssignment",
															"src": "3069:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:16",
																"nodeType": "YulIdentifier",
																"src": "3079:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2683,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2679,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2685,
												"nodeType": "InlineAssembly",
												"src": "3030:63:16"
											}
										]
									},
									"documentation": {
										"id": 2677,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:16",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "2961:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2678,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:16"
									},
									"returnParameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "2998:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2626_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2681,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2626,
														"src": "2998:10:16"
													},
													"referencedDeclaration": 2626,
													"src": "2998:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2626_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:16"
									},
									"scope": 2732,
									"src": "2938:161:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "3277:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:16",
													"nodeType": "YulBlock",
													"src": "3312:38:16",
													"statements": [
														{
															"nativeSrc": "3326:14:16",
															"nodeType": "YulAssignment",
															"src": "3326:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:16",
																"nodeType": "YulIdentifier",
																"src": "3336:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2694,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2690,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2696,
												"nodeType": "InlineAssembly",
												"src": "3287:63:16"
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:16",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "3218:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:16"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "3255:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2693,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2692,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2629,
														"src": "3255:10:16"
													},
													"referencedDeclaration": 2629,
													"src": "3255:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:16"
									},
									"scope": 2732,
									"src": "3195:161:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2708,
										"nodeType": "Block",
										"src": "3558:85:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:16",
													"nodeType": "YulBlock",
													"src": "3593:44:16",
													"statements": [
														{
															"nativeSrc": "3607:20:16",
															"nodeType": "YulAssignment",
															"src": "3607:20:16",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:16",
																"nodeType": "YulIdentifier",
																"src": "3617:10:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2705,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2701,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:16",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2707,
												"nodeType": "InlineAssembly",
												"src": "3568:69:16"
											}
										]
									},
									"documentation": {
										"id": 2699,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:16",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "3491:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:16"
									},
									"returnParameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2709,
												"src": "3536:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2703,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2629,
														"src": "3536:10:16"
													},
													"referencedDeclaration": 2629,
													"src": "3536:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2629_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:16"
									},
									"scope": 2732,
									"src": "3468:175:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "3818:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:16",
													"nodeType": "YulBlock",
													"src": "3853:38:16",
													"statements": [
														{
															"nativeSrc": "3867:14:16",
															"nodeType": "YulAssignment",
															"src": "3867:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:16",
																"nodeType": "YulIdentifier",
																"src": "3877:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2716,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2712,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2718,
												"nodeType": "InlineAssembly",
												"src": "3828:63:16"
											}
										]
									},
									"documentation": {
										"id": 2710,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:16",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "3760:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2711,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:16"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "3797:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2715,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2714,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2632,
														"src": "3797:9:16"
													},
													"referencedDeclaration": 2632,
													"src": "3797:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:16"
									},
									"scope": 2732,
									"src": "3738:159:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2730,
										"nodeType": "Block",
										"src": "4094:85:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:16",
													"nodeType": "YulBlock",
													"src": "4129:44:16",
													"statements": [
														{
															"nativeSrc": "4143:20:16",
															"nodeType": "YulAssignment",
															"src": "4143:20:16",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:16",
																"nodeType": "YulIdentifier",
																"src": "4153:10:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2727,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2723,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:16",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2729,
												"nodeType": "InlineAssembly",
												"src": "4104:69:16"
											}
										]
									},
									"documentation": {
										"id": 2721,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:16",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "4029:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:16"
									},
									"returnParameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2731,
												"src": "4073:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2725,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2632,
														"src": "4073:9:16"
													},
													"referencedDeclaration": 2632,
													"src": "4073:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2632_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:16"
									},
									"scope": 2732,
									"src": "4007:172:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2733,
							"src": "1407:2774:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:16"
				},
				"id": 16
			},
			"RVA/UpgradableToken.sol": {
				"ast": {
					"absolutePath": "RVA/UpgradableToken.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1705
						],
						"ContextUpgradeable": [
							1751
						],
						"ERC1967Utils": [
							2213
						],
						"ERC20Token": [
							3167
						],
						"ERC20Upgradeable": [
							1375
						],
						"IERC1822Proxiable": [
							1782
						],
						"IERC20": [
							2301
						],
						"IERC20Errors": [
							1824
						],
						"IERC20Metadata": [
							2327
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							758
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 3168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2734,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2735,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3168,
							"sourceUnit": 195,
							"src": "57:75:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2736,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3168,
							"sourceUnit": 1376,
							"src": "133:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 2737,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3168,
							"sourceUnit": 759,
							"src": "212:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2738,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3168,
							"sourceUnit": 631,
							"src": "291:77:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"id": 2739,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3168,
							"sourceUnit": 1706,
							"src": "369:74:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2740,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"468:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1375,
										"src": "468:16:17"
									},
									"id": 2741,
									"nodeType": "InheritanceSpecifier",
									"src": "468:16:17"
								},
								{
									"baseName": {
										"id": 2742,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"486:18:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "486:18:17"
									},
									"id": 2743,
									"nodeType": "InheritanceSpecifier",
									"src": "486:18:17"
								},
								{
									"baseName": {
										"id": 2744,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"506:19:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 758,
										"src": "506:19:17"
									},
									"id": 2745,
									"nodeType": "InheritanceSpecifier",
									"src": "506:19:17"
								},
								{
									"baseName": {
										"id": 2746,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"527:15:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "527:15:17"
									},
									"id": 2747,
									"nodeType": "InheritanceSpecifier",
									"src": "527:15:17"
								}
							],
							"canonicalName": "ERC20Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3167,
							"linearizedBaseContracts": [
								3167,
								630,
								1782,
								758,
								194,
								1375,
								1824,
								2327,
								2301,
								1751,
								448
							],
							"name": "ERC20Token",
							"nameLocation": "454:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c66e4095",
									"id": 2749,
									"mutability": "mutable",
									"name": "icoContract",
									"nameLocation": "564:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3167,
									"src": "549:26:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2748,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "549:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2751,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "597:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 3167,
									"src": "581:28:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2750,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "581:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"global": false,
									"id": 2754,
									"libraryName": {
										"id": 2752,
										"name": "AddressUpgradeable",
										"nameLocations": [
											"621:18:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "621:18:17"
									},
									"nodeType": "UsingForDirective",
									"src": "615:37:17",
									"typeName": {
										"id": 2753,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "644:7:17",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "9bc289f1",
									"id": 2758,
									"mutability": "mutable",
									"name": "lockedUntil",
									"nameLocation": "693:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3167,
									"src": "658:46:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2757,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2755,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "666:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "658:27:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2756,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "677:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dbac26e9",
									"id": 2762,
									"mutability": "mutable",
									"name": "blacklisted",
									"nameLocation": "742:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 3167,
									"src": "710:43:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2761,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2759,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "718:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "710:24:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2760,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "729:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e7bbfbbf7e7948988eb7f8904da938aff02a23b8b28fcee206be4d4b3edd9ad8",
									"id": 2766,
									"name": "ICOContractSet",
									"nameLocation": "766:14:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"indexed": true,
												"mutability": "mutable",
												"name": "icoContract",
												"nameLocation": "797:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "781:27:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:29:17"
									},
									"src": "760:50:17"
								},
								{
									"anonymous": false,
									"eventSelector": "611cdbea265cb87ef40e17c595bad009182b4db741622f7848e344c15451de2f",
									"id": 2772,
									"name": "LockupSet",
									"nameLocation": "821:9:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2768,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "847:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "831:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedUntilTimestamp",
												"nameLocation": "864:20:17",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "856:28:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:55:17"
									},
									"src": "815:71:17"
								},
								{
									"anonymous": false,
									"eventSelector": "cf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8",
									"id": 2778,
									"name": "Blacklisted",
									"nameLocation": "897:11:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "925:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "909:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2776,
												"indexed": false,
												"mutability": "mutable",
												"name": "isBlacklisted",
												"nameLocation": "939:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2778,
												"src": "934:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "934:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:45:17"
									},
									"src": "891:63:17"
								},
								{
									"anonymous": false,
									"eventSelector": "96352ad7a9be4c45ad1b71ff4390921022216946b3b7348fd652f133a6ee5453",
									"id": 2784,
									"name": "EmergencyTokenRecovered",
									"nameLocation": "965:23:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1005:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "989:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2782,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1020:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2784,
												"src": "1012:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:39:17"
									},
									"src": "959:69:17"
								},
								{
									"body": {
										"id": 2791,
										"nodeType": "Block",
										"src": "1101:91:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2788,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "1111:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1111:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "1111:22:17"
											}
										]
									},
									"documentation": {
										"id": 2785,
										"nodeType": "StructuredDocumentation",
										"src": "1034:48:17",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2792,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1098:2:17"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1101:0:17"
									},
									"scope": 3167,
									"src": "1087:105:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2829,
										"nodeType": "Block",
										"src": "1303:258:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2804,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2794,
															"src": "1326:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2805,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2796,
															"src": "1332:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2803,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "1313:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1313:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2807,
												"nodeType": "ExpressionStatement",
												"src": "1313:26:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2809,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1364:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1368:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1364:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2808,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1349:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1349:26:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2812,
												"nodeType": "ExpressionStatement",
												"src": "1349:26:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2813,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1385:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2815,
												"nodeType": "ExpressionStatement",
												"src": "1385:17:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2816,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "1412:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1412:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2818,
												"nodeType": "ExpressionStatement",
												"src": "1412:24:17"
											},
											{
												"expression": {
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2819,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2751,
														"src": "1447:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2820,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "1462:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1447:27:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2822,
												"nodeType": "ExpressionStatement",
												"src": "1447:27:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2824,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1490:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1494:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1490:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2826,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2751,
															"src": "1502:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2823,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "1484:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1484:31:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2828,
												"nodeType": "ExpressionStatement",
												"src": "1484:31:17"
											}
										]
									},
									"functionSelector": "b119490e",
									"id": 2830,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2801,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2800,
												"name": "initializer",
												"nameLocations": [
													"1291:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1291:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1291:11:17"
										}
									],
									"name": "initialize",
									"nameLocation": "1207:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1232:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "1218:18:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2793,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1218:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1252:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "1238:20:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2795,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1238:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "totalSupply_",
												"nameLocation": "1268:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "1260:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:64:17"
									},
									"returnParameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1303:0:17"
									},
									"scope": 3167,
									"src": "1198:363:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "1594:80:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2833,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1612:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1616:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1612:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2835,
																"name": "icoContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "1626:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1612:25:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 2837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1639:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 2832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1604:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1604:52:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2839,
												"nodeType": "ExpressionStatement",
												"src": "1604:52:17"
											},
											{
												"id": 2840,
												"nodeType": "PlaceholderStatement",
												"src": "1666:1:17"
											}
										]
									},
									"id": 2842,
									"name": "onlyICOContract",
									"nameLocation": "1576:15:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:2:17"
									},
									"src": "1567:107:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2850,
										"nodeType": "Block",
										"src": "1716:25:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2847,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "1726:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1726:8:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2849,
												"nodeType": "ExpressionStatement",
												"src": "1726:8:17"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2851,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2845,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2844,
												"name": "onlyOwner",
												"nameLocations": [
													"1706:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1706:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1706:9:17"
										}
									],
									"name": "pause",
									"nameLocation": "1689:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:17"
									},
									"returnParameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:0:17"
									},
									"scope": 3167,
									"src": "1680:61:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2859,
										"nodeType": "Block",
										"src": "1785:27:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2856,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "1795:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1795:10:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2858,
												"nodeType": "ExpressionStatement",
												"src": "1795:10:17"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2860,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2854,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2853,
												"name": "onlyOwner",
												"nameLocations": [
													"1775:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1775:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1775:9:17"
										}
									],
									"name": "unpause",
									"nameLocation": "1756:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1763:2:17"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1785:0:17"
									},
									"scope": 3167,
									"src": "1747:65:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2897,
										"nodeType": "Block",
										"src": "1898:214:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2870,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2862,
																"src": "1916:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1934:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1926:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2871,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1926:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1926:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1916:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756c6c2041646472657373",
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1937:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															},
															"value": "Null Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															}
														],
														"id": 2869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1908:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1908:44:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2878,
												"nodeType": "ExpressionStatement",
												"src": "1908:44:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2879,
															"name": "lockedUntil",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2758,
															"src": "1966:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2881,
														"indexExpression": {
															"id": 2880,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2862,
															"src": "1978:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1966:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2882,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2864,
														"src": "1990:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1966:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2896,
												"nodeType": "IfStatement",
												"src": "1962:144:17",
												"trueBody": {
													"id": 2895,
													"nodeType": "Block",
													"src": "2001:105:17",
													"statements": [
														{
															"expression": {
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2884,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2758,
																		"src": "2015:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2886,
																	"indexExpression": {
																		"id": 2885,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "2027:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2015:20:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2887,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2864,
																	"src": "2038:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2015:32:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2889,
															"nodeType": "ExpressionStatement",
															"src": "2015:32:17"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2891,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "2076:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2892,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2864,
																		"src": "2085:9:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2890,
																	"name": "LockupSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2772,
																	"src": "2066:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2066:29:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2894,
															"nodeType": "EmitStatement",
															"src": "2061:34:17"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3e579307",
									"id": 2898,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2867,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2866,
												"name": "onlyICOContract",
												"nameLocations": [
													"1882:15:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2842,
												"src": "1882:15:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1882:15:17"
										}
									],
									"name": "setLockup",
									"nameLocation": "1827:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1845:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "1837:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1862:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "1854:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:36:17"
									},
									"returnParameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1898:0:17"
									},
									"scope": 3167,
									"src": "1818:294:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2928,
										"nodeType": "Block",
										"src": "2189:143:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2908,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2900,
																"src": "2207:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2225:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2217:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2909,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2217:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2217:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2207:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756c6c2041646472657373",
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2228:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															},
															"value": "Null Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															}
														],
														"id": 2907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2199:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2199:44:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2916,
												"nodeType": "ExpressionStatement",
												"src": "2199:44:17"
											},
											{
												"expression": {
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2917,
															"name": "blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2762,
															"src": "2253:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2919,
														"indexExpression": {
															"id": 2918,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2900,
															"src": "2265:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2253:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2920,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2902,
														"src": "2276:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2253:29:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2922,
												"nodeType": "ExpressionStatement",
												"src": "2253:29:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2924,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2900,
															"src": "2309:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2925,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2902,
															"src": "2318:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2923,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2778,
														"src": "2297:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:28:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2927,
												"nodeType": "EmitStatement",
												"src": "2292:33:17"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 2929,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2905,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2904,
												"name": "onlyOwner",
												"nameLocations": [
													"2179:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "2179:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2179:9:17"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "2127:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2148:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "2140:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2162:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2929,
												"src": "2157:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2157:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:30:17"
									},
									"returnParameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:0:17"
									},
									"scope": 3167,
									"src": "2118:214:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2940,
										"nodeType": "Block",
										"src": "2405:44:17",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2936,
														"name": "blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2762,
														"src": "2422:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2938,
													"indexExpression": {
														"id": 2937,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2931,
														"src": "2434:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2422:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2935,
												"id": 2939,
												"nodeType": "Return",
												"src": "2415:27:17"
											}
										]
									},
									"functionSelector": "fe575a87",
									"id": 2941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nameLocation": "2347:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2941,
												"src": "2361:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:17:17"
									},
									"returnParameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2941,
												"src": "2399:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2399:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:6:17"
									},
									"scope": 3167,
									"src": "2338:111:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 3001,
										"nodeType": "Block",
										"src": "2553:415:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2571:24:17",
															"subExpression": {
																"baseExpression": {
																	"id": 2954,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2762,
																	"src": "2572:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2957,
																"indexExpression": {
																	"expression": {
																		"id": 2955,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2584:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2588:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2584:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2572:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2597:40:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 2953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2563:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:75:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2961,
												"nodeType": "ExpressionStatement",
												"src": "2563:75:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2656:23:17",
															"subExpression": {
																"baseExpression": {
																	"id": 2963,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2762,
																	"src": "2657:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2965,
																"indexExpression": {
																	"id": 2964,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "2669:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2657:22:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 2967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2681:43:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 2962,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2648:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2648:77:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2969,
												"nodeType": "ExpressionStatement",
												"src": "2648:77:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2971,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2945,
																"src": "2743:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2751:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2743:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c646e2774206265207a65726f",
															"id": 2974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2753:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															},
															"value": "Amount shouldn't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															}
														],
														"id": 2970,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2735:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2735:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2976,
												"nodeType": "ExpressionStatement",
												"src": "2735:45:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2978,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2798:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2804:9:17",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2798:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2980,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2758,
																		"src": "2817:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2983,
																	"indexExpression": {
																		"expression": {
																			"id": 2981,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2829:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2833:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2829:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2817:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2798:42:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2985,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2758,
																		"src": "2844:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2988,
																	"indexExpression": {
																		"expression": {
																			"id": 2986,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2856:3:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2860:6:17",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2856:10:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2844:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2844:28:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2798:74:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 2977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2790:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2790:121:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2994,
												"nodeType": "ExpressionStatement",
												"src": "2790:121:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2997,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "2943:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2998,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2945,
															"src": "2954:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2995,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2928:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Token_$3167_$",
																"typeString": "type(contract super ERC20Token)"
															}
														},
														"id": 2996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2934:8:17",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 955,
														"src": "2928:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 2999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2928:33:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2952,
												"id": 3000,
												"nodeType": "Return",
												"src": "2921:40:17"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 3002,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2949,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2948,
												"name": "whenNotPaused",
												"nameLocations": [
													"2524:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "2524:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2524:13:17"
										}
									],
									"name": "transfer",
									"nameLocation": "2464:8:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2947,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2515:8:17"
									},
									"parameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2481:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "2473:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2473:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2500:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "2492:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2472:35:17"
									},
									"returnParameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3002,
												"src": "2547:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2950,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2547:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2546:6:17"
									},
									"scope": 3167,
									"src": "2455:513:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 3062,
										"nodeType": "Block",
										"src": "3092:415:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3110:20:17",
															"subExpression": {
																"baseExpression": {
																	"id": 3017,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2762,
																	"src": "3111:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3019,
																"indexExpression": {
																	"id": 3018,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3004,
																	"src": "3123:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3111:19:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a2053656e64657220697320626c61636b6c6973746564",
															"id": 3021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3132:40:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															},
															"value": "Transfer failed: Sender is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9e62695b02c14b7ce7b428a7ac8c84960cdaa93edd05435221db475a7f6a8a4",
																"typeString": "literal_string \"Transfer failed: Sender is blacklisted\""
															}
														],
														"id": 3016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3102:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3102:71:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3023,
												"nodeType": "ExpressionStatement",
												"src": "3102:71:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3191:23:17",
															"subExpression": {
																"baseExpression": {
																	"id": 3025,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2762,
																	"src": "3192:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 3027,
																"indexExpression": {
																	"id": 3026,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3006,
																	"src": "3204:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3192:22:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
															"id": 3029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3216:43:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															},
															"value": "Transfer failed: Recipient is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3de370b05ab97c8959187cad60475d793f81469abe4c9690587c3f9d9c1d940",
																"typeString": "literal_string \"Transfer failed: Recipient is blacklisted\""
															}
														],
														"id": 3024,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3183:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3183:77:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3031,
												"nodeType": "ExpressionStatement",
												"src": "3183:77:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3033,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3008,
																"src": "3278:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3286:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3278:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c646e2774206265207a65726f",
															"id": 3036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3288:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															},
															"value": "Amount shouldn't be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1210687f5c85075568611deeb26d91d4415f265847d19b35cbb5e56cdbecee96",
																"typeString": "literal_string \"Amount shouldn't be zero\""
															}
														],
														"id": 3032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3270:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3038,
												"nodeType": "ExpressionStatement",
												"src": "3270:45:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3040,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3333:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3339:9:17",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3333:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 3042,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2758,
																		"src": "3352:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3044,
																	"indexExpression": {
																		"id": 3043,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3004,
																		"src": "3364:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3352:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3333:38:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3046,
																		"name": "lockedUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2758,
																		"src": "3375:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3048,
																	"indexExpression": {
																		"id": 3047,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3004,
																		"src": "3387:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3375:19:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3398:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3375:24:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3333:66:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c65643a20546f6b656e7320617265206c6f636b6564",
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3401:36:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															},
															"value": "Transfer failed: Tokens are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6aa827ce11a4fcee4629e3defe8dd492d68a82c37c1e70775e9e58bbc470287e",
																"typeString": "literal_string \"Transfer failed: Tokens are locked\""
															}
														],
														"id": 3039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:113:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3054,
												"nodeType": "ExpressionStatement",
												"src": "3325:113:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3057,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3004,
															"src": "3474:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3058,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3006,
															"src": "3482:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3059,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3008,
															"src": "3493:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3055,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3455:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Token_$3167_$",
																"typeString": "type(contract super ERC20Token)"
															}
														},
														"id": 3056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3461:12:17",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1035,
														"src": "3455:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3015,
												"id": 3061,
												"nodeType": "Return",
												"src": "3448:52:17"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 3063,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3012,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3011,
												"name": "whenNotPaused",
												"nameLocations": [
													"3063:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "3063:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3063:13:17"
										}
									],
									"name": "transferFrom",
									"nameLocation": "2983:12:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3010,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3054:8:17"
									},
									"parameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3004,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "2996:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3020:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "3012:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3039:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "3031:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3031:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:51:17"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3063,
												"src": "3086:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3086:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3085:6:17"
									},
									"scope": 3167,
									"src": "2974:533:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3095,
										"nodeType": "Block",
										"src": "3578:220:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3071,
																"name": "_icoContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3065,
																"src": "3596:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3620:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3612:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3072,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3612:7:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 3075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3612:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3596:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756c6c2041646472657373",
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3624:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															},
															"value": "Null Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5e3d1944e70dc7014252fad277e63499bf22351a0f461ed915eaadf52a0dbb5",
																"typeString": "literal_string \"Null Address\""
															}
														],
														"id": 3070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3588:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3588:51:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3079,
												"nodeType": "ExpressionStatement",
												"src": "3588:51:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 3081,
																	"name": "_icoContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3065,
																	"src": "3657:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 3082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3670:10:17",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1393,
																"src": "3657:23:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3657:25:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373206973206e6f74206120636f6e7472616374",
															"id": 3084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3684:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed",
																"typeString": "literal_string \"Address is not a contract\""
															},
															"value": "Address is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8918e0bdc47700e3dd9cba955077b90172920ac4ad66750cfdaca7120429bed",
																"typeString": "literal_string \"Address is not a contract\""
															}
														],
														"id": 3080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3649:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:63:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3086,
												"nodeType": "ExpressionStatement",
												"src": "3649:63:17"
											},
											{
												"expression": {
													"id": 3089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3087,
														"name": "icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2749,
														"src": "3722:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3088,
														"name": "_icoContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3065,
														"src": "3736:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3722:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3090,
												"nodeType": "ExpressionStatement",
												"src": "3722:26:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3092,
															"name": "_icoContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3065,
															"src": "3778:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3091,
														"name": "ICOContractSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2766,
														"src": "3763:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:28:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3094,
												"nodeType": "EmitStatement",
												"src": "3758:33:17"
											}
										]
									},
									"functionSelector": "2e0d2a00",
									"id": 3096,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3068,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3067,
												"name": "onlyOwner",
												"nameLocations": [
													"3568:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3568:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3568:9:17"
										}
									],
									"name": "setICOContract",
									"nameLocation": "3522:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "_icoContract",
												"nameLocation": "3545:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "3537:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:22:17"
									},
									"returnParameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3578:0:17"
									},
									"scope": 3167,
									"src": "3513:285:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3156,
										"nodeType": "Block",
										"src": "3909:468:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3108,
																	"name": "recipients",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3099,
																	"src": "3927:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3938:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3927:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3110,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3102,
																	"src": "3948:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 3111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3956:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3948:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3927:35:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42617463685472616e73666572206661696c65643a204d69736d61746368656420617272617973",
															"id": 3113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3964:41:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															},
															"value": "BatchTransfer failed: Mismatched arrays"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f9fcc3a574cb787b90507217a352d6bea17d44d0502c81f9da2f41070cc503f",
																"typeString": "literal_string \"BatchTransfer failed: Mismatched arrays\""
															}
														],
														"id": 3107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3919:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3919:87:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3115,
												"nodeType": "ExpressionStatement",
												"src": "3919:87:17"
											},
											{
												"assignments": [
													3117
												],
												"declarations": [
													{
														"constant": false,
														"id": 3117,
														"mutability": "mutable",
														"name": "recipientLength",
														"nameLocation": "4024:15:17",
														"nodeType": "VariableDeclaration",
														"scope": 3156,
														"src": "4016:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4016:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3120,
												"initialValue": {
													"expression": {
														"id": 3118,
														"name": "recipients",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3099,
														"src": "4042:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 3119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4053:6:17",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4042:17:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4016:43:17"
											},
											{
												"body": {
													"id": 3154,
													"nodeType": "Block",
													"src": "4115:256:17",
													"statements": [
														{
															"id": 3153,
															"nodeType": "UncheckedBlock",
															"src": "4129:232:17",
															"statements": [
																{
																	"condition": {
																		"baseExpression": {
																			"id": 3131,
																			"name": "blacklisted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2762,
																			"src": "4160:11:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 3135,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 3132,
																				"name": "recipients",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3099,
																				"src": "4172:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 3134,
																			"indexExpression": {
																				"id": 3133,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3122,
																				"src": "4183:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4172:13:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4160:26:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3141,
																	"nodeType": "IfStatement",
																	"src": "4156:129:17",
																	"trueBody": {
																		"id": 3140,
																		"nodeType": "Block",
																		"src": "4188:97:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "42617463685472616e73666572206661696c65643a20526563697069656e7420697320626c61636b6c6973746564",
																							"id": 3137,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4217:48:17",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																								"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																							},
																							"value": "BatchTransfer failed: Recipient is blacklisted"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_4301a015b2424b040b97e35aeb24ae5df72a2d68dc8bda424fbb91baf22c4acc",
																								"typeString": "literal_string \"BatchTransfer failed: Recipient is blacklisted\""
																							}
																						],
																						"id": 3136,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "4210:6:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 3138,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4210:56:17",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 3139,
																				"nodeType": "ExpressionStatement",
																				"src": "4210:56:17"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 3143,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4308:3:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4312:6:17",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4308:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 3145,
																					"name": "recipients",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3099,
																					"src": "4320:10:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 3147,
																				"indexExpression": {
																					"id": 3146,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3122,
																					"src": "4331:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4320:13:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 3148,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3102,
																					"src": "4335:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 3150,
																				"indexExpression": {
																					"id": 3149,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3122,
																					"src": "4343:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4335:10:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 3142,
																			"name": "_transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1082,
																			"src": "4298:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 3151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:48:17",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3152,
																	"nodeType": "ExpressionStatement",
																	"src": "4298:48:17"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3125,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3122,
														"src": "4089:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3126,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3117,
														"src": "4093:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4089:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3155,
												"initializationExpression": {
													"assignments": [
														3122
													],
													"declarations": [
														{
															"constant": false,
															"id": 3122,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4082:1:17",
															"nodeType": "VariableDeclaration",
															"scope": 3155,
															"src": "4074:9:17",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3121,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4074:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3124,
													"initialValue": {
														"hexValue": "30",
														"id": 3123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4086:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4074:13:17"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4110:3:17",
														"subExpression": {
															"id": 3128,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3122,
															"src": "4110:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3130,
													"nodeType": "ExpressionStatement",
													"src": "4110:3:17"
												},
												"nodeType": "ForStatement",
												"src": "4069:302:17"
											}
										]
									},
									"functionSelector": "88d695b2",
									"id": 3157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3104,
												"name": "whenNotPaused",
												"nameLocations": [
													"3895:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 680,
												"src": "3895:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3895:13:17"
										}
									],
									"name": "batchTransfer",
									"nameLocation": "3813:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "recipients",
												"nameLocation": "3846:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "3827:29:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3097,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3827:7:17",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3098,
													"nodeType": "ArrayTypeName",
													"src": "3827:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3877:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "3858:26:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3100,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3858:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3101,
													"nodeType": "ArrayTypeName",
													"src": "3858:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3826:59:17"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3909:0:17"
									},
									"scope": 3167,
									"src": "3804:573:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 3165,
										"nodeType": "Block",
										"src": "4465:2:17",
										"statements": []
									},
									"id": 3166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3162,
												"name": "onlyOwner",
												"nameLocations": [
													"4455:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4455:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4455:9:17"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "4392:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4446:8:17"
									},
									"parameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4418:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 3166,
												"src": "4410:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4410:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4409:27:17"
									},
									"returnParameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4465:0:17"
									},
									"scope": 3167,
									"src": "4383:84:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3168,
							"src": "445:4024:17",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								1794,
								1799,
								1804,
								1813,
								1818,
								1823,
								1939,
								1952,
								2337,
								2599
							],
							"usedEvents": [
								41,
								219,
								645,
								650,
								1759,
								2235,
								2244,
								2766,
								2772,
								2778,
								2784
							]
						}
					],
					"src": "32:4438:17"
				},
				"id": 17
			}
		}
	}
}